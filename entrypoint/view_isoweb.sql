USE isoweb
GO

CREATE VIEW AliquotaICMS
as
select a.isoemp_codigo, a.ISOPrd_Codigo, h.ISOPvMatICMS_AliquotaICMS, a.ISOPrd_Flag
FROM         ISOPRODUTO a
left join ISOPRDDADOFISCAL d on a.isoemp_codigo = d.isoemp_codigo
	and a.isoprd_codigo = d.isoprddadf_prdcodigo
	and d.ISOPrdDadF_Flag = 'A'
	and d.ISOPrdDadF_InicioVigencia = (select max(ISOPrdDadF_InicioVigencia) from ISOPRDDADOFISCAL e where d.ISOEmp_Codigo = e.ISOEmp_Codigo and d.ISOPrdDadF_PrdCodigo = e.ISOPrdDadF_PrdCodigo and e.ISOPrdDadF_Flag = 'A')
left join ISOPVMATRIZICMS h on d.isoemp_codigo = h.isoemp_codigo
				and d.ISOPrdDadF_CodAgrupFiscal = h.ISOPvMatICMS_AgrupFiscalCod
				and d.ISOPrdDadF_CodOrigem = h.ISOPvMatICMS_PrdOrigemCod
				and case when d.ISOPrdDadF_EspecieCod = '0' then '' else d.ISOPrdDadF_EspecieCod end = h.ISOPvMatICMS_EspecieCod
				and d.ISOPrdDadF_CodDestinacao = h.ISOPvMatICMS_DestinacaoCod
				and h.ISOPvMatICMS_Flag = 'A'
				and h.ISOPvMatICMS_CatFiscalCod = 'COM'
				and h.ISOPvMatICMS_UFOrigem = 'SP'
				AND h.ISOPvMatICMS_UFDestino = 'SP'
				AND h.ISOPvMatICMS_NatOperaCod = '51'
				and h.ISOPvMatICMS_InicioVigencia = (select max(i.ISOPvMatICMS_InicioVigencia) from ISOPVMATRIZICMS i where h.ISOEmp_Codigo = i.ISOEmp_Codigo and h.ISOPvMatICMS_UFOrigem = i.ISOPvMatICMS_UFOrigem and h.ISOPvMatICMS_UFDestino = i.ISOPvMatICMS_UFDestino and h.ISOPvMatICMS_NatOperaCod = i.ISOPvMatICMS_NatOperaCod and h.ISOPvMatICMS_AgrupFiscalCod = i.ISOPvMatICMS_AgrupFiscalCod and h.ISOPvMatICMS_EspecieCod = i.ISOPvMatICMS_EspecieCod and h.ISOPvMatICMS_CatFiscalCod = i.ISOPvMatICMS_CatFiscalCod and h.ISOPvMatICMS_PrdOrigemCod = i.ISOPvMatICMS_PrdOrigemCod and h.ISOPvMatICMS_DestinacaoCod = i.ISOPvMatICMS_DestinacaoCod and i.ISOPvMatICMS_Flag = 'A' and i.ISOPvMatICMS_CatFiscalCod = 'COM' and i.ISOPvMatICMS_UFOrigem = 'SP' AND i.ISOPvMatICMS_UFDestino = 'SP' AND i.ISOPvMatICMS_NatOperaCod = '51')
WHERE     (a.ISOEmp_Codigo = 11) AND (a.ISOPrd_Flag = 'A');


-- dbo.AliquotaPadraoPIS_COFINS source

CREATE VIEW AliquotaPadraoPIS_COFINS
as
SELECT     a.ISOEmp_Codigo, a.ISOPrd_Codigo,
case
	when b.aliquotapis is null
		then
			case
				when d.ISOPrdDadF_CodClassFiscal is null
					then c.aliquotapis
				else f.ISOPvClassF_AliqPIS
			end
	else b.aliquotapis
end AliquotaPIS,
case
	when b.aliquotacofins is null
		then
			case
				when d.ISOPrdDadF_CodClassFiscal is null
					then c.aliquotacofins
				else f.ISOPvClassF_AliqCOFINS
			end
	else b.aliquotacofins
end AliquotaCOFINS
,a.ISOPrd_Flag
FROM         ISOPRODUTO a left join Pricing.AliquotaPISCOFINS b on a.isoemp_codigo = b.empcod and a.isoprd_codigo = b.tvprocod
				left join ISOPRDDADOFISCAL d on a.isoemp_codigo = d.isoemp_codigo
					and a.isoprd_codigo = d.isoprddadf_prdcodigo
					and d.ISOPrdDadF_Flag = 'A'
					and d.ISOPrdDadF_FlagTribPISSaida = 1
					and d.ISOPrdDadF_FlagTribCOFINSSaida = 1
					and d.ISOPrdDadF_InicioVigencia = (select max(ISOPrdDadF_InicioVigencia) from ISOPRDDADOFISCAL e where d.ISOEmp_Codigo = e.ISOEmp_Codigo and d.ISOPrdDadF_PrdCodigo = e.ISOPrdDadF_PrdCodigo and e.ISOPrdDadF_Flag = 'A')
				left join ISOPVCLASSIFICACAOFISCAL f on d.isoemp_codigo = f.isoemp_codigo and d.ISOPrdDadF_CodClassFiscal = f.ISOPvClassF_Codigo and f.ISOPvClassF_Flag = 'A' and f.ISOPvClassF_InicioVigencia = (select max(g.ISOPvClassF_InicioVigencia) from ISOPVCLASSIFICACAOFISCAL g where f.ISOEmp_Codigo = g.ISOEmp_Codigo and f.ISOPvClassF_Codigo = g.ISOPvClassF_Codigo and g.ISOPvClassF_Flag = 'A')
				left join Pricing.AliquotaPISCOFINSpadrao c on a.isoemp_codigo = c.empcod
WHERE     (a.ISOEmp_Codigo = 11) AND (a.ISOPrd_Flag = 'A');


-- dbo.AnaliseBionexo source

CREATE VIEW AnaliseBionexo as
select * from (
SELECT   ISOBIONEXOPEDIDO.ISOBP_Id_Pdc * 10000 + ISOBIONEXOPEDIDOITEM.ISOBPIt_Sequencia  as Unica,
	                 ISOBIONEXOPEDIDO.ISOBP_Id_Pdc, ISOBIONEXOPEDIDO.ISOBP_Nome_Hospital, ISOBIONEXOPEDIDO.ISOBP_CNPJ_Hospital,
                      ISOBIONEXOPEDIDOITEM.ISOBPIt_Codigo_Produto, ISOBIONEXOPEDIDOITEM.ISOBPIt_Descricao_Produto, ISOBIONEXOPEDIDOITEM.ISOBPIt_Quantidade,
                      ISOBIONEXOPEDIDOITEM.ISOBPIt_Unidade_Medida, ISOBIONEXOPEDIDOITEM.ISOBPIt_Marca_Favorita, ISOBIONEXOPEDIDOITEM.ISOBPIt_Finalizado,
                      ISOBIONEXOPEDIDOITEM.ISOBPIt_ConfirmadoData, ISOBIONEXOPEDIDOITEM.ISOBPIt_NegQuantidade, ISOBIONEXOPEDIDOITEM.ISOBPIt_NegPrecoUnitario,
                      ISOBIONEXOPEDIDOITEM.ISOBPIt_NegSituacaoISO, ISOBIONEXOPEDIDOITEM.ISOBPIt_NegComentario, ISOBIONEXOPEDIDOITEM.ISOBPIt_NegMsgErro,
                      ISOBIONEXOPEDIDOITEM.ISOBPIt_NegStatus, ISOBIONEXOPRODUTOCLIENTE.ISOBioPrdCli_BioProdutoDsc,
                      ISOBIONEXOPRODUTOCLIENTE.ISOBioPrdCli_FatorConversao, ISOBIONEXOPRODUTOCLIENTE.ISOBioPrdCli_PrdCodigo,
                      ISOBIONEXOPRODUTOCLIENTE.ISOBioPrdCli_PrdUndOrigem, ISOBIONEXOPRODUTOCLIENTE.ISOBioPrdCli_PrdUndDestino,
                      ISOBIONEXOPRODUTOCLIENTE.ISOBioPrdCli_PrdEmbalagem, ISOBIONEXOPRODUTOCLIENTE.ISOBioPrdCli_PrdEmbalagemQtd,
                      CASE WHEN ISOBIONEXOPEDIDOITEM.ISOBPIt_Situacao = 'DES' THEN 'Desistiu' WHEN ISOBIONEXOPEDIDOITEM.ISOBPIt_Situacao = 'SAL' THEN 'Não Respondido'
                       WHEN ISOBIONEXOPEDIDOITEM.ISOBPIt_Situacao = 'ENV' THEN 'Aguardando Resposta' WHEN ISOBIONEXOPEDIDOITEM.ISOBPIt_Situacao = 'ERR' THEN 'Erro' WHEN
                       ISOBIONEXOPEDIDOITEM.ISOBPIt_Situacao = 'REC' AND
                      ISOBIONEXOPRODUTOCLIENTE.ISOBioPrdCli_Bloqueado = 'N' THEN 'Não Respondido' WHEN ISOBIONEXOPEDIDOITEM.ISOBPIt_Situacao = 'REC' AND
                      ISOBIONEXOPRODUTOCLIENTE.ISOBioPrdCli_Bloqueado = 'S' THEN 'Item Bloqueado' WHEN ISOBIONEXOPEDIDOITEM.ISOBPIt_Situacao = 'ENC' AND
                      ISOBPIt_NegStatus = 'Adquirido de outra empresa' THEN 'Adquirido de Outra Empresa' WHEN ISOBIONEXOPEDIDOITEM.ISOBPIt_Situacao = 'ENC' AND
                      ISOBPIt_NegStatus <> 'Adquirido de outra empresa' THEN 'Cancelado' WHEN ISOBIONEXOPEDIDOITEM.ISOBPIt_Situacao = 'CON' THEN 'Ganhou' ELSE 'Verificar' END
                       AS Status_ISO, ISOBIONEXOPEDIDO.ISOBP_ISOEntOrg_Codigo, ISOLOCALIDADE.ISOLoc_Descricao, ISOESTADO.ISOEst_Sigla,
                      ISOENTENDERECO.ISOEntEnd_Logradouro, ISOENTENDERECO.ISOEntEnd_Numero, ISOENTENDERECO.ISOEntEnd_Complemento,
                      ISOENTENDERECO.ISOEntEnd_Bairro
FROM         ISOBIONEXOPEDIDO INNER JOIN
                      ISOBIONEXOPEDIDOITEM ON ISOBIONEXOPEDIDO.ISOEmp_Codigo = ISOBIONEXOPEDIDOITEM.ISOEmp_Codigo AND
                      ISOBIONEXOPEDIDO.ISOBP_Id_Pdc = ISOBIONEXOPEDIDOITEM.ISOBP_Id_Pdc INNER JOIN
                      ISOENTENDERECO ON ISOBIONEXOPEDIDO.ISOBP_ISOEntOrg_Codigo = ISOENTENDERECO.ISOEnt_Codigo INNER JOIN
                      ISOLOCALIDADE ON ISOENTENDERECO.ISOLoc_Codigo = ISOLOCALIDADE.ISOLoc_Codigo INNER JOIN
                      ISOESTADO ON ISOLOCALIDADE.ISOPais_Codigo = ISOESTADO.ISOPais_Codigo AND ISOLOCALIDADE.ISOEst_Codigo = ISOESTADO.ISOEst_Codigo LEFT OUTER JOIN
                      ISOBIONEXOPRODUTOCLIENTE ON ISOBIONEXOPEDIDO.ISOEmp_Codigo = ISOBIONEXOPRODUTOCLIENTE.ISOEmp_Codigo AND
                      ISOBIONEXOPEDIDO.ISOBP_ISOEntOrg_Codigo = ISOBIONEXOPRODUTOCLIENTE.ISOBioPrdCli_CliCodigo AND
                      ISOBIONEXOPEDIDOITEM.ISOEmp_Codigo = ISOBIONEXOPRODUTOCLIENTE.ISOEmp_Codigo AND
                      ISOBIONEXOPEDIDOITEM.ISOBPIt_Codigo_Produto = ISOBIONEXOPRODUTOCLIENTE.ISOBioPrdCli_BioProdutoCodigo
WHERE     (ISOBIONEXOPEDIDO.ISOEmp_Codigo = 11) AND (ISOBIONEXOPEDIDO.ISOBP_Flag = 'A') AND (ISOBIONEXOPEDIDOITEM.ISOBPIt_Flag = 'A') AND
                      (ISOBIONEXOPRODUTOCLIENTE.ISOBioPrdCli_Flag = 'A') AND (ISOENTENDERECO.ISOEntEnd_Principal = 'S')

					  ) ss where Status_ISO='Ganhou' or Status_ISO='Adquirido de outra empresa'
					  --order by unica;


-- dbo.AnaliseBionexo345926 source

CREATE VIEW AnaliseBionexo345926 as
select * from (
SELECT   ISOBIONEXOPEDIDO.ISOBP_Id_Pdc * 10000 + ISOBIONEXOPEDIDOITEM.ISOBPIt_Sequencia  as Unica,
	                 ISOBIONEXOPEDIDO.ISOBP_Id_Pdc, ISOBIONEXOPEDIDO.ISOBP_Nome_Hospital, ISOBIONEXOPEDIDO.ISOBP_CNPJ_Hospital,
                      ISOBIONEXOPEDIDOITEM.ISOBPIt_Codigo_Produto, ISOBIONEXOPEDIDOITEM.ISOBPIt_Descricao_Produto, ISOBIONEXOPEDIDOITEM.ISOBPIt_Quantidade,
                      ISOBIONEXOPEDIDOITEM.ISOBPIt_Unidade_Medida, ISOBIONEXOPEDIDOITEM.ISOBPIt_Marca_Favorita, ISOBIONEXOPEDIDOITEM.ISOBPIt_Finalizado,
                      ISOBIONEXOPEDIDOITEM.ISOBPIt_ConfirmadoData, ISOBIONEXOPEDIDOITEM.ISOBPIt_NegQuantidade, ISOBIONEXOPEDIDOITEM.ISOBPIt_NegPrecoUnitario,
                      ISOBIONEXOPEDIDOITEM.ISOBPIt_NegSituacaoISO, ISOBIONEXOPEDIDOITEM.ISOBPIt_NegComentario, ISOBIONEXOPEDIDOITEM.ISOBPIt_NegMsgErro,
                      ISOBIONEXOPEDIDOITEM.ISOBPIt_NegStatus, ISOBIONEXOPRODUTOCLIENTE.ISOBioPrdCli_BioProdutoDsc,
                      ISOBIONEXOPRODUTOCLIENTE.ISOBioPrdCli_FatorConversao, ISOBIONEXOPRODUTOCLIENTE.ISOBioPrdCli_PrdCodigo,
                      ISOBIONEXOPRODUTOCLIENTE.ISOBioPrdCli_PrdUndOrigem, ISOBIONEXOPRODUTOCLIENTE.ISOBioPrdCli_PrdUndDestino,
                      ISOBIONEXOPRODUTOCLIENTE.ISOBioPrdCli_PrdEmbalagem, ISOBIONEXOPRODUTOCLIENTE.ISOBioPrdCli_PrdEmbalagemQtd,
                      CASE WHEN ISOBIONEXOPEDIDOITEM.ISOBPIt_Situacao = 'DES' THEN 'Desistiu' WHEN ISOBIONEXOPEDIDOITEM.ISOBPIt_Situacao = 'SAL' THEN 'Não Respondido'
                       WHEN ISOBIONEXOPEDIDOITEM.ISOBPIt_Situacao = 'ENV' THEN 'Aguardando Resposta' WHEN ISOBIONEXOPEDIDOITEM.ISOBPIt_Situacao = 'ERR' THEN 'Erro' WHEN
                       ISOBIONEXOPEDIDOITEM.ISOBPIt_Situacao = 'REC' AND
                      ISOBIONEXOPRODUTOCLIENTE.ISOBioPrdCli_Bloqueado = 'N' THEN 'Não Respondido' WHEN ISOBIONEXOPEDIDOITEM.ISOBPIt_Situacao = 'REC' AND
                      ISOBIONEXOPRODUTOCLIENTE.ISOBioPrdCli_Bloqueado = 'S' THEN 'Item Bloqueado' WHEN ISOBIONEXOPEDIDOITEM.ISOBPIt_Situacao = 'ENC' AND
                      ISOBPIt_NegStatus = 'Adquirido de outra empresa' THEN 'Adquirido de Outra Empresa' WHEN ISOBIONEXOPEDIDOITEM.ISOBPIt_Situacao = 'ENC' AND
                      ISOBPIt_NegStatus <> 'Adquirido de outra empresa' THEN 'Cancelado' WHEN ISOBIONEXOPEDIDOITEM.ISOBPIt_Situacao = 'CON' THEN 'Ganhou' ELSE 'Verificar' END
                       AS Status_ISO, ISOBIONEXOPEDIDO.ISOBP_ISOEntOrg_Codigo, ISOLOCALIDADE.ISOLoc_Descricao, ISOESTADO.ISOEst_Sigla,
                      ISOENTENDERECO.ISOEntEnd_Logradouro, ISOENTENDERECO.ISOEntEnd_Numero, ISOENTENDERECO.ISOEntEnd_Complemento,
                      ISOENTENDERECO.ISOEntEnd_Bairro
FROM         ISOBIONEXOPEDIDO INNER JOIN
                      ISOBIONEXOPEDIDOITEM ON ISOBIONEXOPEDIDO.ISOEmp_Codigo = ISOBIONEXOPEDIDOITEM.ISOEmp_Codigo AND
                      ISOBIONEXOPEDIDO.ISOBP_Id_Pdc = ISOBIONEXOPEDIDOITEM.ISOBP_Id_Pdc INNER JOIN
                      ISOENTENDERECO ON ISOBIONEXOPEDIDO.ISOBP_ISOEntOrg_Codigo = ISOENTENDERECO.ISOEnt_Codigo INNER JOIN
                      ISOLOCALIDADE ON ISOENTENDERECO.ISOLoc_Codigo = ISOLOCALIDADE.ISOLoc_Codigo INNER JOIN
                      ISOESTADO ON ISOLOCALIDADE.ISOPais_Codigo = ISOESTADO.ISOPais_Codigo AND ISOLOCALIDADE.ISOEst_Codigo = ISOESTADO.ISOEst_Codigo LEFT OUTER JOIN
                      ISOBIONEXOPRODUTOCLIENTE ON ISOBIONEXOPEDIDO.ISOEmp_Codigo = ISOBIONEXOPRODUTOCLIENTE.ISOEmp_Codigo AND
                      ISOBIONEXOPEDIDO.ISOBP_ISOEntOrg_Codigo = ISOBIONEXOPRODUTOCLIENTE.ISOBioPrdCli_CliCodigo AND
                      ISOBIONEXOPEDIDOITEM.ISOEmp_Codigo = ISOBIONEXOPRODUTOCLIENTE.ISOEmp_Codigo AND
                      ISOBIONEXOPEDIDOITEM.ISOBPIt_Codigo_Produto = ISOBIONEXOPRODUTOCLIENTE.ISOBioPrdCli_BioProdutoCodigo
WHERE     (ISOBIONEXOPEDIDO.ISOEmp_Codigo = 11) AND (ISOBIONEXOPEDIDO.ISOBP_Flag = 'A') AND (ISOBIONEXOPEDIDOITEM.ISOBPIt_Flag = 'A') AND
                      (ISOBIONEXOPRODUTOCLIENTE.ISOBioPrdCli_Flag = 'A') AND (ISOENTENDERECO.ISOEntEnd_Principal = 'S')

					  ) ss where (Status_ISO='Ganhou' or Status_ISO='Adquirido de outra empresa')  and ISOBioPrdCli_PrdCodigo='345926'
					  --order by unica
					  --group by Status_ISO 					  having count(*) > 1;


-- dbo.BIONEXO_CNPJ_COTACAO source

CREATE VIEW BIONEXO_CNPJ_COTACAO
AS
SELECT     ISOBIONEXOPEDIDO.ISOEmp_Codigo, ISOENTORGANIZACAO.ISOEntOrg_CNPJ, ISOBIONEXOPEDIDO.ISOBP_Id_Pdc, ISOBIONEXOPEDIDO.ISOBP_DataInclusao
FROM         ISOBIONEXOPEDIDO INNER JOIN
                      ISOENTORGANIZACAO ON ISOBIONEXOPEDIDO.ISOBP_ISOEntOrg_Codigo = ISOENTORGANIZACAO.ISOEntOrg_Codigo;


-- dbo.BIONEXO_CNPJ_COTACAO1 source

CREATE VIEW [dbo].[BIONEXO_CNPJ_COTACAO1]
AS
--SELECT     ISOBIONEXOPEDIDO.ISOEmp_Codigo, REPLACE(REPLACE(REPLACE(ISOBIONEXOPEDIDO.ISOBP_CNPJ_Hospital,'.',''),'/',''),'-','') ISOEntOrg_CNPJ, ISOBIONEXOPEDIDO.ISOBP_Id_Pdc, ISOBIONEXOPEDIDO.ISOBP_DataInclusao
SELECT     ISOBIONEXOPEDIDO.ISOEmp_Codigo, ISOBIONEXOPEDIDO.ISOBP_CNPJ_Hospital ISOEntOrg_CNPJ, ISOBIONEXOPEDIDO.ISOBP_Id_Pdc, ISOBIONEXOPEDIDO.ISOBP_DataInclusao
FROM         ISOBIONEXOPEDIDO
WHERE ISOBIONEXOPEDIDO.ISOEmp_Codigo = 11;


-- dbo.BIONEXO_CNPJ_COTACAO_ITEM source

CREATE VIEW [dbo].[BIONEXO_CNPJ_COTACAO_ITEM]
AS
SELECT      ISOBIONEXOPEDIDO.ISOEmp_Codigo, ISOENTORGANIZACAO.ISOEntOrg_CNPJ, ISOBIONEXOPEDIDO.ISOBP_Id_Pdc, ISOBIONEXOPEDIDOITEM.ISOBPIt_Codigo_Produto, ISOBIONEXOPEDIDOITEM.ISOBPIt_Descricao_Produto, ISOBIONEXOPEDIDOITEM.ISOBPIt_Id_Unidade_Medida
FROM         ISOBIONEXOPEDIDO INNER JOIN
                      ISOBIONEXOPEDIDOITEM ON ISOBIONEXOPEDIDO.ISOEmp_Codigo = ISOBIONEXOPEDIDOITEM.ISOEmp_Codigo AND
                      ISOBIONEXOPEDIDO.ISOBP_Id_Pdc = ISOBIONEXOPEDIDOITEM.ISOBP_Id_Pdc INNER JOIN
                      ISOENTORGANIZACAO ON ISOBIONEXOPEDIDO.ISOBP_ISOEntOrg_Codigo = ISOENTORGANIZACAO.ISOEntOrg_Codigo
WHERE     (ISOBIONEXOPEDIDO.ISOEmp_Codigo = 11);


-- dbo.BIONEXO_CNPJ_COTACAO_ITEM1 source

CREATE VIEW [dbo].[BIONEXO_CNPJ_COTACAO_ITEM1]
AS
SELECT     ISOBIONEXOPEDIDO.ISOEmp_Codigo, ISOBIONEXOPEDIDO.ISOBP_CNPJ_Hospital ISOEntOrg_CNPJ, ISOBIONEXOPEDIDO.ISOBP_Id_Pdc, ISOBIONEXOPEDIDOITEM.ISOBPIt_Codigo_Produto, ISOBIONEXOPEDIDOITEM.ISOBPIt_Descricao_Produto, ISOBIONEXOPEDIDOITEM.ISOBPIt_Id_Unidade_Medida, ISOBIONEXOPEDIDOITEM.ISOBPIt_Sequencia
FROM         ISOBIONEXOPEDIDO INNER JOIN
                      ISOBIONEXOPEDIDOITEM ON ISOBIONEXOPEDIDO.ISOEmp_Codigo = ISOBIONEXOPEDIDOITEM.ISOEmp_Codigo AND
                      ISOBIONEXOPEDIDO.ISOBP_Id_Pdc = ISOBIONEXOPEDIDOITEM.ISOBP_Id_Pdc
WHERE     (ISOBIONEXOPEDIDO.ISOEmp_Codigo = 11);


-- dbo.BIONEXO_CNPJ_COTACAO_ITEM_TOTAL source

CREATE VIEW [dbo].[BIONEXO_CNPJ_COTACAO_ITEM_TOTAL]
AS
SELECT ISOEMP_CODIGO, ISOENTORG_CNPJ, ISOBPIt_Codigo_Produto, [2014] TOTAL_ITEM_2014, [2015] TOTAL_ITEM_2015, [2016] TOTAL_ITEM_2016, [2017] TOTAL_ITEM_2017, [2018] TOTAL_ITEM_2018, [2019] TOTAL_ITEM_2019, [2020] TOTAL_ITEM_2020, [2021] TOTAL_ITEM_2021
FROM
(SELECT BIONEXO_CNPJ_COTACAO.ISOEMP_CODIGO, BIONEXO_CNPJ_COTACAO.ISOENTORG_CNPJ, BIONEXO_CNPJ_COTACAO_ITEM.ISOBPIt_Codigo_Produto, YEAR(BIONEXO_CNPJ_COTACAO.ISOBP_DATAINCLUSAO) ANO,
COUNT(*) TOTAL FROM BIONEXO_CNPJ_COTACAO INNER JOIN BIONEXO_CNPJ_COTACAO_ITEM ON BIONEXO_CNPJ_COTACAO.ISOEMP_CODIGO = BIONEXO_CNPJ_COTACAO_ITEM.ISOEMP_CODIGO AND BIONEXO_CNPJ_COTACAO.ISOBP_ID_PDC = BIONEXO_CNPJ_COTACAO_ITEM.ISOBP_ID_PDC AND BIONEXO_CNPJ_COTACAO.ISOENTORG_CNPJ = BIONEXO_CNPJ_COTACAO_ITEM.ISOENTORG_CNPJ GROUP BY BIONEXO_CNPJ_COTACAO.ISOEMP_CODIGO, BIONEXO_CNPJ_COTACAO.ISOENTORG_CNPJ, BIONEXO_CNPJ_COTACAO_ITEM.ISOBPIt_Codigo_Produto, YEAR(BIONEXO_CNPJ_COTACAO.ISOBP_DATAINCLUSAO) ) AS X
PIVOT
(
	SUM(TOTAL)
	FOR ANO IN ([2014], [2015], [2016], [2017], [2018], [2019], [2020], [2021])
) AS PV;


-- dbo.BIONEXO_CNPJ_COTACAO_ITEM_TOTAL1 source

CREATE VIEW [dbo].[BIONEXO_CNPJ_COTACAO_ITEM_TOTAL1]
AS
SELECT ISOEMP_CODIGO, ISOENTORG_CNPJ, ISOBPIt_Codigo_Produto, [2014] TOTAL_ITEM_2014, [2015] TOTAL_ITEM_2015, [2016] TOTAL_ITEM_2016, [2017] TOTAL_ITEM_2017, [2018] TOTAL_ITEM_2018, [2019] TOTAL_ITEM_2019, [2020] TOTAL_ITEM_2020, [2021] TOTAL_ITEM_2021
FROM
(SELECT BIONEXO_CNPJ_COTACAO.ISOEMP_CODIGO, BIONEXO_CNPJ_COTACAO.ISOENTORG_CNPJ, BIONEXO_CNPJ_COTACAO_ITEM.ISOBPIt_Codigo_Produto, YEAR(BIONEXO_CNPJ_COTACAO.ISOBP_DATAINCLUSAO) ANO,
COUNT(*) TOTAL FROM BIONEXO_CNPJ_COTACAO1 BIONEXO_CNPJ_COTACAO WITH (NOLOCK) INNER JOIN BIONEXO_CNPJ_COTACAO_ITEM1 BIONEXO_CNPJ_COTACAO_ITEM WITH (NOLOCK) ON BIONEXO_CNPJ_COTACAO.ISOEMP_CODIGO = BIONEXO_CNPJ_COTACAO_ITEM.ISOEMP_CODIGO AND BIONEXO_CNPJ_COTACAO.ISOBP_ID_PDC = BIONEXO_CNPJ_COTACAO_ITEM.ISOBP_ID_PDC AND BIONEXO_CNPJ_COTACAO.ISOENTORG_CNPJ = BIONEXO_CNPJ_COTACAO_ITEM.ISOENTORG_CNPJ GROUP BY BIONEXO_CNPJ_COTACAO.ISOEMP_CODIGO, BIONEXO_CNPJ_COTACAO.ISOENTORG_CNPJ, BIONEXO_CNPJ_COTACAO_ITEM.ISOBPIt_Codigo_Produto, YEAR(BIONEXO_CNPJ_COTACAO.ISOBP_DATAINCLUSAO) ) AS X
PIVOT
(
	SUM(TOTAL)
	FOR ANO IN ([2014], [2015], [2016], [2017], [2018], [2019], [2020], [2021])
) AS PV
WHERE ISOEMP_CODIGO = 11;


-- dbo.BIONEXO_CNPJ_COTACAO_TOTAL source

CREATE VIEW [DBO].[BIONEXO_CNPJ_COTACAO_TOTAL]
AS
SELECT ISOEMP_CODIGO, ISOENTORG_CNPJ, [2014] TOTAL_2014, [2015] TOTAL_2015, [2016] TOTAL_2016, [2017] TOTAL_2017, [2018] TOTAL_2018, [2019] TOTAL_2019, [2020] TOTAL_2020, [2021] TOTAL_2021
FROM
(SELECT ISOEMP_CODIGO, ISOENTORG_CNPJ, YEAR(ISOBP_DATAINCLUSAO) ANO, COUNT(*) TOTAL FROM BIONEXO_CNPJ_COTACAO GROUP BY ISOEMP_CODIGO, ISOENTORG_CNPJ, YEAR(ISOBP_DATAINCLUSAO) ) AS X
PIVOT
(
	SUM(TOTAL)
	FOR ANO IN ([2014], [2015], [2016], [2017], [2018], [2019], [2020], [2021])
) AS PV;


-- dbo.BIONEXO_CNPJ_COTACAO_TOTAL1 source

CREATE VIEW [dbo].[BIONEXO_CNPJ_COTACAO_TOTAL1]
AS
SELECT ISOEMP_CODIGO, ISOENTORG_CNPJ, [2014] TOTAL_2014, [2015] TOTAL_2015, [2016] TOTAL_2016, [2017] TOTAL_2017, [2018] TOTAL_2018, [2019] TOTAL_2019, [2020] TOTAL_2020, [2021] TOTAL_2021
FROM
(SELECT ISOEMP_CODIGO, ISOENTORG_CNPJ, YEAR(ISOBP_DATAINCLUSAO) ANO, COUNT(*) TOTAL FROM BIONEXO_CNPJ_COTACAO1 BIONEXO_CNPJ_COTACAO GROUP BY ISOEMP_CODIGO, ISOENTORG_CNPJ, YEAR(ISOBP_DATAINCLUSAO) ) AS X
PIVOT
(
	SUM(TOTAL)
	FOR ANO IN ([2014], [2015], [2016], [2017], [2018], [2019], [2020], [2021])
) AS PV;


-- dbo.BIONEXO_CNPJ_DE_PARA1 source

CREATE VIEW BIONEXO_CNPJ_DE_PARA1
AS
SELECT     ISOBIONEXOPEDIDO.ISOEmp_Codigo, ISOBIONEXOPEDIDO.ISOBP_CNPJ_Hospital ISOEntOrg_CNPJ,
                      ISOBIONEXOPRODUTOCLIENTE.ISOBioPrdCli_BioProdutoCodigo, ISOBIONEXOPRODUTOCLIENTE.ISOBioPrdCli_Codigo,
                      ISOBIONEXOPRODUTOCLIENTE.ISOBioPrdCli_PrdCodigo, ISOBIONEXOPRODUTOCLIENTE.ISOBioPrdCli_BioPrdSimilar
FROM         ISOBIONEXOPEDIDO INNER JOIN
                      ISOBIONEXOPEDIDOITEM ON ISOBIONEXOPEDIDO.ISOEmp_Codigo = ISOBIONEXOPEDIDOITEM.ISOEmp_Codigo AND
                      ISOBIONEXOPEDIDO.ISOBP_Id_Pdc = ISOBIONEXOPEDIDOITEM.ISOBP_Id_Pdc LEFT OUTER JOIN
                      ISOBIONEXOPRODUTOCLIENTE ON ISOBIONEXOPEDIDO.ISOEmp_Codigo = ISOBIONEXOPRODUTOCLIENTE.ISOEmp_Codigo AND
                      ISOBIONEXOPEDIDO.ISOBP_ISOEntOrg_Codigo = ISOBIONEXOPRODUTOCLIENTE.ISOBioPrdCli_CliCodigo AND
                      ISOBIONEXOPEDIDOITEM.ISOBPIt_Codigo_Produto = ISOBIONEXOPRODUTOCLIENTE.ISOBioPrdCli_BioProdutoCodigo AND
                      ISOBIONEXOPEDIDOITEM.ISOEmp_Codigo = ISOBIONEXOPRODUTOCLIENTE.ISOEmp_Codigo
WHERE     (ISOBIONEXOPRODUTOCLIENTE.ISOEmp_Codigo = 11);


-- dbo.BIONEXO_MOTIVO_JOBLOG source

CREATE VIEW [dbo].[BIONEXO_MOTIVO_JOBLOG]
WITH SCHEMABINDING
AS
select a.ISOEmp_Codigo,
	--REPLACE(rtrim(ltrim(substring(a.isojoblog_informacao,9,9))),'.','') ISOBP_Id_Pdc--b.ISOBP_Id_Pdc
	case when a.isojoblog_informacao like 'Pdc:%'
		then rtrim(ltrim(substring(a.isojoblog_informacao,5,9)))
		else
			case when a.isojoblog_informacao like 'COTAÇÃO:%'
				then rtrim(ltrim(substring(a.isojoblog_informacao,9,10)))
				else
					case when a.isojoblog_informacao like 'COTAÇÃO %'
						then replace(rtrim(ltrim(substring(a.isojoblog_informacao,9,9))),'.','')
					end
			end
	end as ISOBP_Id_Pdc
	,case when isojoblog_informacao like '%ITEM:%' then replace(replace(substring(a.isojoblog_informacao,26,3),'.',''),',','') else '' end ISOBPIt_Sequencia,
	--case when a.ISOJobLog_Informacao like '%PRODUTO SEM ESTOQUE. SOLICITADA%' THEN SUBSTRING (a.ISOJobLog_Informacao,1,29)+'PRODUTO SEM ESTOQUE.' ELSE substring(a.ISOJobLog_Informacao,1,400) END ISOJobLog_Informacao,
	b.ISOBP_DataInclusao,
	A.ISOJobLog_DataAlteracao,
	A.ISOJobLog_Sequencia,
	(SELECT     Q.ISOEmpOri_DataAlteracao FROM dbo.ISOEMPORIGEM AS Q INNER JOIN
                      dbo.ISOENTUSUARIO AS W ON Q.ISOEmp_Codigo = W.ISOEmp_Codigo AND Q.ISOEntUsu_Codigo = W.ISOEntUsu_Codigo INNER JOIN
                      dbo.ISOBIONEXOPEDIDO AS E ON W.ISOEmp_Codigo = E.ISOEmp_Codigo AND W.ISOEntUsu_Codigo = E.ISOBP_ISOEntOrg_Codigo
                      WHERE E.ISOBP_Id_Pdc = B.ISOBP_Id_Pdc) DataCadastroOrigem,
	--CASE WHEN b.ISOBP_DataInclusao < ISNULL((SELECT     Q.ISOEmpOri_DataAlteracao FROM dbo.ISOEMPORIGEM AS Q INNER JOIN
 --                     dbo.ISOENTUSUARIO AS W ON Q.ISOEmp_Codigo = W.ISOEmp_Codigo AND Q.ISOEntUsu_Codigo = W.ISOEntUsu_Codigo INNER JOIN
 --                     dbo.ISOBIONEXOPEDIDO AS E ON W.ISOEmp_Codigo = E.ISOEmp_Codigo AND W.ISOEntUsu_Codigo = E.ISOBP_ISOEntOrg_Codigo
 --                     WHERE E.ISOBP_Id_Pdc = B.ISOBP_Id_Pdc),GETDATE()) THEN '. CLIENTE NAO CONFIGURADO.'
	--ELSE
		case
			when a.ISOJobLog_Informacao like '%PRODUTO SEM ESTOQUE. SOLICITADA%' THEN SUBSTRING (a.ISOJobLog_Informacao,1,charindex('.',ISOJobLog_Informacao)-1)+'. FALTA DE ESTOQUE.'
		ELSE
			CASE WHEN a.ISOJobLog_Informacao like '%ALERTA 1 CADASTRADO%' OR a.ISOJobLog_Informacao like '%ALERTA 3 CADASTRADO%' THEN '. CLIENTE RETIDO NO CRÉDITO.'
			ELSE
				CASE WHEN a.ISOJobLog_Informacao like '%NÃO PODE SER RESPONDIDA AUTOMATICAMENTE. DADO COMPLEMENTAR = N%' OR a.ISOJobLog_Informacao like '%NÃO PODE SER RESPONDIDA AUTOMATICAMENTE.%' THEN '. CLIENTE RESPOSTA MANUAL.'
				ELSE
					CASE WHEN a.ISOJobLog_Informacao like 'COTAÇÃO%bloqueada%' THEN '. BLOQUEADA PELO USUÁRIO.'
					ELSE
						CASE WHEN a.ISOJobLog_Informacao like 'COTAÇÃO%PAPEL CLIENTE.' THEN '. NÃO POSSUI PAPEL CLIENTE.'
							ELSE substring(a.ISOJobLog_Informacao,1,400)
						END
					END
				END
			END
		END
	--END
	ISOJobLog_Informacao
from dbo.isojoblog A, dbo.isobionexopedido B
where a.isoemp_codigo = b.isoemp_codigo
and b.isobp_id_pdc =
	case when a.isojoblog_informacao like 'Pdc:%'
		then rtrim(ltrim(substring(a.isojoblog_informacao,5,9)))
		else
			case when a.isojoblog_informacao like 'COTAÇÃO:%'
				then rtrim(ltrim(substring(a.isojoblog_informacao,9,9)))
				else
					case when a.isojoblog_informacao like 'COTAÇÃO %'
						then replace(rtrim(ltrim(substring(a.isojoblog_informacao,9,9))),'.','')
					end
			end
	end
--and a.isojoblog_dataalteracao = (select max(c.isojoblog_dataalteracao) from isojoblog c where a.isoemp_codigo = c.isoemp_codigo and rtrim(ltrim(substring(a.isojoblog_informacao,9,9))) = rtrim(ltrim(substring(c.isojoblog_informacao,9,9))))
and a.isoemp_codigo = 11
and a.isojoblog_dataalteracao >= '2017-06-10 05:08:33.000'
and a.ISOObj_Codigo <> 'PBionexo_ResponderPedidos'
and (a.isojoblog_informacao like 'COTAÇÃO%'
or a.isojoblog_informacao like '%BLOQUEADO%'
or a.isojoblog_informacao like '%SEM DE/PARA%'
or a.isojoblog_informacao like '%PREÇO SUGERIDO NÃO%'
or a.isojoblog_informacao like '%SEM ESTOQUE%'
or a.isojoblog_informacao like '%PRODUTO INATIVO%'
or a.isojoblog_informacao like '%Pdc:%'
or a.isojoblog_informacao like '%ALERTA 1%'
or a.isojoblog_informacao like '%DADO COMPLEMENTAR = N%'
or a.isojoblog_informacao like '%DADO COMPLEMENTAR NÃO RESPONDIDO%')
and a.isojoblog_informacao NOT like '%PrecoSugerido%'
and a.isojoblog_informacao NOT like '%Verificando%'
and a.isojoblog_informacao NOT like '%convertida%'
and a.isojoblog_informacao NOT like '%webservice%'
and a.isojoblog_informacao NOT like '%OBS:%'
and a.isojoblog_informacao NOT like '%Termo:%'
and a.isojoblog_informacao NOT like '%PARÂMETRO PRECO_SUGERIDO_CALCULA_IMPOSTOS%'
and a.isojoblog_informacao NOT like '%LOGnexo:%'
and a.isojoblog_informacao NOT like '%é CONSOLIDADO da Pdc%'
and a.isojoblog_informacao NOT like '%Dt.Venc%'
and a.isojoblog_informacao NOT like '%Organização já cadastrada%'
and a.isojoblog_informacao NOT like '%data promessa%'
and a.isojoblog_informacao NOT like '%Retornou itens confirmados%'
and a.isojoblog_informacao NOT like '%ORIGEM%'
and a.isojoblog_informacao NOT like '%NÃO ACHOU HISTÓRICO.%'
and a.isojoblog_informacao NOT like '%DEFAULT%'
and a.isojoblog_informacao NOT like '%Qtdade * fator:%'
and a.isojoblog_informacao NOT like '%Multiplicando pelo fator%'
and a.isojoblog_informacao NOT like '%ESTOQUE DISPONÍVEL%'
and a.isojoblog_informacao NOT like '%DEPARA CADASTRADO%'
and a.isojoblog_informacao NOT like '%UTILIZANDO CENARIOS_NEG_CONTRATO%'
and a.isojoblog_informacao NOT like '%BUSCAR PREÇO UTILIZANDO CENÁRIOS PARA GERAR PREÇO.%'
and a.isojoblog_informacao NOT like '%Faturamento mínimo encontrado pela matriz VALOR MINIMO%'
--and b.ISOBP_Id_Pdc = 57235641;


-- dbo.BI_003_isoVND_Pedidos source

CREATE VIEW [dbo].[BI_003_isoVND_Pedidos] as
Select
       RTrim(T02.ISOPVPedSit_Descricao)  as DM_003_SituacaoPedido,
       Year(T01.ISOPVPed_DtaPedido)      as DM_003_AnoPedido,
       Month(T01.ISOPVPed_DtaPedido)     as DM_003_MesPedido,
       RTrim(T03.ISOEnt_Nome)            as DM_003_PedidoEfetuadoPor,
       RTrim(T04.ISOEnt_Nome)            as DM_003_VendedorResponsavel,
       RTrim(T05.ISOPVPedTip_Descricao)  as DM_003_TipoDeVenda,
       RTrim(T06.ISOEnt_Nome)            as DM_003_Entidade,
       RTrim(T01.ISOPVPed_Pagamento)     as DM_003_CondicaoDePagamento,
       RTrim(T07.ISOPECndPgt_Descricao)  as DM_003_FormaDePagamento,
       RTrim(T08.ISOPVPedOri_Descricao)  as DM_003_OrigemDoPedido,
       T01.ISOPVPed_EstadoOrigem         as DM_003_LocalDeFaturamento,
       'V.002'                           as DM_003_VersaoVW,
       T01.ISOPVPed_Codigo               as DM_003_NumeroPedido,
       -- Mï¿½tricas
       T01.ISOPVPed_VlrDesconto          as MT_003_ValorDescontoPedido,
       T01.ISOPVPed_ValorFrete           as MT_003_ValorFretePedido,
       T01.ISOPVPed_ValorTotalPedido - T01.ISOPVPed_VlrDesconto + T01.ISOPVPed_ValorFreteSemRateio
                                         as MT_003_ValorPedido
  From ISOPVPedido T01
       Left Join ISOPVPedSituacao T02
         On T02.ISOPVPedSit_Codigo    = T01.ISOPVPedSit_Codigo
       Left Join ISOEntidade T03      -- Atendente do Pedido
         On T03.ISOEnt_Codigo         = T01.ISOPVPed_CodigoAtendente
       Left Join ISOEntidade T04      -- Responsï¿½vel do Pedido
         On T04.ISOEnt_Codigo         = T01.ISOPVPed_CodVendedorCD
       Left Join ISOPVPedTipo T05
         On T05.ISOPVPedTip_Codigo    = T01.ISOPVPedTip_Codigo
       Left Join ISOEntidade T06      -- Entidade do Pedido
         On T06.ISOEnt_Codigo         = T01.ISOPVPed_CliCodigo
       Left Join ISOPECndPagamento T07
         On T07.ISOEmp_Codigo         = T01.ISOEmp_Codigo
        And T07.ISOPECndPgt_Codigo    = T01.ISOPECndPgt_Codigo
       Left Join ISOPVPedOrigem T08
         On T08.ISOEmp_Codigo         = T01.ISOEmp_Codigo
        And T08.ISOPVPedOri_Codigo    = T01.ISOPVPedOri_Codigo;


-- dbo.BI_004_isoVND_ItensPedido source

CREATE VIEW [dbo].[BI_004_isoVND_ItensPedido] as
Select T02.ISOPVPedIteSit_Descricao    as DM_004_SituacaoItem,
       T01.ISOPvPedIte_Codigo          as DM_004_NumeroItem,
       T03.ISOPrd_Descricao            as DM_004_Produto,
       T01.ISOPVPedIte_UnidadeDestino  as DM_004_UnidadeDeVenda,
       T04.ISOPvPed_Codigo             as DM_004_PedidoCodigo,
       T05.ISOPeCndPgt_Descricao       as DM_004_FormaPgto,
       T06.ISOPVPedSit_Descricao       as DM_004_SituacaodoPedido,
       T07.ISOPVPedOri_Descricao       as DM_004_OrigemPedido,
       T08.ISOPVTv_Descricao           as DM_004_CondicaoPgto,
       T09.ISOPVPedTip_Descricao       as DM_004_TipoPedido,
       T11.ISOArm_Descricao            as DM_004_LocaldeFaturamento,
       T12.ISOEnt_Nome                 as DM_004_VendedorResponsavel,
	   T04.ISOPvPed_CodigoSac          as DM_004_CodigoSAC,
	   T13.ISOSAAte_DataAbertura       as DM_004_SAC_DataAbertura,
	   T14.ISOSAMot_Descricao          as DM_004_SAC_Motivo,
	   T15.ISOSAMotOcr_Descricao       as DM_004_SAC_Ocorrencia,
	   T16.ISOSAMotOcrCau_Descricao    as DM_004_SAC_Causa,
	   T17.ISOEnt_Nome                 as DM_004_SAC_Unidade,
	   T18.ISOSASit_Descricao          as DM_004_SAC_Situacao,
	   Case
	      When T18.ISOSASit_Situacao = 1 then 'Aberto'
		  When T18.ISOSASit_Situacao = 2 then 'Fechado'
		  When T18.ISOSASit_Situacao = 9 then 'Cancelado'
		  When T18.ISOSASit_Situacao = 3 then 'Encaminhado Workflow'
	   End                             as DM_004_SAC_SituacaoTabulada,

       'V.005'                         as DM_004_VersaoVW,


       Cast(T01.ISOPVPedIte_ValorUnitario * T01.ISOPVPedIte_Quantidade as decimal(16,2))
                                       as MT_004_ValorDoItem,
       T01.ISOPVPedIte_Quantidade      as MT_004_QuantidadeDeItens,

	   T01.ISOPvPedIte_SAC             as DM_004_IteCodigoSAC,
	   T19.ISOSAAte_DataAbertura       as DM_004_Ite_SAC_DataAbertura,
	   T20.ISOSAMot_Descricao          as DM_004_Ite_SAC_Motivo,
	   T21.ISOSAMotOcr_Descricao       as DM_004_Ite_SAC_Ocorrencia,
	   T22.ISOSAMotOcrCau_Descricao    as DM_004_Ite_SAC_Causa,
	   T23.ISOEnt_Nome                 as DM_004_Ite_SAC_Unidade,
	   T24.ISOSASit_Descricao          as DM_004_Ite_SAC_Situacao,
	   Case
	      When T24.ISOSASit_Situacao = 1 then 'Aberto'
		  When T24.ISOSASit_Situacao = 2 then 'Fechado'
		  When T24.ISOSASit_Situacao = 9 then 'Cancelado'
		  When T24.ISOSASit_Situacao = 3 then 'Encaminhado Workflow'
	   End                             as DM_004_SAC_IteSituacaoTabulada,

	   T25.ISOSA_PvIte_AteCodigo       as DM_004_SAPvIte_CodigoSAC,
	   T26.ISOSAAte_DataAbertura       as DM_004_SAPvIte_SAC_DataAbertur,
	   T27.ISOSAMot_Descricao          as DM_004_SAPvIte_SAC_Motivo,
	   T28.ISOSAMotOcr_Descricao       as DM_004_SAPvIte_SAC_Ocorrencia,
	   T29.ISOSAMotOcrCau_Descricao    as DM_004_SAPvIte_SAC_Causa,
	   T30.ISOEnt_Nome                 as DM_004_SAPvIte_SAC_Unidade,
	   T31.ISOSASit_Descricao          as DM_004_SAPvIte_SAC_Situacao,
	   Case
	      When T31.ISOSASit_Situacao = 1 then 'Aberto'
		  When T31.ISOSASit_Situacao = 2 then 'Fechado'
		  When T31.ISOSASit_Situacao = 9 then 'Cancelado'
		  When T31.ISOSASit_Situacao = 3 then 'Encaminhado Workflow'
	   End                             as DM_004_SAPvIte_IteSituacaoTabu

  From ISOPVPedItem T01
        Left Join ISOPVPedIteSituacao T02
          On T02.ISOEmp_Codigo          = T01.ISOEmp_Codigo
         And T02.ISOPVPedIteSit_Codigo  = T01.ISOPVPedIteSit_Codigo
        Left Join ISOProduto T03
          On T03.ISOEmp_Codigo          = T01.ISOEmp_Codigo
         And T03.ISOPrd_Codigo          = T01.ISOPrd_Codigo
       Inner Join ISOPVPEDIDO T04
          On T04.ISOEmp_Codigo          = T01.ISOEmp_Codigo
         And T04.ISOPvPed_Codigo        = T01.ISOPvPed_Codigo
        Left Join ISOPECNDPAGAMENTO T05
          On T05.ISOEmp_Codigo          = T04.ISOEmp_Codigo
         And T05.ISOPeCndPgt_Codigo     = T04.ISOPeCndPgt_Codigo
        Left Join ISOPVPEDSITUACAO T06
          On T06.ISOEmp_Codigo          = T04.ISOEmp_Codigo
         And T06.ISOPvPedSit_Codigo     = T04.ISOPvPedSit_Codigo
        Left Join ISOPVPEDORIGEM T07
          On T07.ISOEmp_Codigo          = T04.ISOEmp_Codigo
         And T07.ISOPvPedOri_Codigo     = T04.ISOPvPedOri_Codigo
        Left Join ISOPVTABELAVENDA  T08
          On T08.ISOEmp_Codigo          = T04.ISOEmp_Codigo
         And T08.ISOPvTV_Codigo         = T04.ISOPvPed_Pagamento
        Left Join ISOPVPEDTIPO T09
          On T09.ISOEmp_Codigo          = T04.ISOEmp_Codigo
         And T09.ISOPvPedTip_Codigo     = T04.ISOPvPedTip_Codigo
        Left Join ISOPVCDORIGEM  T10
          On T10.ISOEmp_Codigo          = T04.ISOEmp_Codigo
         And T10.ISOPvCD_Origem         = T04.ISOPvPed_EstadoOrigem
         And T10.ISOPvCD_Destino        = T04.ISOPvPed_EstadoDestino
         And T10.ISOPvCDOri_Pedido      = T04.ISOPvPedOri_Codigo
        Left Join ISOARMAZEM T11
          On T11.ISOArm_Codigo          = T10.ISOPvCDOri_Armazem
        Left Join ISOENTIDADE T12
          On T12.ISOEnt_Codigo          = T04.ISOPvPed_CodVendedorCD
		Left Join ISOSAAtendimento T13
		  On T13.ISOEmp_Codigo          = T04.ISOEmp_Codigo
		 And T13.ISOSAAte_Codigo        = T04.ISOPvPed_CodigoSac
		Left Join ISOSAMotivo T14
		  On T14.ISOEmp_Codigo          = T13.ISOEmp_Codigo
		 And T14.ISOSAMot_Codigo        = T13.ISOSAMot_Codigo
		Left Join ISOSAMOTOCORRENCIA T15
		  On T15.ISOEmp_Codigo          = T13.ISOEmp_Codigo
		 And T15.ISOSAMot_Codigo        = T13.ISOSAMot_Codigo
		 And T15.ISOSAMotOcr_Codigo     = T13.ISOSAMotOcr_Codigo
		Left Join ISOSAMOTOCRCAUSA T16
		  On T16.ISOEmp_Codigo          = T13.ISOEmp_Codigo
		 And T16.ISOSAMot_Codigo        = T13.ISOSAMot_Codigo
		 And T16.ISOSAMotOcr_Codigo     = T13.ISOSAMotOcr_Codigo
		 And T16.ISOSAMotOcrCau_Codigo  = T13.ISOSAMotOcrCau_Codigo
		Left Join ISOEntidade T17
		  On T17.ISOEnt_Codigo          = T13.ISOEntUnd_Codigo
		Left Join ISOSASituacao T18
		  On T18.ISOEmp_Codigo          = T13.ISOEmp_Codigo
		 And T18.ISOSASit_Codigo        = T13.ISOSASit_Codigo

		Left Join ISOSAAtendimento T19
		  On T19.ISOEmp_Codigo          = T01.ISOEmp_Codigo
		 And T19.ISOSAAte_Codigo        = T01.ISOPvPedIte_SAC
		Left Join ISOSAMotivo T20
		  On T20.ISOEmp_Codigo          = T19.ISOEmp_Codigo
		 And T20.ISOSAMot_Codigo        = T19.ISOSAMot_Codigo
		Left Join ISOSAMOTOCORRENCIA T21
		  On T21.ISOEmp_Codigo          = T19.ISOEmp_Codigo
		 And T21.ISOSAMot_Codigo        = T19.ISOSAMot_Codigo
		 And T21.ISOSAMotOcr_Codigo     = T19.ISOSAMotOcr_Codigo
		Left Join ISOSAMOTOCRCAUSA T22
		  On T22.ISOEmp_Codigo          = T19.ISOEmp_Codigo
		 And T22.ISOSAMot_Codigo        = T19.ISOSAMot_Codigo
		 And T22.ISOSAMotOcr_Codigo     = T19.ISOSAMotOcr_Codigo
		 And T22.ISOSAMotOcrCau_Codigo  = T19.ISOSAMotOcrCau_Codigo
		Left Join ISOEntidade T23
		  On T23.ISOEnt_Codigo          = T19.ISOEntUnd_Codigo
		Left Join ISOSASituacao T24
		  On T24.ISOEmp_Codigo          = T19.ISOEmp_Codigo
		 And T24.ISOSASit_Codigo        = T19.ISOSASit_Codigo

		Left Join ISOSA_PvItem T25
		  On T25.ISOEmp_Codigo          = T01.ISOEmp_Codigo
		 And T25.ISOSA_PvIte_PedCodigo  = T01.ISOPvPed_Codigo
		 And T25.ISOSA_PvIte_PedIteCodigo = T01.ISOPvPedIte_Codigo
		Left Join ISOSAAtendimento T26
		  On T26.ISOEmp_Codigo          = T25.ISOEmp_Codigo
		 And T26.ISOSAAte_Codigo        = T25.ISOSA_PvIte_AteCodigo
		Left Join ISOSAMotivo T27
		  On T27.ISOEmp_Codigo          = T26.ISOEmp_Codigo
		 And T27.ISOSAMot_Codigo        = T26.ISOSAMot_Codigo
		Left Join ISOSAMOTOCORRENCIA T28
		  On T28.ISOEmp_Codigo          = T26.ISOEmp_Codigo
		 And T28.ISOSAMot_Codigo        = T26.ISOSAMot_Codigo
		 And T28.ISOSAMotOcr_Codigo     = T26.ISOSAMotOcr_Codigo
		Left Join ISOSAMOTOCRCAUSA T29
		  On T29.ISOEmp_Codigo          = T26.ISOEmp_Codigo
		 And T29.ISOSAMot_Codigo        = T26.ISOSAMot_Codigo
		 And T29.ISOSAMotOcr_Codigo     = T26.ISOSAMotOcr_Codigo
		 And T29.ISOSAMotOcrCau_Codigo  = T26.ISOSAMotOcrCau_Codigo
		Left Join ISOEntidade T30
		  On T30.ISOEnt_Codigo          = T26.ISOEntUnd_Codigo
		Left Join ISOSASituacao T31
		  On T31.ISOEmp_Codigo          = T26.ISOEmp_Codigo
		 And T31.ISOSASit_Codigo        = T26.ISOSASit_Codigo;


-- dbo.BI_006_isoMKT_EmailEntrada source

CREATE VIEW [dbo].[BI_006_isoMKT_EmailEntrada] as
Select
       Case
           When ISOEMEmlEnt_Situacao = 1 Then 'Aberto'
           When ISOEMEmlEnt_Situacao = 2 Then 'Em atendimento'
           When ISOEMEmlEnt_Situacao = 3 Then 'Concluï¿½do'
           When ISOEMEmlEnt_Situacao = 4 Then 'Reservado'
           When ISOEMEmlEnt_Situacao = 5 Then 'Descartado'
       End                                    as DM_006_Situacao,
       1                                      as MT_006_QtdeDeEmail,
       'V.002'                                as DM_006_VersaoVW
  From ISOEMEMAILENTRADA;


-- dbo.BI_007_isoAtv_Apontamentos source

CREATE VIEW [dbo].[BI_007_isoAtv_Apontamentos] as -- Para criar a view

select	t4.isoatvatv_descricao            as DM_Atividade,
		t3.isoatvprj_descricao            as DM_Projeto,
		t5.isoent_nome                    as DM_Cliente,
		t6.isoent_nome                    as DM_Responsavel,
		t1.isorspatvdet_inicio            as DM_DataInicial,
		year(t1.isorspatvdet_inicio)      as DM_AnoInicial,
		month(t1.isorspatvdet_inicio)     as DM_MesInicial,
		t1.isorspatvdet_totalhorasdecimal as MT_QtdeHoras
 from isorspatvdetalhe t1
	 inner join isorspatividade t2
	    on t1.isoemp_codigo       = t2.isoemp_codigo
	   and t1.isorspatv_codigo    = t2.isorspatv_codigo
	 inner join isoatvprojeto t3
	    on t1.isoemp_codigo       = t3.isoemp_codigo
	   and t2.isoatvprj_codigo    = t3.isoatvprj_codigo
	 inner join isoatvatividade t4
	    on t1.isoemp_codigo       = t4.isoemp_codigo
	   and t2.isoatvatv_codigo    = t4.isoatvatv_codigo
	 inner join isoentidade t5
	    on t2.isorspatv_clicodigo = t5.isoent_codigo
	 inner join isoentidade t6
	    on t2.isorspatv_rspcodigo = t6.isoent_codigo;


-- dbo.BI_008_isoVND_DadoCompPedido source

CREATE VIEW [dbo].[BI_008_isoVND_DadoCompPedido] as
Select
       RTrim(T02.ISOPVPedSit_Descricao)  as DM_008_SituacaoPedido,
       Year(T01.ISOPVPed_DtaPedido)      as DM_008_AnoPedido,
       Month(T01.ISOPVPed_DtaPedido)     as DM_008_MesPedido,
       DAY(T01.ISOPvPed_DtaPedido)		 as DM_008_DiaPedido,
       RTrim(T03.ISOEnt_Nome)            as DM_008_PedidoEfetuadoPor,
       RTrim(T04.ISOEnt_Nome)            as DM_008_VendedorResponsavel,
       RTrim(T05.ISOPVPedTip_Descricao)  as DM_008_TipoDeVenda,
       RTrim(T06.ISOEnt_Nome)            as DM_008_Entidade,
       RTrim(T01.ISOPVPed_Pagamento)     as DM_008_CondicaoDePagamento,
       RTrim(T07.ISOPECndPgt_Descricao)  as DM_008_FormaDePagamento,
       RTrim(T08.ISOPVPedOri_Descricao)  as DM_008_OrigemDoPedido,
       T01.ISOPVPed_EstadoOrigem         as DM_008_LocalDeFaturamento,
       'V.003'                           as DM_008_VersaoVW,
       T10.ISOPvPedidoAttName            as DM_008_PerguntaDadoComplementar,
       Case
           When T10.ISOPVPedidoAttType = 5 Then T09.ISOPVPedidoAttValueLong
		   When T10.ISOPVPedidoAttType = 4 Then T11.ISOPvPedidoAttOptValue
           Else T09.ISOPvPedidoAttValue
	   End                               as DM_008_RespostaDadoComplementa,
       T01.ISOPVPed_Codigo               as DM_008_NumeroPedido,

       1                                 as MT_008_QuantidadeRegistro,
       T01.ISOPVPed_VlrDesconto          as MT_008_ValorDescontoPedido,
       T01.ISOPVPed_ValorFrete           as MT_008_ValorFretePedido,
       T01.ISOPVPed_ValorTotalPedido - T01.ISOPVPed_VlrDesconto + T01.ISOPVPed_ValorFreteSemRateio
                                         as MT_008_ValorPedido
  From ISOPVPedido T01
       Left Join ISOPVPedSituacao T02
         On T02.ISOEmp_Codigo         = T01.ISOEmp_Codigo
		And T02.ISOPVPedSit_Codigo    = T01.ISOPVPedSit_Codigo
       Left Join ISOEntidade T03
         On T03.ISOEnt_Codigo         = T01.ISOPVPed_CodigoAtendente
       Left Join ISOEntidade T04
         On T04.ISOEnt_Codigo         = T01.ISOPVPed_CodVendedorCD
       Left Join ISOPVPedTipo T05
         On T05.ISOEmp_Codigo         = T01.ISOEmp_Codigo
		And T05.ISOPVPedTip_Codigo    = T01.ISOPVPedTip_Codigo
       Left Join ISOEntidade T06
         On T06.ISOEnt_Codigo         = T01.ISOPVPed_CliCodigo
       Left Join ISOPECndPagamento T07
         On T07.ISOEmp_Codigo         = T01.ISOEmp_Codigo
        And T07.ISOPECndPgt_Codigo    = T01.ISOPECndPgt_Codigo
       Left Join ISOPVPedOrigem T08
         On T08.ISOEmp_Codigo         = T01.ISOEmp_Codigo
        And T08.ISOPVPedOri_Codigo    = T01.ISOPVPedOri_Codigo
      Inner Join ISOPVPEDIDOATTVALUES T09
         on T09.ISOEmp_Codigo         = T01.ISOEmp_Codigo
        and T09.ISOPvPed_Codigo       = T01.ISOPvPed_Codigo
       Left Join ISOPVPEDIDOATT T10
         on T10.ISOEmp_Codigo         = T09.ISOEmp_Codigo
        and T10.ISOPvPedidoAttId      = T09.ISOPvPedidoAttId
       Left Join ISOPVPEDIDOATTLEVEL1 T11
         on T11.ISOEmp_Codigo         = T10.ISOEmp_Codigo
        and T11.ISOPvPedidoAttId      = T10.ISOPvPedidoAttId
        and T11.ISOPvPedidoAttOptId   = T09.ISOPvPedidoAttOptId;


-- dbo.BI_009_isoVND_PedidoCampanha source

CREATE VIEW [dbo].[BI_009_isoVND_PedidoCampanha] as
Select
       RTrim(T02.ISOPVPedSit_Descricao)           as DM_009_SituacaoPedido,
       Year(T01.ISOPVPed_DtaPedido)               as DM_009_AnoPedido,
       Month(T01.ISOPVPed_DtaPedido)              as DM_009_MesPedido,
       Day(T01.ISOPvPed_DtaPedido)                as DM_009_DiaPedido,
       T01.ISOPVPed_DtaPedido                     as DM_009_DataPedido,
       RTrim(T03.ISOEnt_Nome)                     as DM_009_PedidoEfetuadoPor,
       RTrim(T04.ISOEnt_Nome)                     as DM_009_VendedorResponsavel,
       RTrim(T05.ISOPVPedTip_Descricao)           as DM_009_TipoDeVenda,
       RTrim(T06.ISOEnt_Nome)                     as DM_009_Entidade,
       RTrim(T01.ISOPVPed_Pagamento)              as DM_009_CondicaoDePagamento,
       RTrim(T07.ISOPECndPgt_Descricao)           as DM_009_FormaDePagamento,
       RTrim(T08.ISOPVPedOri_Descricao)           as DM_009_OrigemDoPedido,
       T01.ISOPVPed_EstadoOrigem                  as DM_009_LocalDeFaturamento,

       T101.ISOMkAteCmp_Codigo                    as DM_009_Campanha,
       T101.ISOMKAteCmp_Descricao                 as DM_009_NomeCamanhaVinculada,
       T102.ISOMkDiv_Descricao                    as DM_009_FormaDeDivulgacao,
       T103.ISOMKFin_Descricao                    as DM_009_Finalidade,
       Case
           When T104.ISOMkAteCmpCnt_Prioridade = 1 Then 'Alta'
           When T104.ISOMkAteCmpCnt_Prioridade = 2 Then 'Mï¿½dia'
           When T104.ISOMkAteCmpCnt_Prioridade = 3 Then 'Baixa'
           Else                                        'Nï¿½o definida'
       End                                        as DM_009_Prioridade,
       Case
           When T106.ISOEntSeg_Codigo Is Null     Then T109.ISOEntSeg_Descricao
           When T106.ISOEntSeg_Codigo Is Not Null Then T107.ISOEntSeg_Descricao
           Else                                  'Nï¿½o cadastrado'
       End                                        as DM_009_Segmento,
       T110.ISOEntRamAtv_Descricao                as DM_009_RamoDeAtividade,
       Case
           When T108.ISOEntPes_Sexo = 'M' Then 'Masculino'
           When T108.ISOEntPes_Sexo = 'F' Then 'Feminino'
           When T108.ISOEntPes_Sexo = 'N' Then 'Nï¿½o informado'
           Else                                Null
       End                                        as DM_009_Sexo,
       RTrim(T111.ISOProf_Descricao)              as DM_009_Profissao,
       RTRIM(T112.ISONivEsc_Descricao)            as DM_009_NivelEscolaridade,
       RTRIM(T113.ISOEstCiv_Descricao)            as DM_009_EstadoCivil,
       RTRIM(T114.ISOMKCntSit_Descricao)          as DM_009_Situacao,
       RTRIM(T116.ISOMKFinRsl_Descricao)          as DM_009_Resultado,
       RTRIM(T117.ISOMKFinCla_Descricao)          as DM_009_Classificacao,
       RTRIM(T118.ISOEnt_Nome)                    as DM_009_Agente,
       T115.ISOMKAteCmpCntDet_DataAlteraca        as DM_009_DataUltimoContato,
       Year(T115.ISOMKAteCmpCntDet_DataAlteraca)  as DM_009_AnoUltimoContato,
       Month(T115.ISOMKAteCmpCntDet_DataAlteraca) as DM_009_MesUltimoContato,

       'V.004'                                    as DM_009_VersaoVW,

       T01.ISOPVPed_Codigo                        as DM_009_NumeroPedido,

       1                                          as MT_009_QuantidadeContatos,

       T01.ISOPVPed_VlrDesconto                   as MT_009_ValorDescontoPedido,
       T01.ISOPVPed_ValorFrete                    as MT_009_ValorFretePedido,
       T01.ISOPVPed_ValorTotalPedido - T01.ISOPVPed_VlrDesconto + T01.ISOPVPed_ValorFreteSemRateio
                                                  as MT_009_ValorPedido
  From ISOPVPedido T01
        Left Join ISOPVPedSituacao T02
          On T02.ISOPVPedSit_Codigo           = T01.ISOPVPedSit_Codigo
        Left Join ISOEntidade T03
          On T03.ISOEnt_Codigo    = T01.ISOPVPed_CodigoAtendente
        Left Join ISOEntidade T04
          On T04.ISOEnt_Codigo                = T01.ISOPVPed_CodVendedorCD
        Left Join ISOPVPedTipo T05
          On T05.ISOPVPedTip_Codigo           = T01.ISOPVPedTip_Codigo
        Left Join ISOEntidade T06
          On T06.ISOEnt_Codigo                = T01.ISOPVPed_CliCodigo
        Left Join ISOPECndPagamento T07
          On T07.ISOEmp_Codigo                = T01.ISOEmp_Codigo
         And T07.ISOPECndPgt_Codigo           = T01.ISOPECndPgt_Codigo
        Left Join ISOPVPedOrigem T08
          On T08.ISOEmp_Codigo                = T01.ISOEmp_Codigo
         And T08.ISOPVPedOri_Codigo           = T01.ISOPVPedOri_Codigo

        Left Join ISOMKAteCampanha T101
          on T101.ISOEmp_Codigo               = T01.ISOEmp_Codigo
         and T101.ISOMkAteCmp_Codigo          = T01.ISOPvPed_MK
        Left Join ISOMKDIVULGACAO T102
          On T102.ISOEmp_Codigo               = T101.ISOEmp_Codigo
         And T102.ISOMkDiv_Codigo             = T101.ISOMkDiv_Codigo
        Left Join ISOMKFINALIDADE T103
          On T103.ISOEmp_Codigo               = T101.ISOEmp_Codigo
         And T103.ISOMkFin_Codigo             = T101.ISOMkFin_Codigo
        Left Join ISOMKATECMPCONTATO T104
          On T104.ISOEmp_Codigo               = T101.ISOEmp_Codigo
         And T104.ISOMkAteCmp_Codigo          = T101.ISOMkAteCmp_Codigo
         And T104.ISOMkAteCmpCnt_EntCodigo    = T01.ISOPvPed_CliCodigo
        Left Join ISOEntidade T105
          On T105.ISOEnt_Codigo               = T104.ISOMkAteCmpCnt_EntCodigo
         and T105.ISOEnt_Codigo               = T01.ISOPvPed_CliCodigo
        Left Join ISOENTORGANIZACAO T106
          On T106.ISOEntOrg_Codigo            = T104.ISOMkAteCmpCnt_EntCodigo
        Left Join ISOENTSEGMENTO T107
          On T107.ISOEntSeg_Codigo            = T106.ISOEntSeg_Codigo
        Left Join ISOENTPESSOA T108
          On T108.ISOEntPes_Codigo            = T104.ISOMkAteCmpCnt_EntCodigo
        Left Join ISOENTSEGMENTO T109
          On T109.ISOEntSeg_Codigo            = T108.ISOEntSeg_Codigo
        Left Join ISOENTRAMOATIVIDADE T110
          On T110.ISOEntRamAtv_Codigo         = T106.ISOEntRamAtv_Codigo
        Left Join ISOPROFISSAO T111
          On T111.ISOProf_Codigo              = T108.ISOProf_Codigo
        Left Join ISONIVESCOLARIDADE T112
          On T112.ISONivEsc_Codigo            = T108.ISONivEsc_Codigo
        Left Join ISOESTCIVIL T113
          On T113.ISOEstCiv_Codigo            = T108.ISOEstCiv_Codigo
        Left Join ISOMKCNTSITUACAO T114
          On T114.ISOMkCntSit_Codigo          = T104.ISOMkCntSit_Codigo
        Left Join ISOMKATECMPCNTDETALHE T115
          On T115.ISOEmp_Codigo               = T104.ISOEmp_Codigo
         And T115.ISOMkAteCmp_Codigo          = T104.ISOMkAteCmp_Codigo
         And T115.ISOMkAteCmpCnt_Sequencia    = T104.ISOMkAteCmpCnt_Sequencia
         And T115.ISOMkAteCmpCntDet_Sequencia = (Select MAX(TA1.ISOMKAteCmpCntDet_Sequencia)
                                                   From ISOMKATECMPCNTDETALHE TA1
                                                  Where TA1.ISOEmp_Codigo            = T115.ISOEmp_Codigo
                                                    And TA1.ISOMkAteCmp_Codigo       = T115.ISOMkAteCmp_Codigo
                                                    And TA1.ISOMkAteCmpCnt_Sequencia = T115.ISOMkAteCmpCnt_Sequencia)
        Left Join ISOMKFINRESULTADO T116
          On T116.ISOEmp_Codigo               = T103.ISOEmp_Codigo
         And T116.ISOMkFin_Codigo             = T103.ISOMkFin_Codigo
         And T116.ISOMkFinRsl_Codigo          = T115.ISOMkFinRsl_Codigo
        Left Join ISOMKFINCLASSIFICACAO T117
          On T117.ISOEmp_Codigo               = T103.ISOEmp_Codigo
         And T117.ISOMkFin_Codigo             = T103.ISOMkFin_Codigo
         And T117.ISOMkFinCla_Codigo          = T115.ISOMkFinCla_Codigo
        Left Join ISOENTIDADE T118
          On T118.ISOEnt_Codigo               = T115.ISOMkAteCmpCntDet_CodigoRespon;


-- dbo.BI_033_Analise_Acesso source

CREATE VIEW BI_033_Analise_Acesso as
select distinct year(isosaate_dataalteracao) as Ano,
	month( isosaate_dataalteracao) as Mes,
	day( isosaate_dataalteracao) as Dia,
	t1.isoent_nome as Usuario,
    'isoAtendimento'   as Modulo
	from isosaatendimento
inner join isoentidade t1
	on isosaate_usuarioalteracao = isoent_codigo
union
select distinct year( ISOWFTrf_DataAlteracao ) as Ano,
	month( ISOWFTrf_DataAlteracao ) as Mes,
	day( ISOWFTrf_DataAlteracao ) as Dia,
	t1.isoent_nome as Usuario,
    'isoWorflow'   as Modulo
	from isowftarefa
inner join isoentidade t1
	on ISOWFTrf_UsuarioAlteracao = isoent_codigo
union
select distinct year( t2.ISOEnt_DataAlteracao ) as Ano,
	month( t2.ISOEnt_DataAlteracao ) as Mes,
	day( t2.ISOEnt_DataAlteracao ) as Dia,
	t1.isoent_nome as Usuario,
    'isoCadastro'   as Modulo
	from isoentidade t2
inner join isoentidade t1
	on t2.ISOEnt_UsuarioAlteracao = t1.isoent_codigo
union
select distinct year( ISOMkAteCmpCnt_DataAlteracao ) as Ano,
	month( ISOMkAteCmpCnt_DataAlteracao ) as Mes,
	day( ISOMkAteCmpCnt_DataAlteracao ) as Dia,
	t1.isoent_nome as Usuario,
    'isoMarketing'   as Modulo
	from isomkatecmpcontato
inner join isoentidade t1
	on ISOMkAteCmpCnt_UsuarioAlteraca = isoent_codigo
union
select distinct year( ISOPQAte_DataAlteracao ) as Ano,
	month( ISOPQAte_DataAlteracao ) as Mes,
	day( ISOPQAte_DataAlteracao ) as Dia,
	t1.isoent_nome as Usuario,
    'isoPesquisa'   as Modulo
	from isopqatendimento
inner join isoentidade t1
	on ISOPQAte_UsuarioAlteracao = isoent_codigo
union
select distinct year( ISOBP_DataAlteracao ) as Ano,
	month( ISOBP_DataAlteracao ) as Mes,
	day( ISOBP_DataAlteracao ) as Dia,
	t1.isoent_nome as Usuario,
    'isoBIONEXO'   as Modulo
	from isobionexopedido
inner join isoentidade t1
	on ISOBP_UsuarioAlteracao = isoent_codigo
union
select distinct year( ISOCht_DataAlteracao ) as Ano,
	month( ISOCht_DataAlteracao ) as Mes,
	day( ISOCht_DataAlteracao ) as Dia,
	t1.isoent_nome as Usuario,
    'isoChat'   as Modulo
	from isochat
inner join isoentidade t1
	on ISOCht_UsuarioAlteracao = isoent_codigo
union
select distinct year( ISOPvPed_DataAlteracao ) as Ano,
	month( ISOPvPed_DataAlteracao ) as Mes,
	day( ISOPvPed_DataAlteracao ) as Dia,
	t1.isoent_nome as Usuario,
    'isoVendas'   as Modulo
	from isopvpedido
inner join isoentidade t1
	on ISOPvPed_UsuarioAlteracao = isoent_codigo
union
select distinct year( ISOAge_DataAlteracao ) as Ano,
	month( ISOAge_DataAlteracao ) as Mes,
	day( ISOAge_DataAlteracao ) as Dia,
	t1.isoent_nome as Usuario,
    'isoAgenda'   as Modulo
	from isoagenda
inner join isoentidade t1
	on ISOAge_UsuarioAlteracao = isoent_codigo
union
select distinct year( ISOAtvAtv_DataAlteracao ) as Ano,
	month( ISOAtvAtv_DataAlteracao ) as Mes,
	day( ISOAtvAtv_DataAlteracao ) as Dia,
	t1.isoent_nome as Usuario,
    'isoAtividade'   as Modulo
	from isoatvatividade
inner join isoentidade t1
	on ISOAtvAtv_UsuarioAlteracao = isoent_codigo
union
select distinct year( ISOCttIte_DataAlteracao ) as Ano,
	month( ISOCttIte_DataAlteracao ) as Mes,
	day( ISOCttIte_DataAlteracao ) as Dia,
	t1.isoent_nome as Usuario,
    'isoContratos'   as Modulo
	from isoctcttitem
inner join isoentidade t1
	on ISOCttIte_UsuarioAlteracao = isoent_codigo
union
select distinct year( ISOEMemlEnt_DataAlteracao ) as Ano,
	month( ISOEMemlEnt_DataAlteracao ) as Mes,
	day( ISOEMemlEnt_DataAlteracao ) as Dia,
	t1.isoent_nome as Usuario,
    'isoe-mail entrada'   as Modulo
	from isoememailentrada
inner join isoentidade t1
	on ISOEMemlEnt_UsuarioAlteracao = isoent_codigo
union
select distinct year( ISOEMemlSai_DataAlteracao ) as Ano,
	month( ISOEMemlSai_DataAlteracao ) as Mes,
	day( ISOEMemlSai_DataAlteracao ) as Dia,
	t1.isoent_nome as Usuario,
    'isoe-mail saida'   as Modulo
	from isoememailsaida
inner join isoentidade t1
	on ISOEMemlSai_UsuarioAlteracao = isoent_codigo
union
select distinct year( ISOEmpEnt_Alr_DataAlteracao ) as Ano,
	month( ISOEmpEnt_Alr_DataAlteracao ) as Mes,
	day( ISOEmpEnt_Alr_DataAlteracao ) as Dia,
	t1.isoent_nome as Usuario,
    'isoAlerta'   as Modulo
	from isoempent_alerta t2
inner join isoentidade t1
	on t2.ISOEmpEnt_Alr_UsuarioAlteracao = t1.isoent_codigo
union
select distinct year( ISOEvn_DataAlteracao ) as Ano,
	month( ISOEvn_DataAlteracao ) as Mes,
	day( ISOEvn_DataAlteracao ) as Dia,
	t1.isoent_nome as Usuario,
    'isoEventos'   as Modulo
	from isoeventos t2
inner join isoentidade t1
	on t2.ISOEvn_UsuarioAlteracao = t1.isoent_codigo
union
select distinct year( ISOInfVig_DataAlteracao ) as Ano,
	month( ISOInfVig_DataAlteracao ) as Mes,
	day( ISOInfVig_DataAlteracao ) as Dia,
	t1.isoent_nome as Usuario,
    'isoInformacao'   as Modulo
	from isoinfvigencia t2
inner join isoentidade t1
	on t2.ISOInfVig_UsuarioAlteracao = t1.isoent_codigo
union
select distinct year( ISOLig_DataAlteracao ) as Ano,
	month( ISOLig_DataAlteracao ) as Mes,
	day( ISOLig_DataAlteracao ) as Dia,
	t1.isoent_nome as Usuario,
    'isoCTI'   as Modulo
	from isoligacoes t2
inner join isoentidade t1
	on t2.ISOLig_UsuAlteracao = t1.isoent_codigo
union
select distinct year( ISOLVAcs_DataAlteracao ) as Ano,
	month( ISOLVAcs_DataAlteracao ) as Mes,
	day( ISOLVAcs_DataAlteracao ) as Dia,
	t1.isoent_nome as Usuario,
    'isoecommerce'   as Modulo
	from isolvacesso t2
inner join isoentidade t1
	on t2.ISOLVAcs_UsuarioAlteracao = t1.isoent_codigo
union
select distinct year( ISOMtaIte_DataAlteracao ) as Ano,
	month( ISOMtaIte_DataAlteracao ) as Mes,
	day( ISOMtaIte_DataAlteracao ) as Dia,
	t1.isoent_nome as Usuario,
    'isoMetas'   as Modulo
	from isometasitem t2
inner join isoentidade t1
	on t2.ISOMtaIte_UsuarioAlteracao = t1.isoent_codigo
union
select distinct year( ISOMkAteAvu_DataAlteracao ) as Ano,
	month( ISOMkAteAvu_DataAlteracao ) as Mes,
	day( ISOMkAteAvu_DataAlteracao ) as Dia,
	t1.isoent_nome as Usuario,
    'isoMKAvulso'   as Modulo
	from isomkateavulso t2
inner join isoentidade t1
	on t2.ISOMkAteAvu_UsuarioAlteracao = t1.isoent_codigo
union
select distinct year( ISOPrd_DataAlteracao ) as Ano,
	month( ISOPrd_DataAlteracao ) as Mes,
	day( ISOPrd_DataAlteracao ) as Dia,
	t1.isoent_nome as Usuario,
    'isoProdutos'   as Modulo
	from isoProduto t2
inner join isoentidade t1
	on t2.ISOPrd_UsuarioAlteracao = t1.isoent_codigo
union
select distinct year( ISOSMS_DataAlteracao ) as Ano,
	month( ISOSMS_DataAlteracao ) as Mes,
	day( ISOSMS_DataAlteracao ) as Dia,
	t1.isoent_nome as Usuario,
    'isoSMS'   as Modulo
	from isoSMS t2
inner join isoentidade t1
	on t2.ISOSMS_UsuarioAlteracao = t1.isoent_codigo
union
select distinct year( ISOIntNeo_DataAlteracao ) as Ano,
	month( ISOIntNeo_DataAlteracao ) as Mes,
	day( ISOIntNeo_DataAlteracao ) as Dia,
	t1.isoent_nome as Usuario,
    'isoNEOGrid'   as Modulo
	from isointneogrid t2
inner join isoentidade t1
	on t2.ISOIntNeo_UsuarioAlteracao = t1.isoent_codigo;


-- dbo.BI_071_ProcIntegr_Pedido source

CREATE VIEW BI_071_ProcIntegr_Pedido as
Select
       Case Int_ISOPvTV_Processado
            When 'S' Then 'Processado'
            When 'N' Then 'A processar'
            Else 'Processado(s) com erro(s)'
       End                                       as BI_071_Processado,
       COUNT(*)                                  as BI_071_Quantidade,
       'Tabela de venda'                         as BI_071_Origem
  From INT_ISOPVTABELAVENDA
 Group By Int_ISOPvTV_Processado

Union All

Select
       Case Int_ISOPvTvMaCnd_Processado
            When 'S' Then 'Processado'
            When 'N' Then 'A processar'
            Else 'Processado(s) com erro(s)'
       End                                       as BI_071_Processado,
       COUNT(*)                                  as BI_071_Quantidade,
       'Condição Matriz CP'                      as BI_071_Origem
  From INT_ISOPVTVMACONDICAO
 Group By Int_ISOPvTvMaCnd_Processado

Union All

Select
       Case Int_ISOPvTVUsuEst_Processado
            When 'S' Then 'Processado'
            When 'N' Then 'A processar'
            Else 'Processado(s) com erro(s)'
       End                                       as BI_071_Processado,
       COUNT(*)                                  as BI_071_Quantidade,
       'Estab x Usuario x Tabela Venda'          as BI_071_Origem
  From INT_ISOPVTVUSUEST
 Group By Int_ISOPvTVUsuEst_Processado

Union All

Select
       Case Int_ISOPVPed_Processado
            When 'S' Then 'Processado'
            When 'N' Then 'A processar'
            Else 'Processado(s) com erro(s)'
       End                                       as BI_071_Processado,
       COUNT(*)                                  as BI_071_Quantidade,
       'Pedido'                                  as BI_071_Origem
  From INT_ISOPVPEDIDO
 Group By Int_ISOPVPed_Processado

Union All

Select
       Case Int_ISOPvPedObs_Processado
            When 'S' Then 'Processado'
            When 'N' Then 'A processar'
            Else 'Processado(s) com erro(s)'
       End                                       as BI_071_Processado,
       COUNT(*)                                  as BI_071_Quantidade,
       'Observação do Pedido'                    as BI_071_Origem
  From INT_ISOPVPEDOBSERVACAO
 Group By Int_ISOPvPedObs_Processado

Union All

Select
       Case Int_ISOPvPedIte_Processado
            When 'S' Then 'Processado'
            When 'N' Then 'A processar'
            Else 'Processado(s) com erro(s)'
       End                                       as BI_071_Processado,
       COUNT(*)                                  as BI_071_Quantidade,
       'Item do Pedido'                          as BI_071_Origem
  From INT_ISOPVPEDITEM
 Group By Int_ISOPvPedIte_Processado

Union All

Select
       Case Int_ISOPvPedIteDA_Processado
            When 'S' Then 'Processado'
            When 'N' Then 'A processar'
            Else 'Processado(s) com erro(s)'
       End                                       as BI_071_Processado,
       COUNT(*)                                  as BI_071_Quantidade,
       'Descont/Acréscimo'                       as BI_071_Origem
  From INT_ISOPVPEDITEDA
 Group By Int_ISOPvPedIteDA_Processado

Union All

Select
       Case Int_ISOPvPedDC_Processado
            When 'S' Then 'Processado'
            When 'N' Then 'A processar'
            Else 'Processado(s) com erro(s)'
       End                                       as BI_071_Processado,
       COUNT(*)                                  as BI_071_Quantidade,
       'Dado Complementar Pedido'                as BI_071_Origem
  From INT_ISOPVPED_DADOCOMPLEMENTAR
 Group By Int_ISOPvPedDC_Processado

Union All

Select
       Case Int_ISOPvPedDCR_Processado
            When 'S' Then 'Processado'
            When 'N' Then 'A processar'
            Else 'Processado(s) com erro(s)'
       End            as BI_071_Processado,
       COUNT(*)                                  as BI_071_Quantidade,
       'Respostas Válidas DC Pedido'             as BI_071_Origem
  From INT_ISOPVPED_DADOCOMPLEMENTARR
 Group By Int_ISOPvPedDCR_Processado

Union All

Select
       Case Int_ISOPvPedItDC_Processado
            When 'S' Then 'Processado'
            When 'N' Then 'A processar'
            Else 'Processado(s) com erro(s)'
       End                                       as BI_071_Processado,
       COUNT(*)                                  as BI_071_Quantidade,
       'Dado Compl item do Pedido'               as BI_071_Origem
  From INT_ISOPVPEDIT_DADOCOMPLEMENTA
 Group By Int_ISOPvPedItDC_Processado

Union All

Select
       Case Int_ISOPvPedItDCR_Processado
            When 'S' Then 'Processado'
            When 'N' Then 'A processar'
            Else 'Processado(s) com erro(s)'
       End                                       as BI_071_Processado,
       COUNT(*)                                  as BI_071_Quantidade,
       'Respostas Válidas DC item do Pedido'     as BI_071_Origem
  From INT_ISOPVPEDIT_DCRESP
 Group By Int_ISOPvPedItDCR_Processado

Union All

Select
       Case Int_ISOPvPedIteOrd_Processado
            When 'S' Then 'Processado'
            When 'N' Then 'A processar'
            Else 'Processado(s) com erro(s)'
       End                                       as BI_071_Processado,
       COUNT(*)                                  as BI_071_Quantidade,
       'Respostas Válidas DC Pedido'             as BI_071_Origem
  From INT_ISOPVPEDITEORDPRODUCAO
 Group By Int_ISOPvPedIteOrd_Processado

Union All

Select 'A processar'                             as BI_071_Processado,
       COUNT(*)                                  as BI_071_Quantidade,
       'Pedido - Web Service'                    as BI_071_Origem
  From ISOPVPedido
 Where ISOPvPed_LibPedNegociacao = 'ALT'
   And ((ISOPvPedSit_Codigo = 758 and ISOPvPedTip_Codigo = '99') Or (ISOPvPedSit_Codigo = 2 and ISOPvPedTip_Codigo = 'VE') Or (ISOPvPedSit_Codigo = 2 and ISOPvPedTip_Codigo = 'TL'))

-------------------------------------------------------------------------------------------------------------------;


-- dbo.BI_N101_isoCRM_Ate_Detalhes source

CREATE VIEW BI_N101_isoCRM_Ate_Detalhes as
Select T01.ISOEmp_Codigo                         as Empresa,
       T01.ISOSAAte_Codigo                       as Codigo,
       T01.ISOSAAteDet_DataAbertura              as Data_abertura,
       T01.ISOSAAteDet_DataResposta              as Data_fechamento,
       Case
            When T01.ISOSAAteDet_DataResposta is Null OR T01.ISOSAAteDet_DataResposta = '1753-01-01' Then 0
            Else DATEDIFF(hour, T01.ISOSAAteDet_DataAbertura, T01.ISOSAAteDet_DataResposta)
       End                                       as MT_Tempo,
       T01.ISOEntUsu_Codigo                      as Codigo_atendente,
       RTrim(T01.ISOSAAteDet_Descricao)          as Descricao,
       RTrim(T02.ISOEmpCan_Descricao)            as Canal,
       1                                         as MT_Qtde,

       'V.1'                                     as DM_Versao

  From ISOSAATEDETALHE T01
       Inner Join ISOEMPCANAL T02
          On T02.ISOEmp_Codigo    = T01.ISOEmp_Codigo
         And T02.ISOEmpCan_Codigo = T01.ISOEmpCan_Codigo;


-- dbo.BI_isoAte_001_Atendimentos source

CREATE VIEW [dbo].[BI_isoAte_001_Atendimentos] as

Select
    T01.ISOSAAte_Codigo				as MT_CodigoAtendimento,
    year(T01.ISOSAAte_DataAbertura)   as DM_AnoAbertura,
    month(T01.ISOSAAte_DataAbertura)   as DM_MesAbertura,
    T10.ISOEnt_Nome                 as DM_Entidade,
    T06.ISOEmpCan_Descricao	    as DM_Canal,
	T07.ISOSAMot_Descricao			as DM_Motivo,
	T08.ISOSAMotOcr_Descricao		as DM_Ocorrencia,
	T09.ISOSAMotOcrCau_Descricao	as DM_Causa,
	T12.ISOSASit_Descricao          as DM_Situacao,
	T12.isosasit_situacao as  DM_CodigoSituacaoInterna
  From
	ISOSAAtendimento T01 (nolock)
	  LEFT JOIN ISOEmpCanal T06 (nolock)
        ON T06.ISOEmpCan_Codigo      = T01.ISOEmp_Codigo
	  LEFT JOIN ISOSAMotivo T07 (nolock)
        ON T07.ISOSAMot_Codigo       = T01.ISOSAMot_Codigo
	  LEFT JOIN ISOSAMotOcorrencia T08 (nolock)
        ON T08.ISOSAMot_Codigo       = T07.ISOSAMot_Codigo
       AND T08.ISOSAMotOcr_Codigo    = T01.ISOSAMotOcr_Codigo
	  LEFT JOIN ISOSAMotOcrCausa T09 (nolock)
	    ON T09.ISOSAMotOcrCau_Codigo = T01.ISOSAMotOcrCau_Codigo
       AND T09.ISOSAMotOcr_Codigo    = T08.ISOSAMotOcr_Codigo
       AND T09.ISOSAMot_Codigo       = T07.ISOSAMot_Codigo
	  LEFT JOIN ISOEntidade T10 (nolock)
	    ON T10.ISOEnt_Codigo         = T01.ISOSAAte_EntCodigo
	  LEFT Join ISOSASituacao T12 (nolock)
		ON T12.ISOSASit_Codigo    = T01.ISOSASit_Codigo;


-- dbo.BI_isoPedido_001 source

CREATE VIEW [dbo].[BI_isoPedido_001] as
/*
    Autor    : Roger Araujo
    Data     : 27/12/2012
*/

select t1.isoprd_codigo as Codigo_Produto,
	t1.isoprd_descricao as Descricao_Produto,
	t2.isoprdcls_descricao as Classificacao,
	t3.isoarm_codigo as Armazem,
	t3.isoarmprd_qtdedisponivel as Qtde_Estoque,
	t4.isopvprel_preco as Preco,
	t5.isopvped_codigo as Nr_Pedido,
	t5.isopvpedite_quantidade as Qtde_Item,
	t5.isopvpedite_UnidadeDestino as Unidade,
	t5.isopvpedite_valorunitario as Valor_Unitario,
	t5.isopvpedite_quantidade * t5.isopvpedite_valorunitario as Valor_Total,
	t6.isopvpeditesit_descricao as Situacao_Item
 from isoproduto t1
  inner join isoprdclassificacao t2
	on t1.isoprdcls_codigo = t2.isoprdcls_codigo
	inner join isoarmprodutos t3
	on t1.isoprd_codigo = t3.isoprd_codigo
	inner join isopvprecolista t4
	on t1.isoprd_codigo = t4.isopvprel_prdcodigo
	inner join isopvpeditem t5
	on t1.isoprd_codigo = t5.isoprd_codigo
	inner join isopvpeditesituacao t6
	on t5.isopvpeditesit_codigo = t6.isopvpeditesit_codigo;


-- dbo.CLIENTE source

CREATE VIEW CLIENTE
AS
SELECT ISOENTPESSOA.ISOEntPes_Codigo ISOEnt_Codigo,
					  ISOENTPESSOA.ISOEntPes_NomeCompleto ISOEnt_NomeCompleto,
					  ISOENTPESSOA.ISOEntPes_CPF ISOEnt_CPF,
					  ISOENTPESSOA.ISOEntPes_RG ISOEnt_RG,
					  0 AS ISOEnt_CNPJ,
                      ISOENTPESSOA.ISOEntPes_DataNascimento ISOEnt_DataNascimento,
                      '1753-01-01 00:00:00.000' ISOEntOrg_DataAbertura,
                      ISOENTPESSOA.ISONivEsc_Codigo,
                      ISOENTPESSOA.ISOEstCiv_Codigo,
                      ISOENTPESSOA.ISOProf_Codigo,
                      ISOENTPESSOA.ISOEntPes_Sexo ISOEnt_Sexo,
                      ISOENTPESSOA.ISOEntPes_DataCadastro ISOEnt_DataCadastro,
                      ISOENTPESSOA.ISOEntPes_Observacao ISOEnt_Observacao,
                      ISOENTPESSOA.ISOEntPes_Flag ISOEnt_Flag,
                      ISOENTPESSOA.ISOEntPes_DataAlteracao ISOEnt_DataAlteracao,
                      ISOENTPESSOA.ISOEntPes_UsuarioAlteracao ISOEnt_UsuarioAlteracao,
                      ISOENTPESSOA.ISOEntPes_Estrangeiro ISOEnt_Estrangeiro,
                      ISOENTPESSOA.ISOEntPes_RG_Data ISOEnt_RG_Data,
                      ISOENTPESSOA.ISOEntPes_RG_Orgao ISOEnt_RG_Orgao,
                      ISOENTPESSOA.ISOEntSeg_Codigo,
                      ISNULL(ISOENTPESSOA.ISOEntPes_EmpCodigo,11) ISOEmp_Codigo,
                      '' AS ISOEnt_InscEstadual,
                      NULL AS ISOEntRamAtv_Codigo,
                      ISOENTCLIENTE.ISOEntCli_CodigoExt ISOEnt_CodigoExt,
                      ISOENTCLIENTE.ISOEntClaP_Codigo,
                      ISOENTCLIENTE.ISOEntClaPEsp_Codigo,
                      ISOENTCLIENTE.ISOEntCli_CodigoMatriz ISOEnt_CodigoMatriz,
                      ISOENTENDERECOPRINCIPAL.ISOEntEnd_Logradouro ISOEnt_Logradouro,
                      ISOENTENDERECOPRINCIPAL.ISOEntEnd_Numero ISOEnt_Numero,
                      ISOENTENDERECOPRINCIPAL.ISOEntEnd_Bairro ISOEnt_Bairro,
                      ISOENTENDERECOPRINCIPAL.ISOEntEnd_Complemento ISOEnt_Complemento,
                      ISOLOCALIDADE.ISOLoc_Descricao ISOEnt_Localidade,
                      ISOESTADO.ISOEst_Sigla ISOEnt_UF,
                      ISOENTTELEFONE1.ISOEntTel_DDD ISOEnt_DDD,
                      ISOENTTELEFONE1.ISOEntTel_Telefone ISOEnt_Telefone,
                      ISOENTTELEFONE2.ISOEntTel_DDD ISOEnt_DDD1,
                      ISOENTTELEFONE2.ISOEntTel_Telefone ISOEnt_Telefone1,
                      ISOENTTELEFONE3.ISOEntTel_DDD ISOEnt_DDD2,
                      ISOENTTELEFONE3.ISOEntTel_Telefone ISOEnt_Telefone2,
                      ISOENTECONTACT.ISOEntEct_econtact ISOEnt_Email,
                      (SELECT     ISOENTRSP_CLIENTES.ISOEntRsp_Codigo
						FROM         ISOENTRSP_CLIENTES INNER JOIN
			                      ISOENTRESPONSAVEL ON ISOENTRESPONSAVEL.ISOEmp_Codigo = ISOENTRSP_CLIENTES.ISOEmp_Codigo AND
                      ISOENTRSP_CLIENTES.ISOEntRsp_Codigo = ISOENTRESPONSAVEL.ISOEntRsp_Codigo
                      AND ISOENTPESSOA.ISOEntPes_Codigo = ISOENTRSP_CLIENTES.ISOEntCli_Codigo
                      --AND ISOENTRESPONSAVEL.ISOEntRsp_ClaCodigo = 285 AND ((ISOENTRSP_CLIENTES.ISOEntNivRsp_Codigo = 2 AND ISOENTPESSOA.ISOEntSeg_Codigo IN (1)) OR (ISOENTRSP_CLIENTES.ISOEntNivRsp_Codigo = 1 AND ISOENTPESSOA.ISOEntSeg_Codigo NOT IN (1)))
                      --AND ISOENTRESPONSAVEL.ISOEntRsp_ClaCodigo = 285 AND ISOENTRSP_CLIENTES.ISOEntNivRsp_Codigo = 1
                      AND ISOENTRSP_CLIENTES.ISOEntNivRsp_Codigo = 1
                      AND ISOENTRSP_CLIENTES.ISOEntRsp_Cli_Flag = 'A'
                      --AND ISOENTRSP_CLIENTES.ISOEntRsp_Cli_DataAlteracao = (SELECT MAX(ISOEntRsp_Cli_DataAlteracao) FROM ISOENTRSP_CLIENTES X WHERE X.ISOEmp_Codigo = ISOENTRSP_CLIENTES.ISOEmp_Codigo AND X.ISOEntCli_Codigo = ISOENTRSP_CLIENTES.ISOEntCli_Codigo AND ((X.ISOEntNivRsp_Codigo = 2 AND ISOENTPESSOA.ISOEntSeg_Codigo IN (1)) OR (X.ISOEntNivRsp_Codigo = 1 AND ISOENTPESSOA.ISOEntSeg_Codigo NOT IN (1)) AND X.ISOEntRsp_Cli_Flag = 'A'))) AS ISOEntRsp_Codigo,
                      AND ISOENTRSP_CLIENTES.ISOEntRsp_Cli_DataAlteracao = (SELECT MAX(ISOEntRsp_Cli_DataAlteracao) FROM ISOENTRSP_CLIENTES X WHERE X.ISOEmp_Codigo = ISOENTRSP_CLIENTES.ISOEmp_Codigo AND X.ISOEntCli_Codigo = ISOENTRSP_CLIENTES.ISOEntCli_Codigo AND X.ISOEntNivRsp_Codigo = 1 AND X.ISOEntRsp_Cli_Flag = 'A')) AS ISOEntRsp_Codigo,
                      (SELECT     ISOEMPENT_ORIGEM.ISOEmpEnt_Ori_Codigo
						FROM         ISOENTRSP_CLIENTES INNER JOIN
									ISOEMPENT_ORIGEM ON ISOENTRSP_CLIENTES.ISOEntRsp_Codigo = ISOEMPENT_ORIGEM.ISOEMPENT_ENTCODIGO AND ISOEMPENT_ORIGEM.ISOEMPORI_CODIGO = 7 INNER JOIN
			                      ISOENTRESPONSAVEL ON ISOENTRESPONSAVEL.ISOEmp_Codigo = ISOENTRSP_CLIENTES.ISOEmp_Codigo AND
                      ISOENTRSP_CLIENTES.ISOEntRsp_Codigo = ISOENTRESPONSAVEL.ISOEntRsp_Codigo
                      AND ISOENTPESSOA.ISOEntPes_Codigo = ISOENTRSP_CLIENTES.ISOEntCli_Codigo
                      --AND ISOENTRESPONSAVEL.ISOEntRsp_ClaCodigo = 285 AND ((ISOENTRSP_CLIENTES.ISOEntNivRsp_Codigo = 2 AND ISOENTPESSOA.ISOEntSeg_Codigo IN (1)) OR (ISOENTRSP_CLIENTES.ISOEntNivRsp_Codigo = 1 AND ISOENTPESSOA.ISOEntSeg_Codigo NOT IN (1)))
                      --AND ISOENTRESPONSAVEL.ISOEntRsp_ClaCodigo = 285 AND ISOENTRSP_CLIENTES.ISOEntNivRsp_Codigo = 1
                      AND ISOENTRSP_CLIENTES.ISOEntNivRsp_Codigo = 1
                      AND ISOENTRSP_CLIENTES.ISOEntRsp_Cli_Flag = 'A'
                      --AND ISOENTRSP_CLIENTES.ISOEntRsp_Cli_DataAlteracao = (SELECT MAX(ISOEntRsp_Cli_DataAlteracao) FROM ISOENTRSP_CLIENTES X WHERE X.ISOEmp_Codigo = ISOENTRSP_CLIENTES.ISOEmp_Codigo AND X.ISOEntCli_Codigo = ISOENTRSP_CLIENTES.ISOEntCli_Codigo AND ((X.ISOEntNivRsp_Codigo = 2 AND ISOENTPESSOA.ISOEntSeg_Codigo IN (1)) OR (X.ISOEntNivRsp_Codigo = 1 AND ISOENTPESSOA.ISOEntSeg_Codigo NOT IN (1)) AND X.ISOEntRsp_Cli_Flag = 'A'))) AS Responsavel
                      AND ISOENTRSP_CLIENTES.ISOEntRsp_Cli_DataAlteracao = (SELECT MAX(ISOEntRsp_Cli_DataAlteracao) FROM ISOENTRSP_CLIENTES X WHERE X.ISOEmp_Codigo = ISOENTRSP_CLIENTES.ISOEmp_Codigo AND X.ISOEntCli_Codigo = ISOENTRSP_CLIENTES.ISOEntCli_Codigo AND X.ISOEntNivRsp_Codigo = 1 AND X.ISOEntRsp_Cli_Flag = 'A')) AS Responsavel,
1 VERSAO
FROM ISOENTPESSOA LEFT OUTER JOIN
	  ISOENTECONTACT ON ISOENTECONTACT.ISOEnt_Codigo = ISOENTPESSOA.ISOEntPes_Codigo AND (ISOENTECONTACT.ISOEntEctTip_Codigo = 1) AND (ISOENTECONTACT.ISOEntEml_Flag = 'A') AND (ISOENTECONTACT.ISOEntEctTip_Principal = 'S') LEFT OUTER JOIN
      ISOENTTELEFONE AS ISOENTTELEFONE1 ON ISOENTPESSOA.ISOEntPes_Codigo = ISOENTTELEFONE1.ISOEnt_Codigo AND (ISOENTTELEFONE1.ISOEntTel_Flag = 'A') AND (ISOENTTELEFONE1.ISOEntTel_Principal = 'S') LEFT OUTER JOIN
      ISOENTTELEFONE AS ISOENTTELEFONE2 ON ISOENTPESSOA.ISOEntPes_Codigo = ISOENTTELEFONE2.ISOEnt_Codigo AND (ISOENTTELEFONE2.ISOEntTel_Codigo = 1) LEFT OUTER JOIN
      ISOENTTELEFONE AS ISOENTTELEFONE3 ON ISOENTPESSOA.ISOEntPes_Codigo = ISOENTTELEFONE3.ISOEnt_Codigo AND (ISOENTTELEFONE3.ISOEntTel_Codigo = 2) LEFT OUTER JOIN
      ISOENTCLIENTE ON ISOENTPESSOA.ISOEntPes_Codigo = ISOENTCLIENTE.ISOEntCli_Codigo LEFT OUTER JOIN
      ISOENTENDERECOPRINCIPAL ON ISOENTPESSOA.ISOEntPes_Codigo = ISOENTENDERECOPRINCIPAL.ISOEnt_Codigo LEFT OUTER JOIN
	  ISOLOCALIDADE ON ISOLOCALIDADE.ISOLoc_Codigo = ISOENTENDERECOPRINCIPAL.ISOLoc_Codigo AND (ISOENTENDERECOPRINCIPAL.ISOEntEnd_Principal = 'S') LEFT OUTER JOIN
	  ISOESTADO ON ISOLOCALIDADE.ISOPais_Codigo = ISOESTADO.ISOPais_Codigo AND ISOLOCALIDADE.ISOEst_Codigo = ISOESTADO.ISOEst_Codigo
UNION ALL
SELECT ISOENTORGANIZACAO.ISOEntOrg_Codigo,
					  ISOENTORGANIZACAO.ISOEntOrg_RazaoSocial,
					  0 AS ISOEntPes_CPF,
					  '0' AS ISOEntPes_RG, -- 29/03/2017 alterado o campo para texto pois o RG pode possuir letras
					  ISOENTORGANIZACAO.ISOEntOrg_CNPJ,
                      '1753-01-01 00:00:00.000' ISOEntPes_DataNascimento,
                      ISOENTORGANIZACAO.ISOEntOrg_DataAbertura,
                      NULL AS ISONivEsc_Codigo,
                      NULL AS ISOEstCiv_Codigo,
                      NULL AS ISOProf_Codigo,
                      'N' AS ISOEntPes_Sexo,
                      ISOENTORGANIZACAO.ISOEntOrg_DataCadastro,
                      ISOENTORGANIZACAO.ISOEntOrg_Observacao,
                      ISOENTORGANIZACAO.ISOEntOrg_Flag,
                      ISOENTORGANIZACAO.ISOEntOrg_DataAlteracao,
                      ISOENTORGANIZACAO.ISOEntOrg_UsuarioAlteracao,
                      ISOENTORGANIZACAO.ISOEntOrg_Estrangeiro,
                      NULL AS ISOEntPes_RG_Data,
                      NULL AS ISOEntPes_RG_Orgao,
                      ISOENTORGANIZACAO.ISOEntSeg_Codigo,
                      ISNULL(ISOENTORGANIZACAO.ISOEntOrg_EmpCodigo,11) AS ISOEmp_Codigo,
                      ISOENTORGANIZACAO.ISOEntOrg_InscEstadual,
                      ISOENTORGANIZACAO.ISOEntRamAtv_Codigo,
                      ISOENTCLIENTE.ISOEntCli_CodigoExt,
                      ISOENTCLIENTE.ISOEntClaP_Codigo,
                      ISOENTCLIENTE.ISOEntClaPEsp_Codigo,
                      ISOENTCLIENTE.ISOEntCli_CodigoMatriz,
                      ISOENTENDERECOPRINCIPAL.ISOEntEnd_Logradouro,
                      ISOENTENDERECOPRINCIPAL.ISOEntEnd_Numero,
                      ISOENTENDERECOPRINCIPAL.ISOEntEnd_Bairro,
                      ISOENTENDERECOPRINCIPAL.ISOEntEnd_Complemento,
                      ISOLOCALIDADE.ISOLoc_Descricao,
                      ISOESTADO.ISOEst_Sigla,
                      ISOENTTELEFONE1.ISOEntTel_DDD AS ISOEntTel_DDD,
                      ISOENTTELEFONE1.ISOEntTel_Telefone AS ISOEntTel_Telefone,
                      ISOENTTELEFONE2.ISOEntTel_DDD AS ISOEntTel_DDD1,
                      ISOENTTELEFONE2.ISOEntTel_Telefone AS ISOEntTel_Telefone1,
                      ISOENTTELEFONE3.ISOEntTel_DDD AS ISOEntTel_DDD2,
                      ISOENTTELEFONE3.ISOEntTel_Telefone AS ISOEntTel_Telefone2,
                      ISOENTECONTACT.ISOEntEct_econtact,
                      (SELECT     TOP 1 ISOENTRSP_CLIENTES.ISOEntRsp_Codigo
						FROM         ISOENTRSP_CLIENTES INNER JOIN
			                      ISOENTRESPONSAVEL ON ISOENTRESPONSAVEL.ISOEmp_Codigo = ISOENTRSP_CLIENTES.ISOEmp_Codigo AND
                      ISOENTRSP_CLIENTES.ISOEntRsp_Codigo = ISOENTRESPONSAVEL.ISOEntRsp_Codigo
                      AND ISOENTORGANIZACAO.ISOEntOrg_Codigo = ISOENTRSP_CLIENTES.ISOEntCli_Codigo
                      --AND ISOENTRESPONSAVEL.ISOEntRsp_ClaCodigo = 285 AND ((ISOENTRSP_CLIENTES.ISOEntNivRsp_Codigo = 2 AND ISOENTORGANIZACAO.ISOEntSeg_Codigo IN (1)) OR (ISOENTRSP_CLIENTES.ISOEntNivRsp_Codigo = 1 AND ISOENTORGANIZACAO.ISOEntSeg_Codigo NOT IN (1)))
                      --AND ISOENTRESPONSAVEL.ISOEntRsp_ClaCodigo = 285 AND ISOENTRSP_CLIENTES.ISOEntNivRsp_Codigo = 1
                      AND ISOENTRSP_CLIENTES.ISOEntNivRsp_Codigo = 1
                      AND ISOENTRSP_CLIENTES.ISOEntRsp_Cli_Flag = 'A'
                      --AND ISOENTRSP_CLIENTES.ISOEntRsp_Cli_DataAlteracao = (SELECT MAX(ISOEntRsp_Cli_DataAlteracao) FROM ISOENTRSP_CLIENTES X WHERE X.ISOEmp_Codigo = ISOENTRSP_CLIENTES.ISOEmp_Codigo AND X.ISOEntCli_Codigo = ISOENTRSP_CLIENTES.ISOEntCli_Codigo AND ((X.ISOEntNivRsp_Codigo = 2 AND ISOENTORGANIZACAO.ISOEntSeg_Codigo IN (1)) OR (X.ISOEntNivRsp_Codigo = 1 AND ISOENTORGANIZACAO.ISOEntSeg_Codigo NOT IN (1)) AND X.ISOEntRsp_Cli_Flag = 'A'))) AS ISOEntRsp_Codigo,
                      AND ISOENTRSP_CLIENTES.ISOEntRsp_Cli_DataAlteracao = (SELECT MAX(ISOEntRsp_Cli_DataAlteracao) FROM ISOENTRSP_CLIENTES X WHERE X.ISOEmp_Codigo = ISOENTRSP_CLIENTES.ISOEmp_Codigo AND X.ISOEntCli_Codigo = ISOENTRSP_CLIENTES.ISOEntCli_Codigo AND X.ISOEntNivRsp_Codigo = 1 AND X.ISOEntRsp_Cli_Flag = 'A')) AS ISOEntRsp_Codigo,
                      (SELECT     TOP 1 ISOEMPENT_ORIGEM.ISOEmpEnt_Ori_Codigo
						FROM         ISOENTRSP_CLIENTES INNER JOIN
									ISOEMPENT_ORIGEM ON ISOENTRSP_CLIENTES.ISOEntRsp_Codigo = ISOEMPENT_ORIGEM.ISOEMPENT_ENTCODIGO AND ISOEMPENT_ORIGEM.ISOEMPORI_CODIGO = 7 INNER JOIN
			                      ISOENTRESPONSAVEL ON ISOENTRESPONSAVEL.ISOEmp_Codigo = ISOENTRSP_CLIENTES.ISOEmp_Codigo AND
                      ISOENTRSP_CLIENTES.ISOEntRsp_Codigo = ISOENTRESPONSAVEL.ISOEntRsp_Codigo
                      AND ISOENTORGANIZACAO.ISOEntOrg_Codigo = ISOENTRSP_CLIENTES.ISOEntCli_Codigo
                      --AND ISOENTRESPONSAVEL.ISOEntRsp_ClaCodigo = 285 AND ((ISOENTRSP_CLIENTES.ISOEntNivRsp_Codigo = 2 AND ISOENTORGANIZACAO.ISOEntSeg_Codigo IN (1)) OR (ISOENTRSP_CLIENTES.ISOEntNivRsp_Codigo = 1 AND ISOENTORGANIZACAO.ISOEntSeg_Codigo NOT IN (1)))
                      --AND ISOENTRESPONSAVEL.ISOEntRsp_ClaCodigo = 285 AND ISOENTRSP_CLIENTES.ISOEntNivRsp_Codigo = 1
                      AND ISOENTRSP_CLIENTES.ISOEntNivRsp_Codigo = 1
                      AND ISOENTRSP_CLIENTES.ISOEntRsp_Cli_Flag = 'A'
                      --AND ISOENTRSP_CLIENTES.ISOEntRsp_Cli_DataAlteracao = (SELECT MAX(ISOEntRsp_Cli_DataAlteracao) FROM ISOENTRSP_CLIENTES X WHERE X.ISOEmp_Codigo = ISOENTRSP_CLIENTES.ISOEmp_Codigo AND X.ISOEntCli_Codigo = ISOENTRSP_CLIENTES.ISOEntCli_Codigo AND ((X.ISOEntNivRsp_Codigo = 2 AND ISOENTORGANIZACAO.ISOEntSeg_Codigo IN (1)) OR (X.ISOEntNivRsp_Codigo = 1 AND ISOENTORGANIZACAO.ISOEntSeg_Codigo NOT IN (1)) AND X.ISOEntRsp_Cli_Flag = 'A'))) AS Responsavel
                      AND ISOENTRSP_CLIENTES.ISOEntRsp_Cli_DataAlteracao = (SELECT MAX(ISOEntRsp_Cli_DataAlteracao) FROM ISOENTRSP_CLIENTES X WHERE X.ISOEmp_Codigo = ISOENTRSP_CLIENTES.ISOEmp_Codigo AND X.ISOEntCli_Codigo = ISOENTRSP_CLIENTES.ISOEntCli_Codigo AND X.ISOEntNivRsp_Codigo = 1 AND X.ISOEntRsp_Cli_Flag = 'A')) AS Responsavel,
1 VERSAO
FROM ISOENTORGANIZACAO LEFT OUTER JOIN
      ISOENTECONTACT ON ISOENTECONTACT.ISOEnt_Codigo = ISOENTORGANIZACAO.ISOEntOrg_Codigo AND (ISOENTECONTACT.ISOEntEctTip_Principal = 'S') AND (ISOENTECONTACT.ISOEntEml_Flag = 'A') AND (ISOENTECONTACT.ISOEntEctTip_Codigo = 1) LEFT OUTER JOIN
      ISOENTTELEFONE AS ISOENTTELEFONE1 ON ISOENTORGANIZACAO.ISOEntOrg_Codigo = ISOENTTELEFONE1.ISOEnt_Codigo AND (ISOENTTELEFONE1.ISOEntTel_Flag = 'A') AND (ISOENTTELEFONE1.ISOEntTel_Principal = 'S') LEFT OUTER JOIN
      ISOENTTELEFONE AS ISOENTTELEFONE2 ON ISOENTORGANIZACAO.ISOEntOrg_Codigo = ISOENTTELEFONE2.ISOEnt_Codigo AND (ISOENTTELEFONE2.ISOEntTel_Codigo = 1) LEFT OUTER JOIN
      ISOENTTELEFONE AS ISOENTTELEFONE3 ON ISOENTORGANIZACAO.ISOEntOrg_Codigo = ISOENTTELEFONE3.ISOEnt_Codigo AND (ISOENTTELEFONE3.ISOEntTel_Codigo = 2) LEFT OUTER JOIN
      ISOLOCALIDADE LEFT OUTER JOIN
      ISOENTENDERECOPRINCIPAL ON ISOLOCALIDADE.ISOLoc_Codigo = ISOENTENDERECOPRINCIPAL.ISOLoc_Codigo AND (ISOENTENDERECOPRINCIPAL.ISOEntEnd_Principal = 'S') LEFT OUTER JOIN
      ISOESTADO ON ISOLOCALIDADE.ISOPais_Codigo = ISOESTADO.ISOPais_Codigo AND ISOLOCALIDADE.ISOEst_Codigo = ISOESTADO.ISOEst_Codigo ON
      ISOENTORGANIZACAO.ISOEntOrg_Codigo = ISOENTENDERECOPRINCIPAL.ISOEnt_Codigo LEFT OUTER JOIN
      ISOENTCLIENTE ON ISOENTORGANIZACAO.ISOEntOrg_Codigo = ISOENTCLIENTE.ISOEntCli_Codigo;


-- dbo.CLIENTES_NORMAIS_LIBERACAO_COTAS source

CREATE VIEW [dbo].[CLIENTES_NORMAIS_LIBERACAO_COTAS]
AS
SELECT ISOEMP_CODIGO, ISOPVPED_CODIGO
FROM ISOPVPEDIDO WHERE (ISOEMP_CODIGO = 11)
--AND NOT EXISTS /* NÃO TEM PRODUTOS COM CLASSE */ (SELECT ISOPVPEDITEM.ISOEMP_CODIGO, ISOPVPEDITEM.ISOPVPED_CODIGO FROM ISOPVPEDITEM INNER JOIN ISOPRDLINHA ON ISOPVPEDITEM.ISOEMP_CODIGO = ISOPRDLINHA.ISOEMP_CODIGO AND ISOPVPEDITEM.ISOPRD_CODIGO = ISOPRDLINHA.ISOPRD_CODIGO INNER JOIN ISOLINHA ON ISOPRDLINHA.ISOEMP_CODIGO = ISOLINHA.ISOEMP_CODIGO AND ISOPRDLINHA.ISOLIN_CODIGO = ISOLINHA.ISOLIN_CODIGO AND ISOPVPEDITEM.ISOEMP_CODIGO = 11 AND ISOLINHA.ISOLIN_CODEXTERNO = '3458' AND ISOPVPEDIDO.ISOEMP_CODIGO = ISOPVPEDITEM.ISOEMP_CODIGO AND ISOPVPEDIDO.ISOPVPED_CODIGO = ISOPVPEDITEM.ISOPVPED_CODIGO)
AND NOT EXISTS /* CLIENTES COM DADO COMPLEMENTAR RESPONDIDO */ (SELECT ISOENTCLIENTEATTVALUES.ISOEMP_CODIGO, ISOENTCLIENTEATTVALUES.ISOENTCLI_CODIGO FROM ISOENTCLIENTEATTVALUES INNER JOIN ISOEMPRESA ON ISOENTCLIENTEATTVALUES.ISOEMP_CODIGO = ISOEMPRESA.ISOEMP_CODIGO AND ISOENTCLIENTEATTVALUES.ISOEMP_CODIGO = 11 AND ISOENTCLIENTEATTVALUES.ISOENTCLIENTEATTID IN (2054,2070) AND ISOENTCLIENTEATTVALUES.ISOENTCLIENTEATTVALUE = 'S' AND ISOPVPEDIDO.ISOEMP_CODIGO = ISOENTCLIENTEATTVALUES.ISOEMP_CODIGO AND ISOPVPEDIDO.ISOPVPED_CLICODIGO = ISOENTCLIENTEATTVALUES.ISOENTCLI_CODIGO)
AND ISOPVPEDIDO.ISOPVPEDSIT_CODIGO = 23 AND ISOPVPEDIDO.ISOPVPEDORI_CODIGO NOT IN ('SIN')
AND NOT EXISTS /* EXCLUINDO CLIENTES PRIV DIRETO/INDIRETO */ (SELECT 1 FROM ISOENTCLIENTE WHERE ISOENTCLIENTE.ISOEMP_CODIGO = ISOPVPEDIDO.ISOEMP_CODIGO AND ISOENTCLIENTE.ISOENTCLI_CODIGO = ISOPVPEDIDO.ISOPVPED_CLICODIGO AND ISOENTCLIENTE.ISOENTCLAP_CODIGO IN (10,11,12,24,34,35,36,45,97));


-- dbo.CLIENTES_PRIV_DIRETO_LIBERACAO_COTAS source

CREATE VIEW [dbo].[CLIENTES_PRIV_DIRETO_LIBERACAO_COTAS]
AS
SELECT ISOEMP_CODIGO, ISOPVPED_CODIGO
FROM ISOPVPEDIDO WHERE     (ISOEMP_CODIGO = 11)
--AND NOT EXISTS  /* NÃO TEM PRODUTOS COM CLASSE */ (SELECT     ISOPVPEDITEM.ISOEMP_CODIGO, ISOPVPEDITEM.ISOPVPED_CODIGO FROM ISOPVPEDITEM INNER JOIN ISOPRDLINHA ON ISOPVPEDITEM.ISOEMP_CODIGO = ISOPRDLINHA.ISOEMP_CODIGO AND ISOPVPEDITEM.ISOPRD_CODIGO = ISOPRDLINHA.ISOPRD_CODIGO INNER JOIN ISOLINHA ON ISOPRDLINHA.ISOEMP_CODIGO = ISOLINHA.ISOEMP_CODIGO AND ISOPRDLINHA.ISOLIN_CODIGO = ISOLINHA.ISOLIN_CODIGO AND ISOPVPEDITEM.ISOEMP_CODIGO = 11 /* AND ISOLINHA.ISOLIN_CODEXTERNO = '3458' */ AND ISOPVPEDIDO.ISOEMP_CODIGO = ISOPVPEDITEM.ISOEMP_CODIGO AND ISOPVPEDIDO.ISOPVPED_CODIGO = ISOPVPEDITEM.ISOPVPED_CODIGO)
AND NOT EXISTS /* CLIENTES COM DADO COMPLEMENTAR RESPONDIDO */ (SELECT     ISOENTCLIENTEATTVALUES.ISOEMP_CODIGO, ISOENTCLIENTEATTVALUES.ISOENTCLI_CODIGO FROM         ISOENTCLIENTEATTVALUES INNER JOIN ISOEMPRESA ON ISOENTCLIENTEATTVALUES.ISOEMP_CODIGO = ISOEMPRESA.ISOEMP_CODIGO AND ISOENTCLIENTEATTVALUES.ISOEMP_CODIGO = 11 AND ISOENTCLIENTEATTVALUES.ISOENTCLIENTEATTID IN (2054,2070) AND ISOENTCLIENTEATTVALUES.ISOENTCLIENTEATTVALUE = 'S' AND ISOPVPEDIDO.ISOEMP_CODIGO = ISOENTCLIENTEATTVALUES.ISOEMP_CODIGO AND ISOPVPEDIDO.ISOPVPED_CLICODIGO = ISOENTCLIENTEATTVALUES.ISOENTCLI_CODIGO) AND ISOPVPEDIDO.ISOPVPEDSIT_CODIGO = 23 AND ISOPVPEDIDO.ISOPVPEDORI_CODIGO NOT IN ('SIN')
AND EXISTS /* CLIENTES PRIV DIRETO */ (SELECT 1 FROM ISOENTCLIENTE WHERE ISOENTCLIENTE.ISOEMP_CODIGO = ISOPVPEDIDO.ISOEMP_CODIGO AND ISOENTCLIENTE.ISOENTCLI_CODIGO = ISOPVPEDIDO.ISOPVPED_CLICODIGO AND ISOENTCLIENTE.ISOENTCLAP_CODIGO IN (10,11,12,24,35));


-- dbo.CLIENTES_PRIV_INDIRETO_LIBERACAO_COTAS source

CREATE VIEW [dbo].[CLIENTES_PRIV_INDIRETO_LIBERACAO_COTAS]
AS
SELECT ISOEMP_CODIGO, ISOPVPED_CODIGO
FROM ISOPVPEDIDO WHERE     (ISOEMP_CODIGO = 11)
--AND NOT EXISTS  /* NÃO TEM PRODUTOS COM CLASSE */ (SELECT     ISOPVPEDITEM.ISOEMP_CODIGO, ISOPVPEDITEM.ISOPVPED_CODIGO FROM ISOPVPEDITEM INNER JOIN ISOPRDLINHA ON ISOPVPEDITEM.ISOEMP_CODIGO = ISOPRDLINHA.ISOEMP_CODIGO AND ISOPVPEDITEM.ISOPRD_CODIGO = ISOPRDLINHA.ISOPRD_CODIGO INNER JOIN ISOLINHA ON ISOPRDLINHA.ISOEMP_CODIGO = ISOLINHA.ISOEMP_CODIGO AND ISOPRDLINHA.ISOLIN_CODIGO = ISOLINHA.ISOLIN_CODIGO AND ISOPVPEDITEM.ISOEMP_CODIGO = 11 AND ISOLINHA.ISOLIN_CODEXTERNO = '3458' AND ISOPVPEDIDO.ISOEMP_CODIGO = ISOPVPEDITEM.ISOEMP_CODIGO AND ISOPVPEDIDO.ISOPVPED_CODIGO = ISOPVPEDITEM.ISOPVPED_CODIGO)
AND NOT EXISTS /* CLIENTES COM DADO COMPLEMENTAR RESPONDIDO */ (SELECT     ISOENTCLIENTEATTVALUES.ISOEMP_CODIGO, ISOENTCLIENTEATTVALUES.ISOENTCLI_CODIGO FROM         ISOENTCLIENTEATTVALUES INNER JOIN ISOEMPRESA ON ISOENTCLIENTEATTVALUES.ISOEMP_CODIGO = ISOEMPRESA.ISOEMP_CODIGO AND ISOENTCLIENTEATTVALUES.ISOEMP_CODIGO = 11 AND ISOENTCLIENTEATTVALUES.ISOENTCLIENTEATTID IN (2054,2070) AND ISOENTCLIENTEATTVALUES.ISOENTCLIENTEATTVALUE = 'S' AND ISOPVPEDIDO.ISOEMP_CODIGO = ISOENTCLIENTEATTVALUES.ISOEMP_CODIGO AND ISOPVPEDIDO.ISOPVPED_CLICODIGO = ISOENTCLIENTEATTVALUES.ISOENTCLI_CODIGO)
AND ISOPVPEDIDO.ISOPVPEDSIT_CODIGO = 23 AND ISOPVPEDIDO.ISOPVPEDORI_CODIGO NOT IN ('SIN')
AND EXISTS /* CLIENTES PRIV DIRETO */ (SELECT 1 FROM ISOENTCLIENTE WHERE ISOENTCLIENTE.ISOEMP_CODIGO = ISOPVPEDIDO.ISOEMP_CODIGO AND ISOENTCLIENTE.ISOENTCLI_CODIGO = ISOPVPEDIDO.ISOPVPED_CLICODIGO AND ISOENTCLIENTE.ISOENTCLAP_CODIGO IN (34,36,45,97));


-- dbo.CREMER_CONSULTA_PRECO source

CREATE VIEW CREMER_CONSULTA_PRECO
as
select a.isopvped_clicodigo as Cliente, a.isopvped_codigo as Pedido, isopvped_dtapedido as Data, isoprd_codigo as Produto, isopvpedite_quantidade as Quantidade,
isopvpedite_unidadedestino as UnidadeVenda, isopvpedite_valorunitario as ValorUnitario, isopvcd_descricao as LocalFaturamento,
isopvtv_descricao as CondPagamento, isopvpedsit_descricao as SituacaoPedido, isopvpeditesm_descricao as MotivoCancelamento
from isopvpedido a
inner join ISOPVPEDITEM b
	on a.isoemp_codigo = b.isoemp_codigo and a.isopvped_codigo = b.isopvped_codigo
inner join isopvcd c
	on a.isoemp_codigo = c.isoemp_codigo and a.isopvped_estadoorigem = c.isopvcd_origem and a.isopvped_estadodestino = c.isopvcd_destino
inner join ISOPVTABELAVENDA d
	on a.isoemp_codigo = d.isoemp_codigo and a.isopvped_pagamento = d.isopvtv_codigo
inner join ISOPVPEDSITUACAO e
	on a.isoemp_codigo = e.isoemp_codigo and a.isopvpedsit_codigo = e.isopvpedsit_codigo
left join ISOPVPEDITESITMOTIVO f
	on a.isoemp_codigo = f.isoemp_codigo and a.isopvpedsitmot_codigo = f.isopvpeditesm_codigo
where
a.isoemp_codigo = 11;


-- dbo.CREMER_PRIORIDADE_PAPEL_ALCADA source

CREATE VIEW CREMER_PRIORIDADE_PAPEL_ALCADA
as
select ISOEmp_Codigo,ISOPvMA_Codigo,ISOPvMAP_RspCodigo,ISOPvMAP_Percentual, row_number() over (partition by ISOEmp_Codigo,ISOPvMA_Codigo order by ISOEmp_Codigo,ISOPvMA_Codigo,ISOPvMAP_Percentual) as Prioridade
from isopvmapapel
where isoemp_codigo = 11
and isopvmap_flag = 'A';


-- dbo.CREMER_SAC_PROCEDIMENTO_DISPARADO source

CREATE VIEW CREMER_SAC_PROCEDIMENTO_DISPARADO
AS
SELECT     DISTINCT ISOWFPROCEDIMENTO.ISOEmp_Codigo, ISOWFTRF_SAC.ISOSAAte_Codigo, ISOWFPROCEDIMENTO.ISOWFPrcPad_Codigo
FROM         ISOWFPROCEDIMENTO INNER JOIN
                      ISOWFTRF_SAC ON ISOWFPROCEDIMENTO.ISOEmp_Codigo = ISOWFTRF_SAC.ISOEmp_Codigo AND
                      ISOWFPROCEDIMENTO.ISOWFPrc_Codigo = ISOWFTRF_SAC.ISOWFTrf_SAC_PrcCodigo
WHERE     (ISOWFPROCEDIMENTO.ISOEmp_Codigo = 11) AND (ISOWFPROCEDIMENTO.ISOWFPrcPad_Codigo IN (245, 250, 246, 247, 248, 249));


-- dbo.CliEnd source

CREATE VIEW [dbo].[CliEnd] as
Select T3.ISOEmp_Codigo              as EmpCod,
       T1.ISOEnt_Codigo              as CliCod,
       T1.ISOEnt_Nome                as CliNom,
       T4.ISOLoc_Descricao           as CliCid2,
       T2.ISOEntEnd_Codigo           as CliEndCod,
       T5.ISOEst_Sigla               as CliUf2
  From ISOEntidade T1 with (nolock)
       Inner Join ISOEntEndereco T2  with (nolock)
          On T2.ISOEnt_Codigo = T1.ISOEnt_Codigo
       Inner Join ISOEmp_Entidade T3 with (nolock)
          On T3.ISOEnt_Codigo  = T1.ISOEnt_Codigo
       Inner Join ISOLocalidade T4 with (nolock)
          On T4.ISOLoc_Codigo = T2.ISOLoc_Codigo
       Inner Join ISOEstado T5 with (nolock)
          On T5.ISOEst_Codigo = T4.ISOEst_Codigo;


-- dbo.Clicad source

CREATE VIEW [dbo].[Clicad] as
Select T3.ISOEmp_Codigo              as EmpCod,
       T1.ISOEnt_Codigo              as CliCod,
       T1.ISOEnt_Nome                as CliNom,
       T6.ISOEmpEnt_Ori_Codigo       as CliCodExt
  From ISOEntidade T1
       Inner Join ISOEmp_Entidade T3
          On T3.ISOEnt_Codigo  = T1.ISOEnt_Codigo
       Inner Join ISOEMPENT_ORIGEM T6
          On T6.ISOEmpEnt_EntCodigo = T1.ISOEnt_Codigo
         And T6.ISOEmpOri_Codigo    = 2 -- Este Código deve ser alterado para o código da origem do BPCS;


-- dbo.DiasEntrePedidos source

CREATE VIEW DiasEntrePedidos
as
select ISOPvPed_CliCodigo as ISOEnt_Codigo, pedido_atual, Data_pedido_Atual, pedido_anterior, data_pedido_anterior,
	datediff(dd,isnull(data_pedido_anterior,Data_pedido_Atual),Data_pedido_Atual) dias_entre_compra, isnull(valor_total_pedido,0)valor_total_pedido
from
(select a.ISOPvPed_CliCodigo, a.isopvped_codigo as pedido_atual, a.ISOPvPed_DtaAberPedido as Data_pedido_Atual,
		(select max(isopvped_codigo) from isopvpedido b
				where a.isoemp_codigo = b.isoemp_codigo
				and a.ISOPvPed_CliCodigo = b.ISOPvPed_CliCodigo
				and a.ISOPvPed_DtaAberPedido > b.ISOPvPed_DtaAberPedido
				and b.ISOPvPedSit_Codigo not in (8,9,12)
		) as pedido_anterior,
		(select max(case when ISOPvPed_DtaAberPedido = '1753-01-01 00:00:00.000' then ISOPvPed_DtaPedido else ISOPvPed_DtaAberPedido end) from isopvpedido b
				where a.isoemp_codigo = b.isoemp_codigo
				and a.ISOPvPed_CliCodigo = b.ISOPvPed_CliCodigo
			and a.ISOPvPed_DtaAberPedido > b.ISOPvPed_DtaAberPedido
				and b.ISOPvPedSit_Codigo not in (8,9,12)
		) as data_pedido_anterior,
		(select sum(isopvpedite_quantidade*isopvpedite_valorunitario) from isopvpeditem x
			where x.isoemp_codigo = a.isoemp_codigo
			and x.isopvped_codigo = a.isopvped_codigo
			and x.isopvpeditesit_codigo <> 9
		) as valor_total_pedido
from isopvpedido a
where
a.isoemp_codigo = 11
--and a.ISOPvPed_CliCodigo in (select isoentorg_codigo as isoent_codigo from isoentorganizacao where isoentseg_codigo = 9 union all select isoentpes_codigo as isoent_codigo from isoentpessoa where isoentseg_codigo = 9)
and a.ISOPvPedSit_Codigo not in (8,9,12)
and a.ISOPvPed_DtaAberPedido between DATEADD(year, -2, getdate()) and getdate()
and a.isopvped_codigo=(select max(c.isopvped_codigo) from ISOPVPEDIDO c (nolock)
				where
					  c.ISOEmp_Codigo = a.ISOEmp_Codigo
					  and c.ISOPvPed_CliCodigo = a.ISOPvPed_CliCodigo
					  and a.ISOPvPed_DtaAberPedido = c.ISOPvPed_DtaAberPedido
					  and c.ISOPvPedSit_Codigo not in (8,9,12))
) as consulta;


-- dbo.FLOW_PEDIDOS_RETIDOS_USUARIO_ITEM source

CREATE VIEW [dbo].[FLOW_PEDIDOS_RETIDOS_USUARIO_ITEM]
AS
with
	prazo_medio_cp as (
		SELECT ISOEmp_Codigo, ISOPvEstab_Codigo, ISOPvTV_Codigo, sum(ISOPvEstTbVPar_QtdDias * ISOPvEstTbVPar_Percentagem / 100.0) prazo_medio_cp
			FROM ISOPVESTAB_TBLVENDAPARCELAS with (readpast)
			WHERE ISOEmp_Codigo = 11
			group by ISOEmp_Codigo, ISOPvEstab_Codigo, ISOPvTV_Codigo),
	pedidos as (
		select
			ISOPVPEDIDO.ISOEmp_Codigo,
			ISOPVPEDIDO.ISOPvPed_Codigo,
			ISOPVPEDIDO.ISOPvPed_CliCodigo,
			ISOPVPEDIDO.ISOPvPed_DtaPedido,
			ISOPVPEDIDO.ISOPvPed_DtaSolEntrega,
			ISOPVPEDIDO.ISOPvPed_DtaAberPedido+ISOPVPEDIDO.ISOPvPed_HoraPedido as ISOPvPed_DtaAberPedido,
			ISOPVPEDIDO.ISOPvPedSit_Codigo,
			ISOPVCD.ISOPvCD_Estabelecimento,
			ISOPVPEDIDO.ISOPvPed_Pagamento,
			ISOEMPENT_ORIGEM.ISOEmpEnt_Ori_Codigo,
			ISOPVPEDIDO.ISOPvPed_UsuarioAlteracao,
			ISOPVPEDIDO.ISOPvPed_DataAlteracao,
			ISOPVPEDIDO.ISOPvPedOri_Codigo,
			ISOPVPEDIDO.ISOPvPedTip_Codigo,
			SUM(ISOPVPEDITEM.ISOPvPedIte_PrecoAjustadoTotal) TOTAL_PEDIDO
			from ISOPVPEDIDO with (readpast)
					INNER JOIN ISOPVCD with (readpast) ON
						ISOPVPEDIDO.ISOEmp_Codigo = ISOPVCD.ISOEmp_Codigo AND
						ISOPVPEDIDO.ISOPvPed_EstadoOrigem = ISOPVCD.ISOPvCD_Origem AND
						ISOPVPEDIDO.ISOPvPed_EstadoDestino = ISOPVCD.ISOPvCD_Destino
					INNER JOIN ISOPVPEDITEM with (readpast)
						ON ISOPVPEDIDO.ISOEmp_Codigo = ISOPVPEDITEM.ISOEmp_Codigo
						AND ISOPVPEDIDO.ISOPvPed_Codigo = ISOPVPEDITEM.ISOPvPed_Codigo
					LEFT OUTER JOIN ISOEMPENT_ORIGEM with (readpast) ON
						ISOPVPEDIDO.ISOEmp_Codigo = ISOEMPENT_ORIGEM.ISOEmp_Codigo AND
						ISOPVPEDIDO.ISOPvPed_CliCodigo = ISOEMPENT_ORIGEM.ISOEmpEnt_EntCodigo AND
						ISOEMPENT_ORIGEM.ISOEmpOri_Codigo = 13
			where ISOPVPEDIDO.ISOEmp_Codigo = 11
			and ISOPVPEDIDO.ISOPvPedSit_Codigo IN (36)
			group by ISOPVPEDIDO.ISOEmp_Codigo, ISOPVPEDIDO.ISOPvPed_Codigo, ISOPVPEDIDO.ISOPvPed_CliCodigo, ISOPVPEDIDO.ISOPvPed_DtaPedido, ISOPVPEDIDO.ISOPvPed_DtaSolEntrega, ISOPVPEDIDO.ISOPvPed_DtaAberPedido, ISOPVPEDIDO.ISOPvPed_HoraPedido, ISOPVPEDIDO.ISOPvPedSit_Codigo, ISOPVCD.ISOPvCD_Estabelecimento, ISOPVPEDIDO.ISOPvPed_Pagamento, ISOEMPENT_ORIGEM.ISOEmpEnt_Ori_Codigo, ISOPVPEDIDO.ISOPvPed_UsuarioAlteracao, ISOPVPEDIDO.ISOPvPed_DataAlteracao, ISOPVPEDIDO.ISOPvPedOri_Codigo, ISOPVPEDIDO.ISOPvPedTip_Codigo),
	clientes as (
		SELECT cod_cliente, loja, prazo_medio_cliente, limite_credito, total_contas_receber, ped_em_aberto, data_ultima_compra, data_titulo
		FROM ANALISE_CREDITO with (readpast)),
	usuarios as (
		SELECT
			ISOENTIDADE.ISOEnt_Codigo,
			ISOENTIDADE.ISOEnt_Nome
		FROM ISOENTIDADE with (readpast)
			INNER JOIN ISOENTUSUARIO with (readpast)
			ON ISOENTIDADE.ISOEnt_Codigo = ISOENTUSUARIO.ISOEntUsu_Codigo
	),
	pedido_item as (
		select
			ISOPVPEDITEM.ISOEmp_Codigo,
			ISOPVPEDITEM.ISOPvPed_Codigo,
			ISOPVPEDITEM.ISOPvPedIte_Codigo,
			ISOPVPEDITEM.ISOPrd_Codigo,
			ISOPVPEDITEM.ISOPvPedIte_Quantidade,
			ISOPVPEDITEM.ISOPvPedIte_UnidadeOrigem,
			ISOPVPEDITEM.ISOPvPedIte_UnidadeDestino,
			ISOPVPEDITEM.ISOPvPedIte_ValorPISST,
			ISOPVPEDITEM.ISOPvPedIte_ValorCofinsST,
			ISOPVPEDITEM.ISOPVPedIte_ValorFCPST,
			ISOPVPEDITEM.ISOPvPedIte_ValorFCP,
			ISOPVPEDITEM.ISOPvPedIte_ValorIPI,
			ISOPVPEDITEM.ISOPvPedIte_VlrSubsTributaria,
			ISOPVPEDITEM.ISOPvPedIte_ValorICMS,
			ISOPVPEDITEM.ISOPvPedIte_ValorPIS,
			ISOPVPEDITEM.ISOPvPedIte_ValorCofins,
			ISOPVPEDITEM.ISOPvPedIte_PrecoAjustado,
			ISOPVPEDITEM.ISOPvPedIte_PrecoAjustadoTotal,
			ISOPVPEDITEM.ISOPvPedIte_ValorUnitario
		from
			ISOPVPEDIDO with (readpast)
				INNER JOIN ISOPVPEDITEM with (readpast)
				ON ISOPVPEDIDO.ISOEmp_Codigo = ISOPVPEDITEM.ISOEmp_Codigo
				AND ISOPVPEDIDO.ISOPvPed_Codigo = ISOPVPEDITEM.ISOPvPed_Codigo
		where ISOPVPEDIDO.ISOEmp_Codigo = 11
		and ISOPVPEDITEM.ISOPvPedIteSit_Codigo not in (9)
		AND ISOPVPEDIDO.ISOPvPedSit_Codigo IN (36)
	),
	unidade_medida as (
		select
			ISOEmp_Codigo,
			ISOPrdUndFatC_PrdCodigo,
			ISOPrdUndFatC_UndOrigem,
			ISOPrdUndFatC_UndDestino,
			ISOPrdUndFatC_Armazem,
			case
				when ISOPrdUndFatC_UndDestino = 'M' then 1 / ISOPrdUndFatC_FatorConversao
				else ISOPrdUndFatC_FatorConversao
			end ISOPrdUndFatC_FatorConversao,
			ISOPrdUndFatC_Flag
		from
			ISOPRDUNDFATORCONVERSAO with (readpast)
		where
			ISOEmp_Codigo = 11
			and ISOPrdUndFatC_Armazem = ''
			and ISOPrdUndFatC_Flag = 'A'
	)

select
	pedidos.isoemp_codigo,
	pedidos.isopvped_codigo,
	pedidos.ISOPvPed_Pagamento,
	pedidos.ISOPvCD_Estabelecimento,
	prazo_medio_cp.prazo_medio_cp,
	pedido_item.ISOPvPedIte_Codigo,
	clientes.cod_cliente,
	clientes.loja,
	coalesce(clientes.prazo_medio_cliente,0) as prazo_medio_cliente,
	pedidos.ISOPvPed_DataAlteracao,
	pedidos.ISOPvPed_DtaSolEntrega,
	pedidos.ISOPvPed_DtaPedido,
	pedidos.ISOPvPed_DtaAberPedido,
	clientes.limite_credito,
	total_contas_receber,
	ped_em_aberto,
	data_ultima_compra,
	data_titulo,
	pedidos.total_pedido,
	pedidos.ISOPvPed_CliCodigo,
	pedidos.ISOPvPedSit_Codigo,
	pedido_item.ISOPrd_Codigo,
	coalesce(USUARIOS.ISOENT_CODIGO,'') AS ISOPvPed_UsuarioAlteracao,
	coalesce(USUARIOS.ISOENT_NOME,'') AS ISOPvPed_NomeAlteracao,
	pedido_item.ISOPvPedIte_Quantidade,
	coalesce(pedido_item.ISOPvPedIte_PrecoAjustado,0) AS ISOPvPedIte_PrecoAjustado,
	coalesce(pedido_item.ISOPvPedIte_PrecoAjustadoTotal,0) AS ISOPvPedIte_PrecoAjustadoTotal,
	pedido_item.ISOPvPedIte_ValorUnitario,
	pedido_item.ISOPvPedIte_UnidadeOrigem,
	pedido_item.ISOPvPedIte_UnidadeDestino,
	unidade_medida.ISOPrdUndFatC_FatorConversao,
	coalesce(pedido_item.ISOPvPedIte_ValorPISST,0) as ISOPvPedIte_ValorPISST,
	coalesce(pedido_item.ISOPvPedIte_ValorCofinsST,0) as ISOPvPedIte_ValorCofinsST,
	coalesce(pedido_item.ISOPVPedIte_ValorFCPST,0) as ISOPVPedIte_ValorFCPST,
	coalesce(pedido_item.ISOPvPedIte_ValorFCP,0) as ISOPvPedIte_ValorFCP,
	coalesce(pedido_item.ISOPvPedIte_ValorIPI,0) as ISOPvPedIte_ValorIPI,
	coalesce(pedido_item.ISOPvPedIte_VlrSubsTributaria,0) as ISOPvPedIte_VlrSubsTributaria,
	coalesce(pedido_item.ISOPvPedIte_ValorICMS,0) as ISOPvPedIte_ValorICMS,
	coalesce(pedido_item.ISOPvPedIte_ValorPIS,0) as ISOPvPedIte_ValorPIS,
	coalesce(pedido_item.ISOPvPedIte_ValorCofins,0) as ISOPvPedIte_ValorCofins,
	pedidos.ISOPvPedOri_Codigo,
	pedidos.ISOPvPedTip_Codigo,
	--CASE
	--	WHEN (clientes.LIMITE_CREDITO - clientes.TOTAL_CONTAS_RECEBER - clientes.PED_EM_ABERTO) < pedidos.TOTAL_PEDIDO THEN 'LIMITE DE CREDITO EXCEDIDO'
	--	WHEN (DATEDIFF(DD,clientes.DATA_ULTIMA_COMPRA,GETDATE()) > 60) THEN 'SEM COMPRA A MAIS DE 60 DIAS'
	--	WHEN (DATEDIFF(DD,clientes.DATA_TITULO,GETDATE()) > 1) THEN 'TITULOS EM ABERTO'
	--	WHEN (prazo_medio_cp.PRAZO_MEDIO_CP > clientes.PRAZO_MEDIO_CLIENTE) THEN 'PRAZO MEDIO SUPERIOR AO AUTORIZADO'
	--	ELSE ''
	--END

	CASE
		WHEN (clientes.LIMITE_CREDITO - clientes.TOTAL_CONTAS_RECEBER - clientes.PED_EM_ABERTO) < pedidos.TOTAL_PEDIDO THEN 'LIMITE DE CREDITO EXCEDIDO' + ', '
		ELSE ''
	END +
	CASE
		WHEN (DATEDIFF(DD,clientes.DATA_ULTIMA_COMPRA,GETDATE()) > 60) THEN 'SEM COMPRA A MAIS DE 60 DIAS' + ', '
		ELSE ''
	END +
	CASE
		WHEN (DATEDIFF(DD,clientes.DATA_TITULO,GETDATE()) > 1) THEN 'TITULOS EM ABERTO' + ', '
		ELSE ''
	END +
	CASE
		WHEN (prazo_medio_cp.PRAZO_MEDIO_CP > clientes.PRAZO_MEDIO_CLIENTE) THEN 'PRAZO MEDIO SUPERIOR AO AUTORIZADO'
		ELSE ''
	END
	AS SITUACAO
	from prazo_medio_cp
		inner join pedidos
			on prazo_medio_cp.isoemp_codigo = pedidos.isoemp_codigo
			and prazo_medio_cp.ISOPvEstab_Codigo = pedidos.ISOPvCD_Estabelecimento
			and prazo_medio_cp.ISOPvTV_Codigo = pedidos.ISOPvPed_Pagamento
			and pedidos.ISOEmp_Codigo = 11
		INNER JOIN CLIENTES
			on clientes.cod_cliente + clientes.loja = pedidos.ISOEmpEnt_Ori_Codigo
		inner join pedido_item
			on pedidos.isoemp_codigo = pedido_item.isoemp_codigo
			and pedidos.isopvped_codigo = pedido_item.isopvped_codigo
		inner join unidade_medida
			on pedido_item.ISOEmp_Codigo = unidade_medida.ISOEmp_Codigo
			and pedido_item.ISOPrd_Codigo = unidade_medida.ISOPrdUndFatC_PrdCodigo
			and pedido_item.ISOPvPedIte_UnidadeOrigem = unidade_medida.ISOPrdUndFatC_UndOrigem
			and pedido_item.ISOPvPedIte_UnidadeDestino = unidade_medida.ISOPrdUndFatC_UndDestino
		LEFT OUTER JOIN USUARIOS
			ON PEDIDOS.ISOPvPed_UsuarioAlteracao = USUARIOS.ISOENT_CODIGO;


-- dbo.GATILHO_AD01_NEGOCIACAO source

CREATE VIEW [dbo].[GATILHO_AD01_NEGOCIACAO]
AS
SELECT ISOEMP_CODIGO, ISOPVPED_CODIGO, DBO.DATAISO2() AS ISOPvPed_DataAlteracao
FROM ISOPVPEDIDO WITH (NOLOCK)
WHERE
	ISOEMP_CODIGO = 11
	AND ISOPVPEDSIT_CODIGO = 14;


-- dbo.GATILHO_BIONEXO_CLIENTES_NAO_CONFIGURADOS source

CREATE VIEW [dbo].[GATILHO_BIONEXO_CLIENTES_NAO_CONFIGURADOS]
AS
SELECT DISTINCT B.ISOEMP_CODIGO, B.ISOBP_Id_Pdc AS ISOBP_ID_PDC ,'A' FLAG, CAST(CONVERT(CHAR , GETDATE(), 120) AS DATETIME) DATA
FROM ISOBIONEXOPEDIDO B
WHERE     B.ISOEMP_CODIGO = 11
AND ISOBP_DATAHORA_VENCIMENTO >= GETDATE()
and ISOBP_ISOEntOrg_Codigo not in (select ISOEntUsu_Codigo from ISOENTUSUARIO where ISOEmp_Codigo = 11)

/*
SELECT DISTINCT B.ISOEMP_CODIGO, B.ISOBP_Id_Pdc AS ISOBP_ID_PDC ,'A' FLAG, CAST(CONVERT(CHAR , GETDATE(), 120) AS DATETIME) DATA
FROM ISOBIONEXOPEDIDO B INNER JOIN
	ISOENTUSUARIO ON ISOENTUSUARIO.ISOEmp_Codigo = B.ISOEmp_Codigo AND ISOENTUSUARIO.ISOEntUsu_Codigo = B.ISOBP_ISOEntOrg_Codigo INNER JOIN
	ISOEMPORIGEM ON ISOENTUSUARIO.ISOEmp_Codigo = ISOEMPORIGEM.ISOEmp_Codigo AND ISOENTUSUARIO.ISOEntUsu_Codigo = ISOEMPORIGEM.ISOEntUsu_Codigo LEFT JOIN
	ISOINTDEPARA ON ISOEMPORIGEM.ISOEmp_Codigo = ISOINTDEPARA.ISOEmp_Codigo AND ISOEMPORIGEM.ISOEmpOri_Codigo = ISOINTDEPARA.ISOEmpOri_Codigo
WHERE     (ISOINTDEPARA.ISOEmp_Codigo IS NULL)
AND ISOBP_DATAHORA_VENCIMENTO >= GETDATE()
*/;


-- dbo.GATILHO_C08_COORD_PROD_GIANE source

CREATE VIEW [dbo].[GATILHO_C08_COORD_PROD_GIANE]
AS
SELECT ISOEMP_CODIGO, ISOPVPED_CODIGO
FROM [GATILHO_C08_IDENTIFICA_RESPONSAVEL_DISPARO_WF] WITH (NOLOCK)
GROUP BY ISOEMP_CODIGO, ISOPVPED_CODIGO, PRIORIDADE
HAVING MIN(ISOPVPEDITE_MARSPCODIGO) = 1039097;


-- dbo.GATILHO_C08_COORD_PROD_RICARDO source

CREATE VIEW [dbo].[GATILHO_C08_COORD_PROD_RICARDO]
AS
SELECT ISOEMP_CODIGO, ISOPVPED_CODIGO
FROM [GATILHO_C08_IDENTIFICA_RESPONSAVEL_DISPARO_WF] WITH (NOLOCK)
GROUP BY ISOEMP_CODIGO, ISOPVPED_CODIGO, PRIORIDADE
HAVING MIN(ISOPVPEDITE_MARSPCODIGO) = 894928;


-- dbo.GATILHO_C08_COORD_PROD_SIMONE source

CREATE VIEW [dbo].[GATILHO_C08_COORD_PROD_SIMONE]
AS
SELECT ISOEMP_CODIGO, ISOPVPED_CODIGO
FROM [GATILHO_C08_IDENTIFICA_RESPONSAVEL_DISPARO_WF] WITH (NOLOCK)
GROUP BY ISOEMP_CODIGO, ISOPVPED_CODIGO, PRIORIDADE
HAVING MIN(ISOPVPEDITE_MARSPCODIGO) = 1037318;


-- dbo.GATILHO_C08_COORD_PROD_SUELY source

CREATE VIEW [dbo].[GATILHO_C08_COORD_PROD_SUELY]
AS
SELECT ISOEMP_CODIGO, ISOPVPED_CODIGO
FROM [GATILHO_C08_IDENTIFICA_RESPONSAVEL_DISPARO_WF] WITH(NOLOCK)
GROUP BY ISOEMP_CODIGO, ISOPVPED_CODIGO, PRIORIDADE
HAVING MIN(ISOPVPEDITE_MARSPCODIGO) = 1037317;


-- dbo.GATILHO_C08_DIRETOR_HOSP_SUL_NE source

CREATE VIEW [dbo].[GATILHO_C08_DIRETOR_HOSP_SUL_NE]
AS
SELECT ISOEMP_CODIGO, ISOPVPED_CODIGO, DBO.DATAISO2() AS ISOPvPed_DataAlteracao
FROM [GATILHO_C08_IDENTIFICA_RESPONSAVEL_DISPARO_WF] WITH (NOLOCK)
GROUP BY ISOEMP_CODIGO, ISOPVPED_CODIGO, PRIORIDADE
HAVING MIN(ISOPVPEDITE_MARSPCODIGO) = 977763;


-- dbo.GATILHO_C08_GERENTE_HOSP_SUL_NE source

CREATE VIEW [dbo].[GATILHO_C08_GERENTE_HOSP_SUL_NE]
AS
SELECT ISOEMP_CODIGO, ISOPVPED_CODIGO, DBO.DATAISO2() AS ISOPvPed_DataAlteracao
FROM [GATILHO_C08_IDENTIFICA_RESPONSAVEL_DISPARO_WF] WITH (NOLOCK)
GROUP BY ISOEMP_CODIGO, ISOPVPED_CODIGO, PRIORIDADE
HAVING MIN(ISOPVPEDITE_MARSPCODIGO) = 977756;


-- dbo.GATILHO_C08_IDENTIFICA_RESPONSAVEL_DISPARO_WF source

CREATE VIEW [dbo].[GATILHO_C08_IDENTIFICA_RESPONSAVEL_DISPARO_WF]
as
select distinct x.isoemp_codigo, x.isopvped_codigo, x.isopvpedite_macodigo, x.isopvpedite_marspcodigo, y.prioridade from isopvpeditem  x, CREMER_PRIORIDADE_PAPEL_ALCADA y
where
x.isoemp_codigo = y.isoemp_codigo
and x.isopvpedite_macodigo = y.isopvma_codigo
and x.isopvpedite_marspcodigo = y.isopvmap_rspcodigo
and exists
(select b.ISOEmp_Codigo,a.isopvped_codigo, max(b.prioridade)
from isopvpeditem a, CREMER_PRIORIDADE_PAPEL_ALCADA b, isopvpedido c, ISOPVMATRIZALCADA d WITH (NOLOCK)
where
a.isoemp_codigo = b.isoemp_codigo
and a.isoemp_codigo = c.isoemp_codigo
and a.isopvped_codigo = c.isopvped_codigo
and a.isopvpedite_macodigo = b.isopvma_codigo
and a.isopvpedite_marspcodigo = b.isopvmap_rspcodigo
and c.isoemp_codigo = d.ISOEMP_CODIGO
and c.ISOPvPed_MACodigo = d.ISOPVMA_CODIGO
and d.ISOPVMACLA_CODIGO = 8
and c.isopvpedsit_codigo = 19
and a.isopvpeditesit_codigo = 1
and a.isoemp_codigo = 11
--and a.isopvped_codigo = 4917140
and a.isoemp_codigo = x.isoemp_codigo
and a.isopvped_codigo = x.isopvped_codigo
group by b.ISOEmp_Codigo,a.isopvped_codigo
having max(b.prioridade) = y.prioridade);


-- dbo.GATILHO_C09_COORD_PROD_GIANE source

CREATE VIEW [dbo].[GATILHO_C09_COORD_PROD_GIANE]
AS
SELECT 11 ISOEMP_CODIGO, ISOPVPED_CODIGO, 'A' FLAG, CAST(CONVERT(CHAR , GETDATE(), 120) AS DATETIME) DATA
FROM ISOPVPEDIDO ISOPED CROSS APPLY
(SELECT ISOEMP_CODIGO, ISOPVPED_CODIGO, PRIORIDADE
FROM [GATILHO_C09_IDENTIFICA_RESPONSAVEL_DISPARO_WF] WF WITH (NOLOCK)
GROUP BY ISOEMP_CODIGO, ISOPVPED_CODIGO, PRIORIDADE
HAVING MIN(ISOPVPEDITE_MARSPCODIGO) = 1039097) AS DUMMY (EMPRESA, PEDIDO, PRIORIDADE)
WHERE
ISOEMP_CODIGO = EMPRESA
AND ISOPVPED_CODIGO = PEDIDO;


-- dbo.GATILHO_C09_COORD_PROD_RICARDO source

CREATE VIEW [dbo].[GATILHO_C09_COORD_PROD_RICARDO]
AS
SELECT 11 ISOEMP_CODIGO, ISOPVPED_CODIGO, 'A' FLAG, CAST(CONVERT(CHAR , GETDATE(), 120) AS DATETIME) DATA
FROM ISOPVPEDIDO ISOPED CROSS APPLY
(SELECT ISOEMP_CODIGO, ISOPVPED_CODIGO, PRIORIDADE
FROM [GATILHO_C09_IDENTIFICA_RESPONSAVEL_DISPARO_WF] WF WITH (NOLOCK)
GROUP BY ISOEMP_CODIGO, ISOPVPED_CODIGO, PRIORIDADE
HAVING MIN(ISOPVPEDITE_MARSPCODIGO) = 894928) AS DUMMY (EMPRESA, PEDIDO, PRIORIDADE)
WHERE
ISOEMP_CODIGO = EMPRESA
AND ISOPVPED_CODIGO = PEDIDO;


-- dbo.GATILHO_C09_COORD_PROD_SIMONE source

CREATE VIEW [dbo].[GATILHO_C09_COORD_PROD_SIMONE]
AS
SELECT 11 ISOEMP_CODIGO, ISOPVPED_CODIGO, 'A' FLAG, CAST(CONVERT(CHAR , GETDATE(), 120) AS DATETIME) DATA
FROM ISOPVPEDIDO ISOPED CROSS APPLY
(SELECT ISOEMP_CODIGO, ISOPVPED_CODIGO, PRIORIDADE
FROM [GATILHO_C09_IDENTIFICA_RESPONSAVEL_DISPARO_WF] WF WITH (NOLOCK)
GROUP BY ISOEMP_CODIGO, ISOPVPED_CODIGO, PRIORIDADE
HAVING MIN(ISOPVPEDITE_MARSPCODIGO) = 1037318) AS DUMMY (EMPRESA, PEDIDO, PRIORIDADE)
WHERE
ISOEMP_CODIGO = EMPRESA
AND ISOPVPED_CODIGO = PEDIDO;


-- dbo.GATILHO_C09_COORD_PROD_SUELY source

CREATE VIEW [dbo].[GATILHO_C09_COORD_PROD_SUELY]
AS
SELECT 11 ISOEMP_CODIGO, ISOPVPED_CODIGO, 'A' FLAG, CAST(CONVERT(CHAR , GETDATE(), 120) AS DATETIME) DATA
FROM ISOPVPEDIDO ISOPED CROSS APPLY
(SELECT ISOEMP_CODIGO, ISOPVPED_CODIGO, PRIORIDADE
FROM [GATILHO_C09_IDENTIFICA_RESPONSAVEL_DISPARO_WF] WF WITH (NOLOCK)
GROUP BY ISOEMP_CODIGO, ISOPVPED_CODIGO, PRIORIDADE
HAVING MIN(ISOPVPEDITE_MARSPCODIGO) = 1037317) AS DUMMY (EMPRESA, PEDIDO, PRIORIDADE)
WHERE
ISOEMP_CODIGO = EMPRESA
AND ISOPVPED_CODIGO = PEDIDO;


-- dbo.GATILHO_C09_DIRETOR_HOSPITALAR_SP source

CREATE VIEW [dbo].[GATILHO_C09_DIRETOR_HOSPITALAR_SP]
AS
SELECT 11 ISOEMP_CODIGO, ISOPVPED_CODIGO, 'A' FLAG, CAST(CONVERT(CHAR , GETDATE(), 120) AS DATETIME) DATA, DBO.DATAISO2() AS ISOPvPed_DataAlteracao
FROM ISOPVPEDIDO ISOPED CROSS APPLY
(SELECT ISOEMP_CODIGO, ISOPVPED_CODIGO, PRIORIDADE
FROM [GATILHO_C09_IDENTIFICA_RESPONSAVEL_DISPARO_WF] WF WITH (NOLOCK)
GROUP BY ISOEMP_CODIGO, ISOPVPED_CODIGO, PRIORIDADE
HAVING MIN(ISOPVPEDITE_MARSPCODIGO) = 977763) AS DUMMY (EMPRESA, PEDIDO, PRIORIDADE)
WHERE
ISOEMP_CODIGO = EMPRESA
AND ISOPVPED_CODIGO = PEDIDO;


-- dbo.GATILHO_C09_GERENTE_REGIONAL_HOSPITALAR_SP source

CREATE VIEW [dbo].[GATILHO_C09_GERENTE_REGIONAL_HOSPITALAR_SP]
AS
SELECT 11 ISOEMP_CODIGO, ISOPVPED_CODIGO, 'A' FLAG, CAST(CONVERT(CHAR , GETDATE(), 120) AS DATETIME) DATA, DBO.DATAISO2() AS ISOPvPed_DataAlteracao
FROM ISOPVPEDIDO ISOPED CROSS APPLY
(SELECT ISOEMP_CODIGO, ISOPVPED_CODIGO, PRIORIDADE
FROM [GATILHO_C09_IDENTIFICA_RESPONSAVEL_DISPARO_WF] WF WITH (NOLOCK)
GROUP BY ISOEMP_CODIGO, ISOPVPED_CODIGO, PRIORIDADE
HAVING MIN(ISOPVPEDITE_MARSPCODIGO) = 977757) AS DUMMY (EMPRESA, PEDIDO, PRIORIDADE)
WHERE
ISOEMP_CODIGO = EMPRESA
AND ISOPVPED_CODIGO = PEDIDO;


-- dbo.GATILHO_C09_IDENTIFICA_RESPONSAVEL_DISPARO_WF source

CREATE VIEW [dbo].[GATILHO_C09_IDENTIFICA_RESPONSAVEL_DISPARO_WF]
as
select distinct x.isoemp_codigo, x.isopvped_codigo, x.isopvpedite_macodigo, x.isopvpedite_marspcodigo, y.prioridade
from isopvpeditem  x, CREMER_PRIORIDADE_PAPEL_ALCADA y WITH (NOLOCK)
where
x.isoemp_codigo = y.isoemp_codigo
and x.isopvpedite_macodigo = y.isopvma_codigo
and x.isopvpedite_marspcodigo = y.isopvmap_rspcodigo
and exists
(select b.ISOEmp_Codigo,a.isopvped_codigo, max(b.prioridade)
from isopvpeditem a, CREMER_PRIORIDADE_PAPEL_ALCADA b, isopvpedido c, ISOPVMATRIZALCADA d WITH (NOLOCK)
where
a.isoemp_codigo = b.isoemp_codigo
and a.isoemp_codigo = c.isoemp_codigo
and a.isopvped_codigo = c.isopvped_codigo
and a.isopvpedite_macodigo = b.isopvma_codigo
and a.isopvpedite_marspcodigo = b.isopvmap_rspcodigo
and c.isoemp_codigo = d.ISOEMP_CODIGO
and c.ISOPvPed_MACodigo = d.ISOPVMA_CODIGO
and d.ISOPVMACLA_CODIGO = 9
and c.isopvpedsit_codigo = 19
and a.isopvpeditesit_codigo = 1
and a.isoemp_codigo = 11
--and a.isopvped_codigo = 4917140
and a.isoemp_codigo = x.isoemp_codigo
and a.isopvped_codigo = x.isopvped_codigo
group by b.ISOEmp_Codigo,a.isopvped_codigo
having max(b.prioridade) = y.prioridade);


-- dbo.GATILHO_C10_COORD_PROD_GIANE source

CREATE VIEW [dbo].[GATILHO_C10_COORD_PROD_GIANE]
AS
SELECT 11 ISOEMP_CODIGO, ISOPVPED_CODIGO, 'A' FLAG, CAST(CONVERT(CHAR , GETDATE(), 120) AS DATETIME) DATA
FROM ISOPVPEDIDO ISOPED CROSS APPLY
(SELECT ISOEMP_CODIGO, ISOPVPED_CODIGO, PRIORIDADE
FROM [GATILHO_C10_IDENTIFICA_RESPONSAVEL_DISPARO_WF] WF WITH (NOLOCK)
GROUP BY ISOEMP_CODIGO, ISOPVPED_CODIGO, PRIORIDADE
HAVING MIN(ISOPVPEDITE_MARSPCODIGO) = 1039097) AS DUMMY (EMPRESA, PEDIDO, PRIORIDADE)
WHERE
ISOEMP_CODIGO = EMPRESA
AND ISOPVPED_CODIGO = PEDIDO;


-- dbo.GATILHO_C10_COORD_PROD_RICARDO source

CREATE VIEW [dbo].[GATILHO_C10_COORD_PROD_RICARDO]
AS
SELECT 11 ISOEMP_CODIGO, ISOPVPED_CODIGO, 'A' FLAG, CAST(CONVERT(CHAR , GETDATE(), 120) AS DATETIME) DATA
FROM ISOPVPEDIDO ISOPED CROSS APPLY
(SELECT ISOEMP_CODIGO, ISOPVPED_CODIGO, PRIORIDADE
FROM [GATILHO_C10_IDENTIFICA_RESPONSAVEL_DISPARO_WF] WF WITH (NOLOCK)
GROUP BY ISOEMP_CODIGO, ISOPVPED_CODIGO, PRIORIDADE
HAVING MIN(ISOPVPEDITE_MARSPCODIGO) = 894928) AS DUMMY (EMPRESA, PEDIDO, PRIORIDADE)
WHERE
ISOEMP_CODIGO = EMPRESA
AND ISOPVPED_CODIGO = PEDIDO;


-- dbo.GATILHO_C10_COORD_PROD_SIMONE source

CREATE VIEW [dbo].[GATILHO_C10_COORD_PROD_SIMONE]
AS
SELECT 11 ISOEMP_CODIGO, ISOPVPED_CODIGO, 'A' FLAG, CAST(CONVERT(CHAR , GETDATE(), 120) AS DATETIME) DATA
FROM ISOPVPEDIDO ISOPED CROSS APPLY
(SELECT ISOEMP_CODIGO, ISOPVPED_CODIGO, PRIORIDADE
FROM [GATILHO_C10_IDENTIFICA_RESPONSAVEL_DISPARO_WF] WF WITH (NOLOCK)
GROUP BY ISOEMP_CODIGO, ISOPVPED_CODIGO, PRIORIDADE
HAVING MIN(ISOPVPEDITE_MARSPCODIGO) = 1037318) AS DUMMY (EMPRESA, PEDIDO, PRIORIDADE)
WHERE
ISOEMP_CODIGO = EMPRESA
AND ISOPVPED_CODIGO = PEDIDO;


-- dbo.GATILHO_C10_COORD_PROD_SUELY source

CREATE VIEW [dbo].[GATILHO_C10_COORD_PROD_SUELY]
AS
SELECT 11 ISOEMP_CODIGO, ISOPVPED_CODIGO, 'A' FLAG, CAST(CONVERT(CHAR , GETDATE(), 120) AS DATETIME) DATA
FROM ISOPVPEDIDO ISOPED CROSS APPLY
(SELECT ISOEMP_CODIGO, ISOPVPED_CODIGO, PRIORIDADE
FROM [GATILHO_C10_IDENTIFICA_RESPONSAVEL_DISPARO_WF] WF WITH (NOLOCK)
GROUP BY ISOEMP_CODIGO, ISOPVPED_CODIGO, PRIORIDADE
HAVING MIN(ISOPVPEDITE_MARSPCODIGO) = 1037317) AS DUMMY (EMPRESA, PEDIDO, PRIORIDADE)
WHERE
ISOEMP_CODIGO = EMPRESA
AND ISOPVPED_CODIGO = PEDIDO;


-- dbo.GATILHO_C10_DIRETOR_HOSPITALAR_RJMGESCONO source

CREATE VIEW [dbo].[GATILHO_C10_DIRETOR_HOSPITALAR_RJMGESCONO]
AS
SELECT 11 ISOEMP_CODIGO, ISOPVPED_CODIGO, 'A' FLAG, CAST(CONVERT(CHAR , GETDATE(), 120) AS DATETIME) DATA, DBO.DATAISO2() AS ISOPvPed_DataAlteracao
FROM ISOPVPEDIDO ISOPED CROSS APPLY
(SELECT ISOEMP_CODIGO, ISOPVPED_CODIGO, PRIORIDADE
FROM [GATILHO_C10_IDENTIFICA_RESPONSAVEL_DISPARO_WF] WF WITH (NOLOCK)
GROUP BY ISOEMP_CODIGO, ISOPVPED_CODIGO, PRIORIDADE
HAVING MIN(ISOPVPEDITE_MARSPCODIGO) = 977763) AS DUMMY (EMPRESA, PEDIDO, PRIORIDADE)
WHERE
ISOEMP_CODIGO = EMPRESA
AND ISOPVPED_CODIGO = PEDIDO;


-- dbo.GATILHO_C10_GERENTE_HOSPITALAR_RJMGESCONO source

CREATE VIEW [dbo].[GATILHO_C10_GERENTE_HOSPITALAR_RJMGESCONO]
AS
SELECT 11 ISOEMP_CODIGO, ISOPVPED_CODIGO, 'A' FLAG, CAST(CONVERT(CHAR , GETDATE(), 120) AS DATETIME) DATA, DBO.DATAISO2() AS ISOPvPed_DataAlteracao
FROM ISOPVPEDIDO ISOPED CROSS APPLY
(SELECT ISOEMP_CODIGO, ISOPVPED_CODIGO, PRIORIDADE
FROM [GATILHO_C10_IDENTIFICA_RESPONSAVEL_DISPARO_WF] WF WITH (NOLOCK)
GROUP BY ISOEMP_CODIGO, ISOPVPED_CODIGO, PRIORIDADE
HAVING MIN(ISOPVPEDITE_MARSPCODIGO) = 977760) AS DUMMY (EMPRESA, PEDIDO, PRIORIDADE)
WHERE
ISOEMP_CODIGO = EMPRESA
AND ISOPVPED_CODIGO = PEDIDO;


-- dbo.GATILHO_C10_IDENTIFICA_RESPONSAVEL_DISPARO_WF source

CREATE VIEW [dbo].[GATILHO_C10_IDENTIFICA_RESPONSAVEL_DISPARO_WF]
as
select distinct x.isoemp_codigo, x.isopvped_codigo, x.isopvpedite_macodigo, x.isopvpedite_marspcodigo, y.prioridade from isopvpeditem  x, CREMER_PRIORIDADE_PAPEL_ALCADA y
where
x.isoemp_codigo = y.isoemp_codigo
and x.isopvpedite_macodigo = y.isopvma_codigo
and x.isopvpedite_marspcodigo = y.isopvmap_rspcodigo
and exists
(select b.ISOEmp_Codigo,a.isopvped_codigo, max(b.prioridade)
from isopvpeditem a, CREMER_PRIORIDADE_PAPEL_ALCADA b, isopvpedido c, ISOPVMATRIZALCADA d
where
a.isoemp_codigo = b.isoemp_codigo
and a.isoemp_codigo = c.isoemp_codigo
and a.isopvped_codigo = c.isopvped_codigo
and a.isopvpedite_macodigo = b.isopvma_codigo
and a.isopvpedite_marspcodigo = b.isopvmap_rspcodigo
and c.isoemp_codigo = d.ISOEMP_CODIGO
and c.ISOPvPed_MACodigo = d.ISOPVMA_CODIGO
and d.ISOPVMACLA_CODIGO = 10
and c.isopvpedsit_codigo = 19
and a.isopvpeditesit_codigo = 1
and a.isoemp_codigo = 11
--and a.isopvped_codigo = 4917140
and a.isoemp_codigo = x.isoemp_codigo
and a.isopvped_codigo = x.isopvped_codigo
group by b.ISOEmp_Codigo,a.isopvped_codigo
having max(b.prioridade) = y.prioridade);


-- dbo.GATILHO_C11_DIRETOR_HOSPITALAR_NONE source

CREATE VIEW [dbo].[GATILHO_C11_DIRETOR_HOSPITALAR_NONE]
AS
SELECT 11 ISOEMP_CODIGO, ISOPVPED_CODIGO, 'A' FLAG, CAST(CONVERT(CHAR , GETDATE(), 120) AS DATETIME) DATA
FROM ISOPVPEDIDO ISOPED CROSS APPLY
(SELECT ISOEMP_CODIGO, ISOPVPED_CODIGO, PRIORIDADE
FROM [GATILHO_C11_IDENTIFICA_RESPONSAVEL_DISPARO_WF] WF WITH (NOLOCK)
GROUP BY ISOEMP_CODIGO, ISOPVPED_CODIGO, PRIORIDADE
HAVING MIN(ISOPVPEDITE_MARSPCODIGO) = 977763) AS DUMMY (EMPRESA, PEDIDO, PRIORIDADE)
WHERE
ISOEMP_CODIGO = EMPRESA
AND ISOPVPED_CODIGO = PEDIDO;


-- dbo.GATILHO_C11_GERENTE_HOSPITALAR_NONE source

CREATE VIEW [dbo].[GATILHO_C11_GERENTE_HOSPITALAR_NONE]
AS
SELECT 11 ISOEMP_CODIGO, ISOPVPED_CODIGO, 'A' FLAG, CAST(CONVERT(CHAR , GETDATE(), 120) AS DATETIME) DATA
FROM ISOPVPEDIDO ISOPED CROSS APPLY
(SELECT ISOEMP_CODIGO, ISOPVPED_CODIGO, PRIORIDADE
FROM [GATILHO_C11_IDENTIFICA_RESPONSAVEL_DISPARO_WF] WF WITH (NOLOCK)
GROUP BY ISOEMP_CODIGO, ISOPVPED_CODIGO, PRIORIDADE
HAVING MIN(ISOPVPEDITE_MARSPCODIGO) = 1049974) AS DUMMY (EMPRESA, PEDIDO, PRIORIDADE)
WHERE
ISOEMP_CODIGO = EMPRESA
AND ISOPVPED_CODIGO = PEDIDO;


-- dbo.GATILHO_C11_IDENTIFICA_RESPONSAVEL_DISPARO_WF source

CREATE VIEW [dbo].[GATILHO_C11_IDENTIFICA_RESPONSAVEL_DISPARO_WF]
as
select distinct x.isoemp_codigo, x.isopvped_codigo, x.isopvpedite_macodigo, x.isopvpedite_marspcodigo, y.prioridade
from isopvpeditem  x, CREMER_PRIORIDADE_PAPEL_ALCADA y WITH (NOLOCK)
where
x.isoemp_codigo = y.isoemp_codigo
and x.isopvpedite_macodigo = y.isopvma_codigo
and x.isopvpedite_marspcodigo = y.isopvmap_rspcodigo
and exists
(select b.ISOEmp_Codigo,a.isopvped_codigo, max(b.prioridade)
from isopvpeditem a, CREMER_PRIORIDADE_PAPEL_ALCADA b, isopvpedido c, ISOPVMATRIZALCADA d WITH (NOLOCK)
where
a.isoemp_codigo = b.isoemp_codigo
and a.isoemp_codigo = c.isoemp_codigo
and a.isopvped_codigo = c.isopvped_codigo
and a.isopvpedite_macodigo = b.isopvma_codigo
and a.isopvpedite_marspcodigo = b.isopvmap_rspcodigo
and c.isoemp_codigo = d.ISOEMP_CODIGO
and c.ISOPvPed_MACodigo = d.ISOPVMA_CODIGO
and d.ISOPVMACLA_CODIGO = 11
and c.isopvpedsit_codigo = 19
and a.isopvpeditesit_codigo = 1
and a.isoemp_codigo = 11
--and a.isopvped_codigo = 4917140
and a.isoemp_codigo = x.isoemp_codigo
and a.isopvped_codigo = x.isopvped_codigo
group by b.ISOEmp_Codigo,a.isopvped_codigo
having max(b.prioridade) = y.prioridade);


-- dbo.GATILHO_C12_C13_IDENTIFICA_RESPONSAVEL_DISPARO_WF source

CREATE VIEW [dbo].[GATILHO_C12_C13_IDENTIFICA_RESPONSAVEL_DISPARO_WF]
as
select distinct x.isoemp_codigo, x.isopvped_codigo, x.isopvpedite_macodigo, x.isopvpedite_marspcodigo, y.prioridade
from isopvpeditem  x, CREMER_PRIORIDADE_PAPEL_ALCADA y WITH (NOLOCK)
where
x.isoemp_codigo = y.isoemp_codigo
and x.isopvpedite_macodigo = y.isopvma_codigo
and x.isopvpedite_marspcodigo = y.isopvmap_rspcodigo
and exists
(select b.ISOEmp_Codigo,a.isopvped_codigo, max(b.prioridade)
from isopvpeditem a, CREMER_PRIORIDADE_PAPEL_ALCADA b, isopvpedido c, ISOPVMATRIZALCADA d WITH (NOLOCK)
where
a.isoemp_codigo = b.isoemp_codigo
and a.isoemp_codigo = c.isoemp_codigo
and a.isopvped_codigo = c.isopvped_codigo
and a.isopvpedite_macodigo = b.isopvma_codigo
and a.isopvpedite_marspcodigo = b.isopvmap_rspcodigo
and c.isoemp_codigo = d.ISOEMP_CODIGO
and c.ISOPvPed_MACodigo = d.ISOPVMA_CODIGO
and d.ISOPVMACLA_CODIGO in (12,13)
and c.isopvpedsit_codigo = 19
and a.isopvpeditesit_codigo = 1
and a.isoemp_codigo = 11
--and a.isopvped_codigo = 4917140
and a.isoemp_codigo = x.isoemp_codigo
and a.isopvped_codigo = x.isopvped_codigo
group by b.ISOEmp_Codigo,a.isopvped_codigo
having max(b.prioridade) = y.prioridade);


-- dbo.GATILHO_C12_C13_SUPERVISOR_CALLCENTER_HOSP source

CREATE VIEW [dbo].[GATILHO_C12_C13_SUPERVISOR_CALLCENTER_HOSP]
AS
SELECT 11 ISOEMP_CODIGO, ISOPVPED_CODIGO, 'A' FLAG, CAST(CONVERT(CHAR , GETDATE(), 120) AS DATETIME) DATA
FROM ISOPVPEDIDO ISOPED WITH (NOLOCK) CROSS APPLY
(SELECT ISOEMP_CODIGO, ISOPVPED_CODIGO, PRIORIDADE
FROM [GATILHO_C12_C13_IDENTIFICA_RESPONSAVEL_DISPARO_WF] WF WITH (NOLOCK)
GROUP BY ISOEMP_CODIGO, ISOPVPED_CODIGO, PRIORIDADE
HAVING MIN(ISOPVPEDITE_MARSPCODIGO) = 1049963) AS DUMMY (EMPRESA, PEDIDO, PRIORIDADE)
WHERE
ISOEMP_CODIGO = EMPRESA
AND ISOPVPED_CODIGO = PEDIDO;


-- dbo.GATILHO_C14_IDENTIFICA_RESPONSAVEL_DISPARO_WF source

CREATE VIEW [dbo].[GATILHO_C14_IDENTIFICA_RESPONSAVEL_DISPARO_WF]
as
select distinct x.isoemp_codigo, x.isopvped_codigo, x.isopvpedite_macodigo, x.isopvpedite_marspcodigo, y.prioridade
from isopvpeditem  x, CREMER_PRIORIDADE_PAPEL_ALCADA y WITH (NOLOCK)
where
x.isoemp_codigo = y.isoemp_codigo
and x.isopvpedite_macodigo = y.isopvma_codigo
and x.isopvpedite_marspcodigo = y.isopvmap_rspcodigo
and exists
(select b.ISOEmp_Codigo,a.isopvped_codigo, max(b.prioridade)
from isopvpeditem a, CREMER_PRIORIDADE_PAPEL_ALCADA b, isopvpedido c, ISOPVMATRIZALCADA d WITH (NOLOCK)
where
a.isoemp_codigo = b.isoemp_codigo
and a.isoemp_codigo = c.isoemp_codigo
and a.isopvped_codigo = c.isopvped_codigo
and a.isopvpedite_macodigo = b.isopvma_codigo
and a.isopvpedite_marspcodigo = b.isopvmap_rspcodigo
and c.isoemp_codigo = d.ISOEMP_CODIGO
and c.ISOPvPed_MACodigo = d.ISOPVMA_CODIGO
and d.ISOPVMACLA_CODIGO IN (14)
and c.isopvpedsit_codigo = 19
and a.isopvpeditesit_codigo = 1
and a.isoemp_codigo = 11
--and a.isopvped_codigo = 7672653
and a.isoemp_codigo = x.isoemp_codigo
and a.isopvped_codigo = x.isopvped_codigo
group by b.ISOEmp_Codigo,a.isopvped_codigo
having max(b.prioridade) = y.prioridade);


-- dbo.GATILHO_C14_SUPERVISOR_CALLCENTER_CONSUMO source

CREATE VIEW [dbo].[GATILHO_C14_SUPERVISOR_CALLCENTER_CONSUMO]
AS
SELECT 11 ISOEMP_CODIGO, ISOPVPED_CODIGO, 'A' FLAG, CAST(CONVERT(CHAR , GETDATE(), 120) AS DATETIME) DATA, DBO.DATAISO2() AS ISOPvPed_DataAlteracao
FROM ISOPVPEDIDO ISOPED WITH (NOLOCK) CROSS APPLY
(SELECT ISOEMP_CODIGO, ISOPVPED_CODIGO, PRIORIDADE
FROM [GATILHO_C14_IDENTIFICA_RESPONSAVEL_DISPARO_WF] WF WITH (NOLOCK)
GROUP BY ISOEMP_CODIGO, ISOPVPED_CODIGO, PRIORIDADE
HAVING MIN(ISOPVPEDITE_MARSPCODIGO) IN (1053934)) AS DUMMY (EMPRESA, PEDIDO, PRIORIDADE)
WHERE
ISOEMP_CODIGO = EMPRESA
AND ISOPVPED_CODIGO = PEDIDO;


-- dbo.GATILHO_C20_IDENTIFICA_RESPONSAVEL_DISPARO_WF source

CREATE VIEW [dbo].[GATILHO_C20_IDENTIFICA_RESPONSAVEL_DISPARO_WF]
as
select distinct x.isoemp_codigo, x.isopvped_codigo, x.isopvpedite_macodigo, x.isopvpedite_marspcodigo, y.prioridade
from isopvpeditem  x, CREMER_PRIORIDADE_PAPEL_ALCADA y WITH (NOLOCK)
where
x.isoemp_codigo = y.isoemp_codigo
and x.isopvpedite_macodigo = y.isopvma_codigo
and x.isopvpedite_marspcodigo = y.isopvmap_rspcodigo
and exists
(select b.ISOEmp_Codigo,a.isopvped_codigo, max(b.prioridade)
from isopvpeditem a, CREMER_PRIORIDADE_PAPEL_ALCADA b, isopvpedido c, ISOPVMATRIZALCADA d WITH (NOLOCK)
where
a.isoemp_codigo = b.isoemp_codigo
and a.isoemp_codigo = c.isoemp_codigo
and a.isopvped_codigo = c.isopvped_codigo
and a.isopvpedite_macodigo = b.isopvma_codigo
and a.isopvpedite_marspcodigo = b.isopvmap_rspcodigo
and c.isoemp_codigo = d.ISOEMP_CODIGO
and c.ISOPvPed_MACodigo = d.ISOPVMA_CODIGO
and d.ISOPVMACLA_CODIGO IN (20)
and c.isopvpedsit_codigo = 19
and a.isopvpeditesit_codigo = 1
and a.isoemp_codigo = 11
--and a.isopvped_codigo = 7672653
and a.isoemp_codigo = x.isoemp_codigo
and a.isopvped_codigo = x.isopvped_codigo
group by b.ISOEmp_Codigo,a.isopvped_codigo
having max(b.prioridade) = y.prioridade);


-- dbo.GATILHO_C20_SUPERVISOR_CALLCENTER_CONSUMO_CALLCENTER source

CREATE VIEW [dbo].[GATILHO_C20_SUPERVISOR_CALLCENTER_CONSUMO_CALLCENTER]
AS
SELECT 11 ISOEMP_CODIGO, ISOPVPED_CODIGO, 'A' FLAG, CAST(CONVERT(CHAR , GETDATE(), 120) AS DATETIME) DATA, DBO.DATAISO2() AS ISOPvPed_DataAlteracao
FROM ISOPVPEDIDO ISOPED WITH (NOLOCK) CROSS APPLY
(SELECT ISOEMP_CODIGO, ISOPVPED_CODIGO, PRIORIDADE
FROM [GATILHO_C20_IDENTIFICA_RESPONSAVEL_DISPARO_WF] WF WITH (NOLOCK)
GROUP BY ISOEMP_CODIGO, ISOPVPED_CODIGO, PRIORIDADE
HAVING MIN(ISOPVPEDITE_MARSPCODIGO) IN (1111798)) AS DUMMY (EMPRESA, PEDIDO, PRIORIDADE)
WHERE
ISOEMP_CODIGO = EMPRESA
AND ISOPVPED_CODIGO = PEDIDO;


-- dbo.GATILHO_C21_ANALISE_LIMITE_CREDITO source

CREATE VIEW [dbo].[GATILHO_C21_ANALISE_LIMITE_CREDITO]
as
SELECT DISTINCT PEDIDO.ISOEmp_Codigo, ORIGEM.ISOEmpEnt_EntCodigo, PEDIDO.ISOPvPed_Codigo, QRY1.PED_EM_ABERTO, QRY1.LIMITE_CREDITO, QRY1.TOTAL_CONTAS_RECEBER, PEDIDO.TOTAL_PEDIDO, QRY1.DATA_ULTIMA_COMPRA, QRY1.DATA_TITULO, dbo.dataiso2() ISOPvPed_DataAlteracao
	FROM
	ANALISE_CREDITO QRY1
	INNER JOIN ISOEMPENT_ORIGEM ORIGEM
		ON QRY1.COD_CLIENTE+QRY1.LOJA = ORIGEM.ISOEmpEnt_Ori_Codigo
		AND ISOEmpOri_Codigo = 13
	INNER JOIN (SELECT     ISOPVPEDIDO.ISOEmp_Codigo, ISOPVPEDIDO.ISOPvPed_Codigo, ISOPVPEDIDO.ISOPvPed_CliCodigo, MAX(ISOPVPEDIDO.ISOPvPed_DataAlteracao) AS ISOPvPed_DataAlteracao, SUM(ISOPVPEDITEM.ISOPvPedIte_Quantidade * ISOPVPEDITEM.ISOPvPedIte_ValorUnitario) TOTAL_PEDIDO
		FROM         ISOPVPEDIDO
						INNER JOIN ISOPVPEDITEM
							ON ISOPVPEDIDO.ISOEmp_Codigo = ISOPVPEDITEM.ISOEmp_Codigo
							AND ISOPVPEDIDO.ISOPvPed_Codigo = ISOPVPEDITEM.ISOPvPed_Codigo
						INNER JOIN ISOPVTABELAVENDA
							ON ISOPVPEDIDO.ISOEmp_Codigo = ISOPVTABELAVENDA.ISOEmp_Codigo
							AND ISOPVPEDIDO.ISOPvPed_Pagamento = ISOPVTABELAVENDA.ISOPvTV_Codigo
		WHERE     (ISOPVPEDIDO.ISOEmp_Codigo = 11) AND (ISOPVPEDIDO.ISOPvPedSit_Codigo = 1)
			AND (ISOPVPEDITEM.ISOPvPedIteSit_Codigo = 1) AND (ISOPVPEDIDO.ISOPvPed_Pagamento <> '01') AND (ISOPVTABELAVENDA.ISOPeCndPgt_Codigo NOT IN (63,72))
		GROUP BY ISOPVPEDIDO.ISOEmp_Codigo, ISOPVPEDIDO.ISOPvPed_Codigo, ISOPVPEDIDO.ISOPvPed_CliCodigo
		) PEDIDO
		ON ORIGEM.ISOEmp_Codigo = PEDIDO.ISOEmp_Codigo
		AND ORIGEM.ISOEmpEnt_EntCodigo = PEDIDO.ISOPvPed_CliCodigo
WHERE PEDIDO.ISOEmp_Codigo = 11
--AND PEDIDO.ISOPvPed_Codigo = 7760909
--and ((limite_credito - total_contas_receber - PED_EM_ABERTO) < TOTAL_PEDIDO);


-- dbo.GATILHO_C22_ANALISE_PRAZO_MEDIO_CLIENTE source

CREATE VIEW [dbo].[GATILHO_C22_ANALISE_PRAZO_MEDIO_CLIENTE]
AS
with
	prazo_medio_cp as (
		SELECT ISOEmp_Codigo, ISOPvEstab_Codigo, ISOPvTV_Codigo, sum(ISOPvEstTbVPar_QtdDias * ISOPvEstTbVPar_Percentagem / 100.0) prazo_medio_cp
			FROM ISOPVESTAB_TBLVENDAPARCELAS
			WHERE ISOEmp_Codigo = 11
			group by ISOEmp_Codigo, ISOPvEstab_Codigo, ISOPvTV_Codigo),
	pedidos as (
		select ISOPVPEDIDO.ISOEmp_Codigo, ISOPVPEDIDO.ISOPvPed_Codigo, ISOPVCD.ISOPvCD_Estabelecimento, ISOPVPEDIDO.ISOPvPed_Pagamento, ISOEMPENT_ORIGEM.ISOEmpEnt_Ori_Codigo, ISOPVPEDIDO.ISOPvPed_DataAlteracao
			from ISOPVPEDIDO
					INNER JOIN ISOPVCD ON
						ISOPVPEDIDO.ISOEmp_Codigo = ISOPVCD.ISOEmp_Codigo AND
						ISOPVPEDIDO.ISOPvPed_EstadoOrigem = ISOPVCD.ISOPvCD_Origem AND
						ISOPVPEDIDO.ISOPvPed_EstadoDestino = ISOPVCD.ISOPvCD_Destino
					LEFT OUTER JOIN ISOEMPENT_ORIGEM ON
						ISOPVPEDIDO.ISOEmp_Codigo = ISOEMPENT_ORIGEM.ISOEmp_Codigo AND
						ISOPVPEDIDO.ISOPvPed_CliCodigo = ISOEMPENT_ORIGEM.ISOEmpEnt_EntCodigo AND
						ISOEMPENT_ORIGEM.ISOEmpOri_Codigo = 13
			where ISOPVPEDIDO.ISOEmp_Codigo = 11
			and ISOPVPEDIDO.ISOPvPedSit_Codigo = 1),
	clientes as (
		SELECT cod_cliente, loja, prazo_medio_cliente
		FROM ANALISE_CREDITO)

select pedidos.isoemp_codigo, pedidos.isopvped_codigo, pedidos.ISOPvPed_Pagamento, prazo_medio_cp.prazo_medio_cp, coalesce(clientes.prazo_medio_cliente,0) as prazo_medio_cliente, pedidos.ISOPvPed_DataAlteracao
	from prazo_medio_cp
		inner join pedidos
			on prazo_medio_cp.isoemp_codigo = pedidos.isoemp_codigo
			and prazo_medio_cp.ISOPvEstab_Codigo = pedidos.ISOPvCD_Estabelecimento
			and prazo_medio_cp.ISOPvTV_Codigo = pedidos.ISOPvPed_Pagamento
			and pedidos.ISOEmp_Codigo = 11
		INNER JOIN CLIENTES
			on clientes.cod_cliente + clientes.loja = pedidos.ISOEmpEnt_Ori_Codigo;


-- dbo.GATILHO_CONTRATO_PREGAO_COTACAO source

CREATE VIEW [dbo].[GATILHO_CONTRATO_PREGAO_COTACAO]
AS
SELECT ISOEMP_CODIGO, ISOCTT_CODIGO
FROM ISOCTCONTRATO CONTRATO WITH (NOLOCK)
WHERE
	ISOEMP_CODIGO = 11
	AND ISOCTTSIT_CODIGO = 1
	AND ISOCTTMOD_CODIGO IN (1,8,13);


-- dbo.GATILHO_CONTRATO_PREGAO_ELETRONICO source

CREATE VIEW [dbo].[GATILHO_CONTRATO_PREGAO_ELETRONICO]
AS
SELECT ISOEMP_CODIGO, ISOCTT_CODIGO
FROM ISOCTCONTRATO CONTRATO WITH (NOLOCK)
WHERE
	ISOEMP_CODIGO = 11
	AND ISOCTTSIT_CODIGO IN (1,21) -- publicad / importado IBIZ
	AND ISOCTTMOD_CODIGO IN (12);


-- dbo.GATILHO_CONTRATO_PREGAO_ELETRONICO_ABERTO_FECHADO source

CREATE VIEW [dbo].[GATILHO_CONTRATO_PREGAO_ELETRONICO_ABERTO_FECHADO]
AS
SELECT ISOEMP_CODIGO, ISOCTT_CODIGO
FROM ISOCTCONTRATO CONTRATO WITH (NOLOCK)
WHERE
	ISOEMP_CODIGO = 11
	AND ISOCTTSIT_CODIGO IN (1,21) -- publicad / importado IBIZ
	AND ISOCTTMOD_CODIGO IN (19,20);


-- dbo.GATILHO_CONTRATO_PREGAO_ELETRONICO_COTACAO source

CREATE VIEW GATILHO_CONTRATO_PREGAO_ELETRONICO_COTACAO
AS
SELECT ISOEMP_CODIGO, ISOCTT_CODIGO
FROM ISOCTCONTRATO CONTRATO WITH (NOLOCK)
WHERE
	ISOEMP_CODIGO = 11
	AND ISOCTTSIT_CODIGO IN (1,21) -- publicad / importado IBIZ
	AND ISOCTTMOD_CODIGO IN (1);


-- dbo.GATILHO_CONTRATO_PREGAO_ELETRONICO_PADRAO source

CREATE VIEW [dbo].[GATILHO_CONTRATO_PREGAO_ELETRONICO_PADRAO]
AS
SELECT ISOEMP_CODIGO, ISOCTT_CODIGO
FROM ISOCTCONTRATO CONTRATO WITH (NOLOCK)
WHERE
	ISOEMP_CODIGO = 11
	AND ISOCTTSIT_CODIGO IN (1,21) -- publicad / importado IBIZ
	AND ISOCTTMOD_CODIGO IN (22);


-- dbo.GATILHO_CONTRATO_PREGAO_PRESENCIAL source

CREATE VIEW [dbo].[GATILHO_CONTRATO_PREGAO_PRESENCIAL]
AS
SELECT ISOEMP_CODIGO, ISOCTT_CODIGO
FROM ISOCTCONTRATO CONTRATO WITH (NOLOCK)
WHERE
	ISOEMP_CODIGO = 11
	AND ISOCTTSIT_CODIGO in (1,21) -- publicad / importado IBIZ
	AND ISOCTTMOD_CODIGO IN (7,9,10,11);


-- dbo.GATILHO_NOTIFICA_PEDIDO_DUPLICADO_15DD source

CREATE VIEW [dbo].[GATILHO_NOTIFICA_PEDIDO_DUPLICADO_15DD]
AS
SELECT DISTINCT A.ISOEmp_Codigo, A.ISOPvPed_Codigo, A.ISOPvPed_CliCodigo
FROM ISOPVPEDIDO A CROSS APPLY
(SELECT B.ISOEmp_Codigo, B.ISOPvPed_Codigo, B.ISOPrd_Codigo
	FROM ISOPVPEDITEM B
WHERE     A.ISOEmp_Codigo = 11
AND A.ISOPvPedSit_Codigo = 8
AND B.ISOPvPedIteSit_Codigo NOT IN (8, 9)
AND EXISTS
(SELECT     1
FROM         ISOPVPEDIDO AS C INNER JOIN
                      ISOPVPEDITEM AS D ON C.ISOEmp_Codigo = D.ISOEmp_Codigo AND C.ISOPvPed_Codigo = D.ISOPvPed_Codigo
WHERE
A.ISOEmp_Codigo = C.ISOEmp_Codigo
AND A.ISOPvPed_CliCodigo = C.ISOPvPed_CliCodigo
AND C.ISOEmp_Codigo = D.ISOEmp_Codigo
AND C.ISOPvPed_Codigo = D.ISOPvPed_Codigo
AND B.ISOPrd_Codigo = D.ISOPrd_Codigo
AND C.ISOEmp_Codigo = 11
AND C.ISOPvPed_DtaPedido >= DBO.DATAISO2() - 15
AND D.ISOPvPedIteSit_Codigo NOT IN (8, 9))
) AS DUMMY (EMPRESA, PEDIDO, PRODUTO)
WHERE
A.ISOEmp_Codigo = EMPRESA
AND A.ISOPvPed_Codigo = PEDIDO
and A.ISOPvPed_CliCodigo IN (select isoentcli_codigo from ISOEntRsp_Clientes where isoemp_codigo = 11 and isoentrsp_codigo in (1057111,1093184,975100,1104063,1080732,1079270,1052566,1095413,1057109,1050512,1104032,1074308,957844,1087088,1056117,979788,975523,975546,1095430,975277,1101458,1102428,945054,1103746,1104028,1104636));


-- dbo.GATILHO_PEDIDO_STATUS_EMAIL source

CREATE VIEW [dbo].[GATILHO_PEDIDO_STATUS_EMAIL]
as
select isoemp_codigo, isopvped_codigo, HORD, data, hora, Credito, Cliente, IOR305, Usuario, CHSTS1 , CHSTS2 , CHSTS3 , CHSTS4 , CHSTS5, Status from openquery(cremer,'
select cast(hord as char(15)) hord, data, hora, Credito, Cliente, IOR305, Usuario, CHSTS1 , CHSTS2 , CHSTS3 , CHSTS4 , CHSTS5,
case
	when Teste = ''01000000'' then ''Retido em Credito''
	when Teste = ''01010000'' then ''Retido em Credito/Cliente''
	when Teste = ''01010100'' then ''Retido em Credito/Cliente/IOR305''
	when Teste = ''01010101'' then ''Retido em Credito/Cliente/IOR305/Usuario''
	when Teste = ''01000100'' then ''Retido em Credito/IOR305''
	when Teste = ''01000101'' then ''Retido em Credito/IOR305/Usuario''
	when Teste = ''01000001'' then ''Retido em Credito/Usuario''

	when Teste = ''00010000'' then ''Retido em Cliente''
	when Teste = ''00010100'' then ''Retido em Cliente/IOR305''
	when Teste = ''00010101'' then ''Retido em Cliente/IOR305/Usuario''
	when Teste = ''00010001'' then ''Retido em Cliente/Usuario''

	when Teste = ''00000100'' then ''Retido em IOR305''
	when Teste = ''00000101'' then ''Retido em IOR305/Usuario''

	when Teste = ''00000001'' then ''Retido em Usuario''

	when
		CHSTS1 = 1 and CHSTS2 = 0 and CHSTS3 = 0 and CHSTS4 = 0 and CHSTS5 = 0 then ''Liberado para faturamento''
	when
		CHSTS1 = 1 and CHSTS2 = 0 and CHSTS3 = 0 and CHSTS4 = 0 and CHSTS5 = 1 then ''Parcialmente faturado ou cancelado''
	when
		CHSTS1 = 0 and CHSTS2 = 1 and CHSTS3 = 0 and CHSTS4 = 0 and CHSTS5 = 0 then ''Pedido em picking''
	when
		CHSTS1 = 1 and CHSTS2 = 1 and CHSTS3 = 0 and CHSTS4 = 0 and CHSTS5 = 0 then ''Pedido em picking PARCIAL''
	when
		CHSTS1 = 1 and CHSTS2 = 0 and CHSTS3 = 1 and CHSTS4 = 0 and CHSTS5 = 0 then ''Pedido em picking PARCIAL''
	when
		CHSTS1 = 1 and CHSTS2 = 0 and CHSTS3 = 0 and CHSTS4 = 1 and CHSTS5 = 0 then ''Pedido em picking PARCIAL''
	when
		CHSTS1 = 0 and CHSTS2 = 0 and CHSTS3 = 1 and CHSTS4 = 0 and CHSTS5 = 0 then ''Pedido em picking''
	when
		CHSTS1 = 0 and CHSTS2 = 0 and CHSTS3 = 0 and CHSTS4 = 1 and CHSTS5 = 0 then ''Pedido em picking''
	when
		CHSTS1 = 0 and CHSTS2 = 0 and CHSTS3 = 0 and CHSTS4 = 0 and CHSTS5 = 1 then ''Pedido faturado ou cancelado TOTAL''
end Status
from
(
select hord, hedte Data, chentm Hora, chcrdh as Credito, chcush Cliente, chmrgh IOR305, chusrh Usuario, CHSTS1 , CHSTS2 , CHSTS3 , CHSTS4 , CHSTS5 ,
case
when chcrdh <> ''01'' then ''00'' else chcrdh end || case when chcush <> ''01'' then ''00'' else chcush end || case when chmrgh <> ''01'' then ''00'' else chmrgh end || case when chusrh <> ''01'' then ''00'' else chusrh end teste
from plxsfil.echl01, pcrmfil.cpar
where (hedte >= dtcmd7)
) as consulta'), ISOPVPedido where isoemp_codigo = 11
and ISOPvPed_CodigoExterno = HORD
and ((DATEPART(hh,GETDATE())=10 AND DATEPART(mi,GETDATE()) BETWEEN 1 AND 15 AND Status LIKE 'RETIDO%')
OR (DATEPART(hh,GETDATE())=13 AND DATEPART(mi,GETDATE()) BETWEEN 1 AND 15));


-- dbo.GATILHO_PROMOCAO source

CREATE VIEW [dbo].[GATILHO_PROMOCAO]
AS
SELECT ISOEMP_CODIGO, ISOPVPED_CODIGO
FROM (
SELECT ISOEMP_CODIGO, ISOPVPED_CODIGO, QUANTIDADE AS PROMO, 0 AS NORMAL
FROM ISOPVPEDIDO PEDIDO WITH (NOLOCK)
	CROSS APPLY
		(SELECT ISOEMP_CODIGO, ISOPVPED_CODIGO, ISOPRD_CODIGO, ISOPVPEDITE_QUANTIDADE, ISOPVPEDITESIT_CODIGO FROM ISOPVPEDITEM ITEM_PROMO WITH (NOLOCK)) AS DUMMY(EMPRESA,PEDIDO,PRODUTO,QUANTIDADE,SITUACAO_ITEM)
WHERE
	ISOEMP_CODIGO = EMPRESA
	AND ISOPVPED_CODIGO = PEDIDO
	AND ISOEMP_CODIGO = 11
	AND ISOPVPEDSIT_CODIGO = 1
	AND SITUACAO_ITEM = 1
	--AND PEDIDO = 4851879
	AND PRODUTO = '411485'
UNION ALL
SELECT ISOEMP_CODIGO, ISOPVPED_CODIGO, 0 AS PROMO, QUANTIDADE AS NORMAL
FROM ISOPVPEDIDO PEDIDO WITH (NOLOCK)
	CROSS APPLY
		(SELECT ISOEMP_CODIGO, ISOPVPED_CODIGO, ISOPRD_CODIGO, ISOPVPEDITE_QUANTIDADE, ISOPVPEDITESIT_CODIGO FROM ISOPVPEDITEM ITEM_PROMO WITH (NOLOCK)) AS DUMMY(EMPRESA,PEDIDO,PRODUTO,QUANTIDADE,SITUACAO_ITEM)
WHERE
	ISOEMP_CODIGO = EMPRESA
	AND ISOPVPED_CODIGO = PEDIDO
	AND ISOEMP_CODIGO = 11
	AND ISOPVPEDSIT_CODIGO = 1
	AND SITUACAO_ITEM = 1
	--AND PEDIDO = 4851879
	AND PRODUTO IN ('411010','411331','411119')
) AS CONSULTA
GROUP BY ISOEMP_CODIGO, ISOPVPED_CODIGO
HAVING (SUM(PROMO)>0 AND SUM(NORMAL)=0) OR (SUM(PROMO)>0 AND SUM(PROMO)>SUM(NORMAL));


-- dbo.ISOBIONEXOPEDIDOITEMHST_ULTIMA_SEQUENCIA source

CREATE VIEW ISOBIONEXOPEDIDOITEMHST_ULTIMA_SEQUENCIA
AS
SELECT [ISOEmp_Codigo]
      ,[ISOBP_Id_Pdc]
      ,[ISOBPIt_Sequencia]
      ,MAX([ISOBPHst_Sequencia]) [ISOBPHst_Sequencia]
FROM [ISOWEB].[dbo].[ISOBIONEXOPEDIDOITEMHST]
GROUP BY [ISOEmp_Codigo]
      ,[ISOBP_Id_Pdc]
      ,[ISOBPIt_Sequencia];


-- dbo.ISOCLIENTE source

CREATE VIEW ISOCLIENTE
AS
SELECT ISOENTPESSOA.ISOEntPes_Codigo ISOEnt_Codigo,
					  ISOENTPESSOA.ISOEntPes_NomeCompleto ISOEnt_NomeCompleto,
					  ISOENTPESSOA.ISOEntPes_CPF ISOEnt_CPF,
					  ISOENTPESSOA.ISOEntPes_RG ISOEnt_RG,
					  0 AS ISOEnt_CNPJ,
                      ISOENTPESSOA.ISOEntPes_DataNascimento ISOEnt_DataNascimento,
                      '1753-01-01 00:00:00.000' ISOEntOrg_DataAbertura,
                      ISOENTPESSOA.ISONivEsc_Codigo,
                      ISOENTPESSOA.ISOEstCiv_Codigo,
                      ISOENTPESSOA.ISOProf_Codigo,
                      ISOENTPESSOA.ISOEntPes_Sexo ISOEnt_Sexo,
                      ISOENTPESSOA.ISOEntPes_DataCadastro ISOEnt_DataCadastro,
                      ISOENTPESSOA.ISOEntPes_Observacao ISOEnt_Observacao,
                      ISOENTPESSOA.ISOEntPes_Flag ISOEnt_Flag,
                      ISOENTPESSOA.ISOEntPes_DataAlteracao ISOEnt_DataAlteracao,
                      ISOENTPESSOA.ISOEntPes_UsuarioAlteracao ISOEnt_UsuarioAlteracao,
                      ISOENTPESSOA.ISOEntPes_Estrangeiro ISOEnt_Estrangeiro,
                      ISOENTPESSOA.ISOEntPes_RG_Data ISOEnt_RG_Data,
                      ISOENTPESSOA.ISOEntPes_RG_Orgao ISOEnt_RG_Orgao,
                      ISOENTPESSOA.ISOEntSeg_Codigo,
                      ISNULL(ISOENTPESSOA.ISOEntPes_EmpCodigo,11) ISOEmp_Codigo,
                      '' AS ISOEnt_InscEstadual,
                      NULL AS ISOEntRamAtv_Codigo,
                      ISOENTCLIENTE.ISOEntCli_CodigoExt ISOEnt_CodigoExt,
                      ISOENTCLIENTE.ISOEntClaP_Codigo,
                      ISOENTCLIENTE.ISOEntClaPEsp_Codigo,
                      ISOENTCLIENTE.ISOEntCli_CodigoMatriz ISOEnt_CodigoMatriz,
                      ISOENTENDERECOPRINCIPAL.ISOEntEnd_Logradouro ISOEnt_Logradouro,
                      ISOENTENDERECOPRINCIPAL.ISOEntEnd_Numero ISOEnt_Numero,
                      ISOENTENDERECOPRINCIPAL.ISOEntEnd_Bairro ISOEnt_Bairro,
                      ISOENTENDERECOPRINCIPAL.ISOEntEnd_Complemento ISOEnt_Complemento,
                      ISOLOCALIDADE.ISOLoc_Descricao ISOEnt_Localidade,
                      ISOESTADO.ISOEst_Sigla ISOEnt_UF,
                      ISOENTTELEFONE1.ISOEntTel_DDD ISOEnt_DDD,
                      ISOENTTELEFONE1.ISOEntTel_Telefone ISOEnt_Telefone,
                      ISOENTTELEFONE2.ISOEntTel_DDD ISOEnt_DDD1,
                      ISOENTTELEFONE2.ISOEntTel_Telefone ISOEnt_Telefone1,
                      ISOENTTELEFONE3.ISOEntTel_DDD ISOEnt_DDD2,
                      ISOENTTELEFONE3.ISOEntTel_Telefone ISOEnt_Telefone2,
                      ISOENTECONTACT.ISOEntEct_econtact ISOEnt_Email,
                      (SELECT     ISOENTRSP_CLIENTES.ISOEntRsp_Codigo
						FROM         ISOENTRSP_CLIENTES INNER JOIN
			                      ISOENTRESPONSAVEL ON ISOENTRESPONSAVEL.ISOEmp_Codigo = ISOENTRSP_CLIENTES.ISOEmp_Codigo AND
                      ISOENTRSP_CLIENTES.ISOEntRsp_Codigo = ISOENTRESPONSAVEL.ISOEntRsp_Codigo
                      AND ISOENTPESSOA.ISOEntPes_Codigo = ISOENTRSP_CLIENTES.ISOEntCli_Codigo
                      --AND ISOENTRESPONSAVEL.ISOEntRsp_ClaCodigo = 285 AND ((ISOENTRSP_CLIENTES.ISOEntNivRsp_Codigo = 2 AND ISOENTPESSOA.ISOEntSeg_Codigo IN (1)) OR (ISOENTRSP_CLIENTES.ISOEntNivRsp_Codigo = 1 AND ISOENTPESSOA.ISOEntSeg_Codigo NOT IN (1)))
                      --AND ISOENTRESPONSAVEL.ISOEntRsp_ClaCodigo = 285 AND ISOENTRSP_CLIENTES.ISOEntNivRsp_Codigo = 1
                      AND ISOENTRSP_CLIENTES.ISOEntNivRsp_Codigo = 1
                      AND ISOENTRSP_CLIENTES.ISOEntRsp_Cli_Flag = 'A'
                      --AND ISOENTRSP_CLIENTES.ISOEntRsp_Cli_DataAlteracao = (SELECT MAX(ISOEntRsp_Cli_DataAlteracao) FROM ISOENTRSP_CLIENTES X WHERE X.ISOEmp_Codigo = ISOENTRSP_CLIENTES.ISOEmp_Codigo AND X.ISOEntCli_Codigo = ISOENTRSP_CLIENTES.ISOEntCli_Codigo AND ((X.ISOEntNivRsp_Codigo = 2 AND ISOENTPESSOA.ISOEntSeg_Codigo IN (1)) OR (X.ISOEntNivRsp_Codigo = 1 AND ISOENTPESSOA.ISOEntSeg_Codigo NOT IN (1)) AND X.ISOEntRsp_Cli_Flag = 'A'))) AS ISOEntRsp_Codigo,
                      AND ISOENTRSP_CLIENTES.ISOEntRsp_Cli_DataAlteracao = (SELECT MAX(ISOEntRsp_Cli_DataAlteracao) FROM ISOENTRSP_CLIENTES X WHERE X.ISOEmp_Codigo = ISOENTRSP_CLIENTES.ISOEmp_Codigo AND X.ISOEntCli_Codigo = ISOENTRSP_CLIENTES.ISOEntCli_Codigo AND X.ISOEntNivRsp_Codigo = 1 AND X.ISOEntRsp_Cli_Flag = 'A')) AS ISOEntRsp_Codigo,
                      (SELECT     ISOEMPENT_ORIGEM.ISOEmpEnt_Ori_Codigo
						FROM         ISOENTRSP_CLIENTES INNER JOIN
									ISOEMPENT_ORIGEM ON ISOENTRSP_CLIENTES.ISOEntRsp_Codigo = ISOEMPENT_ORIGEM.ISOEMPENT_ENTCODIGO AND ISOEMPENT_ORIGEM.ISOEMPORI_CODIGO = 7 INNER JOIN
			                      ISOENTRESPONSAVEL ON ISOENTRESPONSAVEL.ISOEmp_Codigo = ISOENTRSP_CLIENTES.ISOEmp_Codigo AND
                      ISOENTRSP_CLIENTES.ISOEntRsp_Codigo = ISOENTRESPONSAVEL.ISOEntRsp_Codigo
                      AND ISOENTPESSOA.ISOEntPes_Codigo = ISOENTRSP_CLIENTES.ISOEntCli_Codigo
                      --AND ISOENTRESPONSAVEL.ISOEntRsp_ClaCodigo = 285 AND ((ISOENTRSP_CLIENTES.ISOEntNivRsp_Codigo = 2 AND ISOENTPESSOA.ISOEntSeg_Codigo IN (1)) OR (ISOENTRSP_CLIENTES.ISOEntNivRsp_Codigo = 1 AND ISOENTPESSOA.ISOEntSeg_Codigo NOT IN (1)))
                      --AND ISOENTRESPONSAVEL.ISOEntRsp_ClaCodigo = 285 AND ISOENTRSP_CLIENTES.ISOEntNivRsp_Codigo = 1
                      AND ISOENTRSP_CLIENTES.ISOEntNivRsp_Codigo = 1
                      AND ISOENTRSP_CLIENTES.ISOEntRsp_Cli_Flag = 'A'
                      --AND ISOENTRSP_CLIENTES.ISOEntRsp_Cli_DataAlteracao = (SELECT MAX(ISOEntRsp_Cli_DataAlteracao) FROM ISOENTRSP_CLIENTES X WHERE X.ISOEmp_Codigo = ISOENTRSP_CLIENTES.ISOEmp_Codigo AND X.ISOEntCli_Codigo = ISOENTRSP_CLIENTES.ISOEntCli_Codigo AND ((X.ISOEntNivRsp_Codigo = 2 AND ISOENTPESSOA.ISOEntSeg_Codigo IN (1)) OR (X.ISOEntNivRsp_Codigo = 1 AND ISOENTPESSOA.ISOEntSeg_Codigo NOT IN (1)) AND X.ISOEntRsp_Cli_Flag = 'A'))) AS Responsavel
                      AND ISOENTRSP_CLIENTES.ISOEntRsp_Cli_DataAlteracao = (SELECT MAX(ISOEntRsp_Cli_DataAlteracao) FROM ISOENTRSP_CLIENTES X WHERE X.ISOEmp_Codigo = ISOENTRSP_CLIENTES.ISOEmp_Codigo AND X.ISOEntCli_Codigo = ISOENTRSP_CLIENTES.ISOEntCli_Codigo AND X.ISOEntNivRsp_Codigo = 1 AND X.ISOEntRsp_Cli_Flag = 'A')) AS Responsavel,
1 VERSAO
FROM ISOENTPESSOA LEFT OUTER JOIN
	  ISOENTECONTACT ON ISOENTECONTACT.ISOEnt_Codigo = ISOENTPESSOA.ISOEntPes_Codigo AND (ISOENTECONTACT.ISOEntEctTip_Codigo = 1) AND (ISOENTECONTACT.ISOEntEml_Flag = 'A') AND (ISOENTECONTACT.ISOEntEctTip_Principal = 'S') LEFT OUTER JOIN
      ISOENTTELEFONE AS ISOENTTELEFONE1 ON ISOENTPESSOA.ISOEntPes_Codigo = ISOENTTELEFONE1.ISOEnt_Codigo AND (ISOENTTELEFONE1.ISOEntTel_Flag = 'A') AND (ISOENTTELEFONE1.ISOEntTel_Principal = 'S') LEFT OUTER JOIN
      ISOENTTELEFONE AS ISOENTTELEFONE2 ON ISOENTPESSOA.ISOEntPes_Codigo = ISOENTTELEFONE2.ISOEnt_Codigo AND (ISOENTTELEFONE2.ISOEntTel_Codigo = 1) LEFT OUTER JOIN
      ISOENTTELEFONE AS ISOENTTELEFONE3 ON ISOENTPESSOA.ISOEntPes_Codigo = ISOENTTELEFONE3.ISOEnt_Codigo AND (ISOENTTELEFONE3.ISOEntTel_Codigo = 2) LEFT OUTER JOIN
      ISOENTCLIENTE ON ISOENTPESSOA.ISOEntPes_Codigo = ISOENTCLIENTE.ISOEntCli_Codigo LEFT OUTER JOIN
      ISOENTENDERECOPRINCIPAL ON ISOENTPESSOA.ISOEntPes_Codigo = ISOENTENDERECOPRINCIPAL.ISOEnt_Codigo LEFT OUTER JOIN
	  ISOLOCALIDADE ON ISOLOCALIDADE.ISOLoc_Codigo = ISOENTENDERECOPRINCIPAL.ISOLoc_Codigo AND (ISOENTENDERECOPRINCIPAL.ISOEntEnd_Principal = 'S') LEFT OUTER JOIN
	  ISOESTADO ON ISOLOCALIDADE.ISOPais_Codigo = ISOESTADO.ISOPais_Codigo AND ISOLOCALIDADE.ISOEst_Codigo = ISOESTADO.ISOEst_Codigo
UNION ALL
SELECT ISOENTORGANIZACAO.ISOEntOrg_Codigo,
					  ISOENTORGANIZACAO.ISOEntOrg_RazaoSocial,
					  0 AS ISOEntPes_CPF,
					  '0' AS ISOEntPes_RG, -- 29/03/2017 alterado o campo para texto pois o RG pode possuir letras
					  ISOENTORGANIZACAO.ISOEntOrg_CNPJ,
                      '1753-01-01 00:00:00.000' ISOEntPes_DataNascimento,
                      ISOENTORGANIZACAO.ISOEntOrg_DataAbertura,
                      NULL AS ISONivEsc_Codigo,
                      NULL AS ISOEstCiv_Codigo,
                      NULL AS ISOProf_Codigo,
                      'N' AS ISOEntPes_Sexo,
                      ISOENTORGANIZACAO.ISOEntOrg_DataCadastro,
                      ISOENTORGANIZACAO.ISOEntOrg_Observacao,
                      ISOENTORGANIZACAO.ISOEntOrg_Flag,
                      ISOENTORGANIZACAO.ISOEntOrg_DataAlteracao,
                      ISOENTORGANIZACAO.ISOEntOrg_UsuarioAlteracao,
                      ISOENTORGANIZACAO.ISOEntOrg_Estrangeiro,
                      NULL AS ISOEntPes_RG_Data,
                      NULL AS ISOEntPes_RG_Orgao,
                      ISOENTORGANIZACAO.ISOEntSeg_Codigo,
                      ISNULL(ISOENTORGANIZACAO.ISOEntOrg_EmpCodigo,11) AS ISOEmp_Codigo,
                      ISOENTORGANIZACAO.ISOEntOrg_InscEstadual,
                      ISOENTORGANIZACAO.ISOEntRamAtv_Codigo,
                      ISOENTCLIENTE.ISOEntCli_CodigoExt,
                      ISOENTCLIENTE.ISOEntClaP_Codigo,
                      ISOENTCLIENTE.ISOEntClaPEsp_Codigo,
                      ISOENTCLIENTE.ISOEntCli_CodigoMatriz,
                      ISOENTENDERECOPRINCIPAL.ISOEntEnd_Logradouro,
                      ISOENTENDERECOPRINCIPAL.ISOEntEnd_Numero,
                      ISOENTENDERECOPRINCIPAL.ISOEntEnd_Bairro,
                      ISOENTENDERECOPRINCIPAL.ISOEntEnd_Complemento,
                      ISOLOCALIDADE.ISOLoc_Descricao,
                      ISOESTADO.ISOEst_Sigla,
                      ISOENTTELEFONE1.ISOEntTel_DDD AS ISOEntTel_DDD,
                      ISOENTTELEFONE1.ISOEntTel_Telefone AS ISOEntTel_Telefone,
                      ISOENTTELEFONE2.ISOEntTel_DDD AS ISOEntTel_DDD1,
                      ISOENTTELEFONE2.ISOEntTel_Telefone AS ISOEntTel_Telefone1,
                      ISOENTTELEFONE3.ISOEntTel_DDD AS ISOEntTel_DDD2,
                      ISOENTTELEFONE3.ISOEntTel_Telefone AS ISOEntTel_Telefone2,
                      ISOENTECONTACT.ISOEntEct_econtact,
                      (SELECT     TOP 1 ISOENTRSP_CLIENTES.ISOEntRsp_Codigo
						FROM         ISOENTRSP_CLIENTES INNER JOIN
			                      ISOENTRESPONSAVEL ON ISOENTRESPONSAVEL.ISOEmp_Codigo = ISOENTRSP_CLIENTES.ISOEmp_Codigo AND
                      ISOENTRSP_CLIENTES.ISOEntRsp_Codigo = ISOENTRESPONSAVEL.ISOEntRsp_Codigo
                      AND ISOENTORGANIZACAO.ISOEntOrg_Codigo = ISOENTRSP_CLIENTES.ISOEntCli_Codigo
                      --AND ISOENTRESPONSAVEL.ISOEntRsp_ClaCodigo = 285 AND ((ISOENTRSP_CLIENTES.ISOEntNivRsp_Codigo = 2 AND ISOENTORGANIZACAO.ISOEntSeg_Codigo IN (1)) OR (ISOENTRSP_CLIENTES.ISOEntNivRsp_Codigo = 1 AND ISOENTORGANIZACAO.ISOEntSeg_Codigo NOT IN (1)))
                      --AND ISOENTRESPONSAVEL.ISOEntRsp_ClaCodigo = 285 AND ISOENTRSP_CLIENTES.ISOEntNivRsp_Codigo = 1
                      AND ISOENTRSP_CLIENTES.ISOEntNivRsp_Codigo = 1
                      AND ISOENTRSP_CLIENTES.ISOEntRsp_Cli_Flag = 'A'
                      --AND ISOENTRSP_CLIENTES.ISOEntRsp_Cli_DataAlteracao = (SELECT MAX(ISOEntRsp_Cli_DataAlteracao) FROM ISOENTRSP_CLIENTES X WHERE X.ISOEmp_Codigo = ISOENTRSP_CLIENTES.ISOEmp_Codigo AND X.ISOEntCli_Codigo = ISOENTRSP_CLIENTES.ISOEntCli_Codigo AND ((X.ISOEntNivRsp_Codigo = 2 AND ISOENTORGANIZACAO.ISOEntSeg_Codigo IN (1)) OR (X.ISOEntNivRsp_Codigo = 1 AND ISOENTORGANIZACAO.ISOEntSeg_Codigo NOT IN (1)) AND X.ISOEntRsp_Cli_Flag = 'A'))) AS ISOEntRsp_Codigo,
                      AND ISOENTRSP_CLIENTES.ISOEntRsp_Cli_DataAlteracao = (SELECT MAX(ISOEntRsp_Cli_DataAlteracao) FROM ISOENTRSP_CLIENTES X WHERE X.ISOEmp_Codigo = ISOENTRSP_CLIENTES.ISOEmp_Codigo AND X.ISOEntCli_Codigo = ISOENTRSP_CLIENTES.ISOEntCli_Codigo AND X.ISOEntNivRsp_Codigo = 1 AND X.ISOEntRsp_Cli_Flag = 'A')) AS ISOEntRsp_Codigo,
                      (SELECT     TOP 1 ISOEMPENT_ORIGEM.ISOEmpEnt_Ori_Codigo
						FROM         ISOENTRSP_CLIENTES INNER JOIN
									ISOEMPENT_ORIGEM ON ISOENTRSP_CLIENTES.ISOEntRsp_Codigo = ISOEMPENT_ORIGEM.ISOEMPENT_ENTCODIGO AND ISOEMPENT_ORIGEM.ISOEMPORI_CODIGO = 7 INNER JOIN
			                      ISOENTRESPONSAVEL ON ISOENTRESPONSAVEL.ISOEmp_Codigo = ISOENTRSP_CLIENTES.ISOEmp_Codigo AND
                      ISOENTRSP_CLIENTES.ISOEntRsp_Codigo = ISOENTRESPONSAVEL.ISOEntRsp_Codigo
                      AND ISOENTORGANIZACAO.ISOEntOrg_Codigo = ISOENTRSP_CLIENTES.ISOEntCli_Codigo
                      --AND ISOENTRESPONSAVEL.ISOEntRsp_ClaCodigo = 285 AND ((ISOENTRSP_CLIENTES.ISOEntNivRsp_Codigo = 2 AND ISOENTORGANIZACAO.ISOEntSeg_Codigo IN (1)) OR (ISOENTRSP_CLIENTES.ISOEntNivRsp_Codigo = 1 AND ISOENTORGANIZACAO.ISOEntSeg_Codigo NOT IN (1)))
                      --AND ISOENTRESPONSAVEL.ISOEntRsp_ClaCodigo = 285 AND ISOENTRSP_CLIENTES.ISOEntNivRsp_Codigo = 1
                      AND ISOENTRSP_CLIENTES.ISOEntNivRsp_Codigo = 1
                      AND ISOENTRSP_CLIENTES.ISOEntRsp_Cli_Flag = 'A'
                      --AND ISOENTRSP_CLIENTES.ISOEntRsp_Cli_DataAlteracao = (SELECT MAX(ISOEntRsp_Cli_DataAlteracao) FROM ISOENTRSP_CLIENTES X WHERE X.ISOEmp_Codigo = ISOENTRSP_CLIENTES.ISOEmp_Codigo AND X.ISOEntCli_Codigo = ISOENTRSP_CLIENTES.ISOEntCli_Codigo AND ((X.ISOEntNivRsp_Codigo = 2 AND ISOENTORGANIZACAO.ISOEntSeg_Codigo IN (1)) OR (X.ISOEntNivRsp_Codigo = 1 AND ISOENTORGANIZACAO.ISOEntSeg_Codigo NOT IN (1)) AND X.ISOEntRsp_Cli_Flag = 'A'))) AS Responsavel
                      AND ISOENTRSP_CLIENTES.ISOEntRsp_Cli_DataAlteracao = (SELECT MAX(ISOEntRsp_Cli_DataAlteracao) FROM ISOENTRSP_CLIENTES X WHERE X.ISOEmp_Codigo = ISOENTRSP_CLIENTES.ISOEmp_Codigo AND X.ISOEntCli_Codigo = ISOENTRSP_CLIENTES.ISOEntCli_Codigo AND X.ISOEntNivRsp_Codigo = 1 AND X.ISOEntRsp_Cli_Flag = 'A')) AS Responsavel,
1 VERSAO
FROM ISOENTORGANIZACAO LEFT OUTER JOIN
      ISOENTECONTACT ON ISOENTECONTACT.ISOEnt_Codigo = ISOENTORGANIZACAO.ISOEntOrg_Codigo AND (ISOENTECONTACT.ISOEntEctTip_Principal = 'S') AND (ISOENTECONTACT.ISOEntEml_Flag = 'A') AND (ISOENTECONTACT.ISOEntEctTip_Codigo = 1) LEFT OUTER JOIN
      ISOENTTELEFONE AS ISOENTTELEFONE1 ON ISOENTORGANIZACAO.ISOEntOrg_Codigo = ISOENTTELEFONE1.ISOEnt_Codigo AND (ISOENTTELEFONE1.ISOEntTel_Flag = 'A') AND (ISOENTTELEFONE1.ISOEntTel_Principal = 'S') LEFT OUTER JOIN
      ISOENTTELEFONE AS ISOENTTELEFONE2 ON ISOENTORGANIZACAO.ISOEntOrg_Codigo = ISOENTTELEFONE2.ISOEnt_Codigo AND (ISOENTTELEFONE2.ISOEntTel_Codigo = 1) LEFT OUTER JOIN
      ISOENTTELEFONE AS ISOENTTELEFONE3 ON ISOENTORGANIZACAO.ISOEntOrg_Codigo = ISOENTTELEFONE3.ISOEnt_Codigo AND (ISOENTTELEFONE3.ISOEntTel_Codigo = 2) LEFT OUTER JOIN
      ISOLOCALIDADE LEFT OUTER JOIN
      ISOENTENDERECOPRINCIPAL ON ISOLOCALIDADE.ISOLoc_Codigo = ISOENTENDERECOPRINCIPAL.ISOLoc_Codigo AND (ISOENTENDERECOPRINCIPAL.ISOEntEnd_Principal = 'S') LEFT OUTER JOIN
      ISOESTADO ON ISOLOCALIDADE.ISOPais_Codigo = ISOESTADO.ISOPais_Codigo AND ISOLOCALIDADE.ISOEst_Codigo = ISOESTADO.ISOEst_Codigo ON
      ISOENTORGANIZACAO.ISOEntOrg_Codigo = ISOENTENDERECOPRINCIPAL.ISOEnt_Codigo LEFT OUTER JOIN
      ISOENTCLIENTE ON ISOENTORGANIZACAO.ISOEntOrg_Codigo = ISOENTCLIENTE.ISOEntCli_Codigo;


-- dbo.ISOCLIENTE_ORIGINAL source

CREATE VIEW [dbo].[ISOCLIENTE_ORIGINAL]
AS
SELECT     ISOENTPESSOA.ISOEntPes_Codigo ISOEnt_Codigo,
					  ISOENTPESSOA.ISOEntPes_NomeCompleto ISOEnt_NomeCompleto,
					  ISOENTPESSOA.ISOEntPes_CPF ISOEnt_CPF,
					  ISOENTPESSOA.ISOEntPes_RG ISOEnt_RG,
					  0 AS ISOEnt_CNPJ,
                      ISOENTPESSOA.ISOEntPes_DataNascimento ISOEnt_DataNascimento,
                      '1753-01-01 00:00:00.000' ISOEntOrg_DataAbertura,
                      ISOENTPESSOA.ISONivEsc_Codigo,
                      ISOENTPESSOA.ISOEstCiv_Codigo,
                      ISOENTPESSOA.ISOProf_Codigo,
                      ISOENTPESSOA.ISOEntPes_Sexo ISOEnt_Sexo,
                      ISOENTPESSOA.ISOEntPes_DataCadastro ISOEnt_DataCadastro,
                      ISOENTPESSOA.ISOEntPes_Observacao ISOEnt_Observacao,
                      ISOENTPESSOA.ISOEntPes_Flag ISOEnt_Flag,
                      ISOENTPESSOA.ISOEntPes_DataAlteracao ISOEnt_DataAlteracao,
                      ISOENTPESSOA.ISOEntPes_UsuarioAlteracao ISOEnt_UsuarioAlteracao,
                      ISOENTPESSOA.ISOEntPes_Estrangeiro ISOEnt_Estrangeiro,
                      ISOENTPESSOA.ISOEntPes_RG_Data ISOEnt_RG_Data,
                      ISOENTPESSOA.ISOEntPes_RG_Orgao ISOEnt_RG_Orgao,
                      ISOENTPESSOA.ISOEntSeg_Codigo,
                      ISNULL(ISOENTPESSOA.ISOEntPes_EmpCodigo,11) ISOEmp_Codigo,
                      '' AS ISOEnt_InscEstadual,
                      NULL AS ISOEntRamAtv_Codigo,
                      ISOENTCLIENTE.ISOEntCli_CodigoExt ISOEnt_CodigoExt,
                      ISOENTCLIENTE.ISOEntClaP_Codigo,
                      ISOENTCLIENTE.ISOEntClaPEsp_Codigo,
                      ISOENTCLIENTE.ISOEntCli_CodigoMatriz ISOEnt_CodigoMatriz,
                      ISOENTENDERECOPRINCIPAL.ISOEntEnd_Logradouro ISOEnt_Logradouro,
                      ISOENTENDERECOPRINCIPAL.ISOEntEnd_Numero ISOEnt_Numero,
                      ISOENTENDERECOPRINCIPAL.ISOEntEnd_Bairro ISOEnt_Bairro,
                      ISOENTENDERECOPRINCIPAL.ISOEntEnd_Complemento ISOEnt_Complemento,
                      ISOLOCALIDADE.ISOLoc_Descricao ISOEnt_Localidade,
                      ISOESTADO.ISOEst_Sigla ISOEnt_UF,
                      ISOENTTELEFONE1.ISOEntTel_DDD ISOEnt_DDD,
                      ISOENTTELEFONE1.ISOEntTel_Telefone ISOEnt_Telefone,
                      ISOENTTELEFONE2.ISOEntTel_DDD ISOEnt_DDD1,
                      ISOENTTELEFONE2.ISOEntTel_Telefone ISOEnt_Telefone1,
                      ISOENTTELEFONE3.ISOEntTel_DDD ISOEnt_DDD2,
                      ISOENTTELEFONE3.ISOEntTel_Telefone ISOEnt_Telefone2,
                      ISOENTECONTACT.ISOEntEct_econtact ISOEnt_Email,
                      (SELECT     ISOENTRSP_CLIENTES.ISOEntRsp_Codigo
						FROM         ISOENTRSP_CLIENTES INNER JOIN
			                      ISOENTRESPONSAVEL ON ISOENTRESPONSAVEL.ISOEmp_Codigo = ISOENTRSP_CLIENTES.ISOEmp_Codigo AND
                      ISOENTRSP_CLIENTES.ISOEntRsp_Codigo = ISOENTRESPONSAVEL.ISOEntRsp_Codigo
                      AND ISOENTPESSOA.ISOEntPes_Codigo = ISOENTRSP_CLIENTES.ISOEntCli_Codigo
                      --AND ISOENTRESPONSAVEL.ISOEntRsp_ClaCodigo = 285 AND ((ISOENTRSP_CLIENTES.ISOEntNivRsp_Codigo = 2 AND ISOENTPESSOA.ISOEntSeg_Codigo IN (1)) OR (ISOENTRSP_CLIENTES.ISOEntNivRsp_Codigo = 1 AND ISOENTPESSOA.ISOEntSeg_Codigo NOT IN (1)))
                      --AND ISOENTRESPONSAVEL.ISOEntRsp_ClaCodigo = 285 AND ISOENTRSP_CLIENTES.ISOEntNivRsp_Codigo = 1
                      AND ISOENTRSP_CLIENTES.ISOEntNivRsp_Codigo = 1
                      AND ISOENTRSP_CLIENTES.ISOEntRsp_Cli_Flag = 'A'
                      --AND ISOENTRSP_CLIENTES.ISOEntRsp_Cli_DataAlteracao = (SELECT MAX(ISOEntRsp_Cli_DataAlteracao) FROM ISOENTRSP_CLIENTES X WHERE X.ISOEmp_Codigo = ISOENTRSP_CLIENTES.ISOEmp_Codigo AND X.ISOEntCli_Codigo = ISOENTRSP_CLIENTES.ISOEntCli_Codigo AND ((X.ISOEntNivRsp_Codigo = 2 AND ISOENTPESSOA.ISOEntSeg_Codigo IN (1)) OR (X.ISOEntNivRsp_Codigo = 1 AND ISOENTPESSOA.ISOEntSeg_Codigo NOT IN (1)) AND X.ISOEntRsp_Cli_Flag = 'A'))) AS ISOEntRsp_Codigo,
                      AND ISOENTRSP_CLIENTES.ISOEntRsp_Cli_DataAlteracao = (SELECT MAX(ISOEntRsp_Cli_DataAlteracao) FROM ISOENTRSP_CLIENTES X WHERE X.ISOEmp_Codigo = ISOENTRSP_CLIENTES.ISOEmp_Codigo AND X.ISOEntCli_Codigo = ISOENTRSP_CLIENTES.ISOEntCli_Codigo AND X.ISOEntNivRsp_Codigo = 1 AND X.ISOEntRsp_Cli_Flag = 'A')) AS ISOEntRsp_Codigo,
                      (SELECT     ISOEMPENT_ORIGEM.ISOEmpEnt_Ori_Codigo
						FROM         ISOENTRSP_CLIENTES INNER JOIN
									ISOEMPENT_ORIGEM ON ISOENTRSP_CLIENTES.ISOEntRsp_Codigo = ISOEMPENT_ORIGEM.ISOEMPENT_ENTCODIGO AND ISOEMPENT_ORIGEM.ISOEMPORI_CODIGO = 7 INNER JOIN
			                      ISOENTRESPONSAVEL ON ISOENTRESPONSAVEL.ISOEmp_Codigo = ISOENTRSP_CLIENTES.ISOEmp_Codigo AND
                      ISOENTRSP_CLIENTES.ISOEntRsp_Codigo = ISOENTRESPONSAVEL.ISOEntRsp_Codigo
                      AND ISOENTPESSOA.ISOEntPes_Codigo = ISOENTRSP_CLIENTES.ISOEntCli_Codigo
                      --AND ISOENTRESPONSAVEL.ISOEntRsp_ClaCodigo = 285 AND ((ISOENTRSP_CLIENTES.ISOEntNivRsp_Codigo = 2 AND ISOENTPESSOA.ISOEntSeg_Codigo IN (1)) OR (ISOENTRSP_CLIENTES.ISOEntNivRsp_Codigo = 1 AND ISOENTPESSOA.ISOEntSeg_Codigo NOT IN (1)))
                      --AND ISOENTRESPONSAVEL.ISOEntRsp_ClaCodigo = 285 AND ISOENTRSP_CLIENTES.ISOEntNivRsp_Codigo = 1
                      AND ISOENTRSP_CLIENTES.ISOEntNivRsp_Codigo = 1
                      AND ISOENTRSP_CLIENTES.ISOEntRsp_Cli_Flag = 'A'
                      --AND ISOENTRSP_CLIENTES.ISOEntRsp_Cli_DataAlteracao = (SELECT MAX(ISOEntRsp_Cli_DataAlteracao) FROM ISOENTRSP_CLIENTES X WHERE X.ISOEmp_Codigo = ISOENTRSP_CLIENTES.ISOEmp_Codigo AND X.ISOEntCli_Codigo = ISOENTRSP_CLIENTES.ISOEntCli_Codigo AND ((X.ISOEntNivRsp_Codigo = 2 AND ISOENTPESSOA.ISOEntSeg_Codigo IN (1)) OR (X.ISOEntNivRsp_Codigo = 1 AND ISOENTPESSOA.ISOEntSeg_Codigo NOT IN (1)) AND X.ISOEntRsp_Cli_Flag = 'A'))) AS Responsavel
                      AND ISOENTRSP_CLIENTES.ISOEntRsp_Cli_DataAlteracao = (SELECT MAX(ISOEntRsp_Cli_DataAlteracao) FROM ISOENTRSP_CLIENTES X WHERE X.ISOEmp_Codigo = ISOENTRSP_CLIENTES.ISOEmp_Codigo AND X.ISOEntCli_Codigo = ISOENTRSP_CLIENTES.ISOEntCli_Codigo AND X.ISOEntNivRsp_Codigo = 1 AND X.ISOEntRsp_Cli_Flag = 'A')) AS Responsavel
FROM         ISOENTPESSOA LEFT OUTER JOIN
					  ISOENTECONTACT ON ISOENTECONTACT.ISOEnt_Codigo = ISOENTPESSOA.ISOEntPes_Codigo AND (ISOENTECONTACT.ISOEntEctTip_Codigo = 1) AND (ISOENTECONTACT.ISOEntEml_Flag = 'A') AND (ISOENTECONTACT.ISOEntEctTip_Principal = 'S') LEFT OUTER JOIN
                      ISOENTTELEFONE AS ISOENTTELEFONE1 ON ISOENTPESSOA.ISOEntPes_Codigo = ISOENTTELEFONE1.ISOEnt_Codigo AND (ISOENTTELEFONE1.ISOEntTel_Flag = 'A') AND (ISOENTTELEFONE1.ISOEntTel_Principal = 'S') LEFT OUTER JOIN
                      ISOENTTELEFONE AS ISOENTTELEFONE2 ON ISOENTPESSOA.ISOEntPes_Codigo = ISOENTTELEFONE2.ISOEnt_Codigo AND (ISOENTTELEFONE2.ISOEntTel_Codigo = 1) LEFT OUTER JOIN
                      ISOENTTELEFONE AS ISOENTTELEFONE3 ON ISOENTPESSOA.ISOEntPes_Codigo = ISOENTTELEFONE3.ISOEnt_Codigo AND (ISOENTTELEFONE3.ISOEntTel_Codigo = 2) LEFT OUTER JOIN
                      ISOENTCLIENTE ON ISOENTPESSOA.ISOEntPes_Codigo = ISOENTCLIENTE.ISOEntCli_Codigo LEFT OUTER JOIN
                      ISOENTENDERECOPRINCIPAL ON ISOENTPESSOA.ISOEntPes_Codigo = ISOENTENDERECOPRINCIPAL.ISOEnt_Codigo LEFT OUTER JOIN
					  ISOLOCALIDADE ON ISOLOCALIDADE.ISOLoc_Codigo = ISOENTENDERECOPRINCIPAL.ISOLoc_Codigo AND (ISOENTENDERECOPRINCIPAL.ISOEntEnd_Principal = 'S') LEFT OUTER JOIN
					  ISOESTADO ON ISOLOCALIDADE.ISOPais_Codigo = ISOESTADO.ISOPais_Codigo AND ISOLOCALIDADE.ISOEst_Codigo = ISOESTADO.ISOEst_Codigo
--FROM         ISOENTECONTACT RIGHT OUTER JOIN
--                      ISOENTPESSOA ON ISOENTECONTACT.ISOEnt_Codigo = ISOENTPESSOA.ISOEntPes_Codigo AND (ISOENTECONTACT.ISOEntEctTip_Codigo = 1) AND (ISOENTECONTACT.ISOEntEml_Flag = 'A') AND (ISOENTECONTACT.ISOEntEctTip_Principal = 'S') LEFT OUTER JOIN
--                      ISOENTTELEFONE AS ISOENTTELEFONE1 ON ISOENTPESSOA.ISOEntPes_Codigo = ISOENTTELEFONE1.ISOEnt_Codigo AND (ISOENTTELEFONE1.ISOEntTel_Flag = 'A') AND (ISOENTTELEFONE1.ISOEntTel_Principal = 'S') LEFT OUTER JOIN
--                      ISOENTTELEFONE AS ISOENTTELEFONE2 ON ISOENTPESSOA.ISOEntPes_Codigo = ISOENTTELEFONE2.ISOEnt_Codigo AND (ISOENTTELEFONE2.ISOEntTel_Codigo = 1) LEFT OUTER JOIN
--                      ISOENTTELEFONE AS ISOENTTELEFONE3 ON ISOENTPESSOA.ISOEntPes_Codigo = ISOENTTELEFONE3.ISOEnt_Codigo AND (ISOENTTELEFONE3.ISOEntTel_Codigo = 2) LEFT OUTER JOIN
--                      ISOLOCALIDADE INNER JOIN
--                      ISOENTENDERECOPRINCIPAL ON ISOLOCALIDADE.ISOLoc_Codigo = ISOENTENDERECOPRINCIPAL.ISOLoc_Codigo AND (ISOENTENDERECOPRINCIPAL.ISOEntEnd_Principal = 'S') INNER JOIN
--                      ISOESTADO ON ISOLOCALIDADE.ISOPais_Codigo = ISOESTADO.ISOPais_Codigo AND ISOLOCALIDADE.ISOEst_Codigo = ISOESTADO.ISOEst_Codigo ON
--                      ISOENTPESSOA.ISOEntPes_Codigo = ISOENTENDERECOPRINCIPAL.ISOEnt_Codigo LEFT OUTER JOIN
--                      ISOENTCLIENTE ON ISOENTPESSOA.ISOEntPes_Codigo = ISOENTCLIENTE.ISOEntCli_Codigo
--WHERE     (ISOENTPESSOA.ISOEntPes_Flag = 'A') -- 19/05/2017 conforme chamado 68554 do Tony
UNION -- 28/03/2017 utilizado apenas UNION para eliminar registros duplicados, por exemplo, um cliente ter o papel pessoa e organizacao
SELECT     ISOENTORGANIZACAO.ISOEntOrg_Codigo,
					  ISOENTORGANIZACAO.ISOEntOrg_RazaoSocial,
					  0 AS ISOEntPes_CPF,
					  '0' AS ISOEntPes_RG, -- 29/03/2017 alterado o campo para texto pois o RG pode possuir letras
					  ISOENTORGANIZACAO.ISOEntOrg_CNPJ,
                      '1753-01-01 00:00:00.000' ISOEntPes_DataNascimento,
                      ISOENTORGANIZACAO.ISOEntOrg_DataAbertura,
                      NULL AS ISONivEsc_Codigo,
                      NULL AS ISOEstCiv_Codigo,
                      NULL AS ISOProf_Codigo,
                      'N' AS ISOEntPes_Sexo,
                      ISOENTORGANIZACAO.ISOEntOrg_DataCadastro,
                      ISOENTORGANIZACAO.ISOEntOrg_Observacao,
                      ISOENTORGANIZACAO.ISOEntOrg_Flag,
                      ISOENTORGANIZACAO.ISOEntOrg_DataAlteracao,
                      ISOENTORGANIZACAO.ISOEntOrg_UsuarioAlteracao,
                      ISOENTORGANIZACAO.ISOEntOrg_Estrangeiro,
                      NULL AS ISOEntPes_RG_Data,
                      NULL AS ISOEntPes_RG_Orgao,
                      ISOENTORGANIZACAO.ISOEntSeg_Codigo,
                      ISNULL(ISOENTORGANIZACAO.ISOEntOrg_EmpCodigo,11) AS ISOEmp_Codigo,
                      ISOENTORGANIZACAO.ISOEntOrg_InscEstadual,
                      ISOENTORGANIZACAO.ISOEntRamAtv_Codigo,
                      ISOENTCLIENTE.ISOEntCli_CodigoExt,
                      ISOENTCLIENTE.ISOEntClaP_Codigo,
                      ISOENTCLIENTE.ISOEntClaPEsp_Codigo,
                      ISOENTCLIENTE.ISOEntCli_CodigoMatriz,
                      ISOENTENDERECOPRINCIPAL.ISOEntEnd_Logradouro,
                      ISOENTENDERECOPRINCIPAL.ISOEntEnd_Numero,
                      ISOENTENDERECOPRINCIPAL.ISOEntEnd_Bairro,
                      ISOENTENDERECOPRINCIPAL.ISOEntEnd_Complemento,
                      ISOLOCALIDADE.ISOLoc_Descricao,
                      ISOESTADO.ISOEst_Sigla,
                      ISOENTTELEFONE1.ISOEntTel_DDD AS ISOEntTel_DDD,
                      ISOENTTELEFONE1.ISOEntTel_Telefone AS ISOEntTel_Telefone,
                      ISOENTTELEFONE2.ISOEntTel_DDD AS ISOEntTel_DDD1,
                      ISOENTTELEFONE2.ISOEntTel_Telefone AS ISOEntTel_Telefone1,
                      ISOENTTELEFONE3.ISOEntTel_DDD AS ISOEntTel_DDD2,
                      ISOENTTELEFONE3.ISOEntTel_Telefone AS ISOEntTel_Telefone2,
                      ISOENTECONTACT.ISOEntEct_econtact,
                      (SELECT     TOP 1 ISOENTRSP_CLIENTES.ISOEntRsp_Codigo
						FROM         ISOENTRSP_CLIENTES INNER JOIN
			                      ISOENTRESPONSAVEL ON ISOENTRESPONSAVEL.ISOEmp_Codigo = ISOENTRSP_CLIENTES.ISOEmp_Codigo AND
                      ISOENTRSP_CLIENTES.ISOEntRsp_Codigo = ISOENTRESPONSAVEL.ISOEntRsp_Codigo
                      AND ISOENTORGANIZACAO.ISOEntOrg_Codigo = ISOENTRSP_CLIENTES.ISOEntCli_Codigo
                      --AND ISOENTRESPONSAVEL.ISOEntRsp_ClaCodigo = 285 AND ((ISOENTRSP_CLIENTES.ISOEntNivRsp_Codigo = 2 AND ISOENTORGANIZACAO.ISOEntSeg_Codigo IN (1)) OR (ISOENTRSP_CLIENTES.ISOEntNivRsp_Codigo = 1 AND ISOENTORGANIZACAO.ISOEntSeg_Codigo NOT IN (1)))
                      --AND ISOENTRESPONSAVEL.ISOEntRsp_ClaCodigo = 285 AND ISOENTRSP_CLIENTES.ISOEntNivRsp_Codigo = 1
                      AND ISOENTRSP_CLIENTES.ISOEntNivRsp_Codigo = 1
                      AND ISOENTRSP_CLIENTES.ISOEntRsp_Cli_Flag = 'A'
                      --AND ISOENTRSP_CLIENTES.ISOEntRsp_Cli_DataAlteracao = (SELECT MAX(ISOEntRsp_Cli_DataAlteracao) FROM ISOENTRSP_CLIENTES X WHERE X.ISOEmp_Codigo = ISOENTRSP_CLIENTES.ISOEmp_Codigo AND X.ISOEntCli_Codigo = ISOENTRSP_CLIENTES.ISOEntCli_Codigo AND ((X.ISOEntNivRsp_Codigo = 2 AND ISOENTORGANIZACAO.ISOEntSeg_Codigo IN (1)) OR (X.ISOEntNivRsp_Codigo = 1 AND ISOENTORGANIZACAO.ISOEntSeg_Codigo NOT IN (1)) AND X.ISOEntRsp_Cli_Flag = 'A'))) AS ISOEntRsp_Codigo,
                      AND ISOENTRSP_CLIENTES.ISOEntRsp_Cli_DataAlteracao = (SELECT MAX(ISOEntRsp_Cli_DataAlteracao) FROM ISOENTRSP_CLIENTES X WHERE X.ISOEmp_Codigo = ISOENTRSP_CLIENTES.ISOEmp_Codigo AND X.ISOEntCli_Codigo = ISOENTRSP_CLIENTES.ISOEntCli_Codigo AND X.ISOEntNivRsp_Codigo = 1 AND X.ISOEntRsp_Cli_Flag = 'A')) AS ISOEntRsp_Codigo,
                      (SELECT     TOP 1 ISOEMPENT_ORIGEM.ISOEmpEnt_Ori_Codigo
						FROM         ISOENTRSP_CLIENTES INNER JOIN
									ISOEMPENT_ORIGEM ON ISOENTRSP_CLIENTES.ISOEntRsp_Codigo = ISOEMPENT_ORIGEM.ISOEMPENT_ENTCODIGO AND ISOEMPENT_ORIGEM.ISOEMPORI_CODIGO = 7 INNER JOIN
			                      ISOENTRESPONSAVEL ON ISOENTRESPONSAVEL.ISOEmp_Codigo = ISOENTRSP_CLIENTES.ISOEmp_Codigo AND
                      ISOENTRSP_CLIENTES.ISOEntRsp_Codigo = ISOENTRESPONSAVEL.ISOEntRsp_Codigo
                      AND ISOENTORGANIZACAO.ISOEntOrg_Codigo = ISOENTRSP_CLIENTES.ISOEntCli_Codigo
                      --AND ISOENTRESPONSAVEL.ISOEntRsp_ClaCodigo = 285 AND ((ISOENTRSP_CLIENTES.ISOEntNivRsp_Codigo = 2 AND ISOENTORGANIZACAO.ISOEntSeg_Codigo IN (1)) OR (ISOENTRSP_CLIENTES.ISOEntNivRsp_Codigo = 1 AND ISOENTORGANIZACAO.ISOEntSeg_Codigo NOT IN (1)))
                      --AND ISOENTRESPONSAVEL.ISOEntRsp_ClaCodigo = 285 AND ISOENTRSP_CLIENTES.ISOEntNivRsp_Codigo = 1
                      AND ISOENTRSP_CLIENTES.ISOEntNivRsp_Codigo = 1
                      AND ISOENTRSP_CLIENTES.ISOEntRsp_Cli_Flag = 'A'
                      --AND ISOENTRSP_CLIENTES.ISOEntRsp_Cli_DataAlteracao = (SELECT MAX(ISOEntRsp_Cli_DataAlteracao) FROM ISOENTRSP_CLIENTES X WHERE X.ISOEmp_Codigo = ISOENTRSP_CLIENTES.ISOEmp_Codigo AND X.ISOEntCli_Codigo = ISOENTRSP_CLIENTES.ISOEntCli_Codigo AND ((X.ISOEntNivRsp_Codigo = 2 AND ISOENTORGANIZACAO.ISOEntSeg_Codigo IN (1)) OR (X.ISOEntNivRsp_Codigo = 1 AND ISOENTORGANIZACAO.ISOEntSeg_Codigo NOT IN (1)) AND X.ISOEntRsp_Cli_Flag = 'A'))) AS Responsavel
                      AND ISOENTRSP_CLIENTES.ISOEntRsp_Cli_DataAlteracao = (SELECT MAX(ISOEntRsp_Cli_DataAlteracao) FROM ISOENTRSP_CLIENTES X WHERE X.ISOEmp_Codigo = ISOENTRSP_CLIENTES.ISOEmp_Codigo AND X.ISOEntCli_Codigo = ISOENTRSP_CLIENTES.ISOEntCli_Codigo AND X.ISOEntNivRsp_Codigo = 1 AND X.ISOEntRsp_Cli_Flag = 'A')) AS Responsavel
FROM         ISOENTORGANIZACAO LEFT OUTER JOIN
                      ISOENTECONTACT ON ISOENTECONTACT.ISOEnt_Codigo = ISOENTORGANIZACAO.ISOEntOrg_Codigo AND (ISOENTECONTACT.ISOEntEctTip_Principal = 'S') AND (ISOENTECONTACT.ISOEntEml_Flag = 'A') AND (ISOENTECONTACT.ISOEntEctTip_Codigo = 1) LEFT OUTER JOIN
                      ISOENTTELEFONE AS ISOENTTELEFONE1 ON ISOENTORGANIZACAO.ISOEntOrg_Codigo = ISOENTTELEFONE1.ISOEnt_Codigo AND (ISOENTTELEFONE1.ISOEntTel_Flag = 'A') AND (ISOENTTELEFONE1.ISOEntTel_Principal = 'S') LEFT OUTER JOIN
                      ISOENTTELEFONE AS ISOENTTELEFONE2 ON ISOENTORGANIZACAO.ISOEntOrg_Codigo = ISOENTTELEFONE2.ISOEnt_Codigo AND (ISOENTTELEFONE2.ISOEntTel_Codigo = 1) LEFT OUTER JOIN
                      ISOENTTELEFONE AS ISOENTTELEFONE3 ON ISOENTORGANIZACAO.ISOEntOrg_Codigo = ISOENTTELEFONE3.ISOEnt_Codigo AND (ISOENTTELEFONE3.ISOEntTel_Codigo = 2) LEFT OUTER JOIN
                      ISOLOCALIDADE LEFT OUTER JOIN
                      ISOENTENDERECOPRINCIPAL ON ISOLOCALIDADE.ISOLoc_Codigo = ISOENTENDERECOPRINCIPAL.ISOLoc_Codigo AND (ISOENTENDERECOPRINCIPAL.ISOEntEnd_Principal = 'S') LEFT OUTER JOIN
                      ISOESTADO ON ISOLOCALIDADE.ISOPais_Codigo = ISOESTADO.ISOPais_Codigo AND ISOLOCALIDADE.ISOEst_Codigo = ISOESTADO.ISOEst_Codigo ON
                      ISOENTORGANIZACAO.ISOEntOrg_Codigo = ISOENTENDERECOPRINCIPAL.ISOEnt_Codigo LEFT OUTER JOIN
                      ISOENTCLIENTE ON ISOENTORGANIZACAO.ISOEntOrg_Codigo = ISOENTCLIENTE.ISOEntCli_Codigo
--WHERE     (ISOENTORGANIZACAO.ISOEntOrg_Flag = 'A') -- 19/05/2017 - conforme chamado 68554 do Tony;


-- dbo.ISOULTVENCLI source

CREATE VIEW [dbo].[ISOULTVENCLI]
AS
SELECT     ISOPVPEDIDO.ISOEmp_Codigo, ISOPVPEDIDO.ISOPvPed_CliCodigo, ISOPVPEDITEM.ISOPrd_Codigo, MAX(ISOPVPEDIDO.ISOPvPed_DtaAberPedido) ISOPvPed_DtaAberPedido,
                      ISNULL(ISOPRDATTLEVEL1.ISOPrdAttOptValue,'') ISOPrdAttOptValue
FROM         ISOPVPEDIDO INNER JOIN
                      ISOPVPEDITEM ON ISOPVPEDIDO.ISOEmp_Codigo = ISOPVPEDITEM.ISOEmp_Codigo AND ISOPVPEDIDO.ISOPvPed_Codigo = ISOPVPEDITEM.ISOPvPed_Codigo LEFT OUTER JOIN
                      ISOPRDATTVALUES ON ISOPRDATTVALUES.ISOEmp_Codigo = ISOPVPEDITEM.ISOEmp_Codigo AND ISOPRDATTVALUES.ISOPrd_Codigo = ISOPVPEDITEM.ISOPrd_Codigo AND (ISOPRDATTVALUES.ISOPrdAttId = 17) LEFT OUTER JOIN
                      ISOPRDATTLEVEL1 ON ISOPRDATTLEVEL1.ISOEmp_Codigo = ISOPRDATTVALUES.ISOEmp_Codigo AND ISOPRDATTLEVEL1.ISOPrdAttId = ISOPRDATTVALUES.ISOPrdAttId AND
                      ISOPRDATTLEVEL1.ISOPrdAttOptId = ISOPRDATTVALUES.ISOPrdAttOptId
WHERE     (ISOPVPEDIDO.ISOEmp_Codigo = 11) AND (ISOPVPEDIDO.ISOPvPedSit_Codigo NOT IN (8, 9)) AND (ISOPVPEDIDO.ISOPvPed_DtaAberPedido >= '2001-01-01 00:00:00')
GROUP BY ISOPVPEDIDO.ISOEmp_Codigo, ISOPVPEDIDO.ISOPvPed_CliCodigo, ISOPVPEDITEM.ISOPrd_Codigo, ISOPRDATTLEVEL1.ISOPrdAttOptValue;


-- dbo.MACROISOPvCotacaoCustomerCare source

CREATE VIEW [dbo].[MACROISOPvCotacaoCustomerCare_teste]
as
with
	PEDIDO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPed_CliCodigo,
			ISOPvPed_EstadoOrigem,
			ISOPvPed_EstadoDestino,
			ISOPvPed_CodigoAtendente,
			ISOPvPedSit_Codigo,
			ISOPvPedOri_Codigo,
			ISOPvPed_CodEndCobranca,
			ISOPvPed_ValorTotalPedido,
			ISOPeCndPgt_Codigo,
			ISOPvPed_ValorFrete,
			ISOPvPedTip_Codigo,
			ISOPvPed_Pagamento, -- Condição de pagamento
			ISOPVPed_OrdCompra,
			ISOPvPed_DtaSolEntrega,
			ISOPvPed_CodEndEntrega,
			ISOPvPed_DataAlteracao,
			ISOPvPed_DtaPedido,  -- Data do pedido
			ISOPvPed_HoraPedido, -- Hora do pedido
			ISOEnt_Nome
		FROM ISOPVPEDIDO WITH (nOLOCK)  INNER JOIN ISOENTIDADE
			ON ISOENT_CODIGO = ISOPvPed_UsuarioAlteracao
		WHERE
			ISOEmp_Codigo = 11
			and ISOPvPedSit_Codigo = 8
			and ISOPvPed_DtaPedido >= (getdate() - 60)
			),
	PEDIDO_ITEM AS (
		SELECT
			ISOPVPEDITEM.ISOEmp_Codigo,
			ISOPVPEDITEM.ISOPvPed_Codigo,
			ISOPVPEDITEM.ISOPvPedIte_Codigo,
			ISOPVPEDITEM.ISOPrd_Codigo,
			ISOPVPEDITEM.ISOPvPedIte_Quantidade,
			ISOPVPEDITEM.ISOPvPedIte_DtaSolEntrega,
			ISOPVPEDITEM.ISOPvPedIte_UnidadeOrigem,
			ISOPVPEDITEM.ISOPvPedIte_UnidadeDestino,
			ISOPVPEDITEM.ISOPvPedIte_ValorUnitario,
			ISOPVPEDITEM.ISOPvPedIteSit_Codigo,
			ISOPVPEDITEM.ISOPvPedIte_AgendamentoData,
			ISOPVPEDITEM.ISOPvPedIte_AgendamentoHoraIni,
			ISOPVPEDITEM.ISOPvPedIte_AgendamentoHoraFin,
			ISOPVPEDITEM.ISOPvPedIte_ValorEmpenho,
			ISOPVPEDITEM.ISOPvPedIte_PrecoLista,
			ISOPVPEDITEM.ISOPvPedIte_ValorIPI,
			ISOPVPEDITEM.ISOPvPedIte_VlrSubsTributaria,
			ISOPVPEDITEM.ISOPvPedIte_ValorICMS,
			ISOPVPEDITEM.ISOPvPedIte_ValorPIS,
			ISOPVPEDITEM.ISOPvPedIte_ValorCofins,
			ISOPVPEDITEM.ISOPVPedIte_ValorFCPST,
			ISOPVPEDITEM.ISOPvPedIte_ValorFCP,
			ISOPVPEDITEM.ISOPvPedIte_ValorTotalCalculoF,
			ISOPVPEDITEM.ISOPvPedIte_DataEntregaItem,
			ISOPVPEDITEM.ISOPvPedIte_PercentualIPI,
			ISOPVPEDITEM.ISOPvPedIte_PercSubsTributaria,
			ISOPVPEDITEM.ISOPvPedIte_PercentualFCPST
		FROM ISOPVPEDITEM WITH (nOLOCK) INNER JOIN ISOPVPEDIDO
			ON ISOPVPEDITEM.ISOEmp_Codigo = ISOPVPEDIDO.ISOEmp_Codigo
			AND ISOPVPEDITEM.ISOPvPed_Codigo = ISOPVPEDIDO.ISOPvPed_Codigo
		WHERE
			ISOPVPEDITEM.ISOEmp_Codigo = 11
			and ISOPVPEDIDO.ISOPvPedSit_Codigo = 8
			and ISOPvPed_DtaPedido >= (getdate() - 60)
			),
	TOTAL_LINHAS_PEDIDO AS (
		SELECT
			ISOPVPEDITEM.ISOEmp_Codigo,
			ISOPVPEDITEM.ISOPvPed_Codigo,
			COUNT(*) AS ISOPvPedIte_TotalLinhas
		FROM ISOPVPEDITEM WITH (nOLOCK)  INNER JOIN ISOPVPEDIDO
			ON ISOPVPEDITEM.ISOEmp_Codigo = ISOPVPEDIDO.ISOEmp_Codigo
			AND ISOPVPEDITEM.ISOPvPed_Codigo = ISOPVPEDIDO.ISOPvPed_Codigo
		WHERE
			ISOPVPEDITEM.ISOEmp_Codigo = 11
			AND ISOPvPedIteSit_Codigo = 1
			and ISOPVPEDIDO.ISOPvPedSit_Codigo = 8
			and ISOPvPed_DtaPedido >= (getdate() - 60)
		GROUP BY
			ISOPVPEDITEM.ISOEmp_Codigo,
			ISOPVPEDITEM.ISOPvPed_Codigo),
	TOTAL_PEDIDO_EMPENHO AS (
		SELECT
			ISOPVPEDITEM.ISOEmp_Codigo,
			ISOPVPEDITEM.ISOPvPed_Codigo,
			SUM(ISOPvPedIte_Quantidade * ISOPvPedIte_ValorEmpenho) AS ISOPvPed_ValorTotalPedido
		FROM         ISOPVPEDITEM WITH (nOLOCK) INNER JOIN ISOPVPEDIDO
			ON ISOPVPEDITEM.ISOEmp_Codigo = ISOPVPEDIDO.ISOEmp_Codigo
			AND ISOPVPEDITEM.ISOPvPed_Codigo = ISOPVPEDIDO.ISOPvPed_Codigo
		WHERE     (ISOPVPEDITEM.ISOEmp_Codigo = 11) AND (ISOPVPEDITEM.ISOPvPedIteSit_Codigo = 1)
		and ISOPVPEDIDO.ISOPvPedSit_Codigo = 8
		and ISOPvPed_DtaPedido >= (getdate() - 60)
		GROUP BY ISOPVPEDITEM.ISOEmp_Codigo, ISOPVPEDITEM.ISOPvPed_Codigo),
	TOTAL_PEDIDO AS (
		SELECT
			ISOPVPEDITEM.ISOEmp_Codigo,
			ISOPVPEDITEM.ISOPvPed_Codigo,
			SUM(ISOPvPedIte_Quantidade * ISOPvPedIte_ValorUnitario) AS ISOPvPed_ValorTotalPedido
		FROM         ISOPVPEDITEM WITH (nOLOCK) INNER JOIN ISOPVPEDIDO
			ON ISOPVPEDITEM.ISOEmp_Codigo = ISOPVPEDIDO.ISOEmp_Codigo
			AND ISOPVPEDITEM.ISOPvPed_Codigo = ISOPVPEDIDO.ISOPvPed_Codigo
		WHERE     (ISOPVPEDITEM.ISOEmp_Codigo = 11) AND (ISOPVPEDITEM.ISOPvPedIteSit_Codigo = 1) --and ISOPvPed_Codigo >= 8741752
		and ISOPVPEDIDO.ISOPvPedSit_Codigo = 8
		and ISOPvPed_DtaPedido >= (getdate() - 60)
		GROUP BY ISOPVPEDITEM.ISOEmp_Codigo, ISOPVPEDITEM.ISOPvPed_Codigo),
	--ATENDENTE_PEDIDO AS (
	--	SELECT
	--		ISOEnt_Codigo,
	--		ISOEnt_Nome
	--	FROM ISOENTIDADE WITH (nOLOCK)),
	PRODUTO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPrd_Codigo,
			ISOPrd_Descricao
		FROM ISOPRODUTO WITH (nOLOCK)
		WHERE (ISOEmp_Codigo = 11)),
	FATOR_CONVERSAO_PRODUTO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPrdUndFatC_PrdCodigo,
			ISOPrdUndFatC_UndOrigem,
			ISOPrdUndFatC_UndDestino,
			ISOPrdUndFatC_FatorConversao,
			ISOPrdUndFatC_Flag,
			ISOPrdUndFatC_Armazem
		FROM ISOPRDUNDFATORCONVERSAO WITH (nOLOCK)),
	CLIENTE AS (
		SELECT
			ISOEmp_Codigo,
			ISOEntCli_Codigo,
			ISOEntCli_Operacao
		FROM ISOENTCLIENTE WITH (nOLOCK)
		WHERE ISOEntCli_Codigo IN (SELECT ISOPvPed_CliCodigo FROM ISOPVPEDIDO WHERE ISOEMP_CODIGO = 11 AND ISOPVPEDSIT_CODIGO = 8 AND ISOPvPed_DtaPedido >= (getdate() - 60))),
	LOCAL_FATURAMENTO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvCD_Origem,
			ISOPvCD_Destino,
			ISOPvCDOri_Pedido,
			ISOPvCDOri_Armazem
		FROM ISOPVCDORIGEM WITH (nOLOCK)),
	EMPENHO AS (
		SELECT
			ISOEmp_Codigo,
			ISOCttPedCon_PedidoCodigo,
			ISOCttPedCon_NumeroEmp
		FROM ISOCTPEDCONTRATO WITH (nOLOCK)),
	TABELA_CLIENTE AS (
		SELECT
			ISOEmp_Codigo,
			ISOEntCli_Codigo,
			ISOEntClienteAttId,
			ISOEntClienteAttOtherValue
		FROM ISOENTCLIENTEATTVALUES WITH (nOLOCK)
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOEntClienteAttId = 99 and
			ISOEntCli_Codigo IN (SELECT ISOPvPed_CliCodigo FROM ISOPVPEDIDO WHERE ISOEMP_CODIGO = 11 AND ISOPVPEDSIT_CODIGO = 8 AND ISOPvPed_DtaPedido >= (getdate() - 60))),
	ESTABELECIMENTO_LX AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvCD_Origem,
			ISOPvCD_Destino,
			ISOPvCD_Estabelecimento
		FROM ISOPVCD WITH (nOLOCK)),
	ORIGEM_PROTHEUS AS (
		SELECT
			ISOEmp_Codigo,
			ISOEmpEnt_EntCodigo,
			ISOEmpOri_Codigo,
			ISOEmpEnt_Ori_Codigo
		FROM ISOEMPENT_ORIGEM WITH (nOLOCK)
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOEmpOri_Codigo = 13),
	ORIGEM_LX AS (
		SELECT
			ISOEmp_Codigo,
			ISOEmpEnt_EntCodigo,
			ISOEmpOri_Codigo,
			ISOEmpEnt_Ori_Codigo
		FROM ISOEMPENT_ORIGEM WITH (nOLOCK)
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOEmpOri_Codigo = 2),
	CONDICAO_PAGAMENTO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPeCndPgt_Codigo,
			ISOPeCntPgt_Forma
		FROM ISOPECNDPAGAMENTO WITH (nOLOCK)),
	ANALISE_CREDITO AS (
		SELECT
			ISOWFTRF_PEDIDO.ISOEmp_Codigo,
			ISOWFTRF_PEDIDO.ISOPvPed_Codigo,
		    CASE WHEN ISOWFTrf_RspExe_RspCodigo IS NULL THEN '' ELSE CONVERT(VARCHAR(8), ISOWFTrf_DataSolucao, 112) END AS ISOWFTrf_DataLiberacaoCredito,  -- Data em que a tarefa de liberação de crédito foi executada
			CASE WHEN ISOWFTrf_RspExe_RspCodigo IS NULL THEN '' ELSE CONVERT(VARCHAR(8), ISOWFTrf_DataSolucao, 108) END AS ISOWFTrf_HoraLiberacaoCredito,
			CASE WHEN ISOWFTrf_RspExe_RspCodigo IS NULL THEN '' ELSE COALESCE(CAST(ISOWFTrf_RspExe_RspCodigo AS VARCHAR(10)),'')+'-'+COALESCE(USUARIO_CEDITO.ISOEnt_Nome,'') END AS ISOWFTrf_CodigoAtendente
		FROM ISOWFTRF_PEDIDO INNER JOIN ISOWFPROCEDIMENTO ON
			ISOWFTRF_PEDIDO.ISOEmp_Codigo = ISOWFPROCEDIMENTO.ISOEmp_Codigo AND
			ISOWFTRF_PEDIDO.ISOWFTrf_Ped_PrcCodigo = ISOWFPROCEDIMENTO.ISOWFPrc_Codigo AND
			ISOWFPROCEDIMENTO.ISOWFPrcPad_Codigo IN (324,327) AND -- PROCEDIMENTO ( PEDIDO - ANALISE DE CREDITO)
			ISOWFTRF_PEDIDO.ISOWFTrf_Ped_TrfCodigo = 1 --- CÓDIGO DA TAREFA QUE O ATENDENTE IRÁ CONFIRMAR O CRÉDITO DO CLIENTE ********
		INNER JOIN ISOWFTAREFA ON -- TAREFA DE LIBERAÇÃO DE CRÉDITO
			ISOWFTRF_PEDIDO.ISOEmp_Codigo = ISOWFTAREFA.ISOEmp_Codigo AND
			ISOWFTRF_PEDIDO.ISOWFTrf_Ped_PrcCodigo = ISOWFTAREFA.ISOWFPrc_Codigo AND
			ISOWFTRF_PEDIDO.ISOWFTrf_Ped_TrfCodigo = ISOWFTAREFA.ISOWFTrfPad_Codigo AND
			ISOWFTAREFA.ISOWFTrfPad_Codigo = 1 AND  -- TAREFA (ANALISAR PEDIDO RETIDO EM CREDITO)
			ISOWFTAREFA.ISOWFTrfPadSit_Codigo = 1  -- SITUACAO (PEDIDO APROVADO DE CREDITO)
		INNER JOIN ISOENTIDADE AS USUARIO_CEDITO ON -- USUÁRIO QUE LIBEROU O CRÉDITO DO CLIENTE
			ISOWFTAREFA.ISOWFTrf_RspExe_RspCodigo = USUARIO_CEDITO.ISOEnt_Codigo
		WHERE ISOWFTRF_PEDIDO.ISOEmp_Codigo = 11 AND
		ISOWFTRF_PEDIDO.ISOPvPed_Codigo IN (SELECT ISOPVPED_CODIGO FROM ISOPVPEDIDO WHERE ISOEMP_CODIGO = 11 AND ISOPVPEDSIT_CODIGO = 8 AND ISOPvPed_DtaPedido >= (getdate() - 60)) AND
		ISOWFTRF_PEDIDO.ISOWFTrf_Ped_PrcCodigo = (SELECT MAX(X.ISOWFTrf_Ped_PrcCodigo) FROM ISOWFTRF_PEDIDO X WHERE ISOWFTRF_PEDIDO.ISOEmp_Codigo = X.ISOEmp_Codigo AND ISOWFTRF_PEDIDO.ISOPvPed_Codigo = X.ISOPvPed_Codigo)),
	TIPO_FRETE AS (
		SELECT 	DISTINCT
			ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOEmp_Codigo,
			ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOPvPed_Codigo,
			COALESCE(ISOPvPedidoAttOptValue,'') AS ISOPvPedidoTipoFrete
		FROM ISOPVPEDIDOATTVALUES AS ISOPVPEDIDOATTVALUES_TIPO_FRETE
		INNER JOIN ISOPVPEDIDOATTLEVEL1 ON
			ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOEmp_Codigo = ISOPVPEDIDOATTLEVEL1.ISOEmp_Codigo AND
			ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOPvPedidoAttId = ISOPVPEDIDOATTLEVEL1.ISOPvPedidoAttId AND
			ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOPvPedidoAttOptId = ISOPVPEDIDOATTLEVEL1.ISOPvPedidoAttOptId AND
			ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOPvPedidoAttId = 104 -- CÓDIGO DA PERGUNTA TIPO DO FRETE
		WHERE
			ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOEmp_Codigo = 11
			AND ISOPvPed_Codigo IN (SELECT ISOPVPED_CODIGO FROM ISOPVPEDIDO WHERE ISOEMP_CODIGO = 11 AND ISOPVPEDSIT_CODIGO = 8 AND ISOPvPed_DtaPedido >= (getdate() - 60))),
	TRANSPORTADORA AS (
		SELECT 	DISTINCT
			ISOPVPEDIDOATTVALUES_TRANSP.ISOEmp_Codigo,
			ISOPVPEDIDOATTVALUES_TRANSP.ISOPvPed_Codigo,
			COALESCE(ISOPvTrp_CodigoExterno,'') AS ISOPvPedido_CodigoTRP
		FROM ISOPVPEDIDOATTVALUES AS ISOPVPEDIDOATTVALUES_TRANSP
		INNER JOIN ISOPVTRANSPORTADORA ON
			ISOPVTRANSPORTADORA.ISOPvTrp_Codigo = ISOPVPEDIDOATTVALUES_TRANSP.ISOPvPedidoAttOptId AND
			ISOPVPEDIDOATTVALUES_TRANSP.ISOPvPedidoAttId = 105 AND -- CÓDIGO DA PERGUNTA TRANSPORTADORA
			ISOPVTRANSPORTADORA.ISOPvTrp_Flag = 'A'
		WHERE ISOPVPEDIDOATTVALUES_TRANSP.ISOEmp_Codigo = 11
		AND ISOPvPed_Codigo IN (SELECT ISOPVPED_CODIGO FROM ISOPVPEDIDO WHERE ISOEMP_CODIGO = 11 AND ISOPVPEDSIT_CODIGO = 8 AND ISOPvPed_DtaPedido >= (getdate() - 60))),
	--OBSERVACAO_ITEM_PEDIDO AS (
	--	SELECT
	--		ISOEmp_Codigo,
	--		ISOPvPed_Codigo,
	--		ISOPvPedIte_Codigo,
	--		ISOPvPedItemAttValue
	--	FROM ISOPVPEDITEMATTVALUES WITH (nOLOCK)
	--	WHERE
	--		ISOEmp_Codigo = 11 AND
	--		ISOPvPedItemAttId = 2),
	OC_DO_CLIENTE AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (nOLOCK)
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 2
			AND ISOPvPed_Codigo IN (SELECT ISOPVPED_CODIGO FROM ISOPVPEDIDO WHERE ISOEMP_CODIGO = 11 AND ISOPVPEDSIT_CODIGO = 8 AND ISOPvPed_DtaPedido >= (getdate() - 60))),
	LINHA_PEDIDO_CLIENTE AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (nOLOCK)
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 18),
	LINHA_ORDEM_COMPRA AS (
		SELECT ISOPVPEDITEM.ISOEmp_Codigo, ISOPVPEDITEM.ISOPVPED_CODIGO, ITEM_PEDIDO, ITEM_CLIENTE
			FROM ISOPVPEDITEM LEFT OUTER JOIN (
			SELECT
				ISOEMP_CODIGO,
				ISOPVPED_CODIGO,
				CASE
					WHEN CHARINDEX('-',VALOR,1) > 1
					THEN SUBSTRING(VALOR,1,CHARINDEX('-',VALOR,1)-1)
					ELSE 0
				END AS ITEM_PEDIDO,
				SUBSTRING(VALOR,CHARINDEX('-',VALOR,1)+1,3) AS ITEM_CLIENTE
			FROM ISOPVPEDIDOATTVALUES CROSS APPLY DBO.SPLIT(ISOPVPEDIDOATTVALUELONG,CHAR(10))
			WHERE ISOEMP_CODIGO = 11
			AND ISOPVPEDIDOATTID = 107
			AND CHARINDEX('-',VALOR,1) > 1
			AND VALOR <> '') DADO_COMPLEMENTAR_PEDIDO
				ON ISOPVPEDITEM.ISOEmp_Codigo = DADO_COMPLEMENTAR_PEDIDO.ISOEmp_Codigo AND
					ISOPVPEDITEM.ISOPvPed_Codigo = DADO_COMPLEMENTAR_PEDIDO.ISOPvPed_Codigo AND
					ISOPVPEDITEM.ISOPvPedIte_Codigo = DADO_COMPLEMENTAR_PEDIDO.ITEM_PEDIDO
			WHERE ISOPVPEDITEM.ISOEmp_Codigo = 11
			AND ISOPVPEDITEM.ISOPvPed_Codigo IN (SELECT ISOPVPED_CODIGO FROM ISOPVPEDIDO WHERE ISOEMP_CODIGO = 11 AND ISOPVPEDSIT_CODIGO = 8 AND ISOPvPed_DtaPedido >= (getdate() - 60))),
	LOTE1 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- lote 1 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 3),
	QTD1 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- qtde 1 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 4),
	LOTE2 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- lote 2 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 5),
	QTD2 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- qtde 2 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 6),
	LOTE3 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- lote 3 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 7),
	QTD3 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- qtde 3 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 8),
	LOTE4 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- lote 4 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 9),
	QTD4 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- qtde 4 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 10),
	LOTE5 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- lote 5 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 11),
	QTD5 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK)-- qtde 5 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 12),
	NATUREZA_OPERACAO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPedTip_Codigo,
			COALESCE(ISOPvPedTip_NaturezaOperacaoCo,'') AS ISOPvPedTip_NaturezaOperacaoCo
		FROM ISOPVPEDTIPO WITH (nOLOCK)
		WHERE
			ISOEmp_Codigo = 11)
	--MATRIZ_ICMS AS (
	--	SELECT
	--		ISOEmp_Codigo,
	--		ISOPvPed_CliCodigo,
	--		ISOPvPed_Codigo,
	--		ISOPvPedIte_Codigo,
	--		ISOPrd_Codigo,
	--		ISOPvMatICMS_SubTribICMSDocFis,
	--		ISOPvMatICMS_AliquotaICMS
	--	FROM MacroConsultaMatrizICMS WITH (NOLOCK)
	--	WHERE
	--		ISOEmp_Codigo = 11)
SELECT
	PEDIDO.ISOEmp_Codigo, -- Código da empresa
	PEDIDO.ISOPvPed_Codigo, -- Código CRM do Pedido
	PEDIDO.ISOPvPed_CliCodigo, -- Código CRM do cliente
	PEDIDO.ISOPvPed_DtaPedido,  -- Data do pedido
	PEDIDO.ISOPvPed_HoraPedido, -- Hora do pedido
	PEDIDO.ISOPvPedSit_Codigo,
	CASE CONDICAO_PAGAMENTO.ISOPeCntPgt_Forma
		WHEN 'Bol' THEN 'BOLETO'
		WHEN 'Car' THEN 'CARTAO'
		WHEN 'Che' THEN 'CHEQUE'
		WHEN 'Dep' THEN 'DEPOSITO'
		WHEN 'Din' THEN 'Dinheiro'
	END AS ISOPeCntPgt_Forma, -- Forma de pagamento
	PEDIDO.ISOPvPed_Pagamento, -- Condição de pagamento
	PEDIDO.ISOPvPed_DtaSolEntrega,
	PEDIDO.ISOPvPed_CodEndEntrega,
	PEDIDO.ISOPvPed_DataAlteracao,
	PEDIDO.ISOPvPedOri_Codigo,
	PEDIDO.ISOPvPedTip_Codigo,
	PEDIDO.ISOPvPed_CodEndCobranca,

	CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0 THEN TOTAL_PEDIDO_EMPENHO.ISOPvPed_ValorTotalPedido ELSE PEDIDO.ISOPvPed_ValorTotalPedido END AS ISOPvPed_ValorTotalPedido,

	PEDIDO_ITEM.ISOPvPedIte_Codigo, -- Sequencial do item do pedido
	PEDIDO_ITEM.ISOPrd_Codigo, -- Código do produto
	PRODUTO.ISOPrd_Descricao,
	CASE
		WHEN ISNULL(NULLIF(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0),0) = 0
		THEN 0
		ELSE PEDIDO_ITEM.ISOPvPedIte_Quantidade
	END ISOPvPedIte_Quantidade,
	PEDIDO_ITEM.ISOPvPedIte_DataEntregaItem AS ISOPvPedIte_DataPromessa,
	PEDIDO_ITEM.ISOPvPedIte_DtaSolEntrega,
	PEDIDO_ITEM.ISOPvPedIte_UnidadeOrigem,
	PEDIDO_ITEM.ISOPvPedIte_UnidadeDestino,
	ROUND(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0) AS ISOPrdUndFatC_FatorConversao, -- Fator de conversão sem decimais
	ROUND(PEDIDO_ITEM.ISOPvPedIte_Quantidade * ROUND(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0),0) AS ISOPvPedIte_Qtd_UM_estoque,
	CASE
		WHEN ISNULL(NULLIF(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0),0) = 0
		THEN 0
		ELSE CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho >0 THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho ELSE ROUND(PEDIDO_ITEM.ISOPvPedIte_ValorUnitario,6) END
	END ISOPvPedIte_Vlr_Total_Unitario,

	CASE
		WHEN ISNULL(NULLIF(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0),0) = 0
		THEN 0
		ELSE CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0 THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho ELSE ROUND(PEDIDO_ITEM.ISOPvPedIte_ValorUnitario,6) END / NULLIF(ROUND(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0),0)
	END ISOPvPedIte_Vlr_Total_Unitario_EST,

	PEDIDO_ITEM.ISOPvPedIteSit_Codigo,
	PEDIDO_ITEM.ISOPvPedIte_AgendamentoData,
	PEDIDO_ITEM.ISOPvPedIte_AgendamentoHoraIni,
	PEDIDO_ITEM.ISOPvPedIte_AgendamentoHoraFin,
	PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,
	PEDIDO_ITEM.ISOPvPedIte_ValorUnitario,
	CASE
		WHEN COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) > 0
		THEN 0
		ELSE COALESCE(PEDIDO.ISOPvPed_ValorFrete,0)
	END AS ISOPvPed_ValorFrete,
	COALESCE(ORIGEM_PROTHEUS.ISOEmpEnt_Ori_Codigo,'') AS ISOEmpEnt_CliCod_ERP,
	ORIGEM_LX.ISOEmpEnt_Ori_Codigo AS ISOEmpEnt_Ori_LX,
	LOCAL_FATURAMENTO.ISOPvCDOri_Armazem AS ISOPvPedIte_Armazem,
	COALESCE(CLIENTE.ISOEntCli_Operacao,'') AS ISOEntCli_Operacao,
	ESTABELECIMENTO_LX.ISOPvCD_Estabelecimento AS ISOPvCD_Estabelecimento_LX,
	PEDIDO.ISOPvPed_CodigoAtendente AS ISOPvPed_CodigoAtendente, -- Código do atendente que criou o pedido
	pedido.ISOEnt_Nome AS ISOEnt_NomeAtendente, -- Nome do atendente que criou o pedido

	COALESCE(ANALISE_CREDITO.ISOWFTrf_DataLiberacaoCredito,'') AS ISOWFTrf_DataLiberacaoCredito, -- Data em que a tarefa de liberação de crédito foi executada
    COALESCE(ANALISE_CREDITO.ISOWFTrf_HoraLiberacaoCredito,'') AS ISOWFTrf_HoraLiberacaoCredito,  -- Hora em que a tarefa de liberação de crédito foi executada
    COALESCE(ANALISE_CREDITO.ISOWFTrf_CodigoAtendente,'') AS ISOWFTrf_CodigoAtendente, -- Responsável que executou a tarefa de liberação de crédito

	CASE
		WHEN PEDIDO.ISOPvPedOri_Codigo = 'EUR' THEN 3
		WHEN PEDIDO.ISOPvPedOri_Codigo = 'EU1' THEN 3
		WHEN PEDIDO.ISOPvPedOri_Codigo = 'USD' THEN 2
		WHEN PEDIDO.ISOPvPedOri_Codigo = 'US1' THEN 2
		ELSE 1
	END AS ISOMoe_Codigo,

	COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorIPI,0) AS ISOPvPedIte_ValorIPI,
	COALESCE(PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria,0) AS ISOPvPedIte_VlrSubsTrib,
	COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorICMS,0) AS ISOPvPedIte_ValorICMS,
	COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorPIS,0) AS ISOPvPedIte_ValorPIS,
	COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorCofins,0) AS ISOPvPedIte_ValorCofins,
	COALESCE(PEDIDO_ITEM.ISOPVPedIte_ValorFCPST,0) AS ISOPVPedIte_ValorFCPST,
	COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorFCP,0) AS ISOPvPedIte_ValorFCP,
	COALESCE(TRANSPORTADORA.ISOPvPedido_CodigoTRP,'') AS ISOPvPedido_CodigoTRP,
	COALESCE(TIPO_FRETE.ISOPvPedidoTipoFrete,'') AS ISOPvPedidoTipoFrete,
	COALESCE(TABELA_CLIENTE.ISOEntClienteAttOtherValue,'') AS ISOEmpEnt_Tabela_Preco,
	PEDIDO_ITEM.ISOPvPedIte_PrecoLista,
	COALESCE(RTRIM(LTRIM(SUBSTRING(OC_DO_CLIENTE.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_NrOrdemCompra,

	COALESCE(LINHA_PEDIDO_CLIENTE.ISOPvPedItemAttValue,LINHA_ORDEM_COMPRA.ITEM_CLIENTE,'') AS ISOPvPedIte_LinhaOrdemCompra,

	COALESCE(RTRIM(LTRIM(SUBSTRING(LOTE1.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_Lote1,
	COALESCE(RTRIM(LTRIM(SUBSTRING(QTD1.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_QtdeLote1,
	COALESCE(RTRIM(LTRIM(SUBSTRING(LOTE2.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_Lote2,
	COALESCE(RTRIM(LTRIM(SUBSTRING(QTD2.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_QtdeLote2,
	COALESCE(RTRIM(LTRIM(SUBSTRING(LOTE3.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_Lote3,
	COALESCE(RTRIM(LTRIM(SUBSTRING(QTD3.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_QtdeLote3,
	COALESCE(RTRIM(LTRIM(SUBSTRING(LOTE4.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_Lote4,
	COALESCE(RTRIM(LTRIM(SUBSTRING(QTD4.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_QtdeLote4,
	COALESCE(RTRIM(LTRIM(SUBSTRING(LOTE5.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_Lote5,
	COALESCE(RTRIM(LTRIM(SUBSTRING(QTD5.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_QtdeLote5,
	COALESCE(NATUREZA_OPERACAO.ISOPvPedTip_NaturezaOperacaoCo,'') AS ISOPvPed_Operacao,

	/*

	zagoto 16/09/2020  -- inativado por não ser usado no customercare
	CASE
		WHEN COALESCE(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0) = 0
			THEN 0
		ELSE
		CASE
			-- cliente TEM desoneração e o pedido é empenho
			WHEN MATRIZ_ICMS.ISOPvMatICMS_SubTribICMSDocFis = 1 AND COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) > 0
				THEN ROUND(((((PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho / (1 - (MATRIZ_ICMS.ISOPvMatICMS_AliquotaICMS/100)) / (1 + (PEDIDO_ITEM.ISOPvPedIte_PercentualIPI / 100)))))),6)
			-- cliente TEM desoneração e o pedido NÃO é empenho
			WHEN MATRIZ_ICMS.ISOPvMatICMS_SubTribICMSDocFis = 1 AND COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) = 0
				THEN ROUND(((PEDIDO_ITEM.ISOPvPedIte_ValorTotalCalculoF - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade)) ),6)
			--ELSE ROUND((CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0 THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho ELSE PEDIDO_ITEM.ISOPvPedIte_ValorUnitario END - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade) - (PEDIDO_ITEM.ISOPvPedIte_ValorIPI / PEDIDO_ITEM.ISOPvPedIte_Quantidade)),6)
			-- cliente SEM desoneração
			ELSE ROUND((CASE
							WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0
								THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho / (1 + ((PEDIDO_ITEM.ISOPvPedIte_PercSubsTributaria + PEDIDO_ITEM.ISOPvPedIte_PercentualFCPST)/100.0) ) / ((1+(PEDIDO_ITEM.ISOPvPedIte_PercentualIPI/100.0)) )
							--inativado pois não considerava o rateio do frete
							--ELSE (PEDIDO_ITEM.ISOPvPedIte_ValorUnitario - ((PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade) + PEDIDO_ITEM.ISOPVPedIte_ValorFCPST) - (PEDIDO_ITEM.ISOPvPedIte_ValorIPI / PEDIDO_ITEM.ISOPvPedIte_Quantidade))
							ELSE ((((PEDIDO_ITEM.ISOPvPedIte_ValorUnitario * PEDIDO_ITEM.ISOPvPedIte_Quantidade) - (((PEDIDO_ITEM.ISOPvPedIte_ValorUnitario * PEDIDO_ITEM.ISOPvPedIte_Quantidade) / TOTAL_PEDIDO.ISOPvPed_ValorTotalPedido) * PEDIDO.ISOPvPed_ValorFrete)) / PEDIDO_ITEM.ISOPvPedIte_Quantidade) - ((PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade) + PEDIDO_ITEM.ISOPVPedIte_ValorFCPST) - (PEDIDO_ITEM.ISOPvPedIte_ValorIPI / PEDIDO_ITEM.ISOPvPedIte_Quantidade))
						END ) ,6)
		END
	END AS ISOPvPedIte_PrecoCMLIntegracaoBO,

	CASE
		WHEN COALESCE(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0) = 0
			THEN 0
		ELSE
		CASE
			-- cliente TEM desoneração e o pedido é empenho
			WHEN MATRIZ_ICMS.ISOPvMatICMS_SubTribICMSDocFis = 1 AND COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) > 0
				THEN ROUND(((((PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho / (1 - (MATRIZ_ICMS.ISOPvMatICMS_AliquotaICMS/100)) / (1 + (PEDIDO_ITEM.ISOPvPedIte_PercentualIPI / 100))))) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao),6)
			-- cliente TEM desoneração e o pedido NÃO é empenho
			WHEN MATRIZ_ICMS.ISOPvMatICMS_SubTribICMSDocFis = 1 AND COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) = 0
				THEN ROUND(((PEDIDO_ITEM.ISOPvPedIte_ValorTotalCalculoF - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade)) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao),6)
			-- desativado 28/05/2020 pois utilizando valor dos impostos os valores não fechavam ELSE ROUND(((CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0 THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho ELSE PEDIDO_ITEM.ISOPvPedIte_ValorUnitario END - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade) - (PEDIDO_ITEM.ISOPvPedIte_ValorIPI / PEDIDO_ITEM.ISOPvPedIte_Quantidade)) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao),6)
			-- cliente SEM desoneração
			ELSE ROUND(((CASE
							WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0
								THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho / (1 + ((PEDIDO_ITEM.ISOPvPedIte_PercSubsTributaria + PEDIDO_ITEM.ISOPvPedIte_PercentualFCPST)/100.0) ) / ((1+(PEDIDO_ITEM.ISOPvPedIte_PercentualIPI/100.0)) )
							--inativado pois não considerava o rateio do frete
							--ELSE (PEDIDO_ITEM.ISOPvPedIte_ValorUnitario - ((PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade) + PEDIDO_ITEM.ISOPVPedIte_ValorFCPST) - (PEDIDO_ITEM.ISOPvPedIte_ValorIPI / PEDIDO_ITEM.ISOPvPedIte_Quantidade))
							ELSE ((((PEDIDO_ITEM.ISOPvPedIte_ValorUnitario * PEDIDO_ITEM.ISOPvPedIte_Quantidade) - (((PEDIDO_ITEM.ISOPvPedIte_ValorUnitario * PEDIDO_ITEM.ISOPvPedIte_Quantidade) / TOTAL_PEDIDO.ISOPvPed_ValorTotalPedido) * PEDIDO.ISOPvPed_ValorFrete)) / PEDIDO_ITEM.ISOPvPedIte_Quantidade) - ((PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade) + PEDIDO_ITEM.ISOPVPedIte_ValorFCPST) - (PEDIDO_ITEM.ISOPvPedIte_ValorIPI / PEDIDO_ITEM.ISOPvPedIte_Quantidade))
						END ) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao),6)
		END
	END AS ISOPvPedIte_PrecoUNESTIntegracaoBO,
	*/

	0 AS ISOPvPedIte_PrecoCMLIntegracaoBO,
	0 AS ISOPvPedIte_PrecoUNESTIntegracaoBO,

	COALESCE(EMPENHO.ISOCttPedCon_NumeroEmp,'') AS ISOPvPedido_NumeroEmpenho,
	TOTAL_LINHAS_PEDIDO.ISOPvPedIte_TotalLinhas
FROM
	PEDIDO -- CABECALHO DO PEDIDO
	INNER JOIN PEDIDO_ITEM ON -- ITEM DO PEDIDO
		PEDIDO.ISOEmp_Codigo = PEDIDO_ITEM.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = PEDIDO_ITEM.ISOPvPed_Codigo
	INNER JOIN TOTAL_LINHAS_PEDIDO ON -- TOTAL DE LINHAS DO PEDIDO
		PEDIDO.ISOEmp_Codigo = TOTAL_LINHAS_PEDIDO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = TOTAL_LINHAS_PEDIDO.ISOPvPed_Codigo
	--INNER JOIN ATENDENTE_PEDIDO ON  -- ATENDENTE QUE CRIOU O PEDIDO
	--	PEDIDO.ISOPvPed_CodigoAtendente = ATENDENTE_PEDIDO.ISOEnt_Codigo
	INNER JOIN PRODUTO ON  -- ATENDENTE QUE CRIOU O PEDIDO
		PEDIDO_ITEM.ISOEmp_Codigo = PRODUTO.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPrd_Codigo = PRODUTO.ISOPrd_Codigo
	INNER JOIN FATOR_CONVERSAO_PRODUTO ON -- UNIDADES DE MEDIDA DO ITEM DO PEDIDO
		PEDIDO_ITEM.ISOEmp_Codigo = FATOR_CONVERSAO_PRODUTO.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPrd_Codigo = FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_PrdCodigo AND
		PEDIDO_ITEM.ISOPvPedIte_UnidadeOrigem = FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_UndOrigem AND
		PEDIDO_ITEM.ISOPvPedIte_UnidadeDestino = FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_UndDestino AND
		FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_Flag = 'A' AND
		FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_Armazem = ''
	INNER JOIN CLIENTE ON -- INFORMAÇÕES DO CLIENTE
		PEDIDO.ISOEmp_Codigo = CLIENTE.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_CliCodigo = CLIENTE.ISOEntCli_Codigo
    INNER JOIN LOCAL_FATURAMENTO ON
		PEDIDO.ISOEmp_Codigo = LOCAL_FATURAMENTO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_EstadoOrigem = LOCAL_FATURAMENTO.ISOPvCD_Origem AND
        PEDIDO.ISOPvPed_EstadoDestino = LOCAL_FATURAMENTO.ISOPvCD_Destino AND
        PEDIDO.ISOPvPedOri_Codigo = LOCAL_FATURAMENTO.ISOPvCDOri_Pedido
	INNER JOIN ORIGEM_PROTHEUS ON -- PESQUISA CÓDIGO PROTHEUS DO CLIENTE
		PEDIDO.ISOEmp_Codigo = ORIGEM_PROTHEUS.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_CliCodigo = ORIGEM_PROTHEUS.ISOEmpEnt_EntCodigo AND
		ORIGEM_PROTHEUS.ISOEmpOri_Codigo = 13
	LEFT OUTER JOIN EMPENHO ON -- EMPENHO DO PEDIDO
		PEDIDO.ISOEmp_Codigo = EMPENHO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = EMPENHO.ISOCttPedCon_PedidoCodigo

	LEFT OUTER JOIN TOTAL_PEDIDO_EMPENHO ON -- EMPENHO DO PEDIDO
		PEDIDO.ISOEmp_Codigo = TOTAL_PEDIDO_EMPENHO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = TOTAL_PEDIDO_EMPENHO.ISOPvPed_Codigo

	LEFT OUTER JOIN TOTAL_PEDIDO ON -- VALOR TOTAL DO PEDIDO
		PEDIDO.ISOEmp_Codigo = TOTAL_PEDIDO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = TOTAL_PEDIDO.ISOPvPed_Codigo

	LEFT OUTER JOIN TABELA_CLIENTE ON -- TABELA DO CLIENTE
		PEDIDO.ISOEmp_Codigo = TABELA_CLIENTE.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_CliCodigo = TABELA_CLIENTE.ISOEntCli_Codigo
		AND TABELA_CLIENTE.ISOEntClienteAttId = 99
	LEFT OUTER JOIN ESTABELECIMENTO_LX ON -- ESTABELECIMENTO DO PEDIDO
		PEDIDO.ISOEmp_Codigo = ESTABELECIMENTO_LX.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_EstadoOrigem = ESTABELECIMENTO_LX.ISOPvCD_Origem AND
        PEDIDO.ISOPvPed_EstadoDestino = ESTABELECIMENTO_LX.ISOPvCD_Destino
	LEFT OUTER JOIN ORIGEM_LX ON  -- PESQUISA CÓDIGO LX DO CLIENTE
		PEDIDO.ISOEmp_Codigo = ORIGEM_LX.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_CliCodigo = ORIGEM_LX.ISOEmpEnt_EntCodigo AND
		ORIGEM_LX.ISOEmpOri_Codigo = 2
	LEFT OUTER JOIN CONDICAO_PAGAMENTO ON
		PEDIDO.ISOEmp_Codigo = CONDICAO_PAGAMENTO.ISOEmp_Codigo AND
		PEDIDO.ISOPeCndPgt_Codigo = CONDICAO_PAGAMENTO.ISOPeCndPgt_Codigo
	LEFT OUTER JOIN ANALISE_CREDITO ON  -- PESQUISA DA TAREFA DE LIBERAÇÃO DE CRÉDITO
		PEDIDO.ISOEmp_Codigo = ANALISE_CREDITO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = ANALISE_CREDITO.ISOPvPed_Codigo
	LEFT OUTER JOIN TIPO_FRETE ON -- INFORMACOES DE FRETE DO PEDIDO
		PEDIDO.ISOEmp_Codigo = TIPO_FRETE.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = TIPO_FRETE.ISOPvPed_Codigo
	LEFT OUTER JOIN TRANSPORTADORA ON -- INFORMACOES DA TRANSPORTADORA DO PEDIDO
		PEDIDO.ISOEmp_Codigo = TRANSPORTADORA.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = TRANSPORTADORA.ISOPvPed_Codigo
	LEFT OUTER JOIN	LINHA_PEDIDO_CLIENTE  ON  -- Observação do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = LINHA_PEDIDO_CLIENTE.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = LINHA_PEDIDO_CLIENTE.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = LINHA_PEDIDO_CLIENTE.ISOPvPedIte_Codigo

	LEFT OUTER JOIN	LINHA_ORDEM_COMPRA ON  -- Observação do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = LINHA_ORDEM_COMPRA.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = LINHA_ORDEM_COMPRA.ISOPvPed_Codigo AND
	    PEDIDO_ITEM.ISOPvPedIte_Codigo = LINHA_ORDEM_COMPRA.ITEM_PEDIDO

	LEFT OUTER JOIN	OC_DO_CLIENTE ON  -- Observação do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = OC_DO_CLIENTE.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = OC_DO_CLIENTE.ISOPvPed_Codigo AND
	    PEDIDO_ITEM.ISOPvPedIte_Codigo = OC_DO_CLIENTE.ISOPvPedIte_Codigo

	LEFT OUTER JOIN	LOTE1 ON  -- lote 1 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = LOTE1.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = LOTE1.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = LOTE1.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	QTD1 ON  -- qtde 1 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = QTD1.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = QTD1.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = QTD1.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	LOTE2 ON  -- lote 2 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = LOTE2.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = LOTE2.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = LOTE2.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	QTD2 ON  -- qtde 2 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = QTD2.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = QTD2.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = QTD2.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	LOTE3 ON  -- lote 3 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = LOTE3.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = LOTE3.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = LOTE3.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	QTD3 ON  -- qtde 3 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = QTD3.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = QTD3.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = QTD3.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	LOTE4 ON  -- lote 4 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = LOTE4.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = LOTE4.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = LOTE4.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	QTD4 ON  -- qtde 4 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = QTD4.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = QTD4.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = QTD4.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	LOTE5 ON  -- lote 5 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = LOTE5.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = LOTE5.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = LOTE5.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	QTD5 ON  -- qtde 5 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = QTD5.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = QTD5.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = QTD5.ISOPvPedIte_Codigo
	LEFT OUTER JOIN NATUREZA_OPERACAO ON
		PEDIDO.ISOEmp_Codigo = NATUREZA_OPERACAO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPedTip_Codigo = NATUREZA_OPERACAO.ISOPvPedTip_Codigo
	--LEFT OUTER JOIN MATRIZ_ICMS ON
	--	PEDIDO_ITEM.ISOEmp_Codigo = MATRIZ_ICMS.ISOEmp_Codigo AND
	--	PEDIDO_ITEM.ISOPvPed_Codigo = MATRIZ_ICMS.ISOPvPed_Codigo AND
	--	PEDIDO_ITEM.ISOPvPedIte_Codigo = MATRIZ_ICMS.ISOPvPedIte_Codigo
WHERE
	PEDIDO.ISOEmp_Codigo = 11 AND
	PEDIDO_ITEM.ISOPvPedIteSit_Codigo = 1;


-- dbo.MACROISOPvCotacaoCustomerCare_03122020 source

CREATE VIEW [dbo].[MACROISOPvCotacaoCustomerCare_03122020]
as
with
	PEDIDO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPed_CliCodigo,
			ISOPvPed_EstadoOrigem,
			ISOPvPed_EstadoDestino,
			ISOPvPed_CodigoAtendente,
			ISOPvPedSit_Codigo,
			ISOPvPedOri_Codigo,
			ISOPvPed_CodEndCobranca,
			ISOPvPed_ValorTotalPedido,
			ISOPeCndPgt_Codigo,
			ISOPvPed_ValorFrete,
			ISOPvPedTip_Codigo,
			ISOPvPed_Pagamento, -- Condição de pagamento
			ISOPVPed_OrdCompra,
			ISOPvPed_DtaSolEntrega,
			ISOPvPed_CodEndEntrega,
			ISOPvPed_DataAlteracao,
			ISOPvPed_DtaPedido,  -- Data do pedido
			ISOPvPed_HoraPedido -- Hora do pedido
		FROM ISOPVPEDIDO WITH (nOLOCK)
		WHERE
			ISOEmp_Codigo = 11
			and ISOPvPedSit_Codigo = 8
			),
	PEDIDO_ITEM AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			ISOPrd_Codigo,
			ISOPvPedIte_Quantidade,
			ISOPvPedIte_DtaSolEntrega,
			ISOPvPedIte_UnidadeOrigem,
			ISOPvPedIte_UnidadeDestino,
			ISOPvPedIte_ValorUnitario,
			ISOPvPedIteSit_Codigo,
			ISOPvPedIte_AgendamentoData,
			ISOPvPedIte_AgendamentoHoraIni,
			ISOPvPedIte_AgendamentoHoraFin,
			ISOPvPedIte_ValorEmpenho,
			ISOPvPedIte_PrecoLista,
			ISOPvPedIte_ValorIPI,
			ISOPvPedIte_VlrSubsTributaria,
			ISOPvPedIte_ValorICMS,
			ISOPvPedIte_ValorPIS,
			ISOPvPedIte_ValorCofins,
			ISOPVPedIte_ValorFCPST,
			ISOPvPedIte_ValorFCP,
			ISOPvPedIte_ValorTotalCalculoF,
			ISOPvPedIte_DataEntregaItem,
			ISOPvPedIte_PercentualIPI,
			ISOPvPedIte_PercSubsTributaria,
			ISOPvPedIte_PercentualFCPST
		FROM ISOPVPEDITEM WITH (nOLOCK)
		WHERE
			ISOEmp_Codigo = 11
			),
	TOTAL_LINHAS_PEDIDO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			COUNT(*) AS ISOPvPedIte_TotalLinhas
		FROM ISOPVPEDITEM WITH (nOLOCK)
		WHERE
			ISOEmp_Codigo = 11
			AND ISOPvPedIteSit_Codigo = 1
		GROUP BY
			ISOEmp_Codigo,
			ISOPvPed_Codigo),
	TOTAL_PEDIDO_EMPENHO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			SUM(ISOPvPedIte_Quantidade * ISOPvPedIte_ValorEmpenho) AS ISOPvPed_ValorTotalPedido
		FROM         ISOPVPEDITEM WITH (nOLOCK)
		WHERE     (ISOEmp_Codigo = 11) AND (ISOPvPedIteSit_Codigo = 1)
		GROUP BY ISOEmp_Codigo, ISOPvPed_Codigo),
	TOTAL_PEDIDO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			SUM(ISOPvPedIte_Quantidade * ISOPvPedIte_ValorUnitario) AS ISOPvPed_ValorTotalPedido
		FROM         ISOPVPEDITEM WITH (nOLOCK)
		WHERE     (ISOEmp_Codigo = 11) AND (ISOPvPedIteSit_Codigo = 1) --and ISOPvPed_Codigo >= 8741752
		GROUP BY ISOEmp_Codigo, ISOPvPed_Codigo),
	ATENDENTE_PEDIDO AS (
		SELECT
			ISOEnt_Codigo,
			ISOEnt_Nome
		FROM ISOENTIDADE WITH (nOLOCK)),
	PRODUTO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPrd_Codigo,
			ISOPrd_Descricao
		FROM ISOPRODUTO WITH (nOLOCK)
		WHERE (ISOEmp_Codigo = 11)),
	FATOR_CONVERSAO_PRODUTO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPrdUndFatC_PrdCodigo,
			ISOPrdUndFatC_UndOrigem,
			ISOPrdUndFatC_UndDestino,
			ISOPrdUndFatC_FatorConversao,
			ISOPrdUndFatC_Flag,
			ISOPrdUndFatC_Armazem
		FROM ISOPRDUNDFATORCONVERSAO WITH (nOLOCK)),
	CLIENTE AS (
		SELECT
			ISOEmp_Codigo,
			ISOEntCli_Codigo,
			ISOEntCli_Operacao
		FROM ISOENTCLIENTE WITH (nOLOCK)),
	LOCAL_FATURAMENTO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvCD_Origem,
			ISOPvCD_Destino,
			ISOPvCDOri_Pedido,
			ISOPvCDOri_Armazem
		FROM ISOPVCDORIGEM WITH (nOLOCK)),
	EMPENHO AS (
		SELECT
			ISOEmp_Codigo,
			ISOCttPedCon_PedidoCodigo,
			ISOCttPedCon_NumeroEmp
		FROM ISOCTPEDCONTRATO WITH (nOLOCK)),
	TABELA_CLIENTE AS (
		SELECT
			ISOEmp_Codigo,
			ISOEntCli_Codigo,
			ISOEntClienteAttId,
			ISOEntClienteAttOtherValue
		FROM ISOENTCLIENTEATTVALUES WITH (nOLOCK)
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOEntClienteAttId = 99),
	ESTABELECIMENTO_LX AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvCD_Origem,
			ISOPvCD_Destino,
			ISOPvCD_Estabelecimento
		FROM ISOPVCD WITH (nOLOCK)),
	ORIGEM_PROTHEUS AS (
		SELECT
			ISOEmp_Codigo,
			ISOEmpEnt_EntCodigo,
			ISOEmpOri_Codigo,
			ISOEmpEnt_Ori_Codigo
		FROM ISOEMPENT_ORIGEM WITH (nOLOCK)
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOEmpOri_Codigo = 13),
	ORIGEM_LX AS (
		SELECT
			ISOEmp_Codigo,
			ISOEmpEnt_EntCodigo,
			ISOEmpOri_Codigo,
			ISOEmpEnt_Ori_Codigo
		FROM ISOEMPENT_ORIGEM WITH (nOLOCK)
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOEmpOri_Codigo = 2),
	CONDICAO_PAGAMENTO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPeCndPgt_Codigo,
			ISOPeCntPgt_Forma
		FROM ISOPECNDPAGAMENTO WITH (nOLOCK)),
	ANALISE_CREDITO AS (
		SELECT
			ISOWFTRF_PEDIDO.ISOEmp_Codigo,
			ISOWFTRF_PEDIDO.ISOPvPed_Codigo,
		    CASE WHEN ISOWFTrf_RspExe_RspCodigo IS NULL THEN '' ELSE CONVERT(VARCHAR(8), ISOWFTrf_DataSolucao, 112) END AS ISOWFTrf_DataLiberacaoCredito,  -- Data em que a tarefa de liberação de crédito foi executada
			CASE WHEN ISOWFTrf_RspExe_RspCodigo IS NULL THEN '' ELSE CONVERT(VARCHAR(8), ISOWFTrf_DataSolucao, 108) END AS ISOWFTrf_HoraLiberacaoCredito,
			CASE WHEN ISOWFTrf_RspExe_RspCodigo IS NULL THEN '' ELSE COALESCE(CAST(ISOWFTrf_RspExe_RspCodigo AS VARCHAR(10)),'')+'-'+COALESCE(USUARIO_CEDITO.ISOEnt_Nome,'') END AS ISOWFTrf_CodigoAtendente
		FROM ISOWFTRF_PEDIDO INNER JOIN ISOWFPROCEDIMENTO ON
			ISOWFTRF_PEDIDO.ISOEmp_Codigo = ISOWFPROCEDIMENTO.ISOEmp_Codigo AND
			ISOWFTRF_PEDIDO.ISOWFTrf_Ped_PrcCodigo = ISOWFPROCEDIMENTO.ISOWFPrc_Codigo AND
			ISOWFPROCEDIMENTO.ISOWFPrcPad_Codigo IN (324,327) AND -- PROCEDIMENTO ( PEDIDO - ANALISE DE CREDITO)
			ISOWFTRF_PEDIDO.ISOWFTrf_Ped_TrfCodigo = 1 --- CÓDIGO DA TAREFA QUE O ATENDENTE IRÁ CONFIRMAR O CRÉDITO DO CLIENTE ********
		INNER JOIN ISOWFTAREFA ON -- TAREFA DE LIBERAÇÃO DE CRÉDITO
			ISOWFTRF_PEDIDO.ISOEmp_Codigo = ISOWFTAREFA.ISOEmp_Codigo AND
			ISOWFTRF_PEDIDO.ISOWFTrf_Ped_PrcCodigo = ISOWFTAREFA.ISOWFPrc_Codigo AND
			ISOWFTRF_PEDIDO.ISOWFTrf_Ped_TrfCodigo = ISOWFTAREFA.ISOWFTrfPad_Codigo AND
			ISOWFTAREFA.ISOWFTrfPad_Codigo = 1 AND  -- TAREFA (ANALISAR PEDIDO RETIDO EM CREDITO)
			ISOWFTAREFA.ISOWFTrfPadSit_Codigo = 1  -- SITUACAO (PEDIDO APROVADO DE CREDITO)
		INNER JOIN ISOENTIDADE AS USUARIO_CEDITO ON -- USUÁRIO QUE LIBEROU O CRÉDITO DO CLIENTE
			ISOWFTAREFA.ISOWFTrf_RspExe_RspCodigo = USUARIO_CEDITO.ISOEnt_Codigo
		WHERE ISOWFTRF_PEDIDO.ISOEmp_Codigo = 11 AND
		ISOWFTRF_PEDIDO.ISOWFTrf_Ped_PrcCodigo = (SELECT MAX(X.ISOWFTrf_Ped_PrcCodigo) FROM ISOWFTRF_PEDIDO X WHERE ISOWFTRF_PEDIDO.ISOEmp_Codigo = X.ISOEmp_Codigo AND ISOWFTRF_PEDIDO.ISOPvPed_Codigo = X.ISOPvPed_Codigo)),
	TIPO_FRETE AS (
		SELECT 	DISTINCT
			ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOEmp_Codigo,
			ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOPvPed_Codigo,
			COALESCE(ISOPvPedidoAttOptValue,'') AS ISOPvPedidoTipoFrete
		FROM ISOPVPEDIDOATTVALUES AS ISOPVPEDIDOATTVALUES_TIPO_FRETE
		INNER JOIN ISOPVPEDIDOATTLEVEL1 ON
			ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOEmp_Codigo = ISOPVPEDIDOATTLEVEL1.ISOEmp_Codigo AND
			ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOPvPedidoAttId = ISOPVPEDIDOATTLEVEL1.ISOPvPedidoAttId AND
			ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOPvPedidoAttOptId = ISOPVPEDIDOATTLEVEL1.ISOPvPedidoAttOptId AND
			ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOPvPedidoAttId = 104 -- CÓDIGO DA PERGUNTA TIPO DO FRETE
		WHERE
			ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOEmp_Codigo = 11),
	TRANSPORTADORA AS (
		SELECT 	DISTINCT
			ISOPVPEDIDOATTVALUES_TRANSP.ISOEmp_Codigo,
			ISOPVPEDIDOATTVALUES_TRANSP.ISOPvPed_Codigo,
			COALESCE(ISOPvTrp_CodigoExterno,'') AS ISOPvPedido_CodigoTRP
		FROM ISOPVPEDIDOATTVALUES AS ISOPVPEDIDOATTVALUES_TRANSP
		INNER JOIN ISOPVTRANSPORTADORA ON
			ISOPVTRANSPORTADORA.ISOPvTrp_Codigo = ISOPVPEDIDOATTVALUES_TRANSP.ISOPvPedidoAttOptId AND
			ISOPVPEDIDOATTVALUES_TRANSP.ISOPvPedidoAttId = 105 AND -- CÓDIGO DA PERGUNTA TRANSPORTADORA
			ISOPVTRANSPORTADORA.ISOPvTrp_Flag = 'A'
		WHERE ISOPVPEDIDOATTVALUES_TRANSP.ISOEmp_Codigo = 11),
	--OBSERVACAO_ITEM_PEDIDO AS (
	--	SELECT
	--		ISOEmp_Codigo,
	--		ISOPvPed_Codigo,
	--		ISOPvPedIte_Codigo,
	--		ISOPvPedItemAttValue
	--	FROM ISOPVPEDITEMATTVALUES WITH (nOLOCK)
	--	WHERE
	--		ISOEmp_Codigo = 11 AND
	--		ISOPvPedItemAttId = 2),
	OC_DO_CLIENTE AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (nOLOCK)
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 2),
	LINHA_PEDIDO_CLIENTE AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (nOLOCK)
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 18),
	LINHA_ORDEM_COMPRA AS (
		SELECT ISOPVPEDITEM.ISOEmp_Codigo, ISOPVPEDITEM.ISOPVPED_CODIGO, ITEM_PEDIDO, ITEM_CLIENTE
			FROM ISOPVPEDITEM LEFT OUTER JOIN (
			SELECT
				ISOEMP_CODIGO,
				ISOPVPED_CODIGO,
				CASE
					WHEN CHARINDEX('-',VALOR,1) > 1
					THEN SUBSTRING(VALOR,1,CHARINDEX('-',VALOR,1)-1)
					ELSE 0
				END AS ITEM_PEDIDO,
				SUBSTRING(VALOR,CHARINDEX('-',VALOR,1)+1,3) AS ITEM_CLIENTE
			FROM ISOPVPEDIDOATTVALUES CROSS APPLY DBO.SPLIT(ISOPVPEDIDOATTVALUELONG,CHAR(10))
			WHERE ISOEMP_CODIGO = 11
			AND ISOPVPEDIDOATTID = 107
			AND CHARINDEX('-',VALOR,1) > 1
			AND VALOR <> '') DADO_COMPLEMENTAR_PEDIDO
				ON ISOPVPEDITEM.ISOEmp_Codigo = DADO_COMPLEMENTAR_PEDIDO.ISOEmp_Codigo AND
					ISOPVPEDITEM.ISOPvPed_Codigo = DADO_COMPLEMENTAR_PEDIDO.ISOPvPed_Codigo AND
					ISOPVPEDITEM.ISOPvPedIte_Codigo = DADO_COMPLEMENTAR_PEDIDO.ITEM_PEDIDO
			WHERE ISOPVPEDITEM.ISOEmp_Codigo = 11),
	LOTE1 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- lote 1 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 3),
	QTD1 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- qtde 1 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 4),
	LOTE2 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- lote 2 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 5),
	QTD2 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- qtde 2 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 6),
	LOTE3 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- lote 3 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 7),
	QTD3 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- qtde 3 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 8),
	LOTE4 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- lote 4 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 9),
	QTD4 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- qtde 4 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 10),
	LOTE5 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- lote 5 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 11),
	QTD5 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK)-- qtde 5 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 12),
	NATUREZA_OPERACAO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPedTip_Codigo,
			COALESCE(ISOPvPedTip_NaturezaOperacaoCo,'') AS ISOPvPedTip_NaturezaOperacaoCo
		FROM ISOPVPEDTIPO WITH (nOLOCK)
		WHERE
			ISOEmp_Codigo = 11),
	MATRIZ_ICMS AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_CliCodigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			ISOPrd_Codigo,
			ISOPvMatICMS_SubTribICMSDocFis,
			ISOPvMatICMS_AliquotaICMS
		FROM MacroConsultaMatrizICMS WITH (NOLOCK)
		WHERE
			ISOEmp_Codigo = 11)
SELECT
	PEDIDO.ISOEmp_Codigo, -- Código da empresa
	PEDIDO.ISOPvPed_Codigo, -- Código CRM do Pedido
	PEDIDO.ISOPvPed_CliCodigo, -- Código CRM do cliente
	PEDIDO.ISOPvPed_DtaPedido,  -- Data do pedido
	PEDIDO.ISOPvPed_HoraPedido, -- Hora do pedido
	PEDIDO.ISOPvPedSit_Codigo,
	CASE CONDICAO_PAGAMENTO.ISOPeCntPgt_Forma
		WHEN 'Bol' THEN 'BOLETO'
		WHEN 'Car' THEN 'CARTAO'
		WHEN 'Che' THEN 'CHEQUE'
		WHEN 'Dep' THEN 'DEPOSITO'
		WHEN 'Din' THEN 'Dinheiro'
	END AS ISOPeCntPgt_Forma, -- Forma de pagamento
	PEDIDO.ISOPvPed_Pagamento, -- Condição de pagamento
	PEDIDO.ISOPvPed_DtaSolEntrega,
	PEDIDO.ISOPvPed_CodEndEntrega,
	PEDIDO.ISOPvPed_DataAlteracao,
	PEDIDO.ISOPvPedOri_Codigo,
	PEDIDO.ISOPvPedTip_Codigo,
	PEDIDO.ISOPvPed_CodEndCobranca,

	CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0 THEN TOTAL_PEDIDO_EMPENHO.ISOPvPed_ValorTotalPedido ELSE PEDIDO.ISOPvPed_ValorTotalPedido END AS ISOPvPed_ValorTotalPedido,

	PEDIDO_ITEM.ISOPvPedIte_Codigo, -- Sequencial do item do pedido
	PEDIDO_ITEM.ISOPrd_Codigo, -- Código do produto
	PRODUTO.ISOPrd_Descricao,
	CASE
		WHEN ISNULL(NULLIF(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0),0) = 0
		THEN 0
		ELSE PEDIDO_ITEM.ISOPvPedIte_Quantidade
	END ISOPvPedIte_Quantidade,
	PEDIDO_ITEM.ISOPvPedIte_DataEntregaItem AS ISOPvPedIte_DataPromessa,
	PEDIDO_ITEM.ISOPvPedIte_DtaSolEntrega,
	PEDIDO_ITEM.ISOPvPedIte_UnidadeOrigem,
	PEDIDO_ITEM.ISOPvPedIte_UnidadeDestino,
	ROUND(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0) AS ISOPrdUndFatC_FatorConversao, -- Fator de conversão sem decimais
	ROUND(PEDIDO_ITEM.ISOPvPedIte_Quantidade * ROUND(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0),0) AS ISOPvPedIte_Qtd_UM_estoque,
	CASE
		WHEN ISNULL(NULLIF(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0),0) = 0
		THEN 0
		ELSE CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho >0 THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho ELSE ROUND(PEDIDO_ITEM.ISOPvPedIte_ValorUnitario,6) END
	END ISOPvPedIte_Vlr_Total_Unitario,

	CASE
		WHEN ISNULL(NULLIF(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0),0) = 0
		THEN 0
		ELSE CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0 THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho ELSE ROUND(PEDIDO_ITEM.ISOPvPedIte_ValorUnitario,6) END / NULLIF(ROUND(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0),0)
	END ISOPvPedIte_Vlr_Total_Unitario_EST,

	PEDIDO_ITEM.ISOPvPedIteSit_Codigo,
	PEDIDO_ITEM.ISOPvPedIte_AgendamentoData,
	PEDIDO_ITEM.ISOPvPedIte_AgendamentoHoraIni,
	PEDIDO_ITEM.ISOPvPedIte_AgendamentoHoraFin,
	PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,
	PEDIDO_ITEM.ISOPvPedIte_ValorUnitario,
	CASE
		WHEN COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) > 0
		THEN 0
		ELSE COALESCE(PEDIDO.ISOPvPed_ValorFrete,0)
	END AS ISOPvPed_ValorFrete,
	COALESCE(ORIGEM_PROTHEUS.ISOEmpEnt_Ori_Codigo,'') AS ISOEmpEnt_CliCod_ERP,
	ORIGEM_LX.ISOEmpEnt_Ori_Codigo AS ISOEmpEnt_Ori_LX,
	LOCAL_FATURAMENTO.ISOPvCDOri_Armazem AS ISOPvPedIte_Armazem,
	COALESCE(CLIENTE.ISOEntCli_Operacao,'') AS ISOEntCli_Operacao,
	ESTABELECIMENTO_LX.ISOPvCD_Estabelecimento AS ISOPvCD_Estabelecimento_LX,
	PEDIDO.ISOPvPed_CodigoAtendente AS ISOPvPed_CodigoAtendente, -- Código do atendente que criou o pedido
	ATENDENTE_PEDIDO.ISOEnt_Nome AS ISOEnt_NomeAtendente, -- Nome do atendente que criou o pedido

	COALESCE(ANALISE_CREDITO.ISOWFTrf_DataLiberacaoCredito,'') AS ISOWFTrf_DataLiberacaoCredito, -- Data em que a tarefa de liberação de crédito foi executada
    COALESCE(ANALISE_CREDITO.ISOWFTrf_HoraLiberacaoCredito,'') AS ISOWFTrf_HoraLiberacaoCredito,  -- Hora em que a tarefa de liberação de crédito foi executada
    COALESCE(ANALISE_CREDITO.ISOWFTrf_CodigoAtendente,'') AS ISOWFTrf_CodigoAtendente, -- Responsável que executou a tarefa de liberação de crédito

	CASE
		WHEN PEDIDO.ISOPvPedOri_Codigo = 'EUR' THEN 3
		WHEN PEDIDO.ISOPvPedOri_Codigo = 'EU1' THEN 3
		WHEN PEDIDO.ISOPvPedOri_Codigo = 'USD' THEN 2
		WHEN PEDIDO.ISOPvPedOri_Codigo = 'US1' THEN 2
		ELSE 1
	END AS ISOMoe_Codigo,

	COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorIPI,0) AS ISOPvPedIte_ValorIPI,
	COALESCE(PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria,0) AS ISOPvPedIte_VlrSubsTrib,
	COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorICMS,0) AS ISOPvPedIte_ValorICMS,
	COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorPIS,0) AS ISOPvPedIte_ValorPIS,
	COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorCofins,0) AS ISOPvPedIte_ValorCofins,
	COALESCE(PEDIDO_ITEM.ISOPVPedIte_ValorFCPST,0) AS ISOPVPedIte_ValorFCPST,
	COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorFCP,0) AS ISOPvPedIte_ValorFCP,
	COALESCE(TRANSPORTADORA.ISOPvPedido_CodigoTRP,'') AS ISOPvPedido_CodigoTRP,
	COALESCE(TIPO_FRETE.ISOPvPedidoTipoFrete,'') AS ISOPvPedidoTipoFrete,
	COALESCE(TABELA_CLIENTE.ISOEntClienteAttOtherValue,'') AS ISOEmpEnt_Tabela_Preco,
	PEDIDO_ITEM.ISOPvPedIte_PrecoLista,
	COALESCE(RTRIM(LTRIM(SUBSTRING(OC_DO_CLIENTE.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_NrOrdemCompra,

	COALESCE(LINHA_PEDIDO_CLIENTE.ISOPvPedItemAttValue,LINHA_ORDEM_COMPRA.ITEM_CLIENTE,'') AS ISOPvPedIte_LinhaOrdemCompra,

	COALESCE(RTRIM(LTRIM(SUBSTRING(LOTE1.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_Lote1,
	COALESCE(RTRIM(LTRIM(SUBSTRING(QTD1.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_QtdeLote1,
	COALESCE(RTRIM(LTRIM(SUBSTRING(LOTE2.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_Lote2,
	COALESCE(RTRIM(LTRIM(SUBSTRING(QTD2.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_QtdeLote2,
	COALESCE(RTRIM(LTRIM(SUBSTRING(LOTE3.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_Lote3,
	COALESCE(RTRIM(LTRIM(SUBSTRING(QTD3.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_QtdeLote3,
	COALESCE(RTRIM(LTRIM(SUBSTRING(LOTE4.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_Lote4,
	COALESCE(RTRIM(LTRIM(SUBSTRING(QTD4.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_QtdeLote4,
	COALESCE(RTRIM(LTRIM(SUBSTRING(LOTE5.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_Lote5,
	COALESCE(RTRIM(LTRIM(SUBSTRING(QTD5.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_QtdeLote5,
	COALESCE(NATUREZA_OPERACAO.ISOPvPedTip_NaturezaOperacaoCo,'') AS ISOPvPed_Operacao,

	/*

	zagoto 16/09/2020  -- inativado por não ser usado no customercare
	CASE
		WHEN COALESCE(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0) = 0
			THEN 0
		ELSE
		CASE
			-- cliente TEM desoneração e o pedido é empenho
			WHEN MATRIZ_ICMS.ISOPvMatICMS_SubTribICMSDocFis = 1 AND COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) > 0
				THEN ROUND(((((PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho / (1 - (MATRIZ_ICMS.ISOPvMatICMS_AliquotaICMS/100)) / (1 + (PEDIDO_ITEM.ISOPvPedIte_PercentualIPI / 100)))))),6)
			-- cliente TEM desoneração e o pedido NÃO é empenho
			WHEN MATRIZ_ICMS.ISOPvMatICMS_SubTribICMSDocFis = 1 AND COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) = 0
				THEN ROUND(((PEDIDO_ITEM.ISOPvPedIte_ValorTotalCalculoF - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade)) ),6)
			--ELSE ROUND((CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0 THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho ELSE PEDIDO_ITEM.ISOPvPedIte_ValorUnitario END - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade) - (PEDIDO_ITEM.ISOPvPedIte_ValorIPI / PEDIDO_ITEM.ISOPvPedIte_Quantidade)),6)
			-- cliente SEM desoneração
			ELSE ROUND((CASE
							WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0
								THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho / (1 + ((PEDIDO_ITEM.ISOPvPedIte_PercSubsTributaria + PEDIDO_ITEM.ISOPvPedIte_PercentualFCPST)/100.0) ) / ((1+(PEDIDO_ITEM.ISOPvPedIte_PercentualIPI/100.0)) )
							--inativado pois não considerava o rateio do frete
							--ELSE (PEDIDO_ITEM.ISOPvPedIte_ValorUnitario - ((PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade) + PEDIDO_ITEM.ISOPVPedIte_ValorFCPST) - (PEDIDO_ITEM.ISOPvPedIte_ValorIPI / PEDIDO_ITEM.ISOPvPedIte_Quantidade))
							ELSE ((((PEDIDO_ITEM.ISOPvPedIte_ValorUnitario * PEDIDO_ITEM.ISOPvPedIte_Quantidade) - (((PEDIDO_ITEM.ISOPvPedIte_ValorUnitario * PEDIDO_ITEM.ISOPvPedIte_Quantidade) / TOTAL_PEDIDO.ISOPvPed_ValorTotalPedido) * PEDIDO.ISOPvPed_ValorFrete)) / PEDIDO_ITEM.ISOPvPedIte_Quantidade) - ((PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade) + PEDIDO_ITEM.ISOPVPedIte_ValorFCPST) - (PEDIDO_ITEM.ISOPvPedIte_ValorIPI / PEDIDO_ITEM.ISOPvPedIte_Quantidade))
						END ) ,6)
		END
	END AS ISOPvPedIte_PrecoCMLIntegracaoBO,

	CASE
		WHEN COALESCE(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0) = 0
			THEN 0
		ELSE
		CASE
			-- cliente TEM desoneração e o pedido é empenho
			WHEN MATRIZ_ICMS.ISOPvMatICMS_SubTribICMSDocFis = 1 AND COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) > 0
				THEN ROUND(((((PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho / (1 - (MATRIZ_ICMS.ISOPvMatICMS_AliquotaICMS/100)) / (1 + (PEDIDO_ITEM.ISOPvPedIte_PercentualIPI / 100))))) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao),6)
			-- cliente TEM desoneração e o pedido NÃO é empenho
			WHEN MATRIZ_ICMS.ISOPvMatICMS_SubTribICMSDocFis = 1 AND COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) = 0
				THEN ROUND(((PEDIDO_ITEM.ISOPvPedIte_ValorTotalCalculoF - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade)) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao),6)
			-- desativado 28/05/2020 pois utilizando valor dos impostos os valores não fechavam ELSE ROUND(((CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0 THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho ELSE PEDIDO_ITEM.ISOPvPedIte_ValorUnitario END - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade) - (PEDIDO_ITEM.ISOPvPedIte_ValorIPI / PEDIDO_ITEM.ISOPvPedIte_Quantidade)) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao),6)
			-- cliente SEM desoneração
			ELSE ROUND(((CASE
							WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0
								THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho / (1 + ((PEDIDO_ITEM.ISOPvPedIte_PercSubsTributaria + PEDIDO_ITEM.ISOPvPedIte_PercentualFCPST)/100.0) ) / ((1+(PEDIDO_ITEM.ISOPvPedIte_PercentualIPI/100.0)) )
							--inativado pois não considerava o rateio do frete
							--ELSE (PEDIDO_ITEM.ISOPvPedIte_ValorUnitario - ((PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade) + PEDIDO_ITEM.ISOPVPedIte_ValorFCPST) - (PEDIDO_ITEM.ISOPvPedIte_ValorIPI / PEDIDO_ITEM.ISOPvPedIte_Quantidade))
							ELSE ((((PEDIDO_ITEM.ISOPvPedIte_ValorUnitario * PEDIDO_ITEM.ISOPvPedIte_Quantidade) - (((PEDIDO_ITEM.ISOPvPedIte_ValorUnitario * PEDIDO_ITEM.ISOPvPedIte_Quantidade) / TOTAL_PEDIDO.ISOPvPed_ValorTotalPedido) * PEDIDO.ISOPvPed_ValorFrete)) / PEDIDO_ITEM.ISOPvPedIte_Quantidade) - ((PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade) + PEDIDO_ITEM.ISOPVPedIte_ValorFCPST) - (PEDIDO_ITEM.ISOPvPedIte_ValorIPI / PEDIDO_ITEM.ISOPvPedIte_Quantidade))
						END ) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao),6)
		END
	END AS ISOPvPedIte_PrecoUNESTIntegracaoBO,
	*/

	0 AS ISOPvPedIte_PrecoCMLIntegracaoBO,
	0 AS ISOPvPedIte_PrecoUNESTIntegracaoBO,

	COALESCE(EMPENHO.ISOCttPedCon_NumeroEmp,'') AS ISOPvPedido_NumeroEmpenho,
	TOTAL_LINHAS_PEDIDO.ISOPvPedIte_TotalLinhas
FROM
	PEDIDO -- CABECALHO DO PEDIDO
	INNER JOIN PEDIDO_ITEM ON -- ITEM DO PEDIDO
		PEDIDO.ISOEmp_Codigo = PEDIDO_ITEM.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = PEDIDO_ITEM.ISOPvPed_Codigo
	INNER JOIN TOTAL_LINHAS_PEDIDO ON -- TOTAL DE LINHAS DO PEDIDO
		PEDIDO.ISOEmp_Codigo = TOTAL_LINHAS_PEDIDO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = TOTAL_LINHAS_PEDIDO.ISOPvPed_Codigo
	INNER JOIN ATENDENTE_PEDIDO ON  -- ATENDENTE QUE CRIOU O PEDIDO
		PEDIDO.ISOPvPed_CodigoAtendente = ATENDENTE_PEDIDO.ISOEnt_Codigo
	INNER JOIN PRODUTO ON  -- ATENDENTE QUE CRIOU O PEDIDO
		PEDIDO_ITEM.ISOEmp_Codigo = PRODUTO.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPrd_Codigo = PRODUTO.ISOPrd_Codigo
	INNER JOIN FATOR_CONVERSAO_PRODUTO ON -- UNIDADES DE MEDIDA DO ITEM DO PEDIDO
		PEDIDO_ITEM.ISOEmp_Codigo = FATOR_CONVERSAO_PRODUTO.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPrd_Codigo = FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_PrdCodigo AND
		PEDIDO_ITEM.ISOPvPedIte_UnidadeOrigem = FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_UndOrigem AND
		PEDIDO_ITEM.ISOPvPedIte_UnidadeDestino = FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_UndDestino AND
		FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_Flag = 'A' AND
		FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_Armazem = ''
	INNER JOIN CLIENTE ON -- INFORMAÇÕES DO CLIENTE
		PEDIDO.ISOEmp_Codigo = CLIENTE.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_CliCodigo = CLIENTE.ISOEntCli_Codigo
    INNER JOIN LOCAL_FATURAMENTO ON
		PEDIDO.ISOEmp_Codigo = LOCAL_FATURAMENTO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_EstadoOrigem = LOCAL_FATURAMENTO.ISOPvCD_Origem AND
        PEDIDO.ISOPvPed_EstadoDestino = LOCAL_FATURAMENTO.ISOPvCD_Destino AND
        PEDIDO.ISOPvPedOri_Codigo = LOCAL_FATURAMENTO.ISOPvCDOri_Pedido
	INNER JOIN ORIGEM_PROTHEUS ON -- PESQUISA CÓDIGO PROTHEUS DO CLIENTE
		PEDIDO.ISOEmp_Codigo = ORIGEM_PROTHEUS.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_CliCodigo = ORIGEM_PROTHEUS.ISOEmpEnt_EntCodigo AND
		ORIGEM_PROTHEUS.ISOEmpOri_Codigo = 13
	LEFT OUTER JOIN EMPENHO ON -- EMPENHO DO PEDIDO
		PEDIDO.ISOEmp_Codigo = EMPENHO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = EMPENHO.ISOCttPedCon_PedidoCodigo

	LEFT OUTER JOIN TOTAL_PEDIDO_EMPENHO ON -- EMPENHO DO PEDIDO
		PEDIDO.ISOEmp_Codigo = TOTAL_PEDIDO_EMPENHO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = TOTAL_PEDIDO_EMPENHO.ISOPvPed_Codigo

	LEFT OUTER JOIN TOTAL_PEDIDO ON -- VALOR TOTAL DO PEDIDO
		PEDIDO.ISOEmp_Codigo = TOTAL_PEDIDO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = TOTAL_PEDIDO.ISOPvPed_Codigo

	LEFT OUTER JOIN TABELA_CLIENTE ON -- TABELA DO CLIENTE
		PEDIDO.ISOEmp_Codigo = TABELA_CLIENTE.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_CliCodigo = TABELA_CLIENTE.ISOEntCli_Codigo
		AND TABELA_CLIENTE.ISOEntClienteAttId = 99
	LEFT OUTER JOIN ESTABELECIMENTO_LX ON -- ESTABELECIMENTO DO PEDIDO
		PEDIDO.ISOEmp_Codigo = ESTABELECIMENTO_LX.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_EstadoOrigem = ESTABELECIMENTO_LX.ISOPvCD_Origem AND
        PEDIDO.ISOPvPed_EstadoDestino = ESTABELECIMENTO_LX.ISOPvCD_Destino
	LEFT OUTER JOIN ORIGEM_LX ON  -- PESQUISA CÓDIGO LX DO CLIENTE
		PEDIDO.ISOEmp_Codigo = ORIGEM_LX.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_CliCodigo = ORIGEM_LX.ISOEmpEnt_EntCodigo AND
		ORIGEM_LX.ISOEmpOri_Codigo = 2
	LEFT OUTER JOIN CONDICAO_PAGAMENTO ON
		PEDIDO.ISOEmp_Codigo = CONDICAO_PAGAMENTO.ISOEmp_Codigo AND
		PEDIDO.ISOPeCndPgt_Codigo = CONDICAO_PAGAMENTO.ISOPeCndPgt_Codigo
	LEFT OUTER JOIN ANALISE_CREDITO ON  -- PESQUISA DA TAREFA DE LIBERAÇÃO DE CRÉDITO
		PEDIDO.ISOEmp_Codigo = ANALISE_CREDITO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = ANALISE_CREDITO.ISOPvPed_Codigo
	LEFT OUTER JOIN TIPO_FRETE ON -- INFORMACOES DE FRETE DO PEDIDO
		PEDIDO.ISOEmp_Codigo = TIPO_FRETE.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = TIPO_FRETE.ISOPvPed_Codigo
	LEFT OUTER JOIN TRANSPORTADORA ON -- INFORMACOES DA TRANSPORTADORA DO PEDIDO
		PEDIDO.ISOEmp_Codigo = TRANSPORTADORA.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = TRANSPORTADORA.ISOPvPed_Codigo
	LEFT OUTER JOIN	LINHA_PEDIDO_CLIENTE  ON  -- Observação do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = LINHA_PEDIDO_CLIENTE.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = LINHA_PEDIDO_CLIENTE.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = LINHA_PEDIDO_CLIENTE.ISOPvPedIte_Codigo

	LEFT OUTER JOIN	LINHA_ORDEM_COMPRA ON  -- Observação do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = LINHA_ORDEM_COMPRA.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = LINHA_ORDEM_COMPRA.ISOPvPed_Codigo AND
	    PEDIDO_ITEM.ISOPvPedIte_Codigo = LINHA_ORDEM_COMPRA.ITEM_PEDIDO

	LEFT OUTER JOIN	OC_DO_CLIENTE ON  -- Observação do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = OC_DO_CLIENTE.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = OC_DO_CLIENTE.ISOPvPed_Codigo AND
	    PEDIDO_ITEM.ISOPvPedIte_Codigo = OC_DO_CLIENTE.ISOPvPedIte_Codigo

	LEFT OUTER JOIN	LOTE1 ON  -- lote 1 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = LOTE1.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = LOTE1.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = LOTE1.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	QTD1 ON  -- qtde 1 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = QTD1.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = QTD1.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = QTD1.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	LOTE2 ON  -- lote 2 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = LOTE2.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = LOTE2.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = LOTE2.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	QTD2 ON  -- qtde 2 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = QTD2.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = QTD2.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = QTD2.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	LOTE3 ON  -- lote 3 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = LOTE3.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = LOTE3.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = LOTE3.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	QTD3 ON  -- qtde 3 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = QTD3.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = QTD3.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = QTD3.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	LOTE4 ON  -- lote 4 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = LOTE4.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = LOTE4.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = LOTE4.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	QTD4 ON  -- qtde 4 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = QTD4.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = QTD4.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = QTD4.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	LOTE5 ON  -- lote 5 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = LOTE5.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = LOTE5.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = LOTE5.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	QTD5 ON  -- qtde 5 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = QTD5.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = QTD5.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = QTD5.ISOPvPedIte_Codigo
	LEFT OUTER JOIN NATUREZA_OPERACAO ON
		PEDIDO.ISOEmp_Codigo = NATUREZA_OPERACAO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPedTip_Codigo = NATUREZA_OPERACAO.ISOPvPedTip_Codigo
	LEFT OUTER JOIN MATRIZ_ICMS ON
		PEDIDO_ITEM.ISOEmp_Codigo = MATRIZ_ICMS.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = MATRIZ_ICMS.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = MATRIZ_ICMS.ISOPvPedIte_Codigo
WHERE
	PEDIDO.ISOEmp_Codigo = 11 AND
	PEDIDO_ITEM.ISOPvPedIteSit_Codigo = 1;


-- dbo.MACROISOPvCotacaoCustomerCare_new source

CREATE VIEW [dbo].[MACROISOPvCotacaoCustomerCare]
as
with
	PEDIDO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPed_CliCodigo,
			ISOPvPed_EstadoOrigem,
			ISOPvPed_EstadoDestino,
			ISOPvPed_CodigoAtendente,
			ISOPvPedSit_Codigo,
			ISOPvPedOri_Codigo,
			ISOPvPed_CodEndCobranca,
			ISOPvPed_ValorTotalPedido,
			ISOPeCndPgt_Codigo,
			ISOPvPed_ValorFrete,
			ISOPvPedTip_Codigo,
			ISOPvPed_Pagamento, -- Condição de pagamento
			ISOPVPed_OrdCompra,
			ISOPvPed_DtaSolEntrega,
			ISOPvPed_CodEndEntrega,
			ISOPvPed_DataAlteracao,
			ISOPvPed_DtaPedido,  -- Data do pedido
			ISOPvPed_HoraPedido -- Hora do pedido
		FROM ISOPVPEDIDO WITH (nOLOCK)
		WHERE
			ISOEmp_Codigo = 11
			and ISOPvPedSit_Codigo = 8
			),
	PEDIDO_ITEM AS (
		SELECT
			ISOPVPEDITEM.ISOEmp_Codigo,
			ISOPVPEDITEM.ISOPvPed_Codigo,
			ISOPVPEDITEM.ISOPvPedIte_Codigo,
			ISOPVPEDITEM.ISOPrd_Codigo,
			ISOPVPEDITEM.ISOPvPedIte_Quantidade,
			ISOPVPEDITEM.ISOPvPedIte_DtaSolEntrega,
			ISOPVPEDITEM.ISOPvPedIte_UnidadeOrigem,
			ISOPVPEDITEM.ISOPvPedIte_UnidadeDestino,
			ISOPVPEDITEM.ISOPvPedIte_ValorUnitario,
			ISOPVPEDITEM.ISOPvPedIteSit_Codigo,
			ISOPVPEDITEM.ISOPvPedIte_AgendamentoData,
			ISOPVPEDITEM.ISOPvPedIte_AgendamentoHoraIni,
			ISOPVPEDITEM.ISOPvPedIte_AgendamentoHoraFin,
			ISOPVPEDITEM.ISOPvPedIte_ValorEmpenho,
			ISOPVPEDITEM.ISOPvPedIte_PrecoLista,
			ISOPVPEDITEM.ISOPvPedIte_ValorIPI,
			ISOPVPEDITEM.ISOPvPedIte_VlrSubsTributaria,
			ISOPVPEDITEM.ISOPvPedIte_ValorICMS,
			ISOPVPEDITEM.ISOPvPedIte_ValorPIS,
			ISOPVPEDITEM.ISOPvPedIte_ValorCofins,
			ISOPVPEDITEM.ISOPVPedIte_ValorFCPST,
			ISOPVPEDITEM.ISOPvPedIte_ValorFCP,
			ISOPVPEDITEM.ISOPvPedIte_ValorTotalCalculoF,
			ISOPVPEDITEM.ISOPvPedIte_DataEntregaItem,
			ISOPVPEDITEM.ISOPvPedIte_PercentualIPI,
			ISOPVPEDITEM.ISOPvPedIte_PercSubsTributaria,
			ISOPVPEDITEM.ISOPvPedIte_PercentualFCPST
		FROM ISOPVPEDITEM WITH (nOLOCK)INNER JOIN ISOPVPEDIDO
			ON ISOPVPEDIDO.ISOEmp_Codigo = ISOPVPEDITEM.ISOEmp_Codigo
			AND ISOPVPEDIDO.ISOPvPed_Codigo = ISOPVPEDITEM.ISOPvPed_Codigo
			AND ISOPVPEDIDO.ISOPvPedSit_Codigo = 8
		WHERE
			ISOPVPEDITEM.ISOEmp_Codigo = 11
			),
	TOTAL_LINHAS_PEDIDO AS (
		SELECT
			ISOPVPEDITEM.ISOEmp_Codigo,
			ISOPVPEDITEM.ISOPvPed_Codigo,
			COUNT(*) AS ISOPvPedIte_TotalLinhas
		FROM ISOPVPEDITEM WITH (nOLOCK) INNER JOIN ISOPVPEDIDO
			ON ISOPVPEDIDO.ISOEmp_Codigo = ISOPVPEDITEM.ISOEmp_Codigo
			AND ISOPVPEDIDO.ISOPvPed_Codigo = ISOPVPEDITEM.ISOPvPed_Codigo
			AND ISOPVPEDIDO.ISOPvPedSit_Codigo = 8
		WHERE
			ISOPVPEDITEM.ISOEmp_Codigo = 11
			AND ISOPVPEDITEM.ISOPvPedIteSit_Codigo = 1
		GROUP BY
			ISOPVPEDITEM.ISOEmp_Codigo,
			ISOPVPEDITEM.ISOPvPed_Codigo),
	TOTAL_PEDIDO_EMPENHO AS (
		SELECT
			ISOPVPEDITEM.ISOEmp_Codigo,
			ISOPVPEDITEM.ISOPvPed_Codigo,
			SUM(ISOPvPedIte_Quantidade * ISOPvPedIte_ValorEmpenho) AS ISOPvPed_ValorTotalPedido
		FROM         ISOPVPEDITEM WITH (nOLOCK) INNER JOIN ISOPVPEDIDO
			ON ISOPVPEDIDO.ISOEmp_Codigo = ISOPVPEDITEM.ISOEmp_Codigo
			AND ISOPVPEDIDO.ISOPvPed_Codigo = ISOPVPEDITEM.ISOPvPed_Codigo
			AND ISOPVPEDIDO.ISOPvPedSit_Codigo = 8
		WHERE     (ISOPVPEDITEM.ISOEmp_Codigo = 11) AND (ISOPVPEDITEM.ISOPvPedIteSit_Codigo = 1)
		GROUP BY ISOPVPEDITEM.ISOEmp_Codigo, ISOPVPEDITEM.ISOPvPed_Codigo),
	TOTAL_PEDIDO AS (
		SELECT
			ISOPVPEDITEM.ISOEmp_Codigo,
			ISOPVPEDITEM.ISOPvPed_Codigo,
			SUM(ISOPVPEDITEM.ISOPvPedIte_Quantidade * ISOPVPEDITEM.ISOPvPedIte_ValorUnitario) AS ISOPvPed_ValorTotalPedido
		FROM         ISOPVPEDITEM WITH (nOLOCK) INNER JOIN ISOPVPEDIDO
			ON ISOPVPEDIDO.ISOEmp_Codigo = ISOPVPEDITEM.ISOEmp_Codigo
			AND ISOPVPEDIDO.ISOPvPed_Codigo = ISOPVPEDITEM.ISOPvPed_Codigo
			AND ISOPVPEDIDO.ISOPvPedSit_Codigo = 8
		WHERE     (ISOPVPEDITEM.ISOEmp_Codigo = 11) AND (ISOPVPEDITEM.ISOPvPedIteSit_Codigo = 1) --and ISOPvPed_Codigo >= 8741752
		GROUP BY ISOPVPEDITEM.ISOEmp_Codigo, ISOPVPEDITEM.ISOPvPed_Codigo),
	PRODUTO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPrd_Codigo,
			ISOPrd_Descricao
		FROM ISOPRODUTO WITH (nOLOCK)
		WHERE (ISOEmp_Codigo = 11)),
	FATOR_CONVERSAO_PRODUTO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPrdUndFatC_PrdCodigo,
			ISOPrdUndFatC_UndOrigem,
			ISOPrdUndFatC_UndDestino,
			ISOPrdUndFatC_FatorConversao,
			ISOPrdUndFatC_Flag,
			ISOPrdUndFatC_Armazem
		FROM ISOPRDUNDFATORCONVERSAO WITH (nOLOCK)),
	EMPENHO AS (
		SELECT
			ISOEmp_Codigo,
			ISOCttPedCon_PedidoCodigo,
			ISOCttPedCon_NumeroEmp
		FROM ISOCTPEDCONTRATO WITH (nOLOCK)),
	ORIGEM_PROTHEUS AS (
		SELECT
			ISOEmp_Codigo,
			ISOEmpEnt_EntCodigo,
			ISOEmpOri_Codigo,
			ISOEmpEnt_Ori_Codigo
		FROM ISOEMPENT_ORIGEM WITH (nOLOCK)
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOEmpOri_Codigo = 13)
SELECT
	PEDIDO.ISOEmp_Codigo, -- Código da empresa
	PEDIDO.ISOPvPed_Codigo, -- Código CRM do Pedido
	PEDIDO.ISOPvPed_CliCodigo, -- Código CRM do cliente
	PEDIDO.ISOPvPed_DtaPedido,  -- Data do pedido
	PEDIDO.ISOPvPed_HoraPedido, -- Hora do pedido
	PEDIDO.ISOPvPedSit_Codigo,
	'' AS ISOPeCntPgt_Forma, -- Forma de pagamento
	PEDIDO.ISOPvPed_Pagamento, -- Condição de pagamento
	PEDIDO.ISOPvPed_DtaSolEntrega,
	PEDIDO.ISOPvPed_CodEndEntrega,
	PEDIDO.ISOPvPed_DataAlteracao,
	PEDIDO.ISOPvPedOri_Codigo,
	PEDIDO.ISOPvPedTip_Codigo,
	PEDIDO.ISOPvPed_CodEndCobranca,

	CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0 THEN TOTAL_PEDIDO_EMPENHO.ISOPvPed_ValorTotalPedido ELSE PEDIDO.ISOPvPed_ValorTotalPedido END AS ISOPvPed_ValorTotalPedido,

	PEDIDO_ITEM.ISOPvPedIte_Codigo, -- Sequencial do item do pedido
	PEDIDO_ITEM.ISOPrd_Codigo, -- Código do produto
	PRODUTO.ISOPrd_Descricao,
	CASE
		WHEN ISNULL(NULLIF(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0),0) = 0
		THEN 0
		ELSE PEDIDO_ITEM.ISOPvPedIte_Quantidade
	END ISOPvPedIte_Quantidade,
	PEDIDO_ITEM.ISOPvPedIte_DataEntregaItem AS ISOPvPedIte_DataPromessa,
	PEDIDO_ITEM.ISOPvPedIte_DtaSolEntrega,
	PEDIDO_ITEM.ISOPvPedIte_UnidadeOrigem,
	PEDIDO_ITEM.ISOPvPedIte_UnidadeDestino,
	ROUND(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0) AS ISOPrdUndFatC_FatorConversao, -- Fator de conversão sem decimais
	ROUND(PEDIDO_ITEM.ISOPvPedIte_Quantidade * ROUND(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0),0) AS ISOPvPedIte_Qtd_UM_estoque,
	CASE
		WHEN ISNULL(NULLIF(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0),0) = 0
		THEN 0
		ELSE CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho >0 THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho ELSE ROUND(PEDIDO_ITEM.ISOPvPedIte_ValorUnitario,6) END
	END ISOPvPedIte_Vlr_Total_Unitario,

	CASE
		WHEN ISNULL(NULLIF(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0),0) = 0
		THEN 0
		ELSE CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0 THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho ELSE ROUND(PEDIDO_ITEM.ISOPvPedIte_ValorUnitario,6) END / NULLIF(ROUND(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0),0)
	END ISOPvPedIte_Vlr_Total_Unitario_EST,

	PEDIDO_ITEM.ISOPvPedIteSit_Codigo,
	PEDIDO_ITEM.ISOPvPedIte_AgendamentoData,
	PEDIDO_ITEM.ISOPvPedIte_AgendamentoHoraIni,
	PEDIDO_ITEM.ISOPvPedIte_AgendamentoHoraFin,
	PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,
	PEDIDO_ITEM.ISOPvPedIte_ValorUnitario,
	CASE
		WHEN COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) > 0
		THEN 0
		ELSE COALESCE(PEDIDO.ISOPvPed_ValorFrete,0)
	END AS ISOPvPed_ValorFrete,
	COALESCE(ORIGEM_PROTHEUS.ISOEmpEnt_Ori_Codigo,'') AS ISOEmpEnt_CliCod_ERP,
	'' AS ISOEmpEnt_Ori_LX,
	'' AS ISOPvPedIte_Armazem,
	'' AS ISOEntCli_Operacao,
	'' AS ISOPvCD_Estabelecimento_LX,
	'' AS ISOPvPed_CodigoAtendente, -- Código do atendente que criou o pedido
	'' AS ISOEnt_NomeAtendente, -- Nome do atendente que criou o pedido

	'1753-01-01 00:00:00.000' AS ISOWFTrf_DataLiberacaoCredito, -- Data em que a tarefa de liberação de crédito foi executada
    '1753-01-01 00:00:00.000' AS ISOWFTrf_HoraLiberacaoCredito,  -- Hora em que a tarefa de liberação de crédito foi executada
    '' AS ISOWFTrf_CodigoAtendente, -- Responsável que executou a tarefa de liberação de crédito

	CASE
		WHEN PEDIDO.ISOPvPedOri_Codigo = 'EUR' THEN 3
		WHEN PEDIDO.ISOPvPedOri_Codigo = 'EU1' THEN 3
		WHEN PEDIDO.ISOPvPedOri_Codigo = 'USD' THEN 2
		WHEN PEDIDO.ISOPvPedOri_Codigo = 'US1' THEN 2
		ELSE 1
	END AS ISOMoe_Codigo,

	COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorIPI,0) AS ISOPvPedIte_ValorIPI,
	COALESCE(PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria,0) AS ISOPvPedIte_VlrSubsTrib,
	COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorICMS,0) AS ISOPvPedIte_ValorICMS,
	COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorPIS,0) AS ISOPvPedIte_ValorPIS,
	COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorCofins,0) AS ISOPvPedIte_ValorCofins,
	COALESCE(PEDIDO_ITEM.ISOPVPedIte_ValorFCPST,0) AS ISOPVPedIte_ValorFCPST,
	COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorFCP,0) AS ISOPvPedIte_ValorFCP,
	'' AS ISOPvPedido_CodigoTRP,
	'' AS ISOPvPedidoTipoFrete,
	'' AS ISOEmpEnt_Tabela_Preco,
	PEDIDO_ITEM.ISOPvPedIte_PrecoLista,
	'' AS ISOPvPedIte_NrOrdemCompra,

	'' AS ISOPvPedIte_LinhaOrdemCompra,

	'' AS ISOPvPedIte_Lote1,
	'' AS ISOPvPedIte_QtdeLote1,
	'' AS ISOPvPedIte_Lote2,
	'' AS ISOPvPedIte_QtdeLote2,
	'' AS ISOPvPedIte_Lote3,
	'' AS ISOPvPedIte_QtdeLote3,
	'' AS ISOPvPedIte_Lote4,
	'' AS ISOPvPedIte_QtdeLote4,
	'' AS ISOPvPedIte_Lote5,
	'' AS ISOPvPedIte_QtdeLote5,
	'' AS ISOPvPed_Operacao,
	0 AS ISOPvPedIte_PrecoCMLIntegracaoBO,
	0 AS ISOPvPedIte_PrecoUNESTIntegracaoBO,

	COALESCE(EMPENHO.ISOCttPedCon_NumeroEmp,'') AS ISOPvPedido_NumeroEmpenho,
	TOTAL_LINHAS_PEDIDO.ISOPvPedIte_TotalLinhas
FROM
	PEDIDO -- CABECALHO DO PEDIDO
	INNER JOIN PEDIDO_ITEM ON -- ITEM DO PEDIDO
		PEDIDO.ISOEmp_Codigo = PEDIDO_ITEM.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = PEDIDO_ITEM.ISOPvPed_Codigo
	INNER JOIN TOTAL_LINHAS_PEDIDO ON -- TOTAL DE LINHAS DO PEDIDO
		PEDIDO.ISOEmp_Codigo = TOTAL_LINHAS_PEDIDO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = TOTAL_LINHAS_PEDIDO.ISOPvPed_Codigo
	INNER JOIN PRODUTO ON  -- ATENDENTE QUE CRIOU O PEDIDO
		PEDIDO_ITEM.ISOEmp_Codigo = PRODUTO.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPrd_Codigo = PRODUTO.ISOPrd_Codigo
	INNER JOIN FATOR_CONVERSAO_PRODUTO ON -- UNIDADES DE MEDIDA DO ITEM DO PEDIDO
		PEDIDO_ITEM.ISOEmp_Codigo = FATOR_CONVERSAO_PRODUTO.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPrd_Codigo = FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_PrdCodigo AND
		PEDIDO_ITEM.ISOPvPedIte_UnidadeOrigem = FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_UndOrigem AND
		PEDIDO_ITEM.ISOPvPedIte_UnidadeDestino = FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_UndDestino AND
		FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_Flag = 'A' AND
		FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_Armazem = ''
	INNER JOIN ORIGEM_PROTHEUS ON -- PESQUISA CÓDIGO PROTHEUS DO CLIENTE
		PEDIDO.ISOEmp_Codigo = ORIGEM_PROTHEUS.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_CliCodigo = ORIGEM_PROTHEUS.ISOEmpEnt_EntCodigo AND
		ORIGEM_PROTHEUS.ISOEmpOri_Codigo = 13
	LEFT OUTER JOIN EMPENHO ON -- EMPENHO DO PEDIDO
		PEDIDO.ISOEmp_Codigo = EMPENHO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = EMPENHO.ISOCttPedCon_PedidoCodigo

	LEFT OUTER JOIN TOTAL_PEDIDO_EMPENHO ON -- EMPENHO DO PEDIDO
		PEDIDO.ISOEmp_Codigo = TOTAL_PEDIDO_EMPENHO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = TOTAL_PEDIDO_EMPENHO.ISOPvPed_Codigo

	LEFT OUTER JOIN TOTAL_PEDIDO ON -- VALOR TOTAL DO PEDIDO
		PEDIDO.ISOEmp_Codigo = TOTAL_PEDIDO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = TOTAL_PEDIDO.ISOPvPed_Codigo

WHERE
	PEDIDO.ISOEmp_Codigo = 11 AND
	PEDIDO_ITEM.ISOPvPedIteSit_Codigo = 1;


-- dbo.MACROISOPvPedObservacao source

CREATE VIEW [dbo].[MACROISOPvPedObservacao]
as
select
ISOPVPEDOBSERVACAO.ISOEmp_Codigo,
ISOPVPEDOBSERVACAO.ISOPvPed_Codigo,
ISOPVPEDOBSERVACAO.ISOPvPedObs_Sequencia,
ISOPVPEDOBSERVACAO.ISOPvPedObs_Descricao,
ISOPVPEDOBSERVACAO.ISOPvPedObs_Pick,
ISOPVPEDOBSERVACAO.ISOPvPedObs_NF
from ISOPVPEDOBSERVACAO
	INNER JOIN ISOPVPEDIDO ON
		ISOPVPEDOBSERVACAO.ISOEmp_Codigo = ISOPVPEDIDO.ISOEmp_Codigo AND
		ISOPVPEDOBSERVACAO.ISOPvPed_Codigo = ISOPVPEDIDO.ISOPvPed_Codigo
WHERE ISOPVPEDOBSERVACAO.ISOEmp_Codigo = 11
AND ISOPVPEDIDO.ISOPvPedSit_Codigo in (1, 30);


-- dbo.MACROISOPvPedido source

CREATE VIEW [dbo].[MACROISOPvPedido]
as
SELECT        ISOEmp_Codigo, ISOPvPed_Codigo, ISOPvPed_CliCodigo, ISOPvPed_DtaPedido, ISOPvPed_HoraPedido, ISOPeCntPgt_Forma, ISOPvPed_Pagamento, ISOPvPed_DtaSolEntrega, ISOPvPed_CodEndEntrega,
                         ISOPvPedOri_Codigo, ISOPvPedTip_Codigo, ISOPvPed_CodEndCobranca, ISOPvPed_ValorTotalPedido, ISOPvPedIte_Codigo, ISOPrd_Codigo, ISOPvPedIte_Quantidade, ISOPvPedIte_DataPromessa, ISOPvPedIte_DtaSolEntrega,
                          ISOPvPedIte_UnidadeOrigem, ISOPvPedIte_UnidadeDestino, ISOPrdUndFatC_FatorConversao, ISOPvPedIte_Qtd_UM_estoque, ISOPvPedIte_Vlr_Total_Unitario, ISOPvPedIte_Vlr_Total_Unitario_EST, ISOPvPedIteSit_Codigo,
                         ISOPvPedIte_AgendamentoData, ISOPvPedIte_AgendamentoHoraIni, ISOPvPedIte_AgendamentoHoraFin, ISOPvPedIte_ValorEmpenho, ISOPvPed_ValorFrete, ISOEmpEnt_CliCod_ERP, ISOEmpEnt_Ori_LX,
                         ISOPvPedIte_Armazem, ISOEntCli_Operacao, ISOPvCD_Estabelecimento_LX, ISOPvPed_CodigoAtendente, ISOEnt_NomeAtendente, ISOWFTrf_DataLiberacaoCredito, ISOWFTrf_HoraLiberacaoCredito,
                         ISOWFTrf_CodigoAtendente, ISOMoe_Codigo, ISOPvPedIte_ValorIPI, ISOPvPedIte_VlrSubsTrib, ISOPvPedIte_ValorICMS, ISOPvPedIte_ValorPIS, ISOPvPedIte_ValorCofins, ISOPVPedIte_ValorFCPST, ISOPvPedIte_ValorFCP,
                         ISOPvPedido_CodigoTRP, ISOPvPedidoTipoFrete, ISOEmpEnt_Tabela_Preco, ISOPvPedIte_PrecoLista, ISOPVPed_OrdCompra, ISOPvPedIte_NrOrdemCompra, ISOPvPedIte_LinhaOrdemCompra, ISOPvPedIte_Lote1,
                         ISOPvPedIte_QtdeLote1, ISOPvPedIte_Lote2, ISOPvPedIte_QtdeLote2, ISOPvPedIte_Lote3, ISOPvPedIte_QtdeLote3, ISOPvPedIte_Lote4, ISOPvPedIte_QtdeLote4, ISOPvPedIte_Lote5, ISOPvPedIte_QtdeLote5,
                         ISOPvPed_Operacao, ISOPvPedIte_PrecoCMLIntegracaoBO, ISOPvPedIte_PrecoUNESTIntegracaoBO, ISOPvPedido_NumeroEmpenho, ISOPvPedIte_TotalLinhas
FROM            VWMACROISOPvPedido
--FROM            MACROISOPvPedidoTemp  -- 11/06/2021 -- zagoto inativado para usar nova versão com performance, desativado o JOB SQL "MACRO - Atualiza view MACROISOPvPedido", pois a view passou a consultar diretamente o banco
where
	ISOEmp_Codigo = 11 AND
	ISOPvPed_Codigo NOT IN (select isopvped_codigo from [MACRO_ANALISE_CREDITO] where ISOEmp_Codigo = 11);


-- dbo.MACROISOPvPedidoCustomerCare source

CREATE VIEW [dbo].[MACROISOPvPedidoCustomerCare]
as
with
	PEDIDO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPed_CliCodigo,
			ISOPvPed_EstadoOrigem,
			ISOPvPed_EstadoDestino,
			ISOPvPed_CodigoAtendente,
			ISOPvPedSit_Codigo,
			ISOPvPedOri_Codigo,
			ISOPvPed_CodEndCobranca,
			ISOPvPed_ValorTotalPedido,
			ISOPeCndPgt_Codigo,
			ISOPvPed_ValorFrete,
			ISOPvPedTip_Codigo,
			ISOPvPed_Pagamento, -- Condição de pagamento
			ISOPVPed_OrdCompra,
			ISOPvPed_DtaSolEntrega,
			ISOPvPed_DataAlteracao,
			ISOPvPed_CodEndEntrega,
			ISOPvPed_DtaPedido,  -- Data do pedido
			ISOPvPed_HoraPedido, -- Hora do pedido
			ISOEnt_Nome
		FROM ISOPVPEDIDO WITH (nOLOCK) INNER JOIN ISOENTIDADE
			ON ISOENT_CODIGO = ISOPvPed_UsuarioAlteracao
		WHERE
			ISOEmp_Codigo = 11
			and ISOPvPedSit_Codigo = 16
			and ISOPvPed_DtaPedido >= (getdate() - 60)
			),
	PEDIDO_ITEM AS (
		SELECT
			ISOPVPEDITEM.ISOEmp_Codigo,
			ISOPVPEDITEM.ISOPvPed_Codigo,
			ISOPVPEDITEM.ISOPvPedIte_Codigo,
			ISOPVPEDITEM.ISOPrd_Codigo,
			ISOPVPEDITEM.ISOPvPedIte_Quantidade,
			ISOPVPEDITEM.ISOPvPedIte_DtaSolEntrega,
			ISOPvPedIte_UnidadeOrigem,
			ISOPvPedIte_UnidadeDestino,
			ISOPvPedIte_ValorUnitario,
			ISOPvPedIteSit_Codigo,
			ISOPvPedIte_AgendamentoData,
			ISOPvPedIte_AgendamentoHoraIni,
			ISOPvPedIte_AgendamentoHoraFin,
			ISOPvPedIte_ValorEmpenho,
			ISOPvPedIte_PrecoLista,
			ISOPvPedIte_ValorIPI,
			ISOPvPedIte_VlrSubsTributaria,
			ISOPvPedIte_ValorICMS,
			ISOPvPedIte_ValorPIS,
			ISOPvPedIte_ValorCofins,
			ISOPVPedIte_ValorFCPST,
			ISOPvPedIte_ValorFCP,
			ISOPvPedIte_ValorTotalCalculoF,
			ISOPvPedIte_DataEntregaItem,
			ISOPvPedIte_PercentualIPI,
			ISOPvPedIte_PercSubsTributaria,
			ISOPvPedIte_PercentualFCPST
		FROM ISOPVPEDITEM WITH (nOLOCK) INNER JOIN ISOPVPEDIDO
			ON ISOPVPEDITEM.ISOEmp_Codigo = ISOPVPEDIDO.ISOEmp_Codigo
			AND ISOPVPEDITEM.ISOPvPed_Codigo = ISOPVPEDIDO.ISOPvPed_Codigo
		WHERE
			ISOPVPEDIDO.ISOEmp_Codigo = 11
			and ISOPVPEDIDO.ISOPvPedSit_Codigo = 16
			and ISOPvPed_DtaPedido >= (getdate() - 60)
			),
	TOTAL_LINHAS_PEDIDO AS (
		SELECT
			ISOPVPEDITEM.ISOEmp_Codigo,
			ISOPVPEDITEM.ISOPvPed_Codigo,
			COUNT(*) AS ISOPvPedIte_TotalLinhas
		FROM ISOPVPEDITEM WITH (nOLOCK)  INNER JOIN ISOPVPEDIDO
			ON ISOPVPEDITEM.ISOEmp_Codigo = ISOPVPEDIDO.ISOEmp_Codigo
			AND ISOPVPEDITEM.ISOPvPed_Codigo = ISOPVPEDIDO.ISOPvPed_Codigo
		WHERE
			ISOPVPEDITEM.ISOEmp_Codigo = 11
			AND ISOPVPEDITEM.ISOPvPedIteSit_Codigo = 1
			and ISOPVPEDIDO.ISOPvPedSit_Codigo = 16
			and ISOPvPed_DtaPedido >= (getdate() - 60)
		GROUP BY
			ISOPVPEDITEM.ISOEmp_Codigo,
			ISOPVPEDITEM.ISOPvPed_Codigo),
	TOTAL_PEDIDO_EMPENHO AS (
		SELECT
			ISOPVPEDITEM.ISOEmp_Codigo,
			ISOPVPEDITEM.ISOPvPed_Codigo,
			SUM(ISOPvPedIte_Quantidade * ISOPvPedIte_ValorEmpenho) AS ISOPvPed_ValorTotalPedido
		FROM         ISOPVPEDITEM WITH (nOLOCK) INNER JOIN ISOPVPEDIDO
			ON ISOPVPEDITEM.ISOEmp_Codigo = ISOPVPEDIDO.ISOEmp_Codigo
			AND ISOPVPEDITEM.ISOPvPed_Codigo = ISOPVPEDIDO.ISOPvPed_Codigo
		WHERE     (ISOPVPEDITEM.ISOEmp_Codigo = 11) AND (ISOPVPEDITEM.ISOPvPedIteSit_Codigo = 1)
		and ISOPVPEDIDO.ISOPvPedSit_Codigo = 16
			and ISOPvPed_DtaPedido >= (getdate() - 60)
		GROUP BY ISOPVPEDITEM.ISOEmp_Codigo, ISOPVPEDITEM.ISOPvPed_Codigo),
	TOTAL_PEDIDO AS ( --- aqui performance - criado indice CISOPVPEDITEM2
		SELECT
			ISOPVPEDITEM.ISOEmp_Codigo,
			ISOPVPEDITEM.ISOPvPed_Codigo,
			SUM(ISOPvPedIte_Quantidade * ISOPvPedIte_ValorUnitario) AS ISOPvPed_ValorTotalPedido
		FROM         ISOPVPEDITEM WITH (nOLOCK) INNER JOIN ISOPVPEDIDO
			ON ISOPVPEDITEM.ISOEmp_Codigo = ISOPVPEDIDO.ISOEmp_Codigo
			AND ISOPVPEDITEM.ISOPvPed_Codigo = ISOPVPEDIDO.ISOPvPed_Codigo
		WHERE     (ISOPVPEDITEM.ISOEmp_Codigo = 11) AND (ISOPVPEDITEM.ISOPvPedIteSit_Codigo = 1) --and ISOPvPed_Codigo >= 8741752
		and ISOPVPEDIDO.ISOPvPedSit_Codigo = 16
			and ISOPvPed_DtaPedido >= (getdate() - 60)
		GROUP BY ISOPVPEDITEM.ISOEmp_Codigo, ISOPVPEDITEM.ISOPvPed_Codigo),
	--ATENDENTE_PEDIDO AS (
	--	SELECT
	--		ISOEnt_Codigo,
	--		ISOEnt_Nome
	--	FROM ISOENTIDADE WITH (nOLOCK)
	--	WHERE ISOEnt_Codigo IN (SELECT ISOPvPed_UsuarioAlteracao FROM ISOPVPEDIDO WHERE ISOEMP_CODIGO = 11 AND ISOPVPEDSIT_CODIGO = 16 AND ISOPvPed_DtaPedido >= (getdate() - 60))
	--	),
	PRODUTO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPrd_Codigo,
			ISOPrd_Descricao
		FROM ISOPRODUTO WITH (nOLOCK)
		WHERE (ISOEmp_Codigo = 11)),
	FATOR_CONVERSAO_PRODUTO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPrdUndFatC_PrdCodigo,
			ISOPrdUndFatC_UndOrigem,
			ISOPrdUndFatC_UndDestino,
			ISOPrdUndFatC_FatorConversao,
			ISOPrdUndFatC_Flag,
			ISOPrdUndFatC_Armazem
		FROM ISOPRDUNDFATORCONVERSAO WITH (nOLOCK)),
	CLIENTE AS (
		SELECT
			ISOEmp_Codigo,
			ISOEntCli_Codigo,
			ISOEntCli_Operacao
		FROM ISOENTCLIENTE WITH (nOLOCK)
		WHERE ISOEntCli_Codigo IN (SELECT ISOPvPed_CliCodigo FROM ISOPVPEDIDO WHERE ISOEMP_CODIGO = 11 AND ISOPVPEDSIT_CODIGO = 16 AND ISOPvPed_DtaPedido >= (getdate() - 60))),
	LOCAL_FATURAMENTO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvCD_Origem,
			ISOPvCD_Destino,
			ISOPvCDOri_Pedido,
			ISOPvCDOri_Armazem
		FROM ISOPVCDORIGEM WITH (nOLOCK)),
	EMPENHO AS (
		SELECT
			ISOEmp_Codigo,
			ISOCttPedCon_PedidoCodigo,
			ISOCttPedCon_NumeroEmp
		FROM ISOCTPEDCONTRATO WITH (nOLOCK)
		WHERE ISOEmp_Codigo = 11
		AND ISOCttPedCon_PedidoCodigo IN (SELECT ISOPvPed_Codigo FROM ISOPVPEDIDO WHERE ISOEMP_CODIGO = 11 AND ISOPVPEDSIT_CODIGO = 16 AND ISOPvPed_DtaPedido >= (getdate() - 60))),
	TABELA_CLIENTE AS (
		SELECT
			ISOEmp_Codigo,
			ISOEntCli_Codigo,
			ISOEntClienteAttId,
			ISOEntClienteAttOtherValue
		FROM ISOENTCLIENTEATTVALUES WITH (nOLOCK)
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOEntClienteAttId = 99 and
			ISOEntCli_Codigo IN (SELECT ISOPvPed_CliCodigo FROM ISOPVPEDIDO WHERE ISOEMP_CODIGO = 11 AND ISOPVPEDSIT_CODIGO = 16 AND ISOPvPed_DtaPedido >= (getdate() - 60))),
	ESTABELECIMENTO_LX AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvCD_Origem,
			ISOPvCD_Destino,
			ISOPvCD_Estabelecimento
		FROM ISOPVCD WITH (nOLOCK)),
	ORIGEM_PROTHEUS AS (
		SELECT
			ISOEmp_Codigo,
			ISOEmpEnt_EntCodigo,
			ISOEmpOri_Codigo,
			ISOEmpEnt_Ori_Codigo
		FROM ISOEMPENT_ORIGEM WITH (nOLOCK)
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOEmpOri_Codigo = 13),
	ORIGEM_LX AS (
		SELECT
			ISOEmp_Codigo,
			ISOEmpEnt_EntCodigo,
			ISOEmpOri_Codigo,
			ISOEmpEnt_Ori_Codigo
		FROM ISOEMPENT_ORIGEM WITH (nOLOCK)
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOEmpOri_Codigo = 2),
	CONDICAO_PAGAMENTO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPeCndPgt_Codigo,
			ISOPeCntPgt_Forma
		FROM ISOPECNDPAGAMENTO WITH (nOLOCK)),
	ANALISE_CREDITO AS (
		SELECT -- aqui performance - criado indice CISOWFTRF_PEDIDO1
			ISOWFTRF_PEDIDO.ISOEmp_Codigo,
			ISOWFTRF_PEDIDO.ISOPvPed_Codigo,
		    CASE WHEN ISOWFTrf_RspExe_RspCodigo IS NULL THEN '' ELSE CONVERT(VARCHAR(8), ISOWFTrf_DataSolucao, 112) END AS ISOWFTrf_DataLiberacaoCredito,  -- Data em que a tarefa de liberação de crédito foi executada
			CASE WHEN ISOWFTrf_RspExe_RspCodigo IS NULL THEN '' ELSE CONVERT(VARCHAR(8), ISOWFTrf_DataSolucao, 108) END AS ISOWFTrf_HoraLiberacaoCredito,
			CASE WHEN ISOWFTrf_RspExe_RspCodigo IS NULL THEN '' ELSE COALESCE(CAST(ISOWFTrf_RspExe_RspCodigo AS VARCHAR(10)),'')+'-'+COALESCE(USUARIO_CEDITO.ISOEnt_Nome,'') END AS ISOWFTrf_CodigoAtendente
		FROM ISOWFTRF_PEDIDO INNER JOIN ISOWFPROCEDIMENTO ON
			ISOWFTRF_PEDIDO.ISOEmp_Codigo = ISOWFPROCEDIMENTO.ISOEmp_Codigo AND
			ISOWFTRF_PEDIDO.ISOWFTrf_Ped_PrcCodigo = ISOWFPROCEDIMENTO.ISOWFPrc_Codigo AND
			ISOWFPROCEDIMENTO.ISOWFPrcPad_Codigo IN (324,327) AND -- PROCEDIMENTO ( PEDIDO - ANALISE DE CREDITO)
			ISOWFTRF_PEDIDO.ISOWFTrf_Ped_TrfCodigo = 1 --- CÓDIGO DA TAREFA QUE O ATENDENTE IRÁ CONFIRMAR O CRÉDITO DO CLIENTE ********
		INNER JOIN ISOWFTAREFA ON -- TAREFA DE LIBERAÇÃO DE CRÉDITO
			ISOWFTRF_PEDIDO.ISOEmp_Codigo = ISOWFTAREFA.ISOEmp_Codigo AND
			ISOWFTRF_PEDIDO.ISOWFTrf_Ped_PrcCodigo = ISOWFTAREFA.ISOWFPrc_Codigo AND
			ISOWFTRF_PEDIDO.ISOWFTrf_Ped_TrfCodigo = ISOWFTAREFA.ISOWFTrfPad_Codigo AND
			ISOWFTAREFA.ISOWFTrfPad_Codigo = 1 AND  -- TAREFA (ANALISAR PEDIDO RETIDO EM CREDITO)
			ISOWFTAREFA.ISOWFTrfPadSit_Codigo = 1  -- SITUACAO (PEDIDO APROVADO DE CREDITO)
		INNER JOIN ISOENTIDADE AS USUARIO_CEDITO ON -- USUÁRIO QUE LIBEROU O CRÉDITO DO CLIENTE
			ISOWFTAREFA.ISOWFTrf_RspExe_RspCodigo = USUARIO_CEDITO.ISOEnt_Codigo
		WHERE ISOWFTRF_PEDIDO.ISOEmp_Codigo = 11 AND
		ISOWFTRF_PEDIDO.ISOPvPed_Codigo IN (SELECT ISOPVPED_CODIGO FROM ISOPVPEDIDO WHERE ISOEMP_CODIGO = 11 AND ISOPVPEDSIT_CODIGO = 16 AND ISOPvPed_DtaPedido >= (getdate() - 60)) AND
		ISOWFTRF_PEDIDO.ISOWFTrf_Ped_PrcCodigo = (SELECT MAX(X.ISOWFTrf_Ped_PrcCodigo) FROM ISOWFTRF_PEDIDO X WHERE ISOWFTRF_PEDIDO.ISOEmp_Codigo = X.ISOEmp_Codigo AND ISOWFTRF_PEDIDO.ISOPvPed_Codigo = X.ISOPvPed_Codigo)),
	TIPO_FRETE AS (
		SELECT 	DISTINCT
			ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOEmp_Codigo,
			ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOPvPed_Codigo,
			COALESCE(ISOPvPedidoAttOptValue,'') AS ISOPvPedidoTipoFrete
		FROM ISOPVPEDIDOATTVALUES AS ISOPVPEDIDOATTVALUES_TIPO_FRETE
		INNER JOIN ISOPVPEDIDOATTLEVEL1 ON
			ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOEmp_Codigo = ISOPVPEDIDOATTLEVEL1.ISOEmp_Codigo AND
			ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOPvPedidoAttId = ISOPVPEDIDOATTLEVEL1.ISOPvPedidoAttId AND
			ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOPvPedidoAttOptId = ISOPVPEDIDOATTLEVEL1.ISOPvPedidoAttOptId AND
			ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOPvPedidoAttId = 104 -- CÓDIGO DA PERGUNTA TIPO DO FRETE
		WHERE
			ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOEmp_Codigo = 11
			AND ISOPvPed_Codigo IN (SELECT ISOPVPED_CODIGO FROM ISOPVPEDIDO WHERE ISOEMP_CODIGO = 11 AND ISOPVPEDSIT_CODIGO = 16 AND ISOPvPed_DtaPedido >= (getdate() - 60))),
	TRANSPORTADORA AS (  -- aqui performance - criado indice CISOPVTRANSPORTADORA1
		SELECT 	DISTINCT
			ISOPVPEDIDOATTVALUES_TRANSP.ISOEmp_Codigo,
			ISOPVPEDIDOATTVALUES_TRANSP.ISOPvPed_Codigo,
			COALESCE(ISOPvTrp_CodigoExterno,'') AS ISOPvPedido_CodigoTRP
		FROM ISOPVPEDIDOATTVALUES AS ISOPVPEDIDOATTVALUES_TRANSP
		INNER JOIN ISOPVTRANSPORTADORA ON
			ISOPVTRANSPORTADORA.ISOPvTrp_Codigo = ISOPVPEDIDOATTVALUES_TRANSP.ISOPvPedidoAttOptId AND
			ISOPVPEDIDOATTVALUES_TRANSP.ISOPvPedidoAttId = 105 AND -- CÓDIGO DA PERGUNTA TRANSPORTADORA
			ISOPVTRANSPORTADORA.ISOPvTrp_Flag = 'A'
		WHERE ISOPVPEDIDOATTVALUES_TRANSP.ISOEmp_Codigo = 11
		AND ISOPvPed_Codigo IN (SELECT ISOPVPED_CODIGO FROM ISOPVPEDIDO WHERE ISOEMP_CODIGO = 11 AND ISOPVPEDSIT_CODIGO = 16 AND ISOPvPed_DtaPedido >= (getdate() - 60))),
	--OBSERVACAO_ITEM_PEDIDO AS (
	--	SELECT
	--		ISOEmp_Codigo,
	--		ISOPvPed_Codigo,
	--		ISOPvPedIte_Codigo,
	--		ISOPvPedItemAttValue
	--	FROM ISOPVPEDITEMATTVALUES WITH (nOLOCK)
	--	WHERE
	--		ISOEmp_Codigo = 11 AND
	--		ISOPvPedItemAttId = 2),
	OC_DO_CLIENTE AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (nOLOCK)
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 2
			AND ISOPvPed_Codigo IN (SELECT ISOPVPED_CODIGO FROM ISOPVPEDIDO WHERE ISOEMP_CODIGO = 11 AND ISOPVPEDSIT_CODIGO = 16 AND ISOPvPed_DtaPedido >= (getdate() - 60))),
	LINHA_PEDIDO_CLIENTE AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (nOLOCK)
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 18),
	LINHA_ORDEM_COMPRA AS (
		SELECT ISOPVPEDITEM.ISOEmp_Codigo, ISOPVPEDITEM.ISOPVPED_CODIGO, ITEM_PEDIDO, ITEM_CLIENTE
			FROM ISOPVPEDITEM LEFT OUTER JOIN ( -- aqui performance - criado indice CISOPVPEDIDOATTVALUES1
			SELECT
				ISOEMP_CODIGO,
				ISOPVPED_CODIGO,
				CASE
					WHEN CHARINDEX('-',VALOR,1) > 1
					THEN SUBSTRING(VALOR,1,CHARINDEX('-',VALOR,1)-1)
					ELSE 0
				END AS ITEM_PEDIDO,
				SUBSTRING(VALOR,CHARINDEX('-',VALOR,1)+1,3) AS ITEM_CLIENTE
			FROM ISOPVPEDIDOATTVALUES CROSS APPLY DBO.SPLIT(ISOPVPEDIDOATTVALUELONG,CHAR(10))
			WHERE ISOEMP_CODIGO = 11
			AND ISOPVPEDIDOATTID = 107
			AND CHARINDEX('-',VALOR,1) > 1
			AND VALOR <> '') DADO_COMPLEMENTAR_PEDIDO
				ON ISOPVPEDITEM.ISOEmp_Codigo = DADO_COMPLEMENTAR_PEDIDO.ISOEmp_Codigo AND
					ISOPVPEDITEM.ISOPvPed_Codigo = DADO_COMPLEMENTAR_PEDIDO.ISOPvPed_Codigo AND
					ISOPVPEDITEM.ISOPvPedIte_Codigo = DADO_COMPLEMENTAR_PEDIDO.ITEM_PEDIDO
			WHERE ISOPVPEDITEM.ISOEmp_Codigo = 11
			AND ISOPVPEDITEM.ISOPvPed_Codigo IN (SELECT ISOPVPED_CODIGO FROM ISOPVPEDIDO WHERE ISOEMP_CODIGO = 11 AND ISOPVPEDSIT_CODIGO = 16 AND ISOPvPed_DtaPedido >= (getdate() - 60))),
	LOTE1 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- lote 1 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 3),
	QTD1 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- qtde 1 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 4),
	LOTE2 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- lote 2 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 5),
	QTD2 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- qtde 2 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 6),
	LOTE3 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- lote 3 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 7),
	QTD3 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- qtde 3 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 8),
	LOTE4 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- lote 4 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 9),
	QTD4 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- qtde 4 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 10),
	LOTE5 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- lote 5 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 11),
	QTD5 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK)-- qtde 5 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 12),
	NATUREZA_OPERACAO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPedTip_Codigo,
			COALESCE(ISOPvPedTip_NaturezaOperacaoCo,'') AS ISOPvPedTip_NaturezaOperacaoCo
		FROM ISOPVPEDTIPO WITH (nOLOCK)
		WHERE
			ISOEmp_Codigo = 11)
	--MATRIZ_ICMS AS (
	--	SELECT
	--		ISOEmp_Codigo,
	--		ISOPvPed_CliCodigo,
	--		ISOPvPed_Codigo,
	--		ISOPvPedIte_Codigo,
	--		ISOPrd_Codigo,
	--		ISOPvMatICMS_SubTribICMSDocFis,
	--		ISOPvMatICMS_AliquotaICMS
	--	FROM MacroConsultaMatrizICMS WITH (NOLOCK)
	--	WHERE
	--		ISOEmp_Codigo = 11)
SELECT
	PEDIDO.ISOEmp_Codigo, -- Código da empresa
	PEDIDO.ISOPvPed_Codigo, -- Código CRM do Pedido
	PEDIDO.ISOPvPed_CliCodigo, -- Código CRM do cliente
	PEDIDO.ISOPvPed_DtaPedido,  -- Data do pedido
	PEDIDO.ISOPvPed_HoraPedido, -- Hora do pedido
	PEDIDO.ISOPvPedSit_Codigo,
	CASE CONDICAO_PAGAMENTO.ISOPeCntPgt_Forma
		WHEN 'Bol' THEN 'BOLETO'
		WHEN 'Car' THEN 'CARTAO'
		WHEN 'Che' THEN 'CHEQUE'
		WHEN 'Dep' THEN 'DEPOSITO'
		WHEN 'Din' THEN 'Dinheiro'
	END AS ISOPeCntPgt_Forma, -- Forma de pagamento
	PEDIDO.ISOPvPed_Pagamento, -- Condição de pagamento
	PEDIDO.ISOPvPed_DtaSolEntrega,
	PEDIDO.ISOPvPed_CodEndEntrega,
	PEDIDO.ISOPvPed_DataAlteracao,
	PEDIDO.ISOPvPedOri_Codigo,
	PEDIDO.ISOPvPedTip_Codigo,
	PEDIDO.ISOPvPed_CodEndCobranca,

	CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0 THEN TOTAL_PEDIDO_EMPENHO.ISOPvPed_ValorTotalPedido ELSE PEDIDO.ISOPvPed_ValorTotalPedido END AS ISOPvPed_ValorTotalPedido,

	PEDIDO_ITEM.ISOPvPedIte_Codigo, -- Sequencial do item do pedido
	PEDIDO_ITEM.ISOPrd_Codigo, -- Código do produto
	PRODUTO.ISOPrd_Descricao,
	CASE
		WHEN ISNULL(NULLIF(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0),0) = 0
		THEN 0
		ELSE PEDIDO_ITEM.ISOPvPedIte_Quantidade
	END ISOPvPedIte_Quantidade,
	PEDIDO_ITEM.ISOPvPedIte_DataEntregaItem AS ISOPvPedIte_DataPromessa,
	PEDIDO_ITEM.ISOPvPedIte_DtaSolEntrega,
	PEDIDO_ITEM.ISOPvPedIte_UnidadeOrigem,
	PEDIDO_ITEM.ISOPvPedIte_UnidadeDestino,
	ROUND(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0) AS ISOPrdUndFatC_FatorConversao, -- Fator de conversão sem decimais
	ROUND(PEDIDO_ITEM.ISOPvPedIte_Quantidade * ROUND(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0),0) AS ISOPvPedIte_Qtd_UM_estoque,
	CASE
		WHEN ISNULL(NULLIF(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0),0) = 0
		THEN 0
		ELSE CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho >0 THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho ELSE ROUND(PEDIDO_ITEM.ISOPvPedIte_ValorUnitario,6) END
	END ISOPvPedIte_Vlr_Total_Unitario,

	CASE
		WHEN ISNULL(NULLIF(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0),0) = 0
		THEN 0
		ELSE CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0 THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho ELSE ROUND(PEDIDO_ITEM.ISOPvPedIte_ValorUnitario,6) END / NULLIF(ROUND(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0),0)
	END ISOPvPedIte_Vlr_Total_Unitario_EST,

	PEDIDO_ITEM.ISOPvPedIteSit_Codigo,
	PEDIDO_ITEM.ISOPvPedIte_AgendamentoData,
	PEDIDO_ITEM.ISOPvPedIte_AgendamentoHoraIni,
	PEDIDO_ITEM.ISOPvPedIte_AgendamentoHoraFin,
	PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,
	CASE
		WHEN COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) > 0
		THEN 0
		ELSE COALESCE(PEDIDO.ISOPvPed_ValorFrete,0)
	END AS ISOPvPed_ValorFrete,
	COALESCE(ORIGEM_PROTHEUS.ISOEmpEnt_Ori_Codigo,'') AS ISOEmpEnt_CliCod_ERP,
	ORIGEM_LX.ISOEmpEnt_Ori_Codigo AS ISOEmpEnt_Ori_LX,
	LOCAL_FATURAMENTO.ISOPvCDOri_Armazem AS ISOPvPedIte_Armazem,
	COALESCE(CLIENTE.ISOEntCli_Operacao,'') AS ISOEntCli_Operacao,
	ESTABELECIMENTO_LX.ISOPvCD_Estabelecimento AS ISOPvCD_Estabelecimento_LX,
	PEDIDO.ISOPvPed_CodigoAtendente AS ISOPvPed_CodigoAtendente, -- Código do atendente que criou o pedido
	PEDIDO.ISOEnt_Nome AS ISOEnt_NomeAtendente, -- Nome do atendente que criou o pedido
	--ATENDENTE_PEDIDO.ISOEnt_Nome AS ISOEnt_NomeAtendente, -- Nome do atendente que criou o pedido

	COALESCE(ANALISE_CREDITO.ISOWFTrf_DataLiberacaoCredito,'') AS ISOWFTrf_DataLiberacaoCredito, -- Data em que a tarefa de liberação de crédito foi executada
    COALESCE(ANALISE_CREDITO.ISOWFTrf_HoraLiberacaoCredito,'') AS ISOWFTrf_HoraLiberacaoCredito,  -- Hora em que a tarefa de liberação de crédito foi executada
    COALESCE(ANALISE_CREDITO.ISOWFTrf_CodigoAtendente,'') AS ISOWFTrf_CodigoAtendente, -- Responsável que executou a tarefa de liberação de crédito

	CASE
		WHEN PEDIDO.ISOPvPedOri_Codigo = 'EUR' THEN 3
		WHEN PEDIDO.ISOPvPedOri_Codigo = 'EU1' THEN 3
		WHEN PEDIDO.ISOPvPedOri_Codigo = 'USD' THEN 2
		WHEN PEDIDO.ISOPvPedOri_Codigo = 'US1' THEN 2
		ELSE 1
	END AS ISOMoe_Codigo,

	COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorIPI,0) AS ISOPvPedIte_ValorIPI,
	COALESCE(PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria,0) AS ISOPvPedIte_VlrSubsTrib,
	COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorICMS,0) AS ISOPvPedIte_ValorICMS,
	COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorPIS,0) AS ISOPvPedIte_ValorPIS,
	COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorCofins,0) AS ISOPvPedIte_ValorCofins,
	COALESCE(PEDIDO_ITEM.ISOPVPedIte_ValorFCPST,0) AS ISOPVPedIte_ValorFCPST,
	COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorFCP,0) AS ISOPvPedIte_ValorFCP,
	COALESCE(TRANSPORTADORA.ISOPvPedido_CodigoTRP,'') AS ISOPvPedido_CodigoTRP,
	COALESCE(TIPO_FRETE.ISOPvPedidoTipoFrete,'') AS ISOPvPedidoTipoFrete,
	COALESCE(TABELA_CLIENTE.ISOEntClienteAttOtherValue,'') AS ISOEmpEnt_Tabela_Preco,
	PEDIDO_ITEM.ISOPvPedIte_PrecoLista,
	COALESCE(RTRIM(LTRIM(SUBSTRING(OC_DO_CLIENTE.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_NrOrdemCompra,

	COALESCE(LINHA_PEDIDO_CLIENTE.ISOPvPedItemAttValue,LINHA_ORDEM_COMPRA.ITEM_CLIENTE,'') AS ISOPvPedIte_LinhaOrdemCompra,

	COALESCE(RTRIM(LTRIM(SUBSTRING(LOTE1.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_Lote1,
	COALESCE(RTRIM(LTRIM(SUBSTRING(QTD1.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_QtdeLote1,
	COALESCE(RTRIM(LTRIM(SUBSTRING(LOTE2.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_Lote2,
	COALESCE(RTRIM(LTRIM(SUBSTRING(QTD2.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_QtdeLote2,
	COALESCE(RTRIM(LTRIM(SUBSTRING(LOTE3.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_Lote3,
	COALESCE(RTRIM(LTRIM(SUBSTRING(QTD3.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_QtdeLote3,
	COALESCE(RTRIM(LTRIM(SUBSTRING(LOTE4.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_Lote4,
	COALESCE(RTRIM(LTRIM(SUBSTRING(QTD4.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_QtdeLote4,
	COALESCE(RTRIM(LTRIM(SUBSTRING(LOTE5.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_Lote5,
	COALESCE(RTRIM(LTRIM(SUBSTRING(QTD5.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_QtdeLote5,
	COALESCE(NATUREZA_OPERACAO.ISOPvPedTip_NaturezaOperacaoCo,'') AS ISOPvPed_Operacao,

	/*

	zagoto 16/09/2020  -- inativado por não ser usado no customercare

	CASE
		WHEN COALESCE(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0) = 0
			THEN 0
		ELSE
		CASE
			-- cliente TEM desoneração e o pedido é empenho
			WHEN MATRIZ_ICMS.ISOPvMatICMS_SubTribICMSDocFis = 1 AND COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) > 0
				THEN ROUND(((((PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho / (1 - (MATRIZ_ICMS.ISOPvMatICMS_AliquotaICMS/100)) / (1 + (PEDIDO_ITEM.ISOPvPedIte_PercentualIPI / 100)))))),6)
			-- cliente TEM desoneração e o pedido NÃO é empenho
			WHEN MATRIZ_ICMS.ISOPvMatICMS_SubTribICMSDocFis = 1 AND COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) = 0
				THEN ROUND(((PEDIDO_ITEM.ISOPvPedIte_ValorTotalCalculoF - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade)) ),6)
			--ELSE ROUND((CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0 THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho ELSE PEDIDO_ITEM.ISOPvPedIte_ValorUnitario END - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade) - (PEDIDO_ITEM.ISOPvPedIte_ValorIPI / PEDIDO_ITEM.ISOPvPedIte_Quantidade)),6)
			-- cliente SEM desoneração
			ELSE ROUND((CASE
							WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0
								THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho / (1 + ((PEDIDO_ITEM.ISOPvPedIte_PercSubsTributaria + PEDIDO_ITEM.ISOPvPedIte_PercentualFCPST)/100.0) ) / ((1+(PEDIDO_ITEM.ISOPvPedIte_PercentualIPI/100.0)) )
							--inativado pois não considerava o rateio do frete
							--ELSE (PEDIDO_ITEM.ISOPvPedIte_ValorUnitario - ((PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade) + PEDIDO_ITEM.ISOPVPedIte_ValorFCPST) - (PEDIDO_ITEM.ISOPvPedIte_ValorIPI / PEDIDO_ITEM.ISOPvPedIte_Quantidade))
							ELSE ((((PEDIDO_ITEM.ISOPvPedIte_ValorUnitario * PEDIDO_ITEM.ISOPvPedIte_Quantidade) - (((PEDIDO_ITEM.ISOPvPedIte_ValorUnitario * PEDIDO_ITEM.ISOPvPedIte_Quantidade) / TOTAL_PEDIDO.ISOPvPed_ValorTotalPedido) * PEDIDO.ISOPvPed_ValorFrete)) / PEDIDO_ITEM.ISOPvPedIte_Quantidade) - ((PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade) + PEDIDO_ITEM.ISOPVPedIte_ValorFCPST) - (PEDIDO_ITEM.ISOPvPedIte_ValorIPI / PEDIDO_ITEM.ISOPvPedIte_Quantidade))
						END ) ,6)
		END
	END AS ISOPvPedIte_PrecoCMLIntegracaoBO,
	CASE
		WHEN COALESCE(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0) = 0
			THEN 0
		ELSE
		CASE
			-- cliente TEM desoneração e o pedido é empenho
			WHEN MATRIZ_ICMS.ISOPvMatICMS_SubTribICMSDocFis = 1 AND COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) > 0
				THEN ROUND(((((PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho / (1 - (MATRIZ_ICMS.ISOPvMatICMS_AliquotaICMS/100)) / (1 + (PEDIDO_ITEM.ISOPvPedIte_PercentualIPI / 100))))) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao),6)
			-- cliente TEM desoneração e o pedido NÃO é empenho
			WHEN MATRIZ_ICMS.ISOPvMatICMS_SubTribICMSDocFis = 1 AND COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) = 0
				THEN ROUND(((PEDIDO_ITEM.ISOPvPedIte_ValorTotalCalculoF - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade)) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao),6)
			-- desativado 28/05/2020 pois utilizando valor dos impostos os valores não fechavam ELSE ROUND(((CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0 THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho ELSE PEDIDO_ITEM.ISOPvPedIte_ValorUnitario END - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade) - (PEDIDO_ITEM.ISOPvPedIte_ValorIPI / PEDIDO_ITEM.ISOPvPedIte_Quantidade)) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao),6)
			-- cliente SEM desoneração
			ELSE ROUND(((CASE
							WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0
								THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho / (1 + ((PEDIDO_ITEM.ISOPvPedIte_PercSubsTributaria + PEDIDO_ITEM.ISOPvPedIte_PercentualFCPST)/100.0) ) / ((1+(PEDIDO_ITEM.ISOPvPedIte_PercentualIPI/100.0)) )
							--inativado pois não considerava o rateio do frete
							--ELSE (PEDIDO_ITEM.ISOPvPedIte_ValorUnitario - ((PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade) + PEDIDO_ITEM.ISOPVPedIte_ValorFCPST) - (PEDIDO_ITEM.ISOPvPedIte_ValorIPI / PEDIDO_ITEM.ISOPvPedIte_Quantidade))
							ELSE ((((PEDIDO_ITEM.ISOPvPedIte_ValorUnitario * PEDIDO_ITEM.ISOPvPedIte_Quantidade) - (((PEDIDO_ITEM.ISOPvPedIte_ValorUnitario * PEDIDO_ITEM.ISOPvPedIte_Quantidade) / TOTAL_PEDIDO.ISOPvPed_ValorTotalPedido) * PEDIDO.ISOPvPed_ValorFrete)) / PEDIDO_ITEM.ISOPvPedIte_Quantidade) - ((PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade) + PEDIDO_ITEM.ISOPVPedIte_ValorFCPST) - (PEDIDO_ITEM.ISOPvPedIte_ValorIPI / PEDIDO_ITEM.ISOPvPedIte_Quantidade))
						END ) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao),6)
		END
	END AS ISOPvPedIte_PrecoUNESTIntegracaoBO,
	*/



	0 AS ISOPvPedIte_PrecoCMLIntegracaoBO,
	0 AS ISOPvPedIte_PrecoUNESTIntegracaoBO,

	COALESCE(EMPENHO.ISOCttPedCon_NumeroEmp,'') AS ISOPvPedido_NumeroEmpenho,
	TOTAL_LINHAS_PEDIDO.ISOPvPedIte_TotalLinhas
FROM
	PEDIDO -- CABECALHO DO PEDIDO
	INNER JOIN PEDIDO_ITEM ON -- ITEM DO PEDIDO
		PEDIDO.ISOEmp_Codigo = PEDIDO_ITEM.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = PEDIDO_ITEM.ISOPvPed_Codigo
	INNER JOIN TOTAL_LINHAS_PEDIDO ON -- TOTAL DE LINHAS DO PEDIDO
		PEDIDO.ISOEmp_Codigo = TOTAL_LINHAS_PEDIDO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = TOTAL_LINHAS_PEDIDO.ISOPvPed_Codigo
/*
	INNER JOIN ATENDENTE_PEDIDO ON  -- ATENDENTE QUE CRIOU O PEDIDO
		PEDIDO.ISOPvPed_CodigoAtendente = ATENDENTE_PEDIDO.ISOEnt_Codigo
*/
	INNER JOIN PRODUTO ON  -- ATENDENTE QUE CRIOU O PEDIDO
		PEDIDO_ITEM.ISOEmp_Codigo = PRODUTO.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPrd_Codigo = PRODUTO.ISOPrd_Codigo

	INNER JOIN FATOR_CONVERSAO_PRODUTO ON -- UNIDADES DE MEDIDA DO ITEM DO PEDIDO
		PEDIDO_ITEM.ISOEmp_Codigo = FATOR_CONVERSAO_PRODUTO.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPrd_Codigo = FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_PrdCodigo AND
		PEDIDO_ITEM.ISOPvPedIte_UnidadeOrigem = FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_UndOrigem AND
		PEDIDO_ITEM.ISOPvPedIte_UnidadeDestino = FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_UndDestino AND
		FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_Flag = 'A' AND
		FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_Armazem = ''
	INNER JOIN CLIENTE ON -- INFORMAÇÕES DO CLIENTE
		PEDIDO.ISOEmp_Codigo = CLIENTE.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_CliCodigo = CLIENTE.ISOEntCli_Codigo
    INNER JOIN LOCAL_FATURAMENTO ON
		PEDIDO.ISOEmp_Codigo = LOCAL_FATURAMENTO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_EstadoOrigem = LOCAL_FATURAMENTO.ISOPvCD_Origem AND
        PEDIDO.ISOPvPed_EstadoDestino = LOCAL_FATURAMENTO.ISOPvCD_Destino AND
        PEDIDO.ISOPvPedOri_Codigo = LOCAL_FATURAMENTO.ISOPvCDOri_Pedido
	INNER JOIN ORIGEM_PROTHEUS ON -- PESQUISA CÓDIGO PROTHEUS DO CLIENTE
		PEDIDO.ISOEmp_Codigo = ORIGEM_PROTHEUS.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_CliCodigo = ORIGEM_PROTHEUS.ISOEmpEnt_EntCodigo AND
		ORIGEM_PROTHEUS.ISOEmpOri_Codigo = 13
	LEFT OUTER JOIN EMPENHO ON -- EMPENHO DO PEDIDO
		PEDIDO.ISOEmp_Codigo = EMPENHO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = EMPENHO.ISOCttPedCon_PedidoCodigo

	LEFT OUTER JOIN TOTAL_PEDIDO_EMPENHO ON -- EMPENHO DO PEDIDO
		PEDIDO.ISOEmp_Codigo = TOTAL_PEDIDO_EMPENHO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = TOTAL_PEDIDO_EMPENHO.ISOPvPed_Codigo

	LEFT OUTER JOIN TOTAL_PEDIDO ON -- VALOR TOTAL DO PEDIDO
		PEDIDO.ISOEmp_Codigo = TOTAL_PEDIDO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = TOTAL_PEDIDO.ISOPvPed_Codigo

	LEFT OUTER JOIN TABELA_CLIENTE ON -- TABELA DO CLIENTE
		PEDIDO.ISOEmp_Codigo = TABELA_CLIENTE.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_CliCodigo = TABELA_CLIENTE.ISOEntCli_Codigo
		AND TABELA_CLIENTE.ISOEntClienteAttId = 99
	LEFT OUTER JOIN ESTABELECIMENTO_LX ON -- ESTABELECIMENTO DO PEDIDO
		PEDIDO.ISOEmp_Codigo = ESTABELECIMENTO_LX.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_EstadoOrigem = ESTABELECIMENTO_LX.ISOPvCD_Origem AND
        PEDIDO.ISOPvPed_EstadoDestino = ESTABELECIMENTO_LX.ISOPvCD_Destino
	LEFT OUTER JOIN ORIGEM_LX ON  -- PESQUISA CÓDIGO LX DO CLIENTE
		PEDIDO.ISOEmp_Codigo = ORIGEM_LX.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_CliCodigo = ORIGEM_LX.ISOEmpEnt_EntCodigo AND
		ORIGEM_LX.ISOEmpOri_Codigo = 2
	LEFT OUTER JOIN CONDICAO_PAGAMENTO ON
		PEDIDO.ISOEmp_Codigo = CONDICAO_PAGAMENTO.ISOEmp_Codigo AND
		PEDIDO.ISOPeCndPgt_Codigo = CONDICAO_PAGAMENTO.ISOPeCndPgt_Codigo
	LEFT OUTER JOIN ANALISE_CREDITO ON  -- PESQUISA DA TAREFA DE LIBERAÇÃO DE CRÉDITO
		PEDIDO.ISOEmp_Codigo = ANALISE_CREDITO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = ANALISE_CREDITO.ISOPvPed_Codigo
	LEFT OUTER JOIN TIPO_FRETE ON -- INFORMACOES DE FRETE DO PEDIDO
		PEDIDO.ISOEmp_Codigo = TIPO_FRETE.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = TIPO_FRETE.ISOPvPed_Codigo
	LEFT OUTER JOIN TRANSPORTADORA ON -- INFORMACOES DA TRANSPORTADORA DO PEDIDO
		PEDIDO.ISOEmp_Codigo = TRANSPORTADORA.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = TRANSPORTADORA.ISOPvPed_Codigo
	LEFT OUTER JOIN	LINHA_PEDIDO_CLIENTE  ON  -- Observação do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = LINHA_PEDIDO_CLIENTE.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = LINHA_PEDIDO_CLIENTE.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = LINHA_PEDIDO_CLIENTE.ISOPvPedIte_Codigo

	LEFT OUTER JOIN	LINHA_ORDEM_COMPRA ON  -- Observação do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = LINHA_ORDEM_COMPRA.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = LINHA_ORDEM_COMPRA.ISOPvPed_Codigo AND
	    PEDIDO_ITEM.ISOPvPedIte_Codigo = LINHA_ORDEM_COMPRA.ITEM_PEDIDO

	LEFT OUTER JOIN	OC_DO_CLIENTE ON  -- Observação do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = OC_DO_CLIENTE.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = OC_DO_CLIENTE.ISOPvPed_Codigo AND
	    PEDIDO_ITEM.ISOPvPedIte_Codigo = OC_DO_CLIENTE.ISOPvPedIte_Codigo

	LEFT OUTER JOIN	LOTE1 ON  -- lote 1 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = LOTE1.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = LOTE1.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = LOTE1.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	QTD1 ON  -- qtde 1 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = QTD1.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = QTD1.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = QTD1.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	LOTE2 ON  -- lote 2 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = LOTE2.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = LOTE2.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = LOTE2.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	QTD2 ON  -- qtde 2 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = QTD2.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = QTD2.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = QTD2.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	LOTE3 ON  -- lote 3 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = LOTE3.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = LOTE3.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = LOTE3.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	QTD3 ON  -- qtde 3 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = QTD3.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = QTD3.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = QTD3.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	LOTE4 ON  -- lote 4 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = LOTE4.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = LOTE4.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = LOTE4.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	QTD4 ON  -- qtde 4 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = QTD4.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = QTD4.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = QTD4.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	LOTE5 ON  -- lote 5 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = LOTE5.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = LOTE5.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = LOTE5.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	QTD5 ON  -- qtde 5 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = QTD5.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = QTD5.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = QTD5.ISOPvPedIte_Codigo
	LEFT OUTER JOIN NATUREZA_OPERACAO ON
		PEDIDO.ISOEmp_Codigo = NATUREZA_OPERACAO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPedTip_Codigo = NATUREZA_OPERACAO.ISOPvPedTip_Codigo

	--LEFT OUTER JOIN MATRIZ_ICMS ON
	--	PEDIDO_ITEM.ISOEmp_Codigo = MATRIZ_ICMS.ISOEmp_Codigo AND
	--	PEDIDO_ITEM.ISOPvPed_Codigo = MATRIZ_ICMS.ISOPvPed_Codigo AND
	--	PEDIDO_ITEM.ISOPvPedIte_Codigo = MATRIZ_ICMS.ISOPvPedIte_Codigo
WHERE
	PEDIDO.ISOEmp_Codigo = 11 AND
	PEDIDO_ITEM.ISOPvPedIteSit_Codigo = 1;


-- dbo.MACROISOPvPedidoCustomerCare_03122020 source

CREATE VIEW [dbo].[MACROISOPvPedidoCustomerCare_03122020]
as
with
	PEDIDO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPed_CliCodigo,
			ISOPvPed_EstadoOrigem,
			ISOPvPed_EstadoDestino,
			ISOPvPed_CodigoAtendente,
			ISOPvPedSit_Codigo,
			ISOPvPedOri_Codigo,
			ISOPvPed_CodEndCobranca,
			ISOPvPed_ValorTotalPedido,
			ISOPeCndPgt_Codigo,
			ISOPvPed_ValorFrete,
			ISOPvPedTip_Codigo,
			ISOPvPed_Pagamento, -- Condição de pagamento
			ISOPVPed_OrdCompra,
			ISOPvPed_DtaSolEntrega,
			ISOPvPed_DataAlteracao,
			ISOPvPed_CodEndEntrega,
			ISOPvPed_DtaPedido,  -- Data do pedido
			ISOPvPed_HoraPedido -- Hora do pedido
		FROM ISOPVPEDIDO WITH (nOLOCK)
		WHERE
			ISOEmp_Codigo = 11
			and ISOPvPedSit_Codigo = 16
			),
	PEDIDO_ITEM AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			ISOPrd_Codigo,
			ISOPvPedIte_Quantidade,
			ISOPvPedIte_DtaSolEntrega,
			ISOPvPedIte_UnidadeOrigem,
			ISOPvPedIte_UnidadeDestino,
			ISOPvPedIte_ValorUnitario,
			ISOPvPedIteSit_Codigo,
			ISOPvPedIte_AgendamentoData,
			ISOPvPedIte_AgendamentoHoraIni,
			ISOPvPedIte_AgendamentoHoraFin,
			ISOPvPedIte_ValorEmpenho,
			ISOPvPedIte_PrecoLista,
			ISOPvPedIte_ValorIPI,
			ISOPvPedIte_VlrSubsTributaria,
			ISOPvPedIte_ValorICMS,
			ISOPvPedIte_ValorPIS,
			ISOPvPedIte_ValorCofins,
			ISOPVPedIte_ValorFCPST,
			ISOPvPedIte_ValorFCP,
			ISOPvPedIte_ValorTotalCalculoF,
			ISOPvPedIte_DataEntregaItem,
			ISOPvPedIte_PercentualIPI,
			ISOPvPedIte_PercSubsTributaria,
			ISOPvPedIte_PercentualFCPST
		FROM ISOPVPEDITEM WITH (nOLOCK)
		WHERE
			ISOEmp_Codigo = 11
			),
	TOTAL_LINHAS_PEDIDO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			COUNT(*) AS ISOPvPedIte_TotalLinhas
		FROM ISOPVPEDITEM WITH (nOLOCK)
		WHERE
			ISOEmp_Codigo = 11
			AND ISOPvPedIteSit_Codigo = 1
		GROUP BY
			ISOEmp_Codigo,
			ISOPvPed_Codigo),
	TOTAL_PEDIDO_EMPENHO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			SUM(ISOPvPedIte_Quantidade * ISOPvPedIte_ValorEmpenho) AS ISOPvPed_ValorTotalPedido
		FROM         ISOPVPEDITEM WITH (nOLOCK)
		WHERE     (ISOEmp_Codigo = 11) AND (ISOPvPedIteSit_Codigo = 1)
		GROUP BY ISOEmp_Codigo, ISOPvPed_Codigo),
	TOTAL_PEDIDO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			SUM(ISOPvPedIte_Quantidade * ISOPvPedIte_ValorUnitario) AS ISOPvPed_ValorTotalPedido
		FROM         ISOPVPEDITEM WITH (nOLOCK)
		WHERE     (ISOEmp_Codigo = 11) AND (ISOPvPedIteSit_Codigo = 1) --and ISOPvPed_Codigo >= 8741752
		GROUP BY ISOEmp_Codigo, ISOPvPed_Codigo),
	ATENDENTE_PEDIDO AS (
		SELECT
			ISOEnt_Codigo,
			ISOEnt_Nome
		FROM ISOENTIDADE WITH (nOLOCK)),
	PRODUTO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPrd_Codigo,
			ISOPrd_Descricao
		FROM ISOPRODUTO WITH (nOLOCK)
		WHERE (ISOEmp_Codigo = 11)),
	FATOR_CONVERSAO_PRODUTO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPrdUndFatC_PrdCodigo,
			ISOPrdUndFatC_UndOrigem,
			ISOPrdUndFatC_UndDestino,
			ISOPrdUndFatC_FatorConversao,
			ISOPrdUndFatC_Flag,
			ISOPrdUndFatC_Armazem
		FROM ISOPRDUNDFATORCONVERSAO WITH (nOLOCK)),
	CLIENTE AS (
		SELECT
			ISOEmp_Codigo,
			ISOEntCli_Codigo,
			ISOEntCli_Operacao
		FROM ISOENTCLIENTE WITH (nOLOCK)),
	LOCAL_FATURAMENTO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvCD_Origem,
			ISOPvCD_Destino,
			ISOPvCDOri_Pedido,
			ISOPvCDOri_Armazem
		FROM ISOPVCDORIGEM WITH (nOLOCK)),
	EMPENHO AS (
		SELECT
			ISOEmp_Codigo,
			ISOCttPedCon_PedidoCodigo,
			ISOCttPedCon_NumeroEmp
		FROM ISOCTPEDCONTRATO WITH (nOLOCK)),
	TABELA_CLIENTE AS (
		SELECT
			ISOEmp_Codigo,
			ISOEntCli_Codigo,
			ISOEntClienteAttId,
			ISOEntClienteAttOtherValue
		FROM ISOENTCLIENTEATTVALUES WITH (nOLOCK)
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOEntClienteAttId = 99),
	ESTABELECIMENTO_LX AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvCD_Origem,
			ISOPvCD_Destino,
			ISOPvCD_Estabelecimento
		FROM ISOPVCD WITH (nOLOCK)),
	ORIGEM_PROTHEUS AS (
		SELECT
			ISOEmp_Codigo,
			ISOEmpEnt_EntCodigo,
			ISOEmpOri_Codigo,
			ISOEmpEnt_Ori_Codigo
		FROM ISOEMPENT_ORIGEM WITH (nOLOCK)
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOEmpOri_Codigo = 13),
	ORIGEM_LX AS (
		SELECT
			ISOEmp_Codigo,
			ISOEmpEnt_EntCodigo,
			ISOEmpOri_Codigo,
			ISOEmpEnt_Ori_Codigo
		FROM ISOEMPENT_ORIGEM WITH (nOLOCK)
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOEmpOri_Codigo = 2),
	CONDICAO_PAGAMENTO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPeCndPgt_Codigo,
			ISOPeCntPgt_Forma
		FROM ISOPECNDPAGAMENTO WITH (nOLOCK)),
	ANALISE_CREDITO AS (
		SELECT
			ISOWFTRF_PEDIDO.ISOEmp_Codigo,
			ISOWFTRF_PEDIDO.ISOPvPed_Codigo,
		    CASE WHEN ISOWFTrf_RspExe_RspCodigo IS NULL THEN '' ELSE CONVERT(VARCHAR(8), ISOWFTrf_DataSolucao, 112) END AS ISOWFTrf_DataLiberacaoCredito,  -- Data em que a tarefa de liberação de crédito foi executada
			CASE WHEN ISOWFTrf_RspExe_RspCodigo IS NULL THEN '' ELSE CONVERT(VARCHAR(8), ISOWFTrf_DataSolucao, 108) END AS ISOWFTrf_HoraLiberacaoCredito,
			CASE WHEN ISOWFTrf_RspExe_RspCodigo IS NULL THEN '' ELSE COALESCE(CAST(ISOWFTrf_RspExe_RspCodigo AS VARCHAR(10)),'')+'-'+COALESCE(USUARIO_CEDITO.ISOEnt_Nome,'') END AS ISOWFTrf_CodigoAtendente
		FROM ISOWFTRF_PEDIDO INNER JOIN ISOWFPROCEDIMENTO ON
			ISOWFTRF_PEDIDO.ISOEmp_Codigo = ISOWFPROCEDIMENTO.ISOEmp_Codigo AND
			ISOWFTRF_PEDIDO.ISOWFTrf_Ped_PrcCodigo = ISOWFPROCEDIMENTO.ISOWFPrc_Codigo AND
			ISOWFPROCEDIMENTO.ISOWFPrcPad_Codigo IN (324,327) AND -- PROCEDIMENTO ( PEDIDO - ANALISE DE CREDITO)
			ISOWFTRF_PEDIDO.ISOWFTrf_Ped_TrfCodigo = 1 --- CÓDIGO DA TAREFA QUE O ATENDENTE IRÁ CONFIRMAR O CRÉDITO DO CLIENTE ********
		INNER JOIN ISOWFTAREFA ON -- TAREFA DE LIBERAÇÃO DE CRÉDITO
			ISOWFTRF_PEDIDO.ISOEmp_Codigo = ISOWFTAREFA.ISOEmp_Codigo AND
			ISOWFTRF_PEDIDO.ISOWFTrf_Ped_PrcCodigo = ISOWFTAREFA.ISOWFPrc_Codigo AND
			ISOWFTRF_PEDIDO.ISOWFTrf_Ped_TrfCodigo = ISOWFTAREFA.ISOWFTrfPad_Codigo AND
			ISOWFTAREFA.ISOWFTrfPad_Codigo = 1 AND  -- TAREFA (ANALISAR PEDIDO RETIDO EM CREDITO)
			ISOWFTAREFA.ISOWFTrfPadSit_Codigo = 1  -- SITUACAO (PEDIDO APROVADO DE CREDITO)
		INNER JOIN ISOENTIDADE AS USUARIO_CEDITO ON -- USUÁRIO QUE LIBEROU O CRÉDITO DO CLIENTE
			ISOWFTAREFA.ISOWFTrf_RspExe_RspCodigo = USUARIO_CEDITO.ISOEnt_Codigo
		WHERE ISOWFTRF_PEDIDO.ISOEmp_Codigo = 11 AND
		ISOWFTRF_PEDIDO.ISOWFTrf_Ped_PrcCodigo = (SELECT MAX(X.ISOWFTrf_Ped_PrcCodigo) FROM ISOWFTRF_PEDIDO X WHERE ISOWFTRF_PEDIDO.ISOEmp_Codigo = X.ISOEmp_Codigo AND ISOWFTRF_PEDIDO.ISOPvPed_Codigo = X.ISOPvPed_Codigo)),
	TIPO_FRETE AS (
		SELECT 	DISTINCT
			ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOEmp_Codigo,
			ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOPvPed_Codigo,
			COALESCE(ISOPvPedidoAttOptValue,'') AS ISOPvPedidoTipoFrete
		FROM ISOPVPEDIDOATTVALUES AS ISOPVPEDIDOATTVALUES_TIPO_FRETE
		INNER JOIN ISOPVPEDIDOATTLEVEL1 ON
			ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOEmp_Codigo = ISOPVPEDIDOATTLEVEL1.ISOEmp_Codigo AND
			ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOPvPedidoAttId = ISOPVPEDIDOATTLEVEL1.ISOPvPedidoAttId AND
			ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOPvPedidoAttOptId = ISOPVPEDIDOATTLEVEL1.ISOPvPedidoAttOptId AND
			ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOPvPedidoAttId = 104 -- CÓDIGO DA PERGUNTA TIPO DO FRETE
		WHERE
			ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOEmp_Codigo = 11),
	TRANSPORTADORA AS (
		SELECT 	DISTINCT
			ISOPVPEDIDOATTVALUES_TRANSP.ISOEmp_Codigo,
			ISOPVPEDIDOATTVALUES_TRANSP.ISOPvPed_Codigo,
			COALESCE(ISOPvTrp_CodigoExterno,'') AS ISOPvPedido_CodigoTRP
		FROM ISOPVPEDIDOATTVALUES AS ISOPVPEDIDOATTVALUES_TRANSP
		INNER JOIN ISOPVTRANSPORTADORA ON
			ISOPVTRANSPORTADORA.ISOPvTrp_Codigo = ISOPVPEDIDOATTVALUES_TRANSP.ISOPvPedidoAttOptId AND
			ISOPVPEDIDOATTVALUES_TRANSP.ISOPvPedidoAttId = 105 AND -- CÓDIGO DA PERGUNTA TRANSPORTADORA
			ISOPVTRANSPORTADORA.ISOPvTrp_Flag = 'A'
		WHERE ISOPVPEDIDOATTVALUES_TRANSP.ISOEmp_Codigo = 11),
	--OBSERVACAO_ITEM_PEDIDO AS (
	--	SELECT
	--		ISOEmp_Codigo,
	--		ISOPvPed_Codigo,
	--		ISOPvPedIte_Codigo,
	--		ISOPvPedItemAttValue
	--	FROM ISOPVPEDITEMATTVALUES WITH (nOLOCK)
	--	WHERE
	--		ISOEmp_Codigo = 11 AND
	--		ISOPvPedItemAttId = 2),
	OC_DO_CLIENTE AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (nOLOCK)
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 2),
	LINHA_PEDIDO_CLIENTE AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (nOLOCK)
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 18),
	LINHA_ORDEM_COMPRA AS (
		SELECT ISOPVPEDITEM.ISOEmp_Codigo, ISOPVPEDITEM.ISOPVPED_CODIGO, ITEM_PEDIDO, ITEM_CLIENTE
			FROM ISOPVPEDITEM LEFT OUTER JOIN (
			SELECT
				ISOEMP_CODIGO,
				ISOPVPED_CODIGO,
				CASE
					WHEN CHARINDEX('-',VALOR,1) > 1
					THEN SUBSTRING(VALOR,1,CHARINDEX('-',VALOR,1)-1)
					ELSE 0
				END AS ITEM_PEDIDO,
				SUBSTRING(VALOR,CHARINDEX('-',VALOR,1)+1,3) AS ITEM_CLIENTE
			FROM ISOPVPEDIDOATTVALUES CROSS APPLY DBO.SPLIT(ISOPVPEDIDOATTVALUELONG,CHAR(10))
			WHERE ISOEMP_CODIGO = 11
			AND ISOPVPEDIDOATTID = 107
			AND CHARINDEX('-',VALOR,1) > 1
			AND VALOR <> '') DADO_COMPLEMENTAR_PEDIDO
				ON ISOPVPEDITEM.ISOEmp_Codigo = DADO_COMPLEMENTAR_PEDIDO.ISOEmp_Codigo AND
					ISOPVPEDITEM.ISOPvPed_Codigo = DADO_COMPLEMENTAR_PEDIDO.ISOPvPed_Codigo AND
					ISOPVPEDITEM.ISOPvPedIte_Codigo = DADO_COMPLEMENTAR_PEDIDO.ITEM_PEDIDO
			WHERE ISOPVPEDITEM.ISOEmp_Codigo = 11),
	LOTE1 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- lote 1 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 3),
	QTD1 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- qtde 1 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 4),
	LOTE2 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- lote 2 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 5),
	QTD2 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- qtde 2 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 6),
	LOTE3 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- lote 3 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 7),
	QTD3 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- qtde 3 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 8),
	LOTE4 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- lote 4 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 9),
	QTD4 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- qtde 4 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 10),
	LOTE5 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- lote 5 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 11),
	QTD5 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK)-- qtde 5 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 12),
	NATUREZA_OPERACAO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPedTip_Codigo,
			COALESCE(ISOPvPedTip_NaturezaOperacaoCo,'') AS ISOPvPedTip_NaturezaOperacaoCo
		FROM ISOPVPEDTIPO WITH (nOLOCK)
		WHERE
			ISOEmp_Codigo = 11),
	MATRIZ_ICMS AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_CliCodigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			ISOPrd_Codigo,
			ISOPvMatICMS_SubTribICMSDocFis,
			ISOPvMatICMS_AliquotaICMS
		FROM MacroConsultaMatrizICMS WITH (NOLOCK)
		WHERE
			ISOEmp_Codigo = 11)
SELECT
	PEDIDO.ISOEmp_Codigo, -- Código da empresa
	PEDIDO.ISOPvPed_Codigo, -- Código CRM do Pedido
	PEDIDO.ISOPvPed_CliCodigo, -- Código CRM do cliente
	PEDIDO.ISOPvPed_DtaPedido,  -- Data do pedido
	PEDIDO.ISOPvPed_HoraPedido, -- Hora do pedido
	PEDIDO.ISOPvPedSit_Codigo,
	CASE CONDICAO_PAGAMENTO.ISOPeCntPgt_Forma
		WHEN 'Bol' THEN 'BOLETO'
		WHEN 'Car' THEN 'CARTAO'
		WHEN 'Che' THEN 'CHEQUE'
		WHEN 'Dep' THEN 'DEPOSITO'
		WHEN 'Din' THEN 'Dinheiro'
	END AS ISOPeCntPgt_Forma, -- Forma de pagamento
	PEDIDO.ISOPvPed_Pagamento, -- Condição de pagamento
	PEDIDO.ISOPvPed_DtaSolEntrega,
	PEDIDO.ISOPvPed_CodEndEntrega,
	PEDIDO.ISOPvPed_DataAlteracao,
	PEDIDO.ISOPvPedOri_Codigo,
	PEDIDO.ISOPvPedTip_Codigo,
	PEDIDO.ISOPvPed_CodEndCobranca,

	CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0 THEN TOTAL_PEDIDO_EMPENHO.ISOPvPed_ValorTotalPedido ELSE PEDIDO.ISOPvPed_ValorTotalPedido END AS ISOPvPed_ValorTotalPedido,

	PEDIDO_ITEM.ISOPvPedIte_Codigo, -- Sequencial do item do pedido
	PEDIDO_ITEM.ISOPrd_Codigo, -- Código do produto
	PRODUTO.ISOPrd_Descricao,
	CASE
		WHEN ISNULL(NULLIF(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0),0) = 0
		THEN 0
		ELSE PEDIDO_ITEM.ISOPvPedIte_Quantidade
	END ISOPvPedIte_Quantidade,
	PEDIDO_ITEM.ISOPvPedIte_DataEntregaItem AS ISOPvPedIte_DataPromessa,
	PEDIDO_ITEM.ISOPvPedIte_DtaSolEntrega,
	PEDIDO_ITEM.ISOPvPedIte_UnidadeOrigem,
	PEDIDO_ITEM.ISOPvPedIte_UnidadeDestino,
	ROUND(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0) AS ISOPrdUndFatC_FatorConversao, -- Fator de conversão sem decimais
	ROUND(PEDIDO_ITEM.ISOPvPedIte_Quantidade * ROUND(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0),0) AS ISOPvPedIte_Qtd_UM_estoque,
	CASE
		WHEN ISNULL(NULLIF(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0),0) = 0
		THEN 0
		ELSE CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho >0 THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho ELSE ROUND(PEDIDO_ITEM.ISOPvPedIte_ValorUnitario,6) END
	END ISOPvPedIte_Vlr_Total_Unitario,

	CASE
		WHEN ISNULL(NULLIF(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0),0) = 0
		THEN 0
		ELSE CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0 THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho ELSE ROUND(PEDIDO_ITEM.ISOPvPedIte_ValorUnitario,6) END / NULLIF(ROUND(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0),0)
	END ISOPvPedIte_Vlr_Total_Unitario_EST,

	PEDIDO_ITEM.ISOPvPedIteSit_Codigo,
	PEDIDO_ITEM.ISOPvPedIte_AgendamentoData,
	PEDIDO_ITEM.ISOPvPedIte_AgendamentoHoraIni,
	PEDIDO_ITEM.ISOPvPedIte_AgendamentoHoraFin,
	PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,
	CASE
		WHEN COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) > 0
		THEN 0
		ELSE COALESCE(PEDIDO.ISOPvPed_ValorFrete,0)
	END AS ISOPvPed_ValorFrete,
	COALESCE(ORIGEM_PROTHEUS.ISOEmpEnt_Ori_Codigo,'') AS ISOEmpEnt_CliCod_ERP,
	ORIGEM_LX.ISOEmpEnt_Ori_Codigo AS ISOEmpEnt_Ori_LX,
	LOCAL_FATURAMENTO.ISOPvCDOri_Armazem AS ISOPvPedIte_Armazem,
	COALESCE(CLIENTE.ISOEntCli_Operacao,'') AS ISOEntCli_Operacao,
	ESTABELECIMENTO_LX.ISOPvCD_Estabelecimento AS ISOPvCD_Estabelecimento_LX,
	PEDIDO.ISOPvPed_CodigoAtendente AS ISOPvPed_CodigoAtendente, -- Código do atendente que criou o pedido
	ATENDENTE_PEDIDO.ISOEnt_Nome AS ISOEnt_NomeAtendente, -- Nome do atendente que criou o pedido

	COALESCE(ANALISE_CREDITO.ISOWFTrf_DataLiberacaoCredito,'') AS ISOWFTrf_DataLiberacaoCredito, -- Data em que a tarefa de liberação de crédito foi executada
    COALESCE(ANALISE_CREDITO.ISOWFTrf_HoraLiberacaoCredito,'') AS ISOWFTrf_HoraLiberacaoCredito,  -- Hora em que a tarefa de liberação de crédito foi executada
    COALESCE(ANALISE_CREDITO.ISOWFTrf_CodigoAtendente,'') AS ISOWFTrf_CodigoAtendente, -- Responsável que executou a tarefa de liberação de crédito

	CASE
		WHEN PEDIDO.ISOPvPedOri_Codigo = 'EUR' THEN 3
		WHEN PEDIDO.ISOPvPedOri_Codigo = 'EU1' THEN 3
		WHEN PEDIDO.ISOPvPedOri_Codigo = 'USD' THEN 2
		WHEN PEDIDO.ISOPvPedOri_Codigo = 'US1' THEN 2
		ELSE 1
	END AS ISOMoe_Codigo,

	COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorIPI,0) AS ISOPvPedIte_ValorIPI,
	COALESCE(PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria,0) AS ISOPvPedIte_VlrSubsTrib,
	COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorICMS,0) AS ISOPvPedIte_ValorICMS,
	COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorPIS,0) AS ISOPvPedIte_ValorPIS,
	COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorCofins,0) AS ISOPvPedIte_ValorCofins,
	COALESCE(PEDIDO_ITEM.ISOPVPedIte_ValorFCPST,0) AS ISOPVPedIte_ValorFCPST,
	COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorFCP,0) AS ISOPvPedIte_ValorFCP,
	COALESCE(TRANSPORTADORA.ISOPvPedido_CodigoTRP,'') AS ISOPvPedido_CodigoTRP,
	COALESCE(TIPO_FRETE.ISOPvPedidoTipoFrete,'') AS ISOPvPedidoTipoFrete,
	COALESCE(TABELA_CLIENTE.ISOEntClienteAttOtherValue,'') AS ISOEmpEnt_Tabela_Preco,
	PEDIDO_ITEM.ISOPvPedIte_PrecoLista,
	COALESCE(RTRIM(LTRIM(SUBSTRING(OC_DO_CLIENTE.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_NrOrdemCompra,

	COALESCE(LINHA_PEDIDO_CLIENTE.ISOPvPedItemAttValue,LINHA_ORDEM_COMPRA.ITEM_CLIENTE,'') AS ISOPvPedIte_LinhaOrdemCompra,

	COALESCE(RTRIM(LTRIM(SUBSTRING(LOTE1.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_Lote1,
	COALESCE(RTRIM(LTRIM(SUBSTRING(QTD1.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_QtdeLote1,
	COALESCE(RTRIM(LTRIM(SUBSTRING(LOTE2.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_Lote2,
	COALESCE(RTRIM(LTRIM(SUBSTRING(QTD2.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_QtdeLote2,
	COALESCE(RTRIM(LTRIM(SUBSTRING(LOTE3.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_Lote3,
	COALESCE(RTRIM(LTRIM(SUBSTRING(QTD3.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_QtdeLote3,
	COALESCE(RTRIM(LTRIM(SUBSTRING(LOTE4.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_Lote4,
	COALESCE(RTRIM(LTRIM(SUBSTRING(QTD4.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_QtdeLote4,
	COALESCE(RTRIM(LTRIM(SUBSTRING(LOTE5.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_Lote5,
	COALESCE(RTRIM(LTRIM(SUBSTRING(QTD5.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_QtdeLote5,
	COALESCE(NATUREZA_OPERACAO.ISOPvPedTip_NaturezaOperacaoCo,'') AS ISOPvPed_Operacao,

	/*

	zagoto 16/09/2020  -- inativado por não ser usado no customercare

	CASE
		WHEN COALESCE(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0) = 0
			THEN 0
		ELSE
		CASE
			-- cliente TEM desoneração e o pedido é empenho
			WHEN MATRIZ_ICMS.ISOPvMatICMS_SubTribICMSDocFis = 1 AND COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) > 0
				THEN ROUND(((((PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho / (1 - (MATRIZ_ICMS.ISOPvMatICMS_AliquotaICMS/100)) / (1 + (PEDIDO_ITEM.ISOPvPedIte_PercentualIPI / 100)))))),6)
			-- cliente TEM desoneração e o pedido NÃO é empenho
			WHEN MATRIZ_ICMS.ISOPvMatICMS_SubTribICMSDocFis = 1 AND COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) = 0
				THEN ROUND(((PEDIDO_ITEM.ISOPvPedIte_ValorTotalCalculoF - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade)) ),6)
			--ELSE ROUND((CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0 THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho ELSE PEDIDO_ITEM.ISOPvPedIte_ValorUnitario END - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade) - (PEDIDO_ITEM.ISOPvPedIte_ValorIPI / PEDIDO_ITEM.ISOPvPedIte_Quantidade)),6)
			-- cliente SEM desoneração
			ELSE ROUND((CASE
							WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0
								THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho / (1 + ((PEDIDO_ITEM.ISOPvPedIte_PercSubsTributaria + PEDIDO_ITEM.ISOPvPedIte_PercentualFCPST)/100.0) ) / ((1+(PEDIDO_ITEM.ISOPvPedIte_PercentualIPI/100.0)) )
							--inativado pois não considerava o rateio do frete
							--ELSE (PEDIDO_ITEM.ISOPvPedIte_ValorUnitario - ((PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade) + PEDIDO_ITEM.ISOPVPedIte_ValorFCPST) - (PEDIDO_ITEM.ISOPvPedIte_ValorIPI / PEDIDO_ITEM.ISOPvPedIte_Quantidade))
							ELSE ((((PEDIDO_ITEM.ISOPvPedIte_ValorUnitario * PEDIDO_ITEM.ISOPvPedIte_Quantidade) - (((PEDIDO_ITEM.ISOPvPedIte_ValorUnitario * PEDIDO_ITEM.ISOPvPedIte_Quantidade) / TOTAL_PEDIDO.ISOPvPed_ValorTotalPedido) * PEDIDO.ISOPvPed_ValorFrete)) / PEDIDO_ITEM.ISOPvPedIte_Quantidade) - ((PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade) + PEDIDO_ITEM.ISOPVPedIte_ValorFCPST) - (PEDIDO_ITEM.ISOPvPedIte_ValorIPI / PEDIDO_ITEM.ISOPvPedIte_Quantidade))
						END ) ,6)
		END
	END AS ISOPvPedIte_PrecoCMLIntegracaoBO,

	CASE
		WHEN COALESCE(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0) = 0
			THEN 0
		ELSE
		CASE
			-- cliente TEM desoneração e o pedido é empenho
			WHEN MATRIZ_ICMS.ISOPvMatICMS_SubTribICMSDocFis = 1 AND COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) > 0
				THEN ROUND(((((PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho / (1 - (MATRIZ_ICMS.ISOPvMatICMS_AliquotaICMS/100)) / (1 + (PEDIDO_ITEM.ISOPvPedIte_PercentualIPI / 100))))) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao),6)
			-- cliente TEM desoneração e o pedido NÃO é empenho
			WHEN MATRIZ_ICMS.ISOPvMatICMS_SubTribICMSDocFis = 1 AND COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) = 0
				THEN ROUND(((PEDIDO_ITEM.ISOPvPedIte_ValorTotalCalculoF - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade)) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao),6)
			-- desativado 28/05/2020 pois utilizando valor dos impostos os valores não fechavam ELSE ROUND(((CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0 THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho ELSE PEDIDO_ITEM.ISOPvPedIte_ValorUnitario END - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade) - (PEDIDO_ITEM.ISOPvPedIte_ValorIPI / PEDIDO_ITEM.ISOPvPedIte_Quantidade)) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao),6)
			-- cliente SEM desoneração
			ELSE ROUND(((CASE
							WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0
								THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho / (1 + ((PEDIDO_ITEM.ISOPvPedIte_PercSubsTributaria + PEDIDO_ITEM.ISOPvPedIte_PercentualFCPST)/100.0) ) / ((1+(PEDIDO_ITEM.ISOPvPedIte_PercentualIPI/100.0)) )
							--inativado pois não considerava o rateio do frete
							--ELSE (PEDIDO_ITEM.ISOPvPedIte_ValorUnitario - ((PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade) + PEDIDO_ITEM.ISOPVPedIte_ValorFCPST) - (PEDIDO_ITEM.ISOPvPedIte_ValorIPI / PEDIDO_ITEM.ISOPvPedIte_Quantidade))
							ELSE ((((PEDIDO_ITEM.ISOPvPedIte_ValorUnitario * PEDIDO_ITEM.ISOPvPedIte_Quantidade) - (((PEDIDO_ITEM.ISOPvPedIte_ValorUnitario * PEDIDO_ITEM.ISOPvPedIte_Quantidade) / TOTAL_PEDIDO.ISOPvPed_ValorTotalPedido) * PEDIDO.ISOPvPed_ValorFrete)) / PEDIDO_ITEM.ISOPvPedIte_Quantidade) - ((PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade) + PEDIDO_ITEM.ISOPVPedIte_ValorFCPST) - (PEDIDO_ITEM.ISOPvPedIte_ValorIPI / PEDIDO_ITEM.ISOPvPedIte_Quantidade))
						END ) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao),6)
		END
	END AS ISOPvPedIte_PrecoUNESTIntegracaoBO,
	*/

	0 AS ISOPvPedIte_PrecoCMLIntegracaoBO,
	0 AS ISOPvPedIte_PrecoUNESTIntegracaoBO,

	COALESCE(EMPENHO.ISOCttPedCon_NumeroEmp,'') AS ISOPvPedido_NumeroEmpenho,
	TOTAL_LINHAS_PEDIDO.ISOPvPedIte_TotalLinhas
FROM
	PEDIDO -- CABECALHO DO PEDIDO
	INNER JOIN PEDIDO_ITEM ON -- ITEM DO PEDIDO
		PEDIDO.ISOEmp_Codigo = PEDIDO_ITEM.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = PEDIDO_ITEM.ISOPvPed_Codigo
	INNER JOIN TOTAL_LINHAS_PEDIDO ON -- TOTAL DE LINHAS DO PEDIDO
		PEDIDO.ISOEmp_Codigo = TOTAL_LINHAS_PEDIDO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = TOTAL_LINHAS_PEDIDO.ISOPvPed_Codigo
	INNER JOIN ATENDENTE_PEDIDO ON  -- ATENDENTE QUE CRIOU O PEDIDO
		PEDIDO.ISOPvPed_CodigoAtendente = ATENDENTE_PEDIDO.ISOEnt_Codigo
	INNER JOIN PRODUTO ON  -- ATENDENTE QUE CRIOU O PEDIDO
		PEDIDO_ITEM.ISOEmp_Codigo = PRODUTO.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPrd_Codigo = PRODUTO.ISOPrd_Codigo
	INNER JOIN FATOR_CONVERSAO_PRODUTO ON -- UNIDADES DE MEDIDA DO ITEM DO PEDIDO
		PEDIDO_ITEM.ISOEmp_Codigo = FATOR_CONVERSAO_PRODUTO.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPrd_Codigo = FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_PrdCodigo AND
		PEDIDO_ITEM.ISOPvPedIte_UnidadeOrigem = FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_UndOrigem AND
		PEDIDO_ITEM.ISOPvPedIte_UnidadeDestino = FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_UndDestino AND
		FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_Flag = 'A' AND
		FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_Armazem = ''
	INNER JOIN CLIENTE ON -- INFORMAÇÕES DO CLIENTE
		PEDIDO.ISOEmp_Codigo = CLIENTE.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_CliCodigo = CLIENTE.ISOEntCli_Codigo
    INNER JOIN LOCAL_FATURAMENTO ON
		PEDIDO.ISOEmp_Codigo = LOCAL_FATURAMENTO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_EstadoOrigem = LOCAL_FATURAMENTO.ISOPvCD_Origem AND
        PEDIDO.ISOPvPed_EstadoDestino = LOCAL_FATURAMENTO.ISOPvCD_Destino AND
        PEDIDO.ISOPvPedOri_Codigo = LOCAL_FATURAMENTO.ISOPvCDOri_Pedido
	INNER JOIN ORIGEM_PROTHEUS ON -- PESQUISA CÓDIGO PROTHEUS DO CLIENTE
		PEDIDO.ISOEmp_Codigo = ORIGEM_PROTHEUS.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_CliCodigo = ORIGEM_PROTHEUS.ISOEmpEnt_EntCodigo AND
		ORIGEM_PROTHEUS.ISOEmpOri_Codigo = 13
	LEFT OUTER JOIN EMPENHO ON -- EMPENHO DO PEDIDO
		PEDIDO.ISOEmp_Codigo = EMPENHO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = EMPENHO.ISOCttPedCon_PedidoCodigo

	LEFT OUTER JOIN TOTAL_PEDIDO_EMPENHO ON -- EMPENHO DO PEDIDO
		PEDIDO.ISOEmp_Codigo = TOTAL_PEDIDO_EMPENHO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = TOTAL_PEDIDO_EMPENHO.ISOPvPed_Codigo

	LEFT OUTER JOIN TOTAL_PEDIDO ON -- VALOR TOTAL DO PEDIDO
		PEDIDO.ISOEmp_Codigo = TOTAL_PEDIDO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = TOTAL_PEDIDO.ISOPvPed_Codigo

	LEFT OUTER JOIN TABELA_CLIENTE ON -- TABELA DO CLIENTE
		PEDIDO.ISOEmp_Codigo = TABELA_CLIENTE.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_CliCodigo = TABELA_CLIENTE.ISOEntCli_Codigo
		AND TABELA_CLIENTE.ISOEntClienteAttId = 99
	LEFT OUTER JOIN ESTABELECIMENTO_LX ON -- ESTABELECIMENTO DO PEDIDO
		PEDIDO.ISOEmp_Codigo = ESTABELECIMENTO_LX.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_EstadoOrigem = ESTABELECIMENTO_LX.ISOPvCD_Origem AND
        PEDIDO.ISOPvPed_EstadoDestino = ESTABELECIMENTO_LX.ISOPvCD_Destino
	LEFT OUTER JOIN ORIGEM_LX ON  -- PESQUISA CÓDIGO LX DO CLIENTE
		PEDIDO.ISOEmp_Codigo = ORIGEM_LX.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_CliCodigo = ORIGEM_LX.ISOEmpEnt_EntCodigo AND
		ORIGEM_LX.ISOEmpOri_Codigo = 2
	LEFT OUTER JOIN CONDICAO_PAGAMENTO ON
		PEDIDO.ISOEmp_Codigo = CONDICAO_PAGAMENTO.ISOEmp_Codigo AND
		PEDIDO.ISOPeCndPgt_Codigo = CONDICAO_PAGAMENTO.ISOPeCndPgt_Codigo
	LEFT OUTER JOIN ANALISE_CREDITO ON  -- PESQUISA DA TAREFA DE LIBERAÇÃO DE CRÉDITO
		PEDIDO.ISOEmp_Codigo = ANALISE_CREDITO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = ANALISE_CREDITO.ISOPvPed_Codigo
	LEFT OUTER JOIN TIPO_FRETE ON -- INFORMACOES DE FRETE DO PEDIDO
		PEDIDO.ISOEmp_Codigo = TIPO_FRETE.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = TIPO_FRETE.ISOPvPed_Codigo
	LEFT OUTER JOIN TRANSPORTADORA ON -- INFORMACOES DA TRANSPORTADORA DO PEDIDO
		PEDIDO.ISOEmp_Codigo = TRANSPORTADORA.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = TRANSPORTADORA.ISOPvPed_Codigo
	LEFT OUTER JOIN	LINHA_PEDIDO_CLIENTE  ON  -- Observação do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = LINHA_PEDIDO_CLIENTE.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = LINHA_PEDIDO_CLIENTE.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = LINHA_PEDIDO_CLIENTE.ISOPvPedIte_Codigo

	LEFT OUTER JOIN	LINHA_ORDEM_COMPRA ON  -- Observação do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = LINHA_ORDEM_COMPRA.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = LINHA_ORDEM_COMPRA.ISOPvPed_Codigo AND
	    PEDIDO_ITEM.ISOPvPedIte_Codigo = LINHA_ORDEM_COMPRA.ITEM_PEDIDO

	LEFT OUTER JOIN	OC_DO_CLIENTE ON  -- Observação do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = OC_DO_CLIENTE.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = OC_DO_CLIENTE.ISOPvPed_Codigo AND
	    PEDIDO_ITEM.ISOPvPedIte_Codigo = OC_DO_CLIENTE.ISOPvPedIte_Codigo

	LEFT OUTER JOIN	LOTE1 ON  -- lote 1 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = LOTE1.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = LOTE1.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = LOTE1.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	QTD1 ON  -- qtde 1 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = QTD1.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = QTD1.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = QTD1.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	LOTE2 ON  -- lote 2 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = LOTE2.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = LOTE2.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = LOTE2.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	QTD2 ON  -- qtde 2 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = QTD2.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = QTD2.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = QTD2.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	LOTE3 ON  -- lote 3 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = LOTE3.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = LOTE3.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = LOTE3.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	QTD3 ON  -- qtde 3 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = QTD3.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = QTD3.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = QTD3.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	LOTE4 ON  -- lote 4 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = LOTE4.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = LOTE4.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = LOTE4.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	QTD4 ON  -- qtde 4 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = QTD4.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = QTD4.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = QTD4.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	LOTE5 ON  -- lote 5 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = LOTE5.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = LOTE5.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = LOTE5.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	QTD5 ON  -- qtde 5 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = QTD5.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = QTD5.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = QTD5.ISOPvPedIte_Codigo
	LEFT OUTER JOIN NATUREZA_OPERACAO ON
		PEDIDO.ISOEmp_Codigo = NATUREZA_OPERACAO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPedTip_Codigo = NATUREZA_OPERACAO.ISOPvPedTip_Codigo
	LEFT OUTER JOIN MATRIZ_ICMS ON
		PEDIDO_ITEM.ISOEmp_Codigo = MATRIZ_ICMS.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = MATRIZ_ICMS.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = MATRIZ_ICMS.ISOPvPedIte_Codigo
WHERE
	PEDIDO.ISOEmp_Codigo = 11 AND
	PEDIDO_ITEM.ISOPvPedIteSit_Codigo = 1;


-- dbo.MACROISOPvPedido_09072020 source

CREATE VIEW [dbo].[MACROISOPvPedido_09072020]
as
with
	PEDIDO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPed_CliCodigo,
			ISOPvPed_EstadoOrigem,
			ISOPvPed_EstadoDestino,
			ISOPvPed_CodigoAtendente,
			ISOPvPedSit_Codigo,
			ISOPvPedOri_Codigo,
			ISOPvPed_CodEndCobranca,
			ISOPvPed_ValorTotalPedido,
			ISOPeCndPgt_Codigo,
			ISOPvPed_ValorFrete,
			ISOPvPedTip_Codigo,
			ISOPvPed_Pagamento, -- Condição de pagamento
			ISOPVPed_OrdCompra,
			ISOPvPed_DtaSolEntrega,
			ISOPvPed_CodEndEntrega,
			ISOPvPed_DtaPedido,  -- Data do pedido
			ISOPvPed_HoraPedido -- Hora do pedido
		FROM ISOPVPEDIDO WITH (nOLOCK)
		WHERE
			ISOEmp_Codigo = 11
			--and ISOPvPedSit_Codigo = 999
			-- PROCESSADOS MONICA -- 7777729, 7777641,7777620,7777548,7777545,7777675,7777880,7777694,7777536,7777741,7777477,7777462,7777605,7777509
			-- processados joice -- 7777496,7777613,7777462,7777477,7777630,7777607,7777644,7777633,7777627,7777626,7777605,7777509, 7777641,7777620,7777548,7777545,7777675,7777880,7777694,7777536,7777741
			-- processados angelica -- 7777579,7777584,7777472,7777632,7777469,7777490,7777499,7777507,7777519
			-- processados industrial -- 7777395,7777397,7777435,7777435,7777436,7777438,7777440,7777441,7777522,7777533,7777574,7777628,7777835, 7777775, 7777771, 7777769
			-- processados licitacao -- 7777836,7777845,7777845,
			-- processados tancredo -- 7777759
			-- processados janaina -- 7777701,7774651,7777520,7776454,7776456,7776457,7776452,7776453,
			-- processados akorel -- 7777572,7777591,7777631
			--AND ISOPvPed_Codigo IN ()
			--(joice)
			--7777486,7777497,7777579,7777584 (angelica)
			-- (ronise)
			-- (tancredo)
			-- (adriane)
			--(suporte industrial)
			-- (janaina)
			-- (monica)
			),
	PEDIDO_ITEM AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			ISOPrd_Codigo,
			ISOPvPedIte_Quantidade,
			ISOPvPedIte_DtaSolEntrega,
			ISOPvPedIte_UnidadeOrigem,
			ISOPvPedIte_UnidadeDestino,
			ISOPvPedIte_ValorUnitario,
			ISOPvPedIteSit_Codigo,
			ISOPvPedIte_AgendamentoData,
			ISOPvPedIte_AgendamentoHoraIni,
			ISOPvPedIte_AgendamentoHoraFin,
			ISOPvPedIte_ValorEmpenho,
			ISOPvPedIte_PrecoLista,
			ISOPvPedIte_ValorIPI,
			ISOPvPedIte_VlrSubsTributaria,
			ISOPvPedIte_ValorICMS,
			ISOPvPedIte_ValorPIS,
			ISOPvPedIte_ValorCofins,
			ISOPVPedIte_ValorFCPST,
			ISOPvPedIte_ValorFCP,
			ISOPvPedIte_ValorTotalCalculoF,
			ISOPvPedIte_DataEntregaItem,
			ISOPvPedIte_PercentualIPI,
			ISOPvPedIte_PercSubsTributaria,
			ISOPvPedIte_PercentualFCPST,
			ISOPvPedIte_PrecoAjustado,
			ISOPvPedIte_PrecoAjustadoTotal
		FROM ISOPVPEDITEM WITH (nOLOCK)
		WHERE
			ISOEmp_Codigo = 11
			),
	TOTAL_LINHAS_PEDIDO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			COUNT(*) AS ISOPvPedIte_TotalLinhas
		FROM ISOPVPEDITEM WITH (nOLOCK)
		WHERE
			ISOEmp_Codigo = 11
			AND ISOPvPedIteSit_Codigo = 1
		GROUP BY
			ISOEmp_Codigo,
			ISOPvPed_Codigo),
	TOTAL_PEDIDO_EMPENHO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			SUM(ISOPvPedIte_Quantidade * ISOPvPedIte_ValorEmpenho) AS ISOPvPed_ValorTotalPedido
		FROM         ISOPVPEDITEM WITH (nOLOCK)
		WHERE     (ISOEmp_Codigo = 11) AND (ISOPvPedIteSit_Codigo = 1)
		GROUP BY ISOEmp_Codigo, ISOPvPed_Codigo),
	TOTAL_PEDIDO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			SUM(ISOPvPedIte_Quantidade * ISOPvPedIte_PrecoAjustado) AS ISOPvPed_ValorTotalPedido
		FROM         ISOPVPEDITEM WITH (nOLOCK)
		WHERE     (ISOEmp_Codigo = 11) AND (ISOPvPedIteSit_Codigo = 1) --and ISOPvPed_Codigo >= 8741752
		GROUP BY ISOEmp_Codigo, ISOPvPed_Codigo),
	ATENDENTE_PEDIDO AS (
		SELECT
			ISOEnt_Codigo,
			ISOEnt_Nome
		FROM ISOENTIDADE WITH (nOLOCK)),
	FATOR_CONVERSAO_PRODUTO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPrdUndFatC_PrdCodigo,
			ISOPrdUndFatC_UndOrigem,
			ISOPrdUndFatC_UndDestino,
			ISOPrdUndFatC_FatorConversao,
			ISOPrdUndFatC_Flag,
			ISOPrdUndFatC_Armazem
		FROM ISOPRDUNDFATORCONVERSAO WITH (nOLOCK)),
	CLIENTE AS (
		SELECT
			ISOEmp_Codigo,
			ISOEntCli_Codigo,
			ISOEntCli_Operacao
		FROM ISOENTCLIENTE WITH (nOLOCK)),
	LOCAL_FATURAMENTO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvCD_Origem,
			ISOPvCD_Destino,
			ISOPvCDOri_Pedido,
			ISOPvCDOri_Armazem
		FROM ISOPVCDORIGEM WITH (nOLOCK)),
	EMPENHO AS (
		SELECT
			ISOEmp_Codigo,
			ISOCttPedCon_PedidoCodigo,
			ISOCttPedCon_NumeroEmp
		FROM ISOCTPEDCONTRATO WITH (nOLOCK)),
	TABELA_CLIENTE AS (
		SELECT
			ISOEmp_Codigo,
			ISOEntCli_Codigo,
			ISOEntClienteAttId,
			ISOEntClienteAttOtherValue
		FROM ISOENTCLIENTEATTVALUES WITH (nOLOCK)
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOEntClienteAttId = 99),
	ESTABELECIMENTO_LX AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvCD_Origem,
			ISOPvCD_Destino,
			ISOPvCD_Estabelecimento
		FROM ISOPVCD WITH (nOLOCK)),
	ORIGEM_PROTHEUS AS (
		SELECT
			ISOEmp_Codigo,
			ISOEmpEnt_EntCodigo,
			ISOEmpOri_Codigo,
			ISOEmpEnt_Ori_Codigo
		FROM ISOEMPENT_ORIGEM WITH (nOLOCK)
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOEmpOri_Codigo = 13),
	ORIGEM_LX AS (
		SELECT
			ISOEmp_Codigo,
			ISOEmpEnt_EntCodigo,
			ISOEmpOri_Codigo,
			ISOEmpEnt_Ori_Codigo
		FROM ISOEMPENT_ORIGEM WITH (nOLOCK)
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOEmpOri_Codigo = 2),
	CONDICAO_PAGAMENTO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPeCndPgt_Codigo,
			ISOPeCntPgt_Forma
		FROM ISOPECNDPAGAMENTO WITH (nOLOCK)),
	ANALISE_CREDITO AS (
		SELECT
			ISOWFTRF_PEDIDO.ISOEmp_Codigo,
			ISOWFTRF_PEDIDO.ISOPvPed_Codigo,
		    CASE WHEN ISOWFTrf_RspExe_RspCodigo IS NULL THEN '' ELSE CONVERT(VARCHAR(8), ISOWFTrf_DataSolucao, 112) END AS ISOWFTrf_DataLiberacaoCredito,  -- Data em que a tarefa de liberação de crédito foi executada
			CASE WHEN ISOWFTrf_RspExe_RspCodigo IS NULL THEN '' ELSE CONVERT(VARCHAR(8), ISOWFTrf_DataSolucao, 108) END AS ISOWFTrf_HoraLiberacaoCredito,
			CASE WHEN ISOWFTrf_RspExe_RspCodigo IS NULL THEN '' ELSE COALESCE(CAST(ISOWFTrf_RspExe_RspCodigo AS VARCHAR(10)),'')+'-'+COALESCE(USUARIO_CEDITO.ISOEnt_Nome,'') END AS ISOWFTrf_CodigoAtendente
		FROM ISOWFTRF_PEDIDO INNER JOIN ISOWFPROCEDIMENTO ON
			ISOWFTRF_PEDIDO.ISOEmp_Codigo = ISOWFPROCEDIMENTO.ISOEmp_Codigo AND
			ISOWFTRF_PEDIDO.ISOWFTrf_Ped_PrcCodigo = ISOWFPROCEDIMENTO.ISOWFPrc_Codigo AND
			ISOWFPROCEDIMENTO.ISOWFPrcPad_Codigo IN (324,326) AND -- PROCEDIMENTO ( PEDIDO - ANALISE DE CREDITO)
			ISOWFTRF_PEDIDO.ISOWFTrf_Ped_TrfCodigo = 1 --- CÓDIGO DA TAREFA QUE O ATENDENTE IRÁ CONFIRMAR O CRÉDITO DO CLIENTE ********
		INNER JOIN ISOWFTAREFA ON -- TAREFA DE LIBERAÇÃO DE CRÉDITO
			ISOWFTRF_PEDIDO.ISOEmp_Codigo = ISOWFTAREFA.ISOEmp_Codigo AND
			ISOWFTRF_PEDIDO.ISOWFTrf_Ped_PrcCodigo = ISOWFTAREFA.ISOWFPrc_Codigo AND
			ISOWFTRF_PEDIDO.ISOWFTrf_Ped_TrfCodigo = ISOWFTAREFA.ISOWFTrfPad_Codigo AND
			ISOWFTAREFA.ISOWFTrfPad_Codigo = 1 AND  -- TAREFA (ANALISAR PEDIDO RETIDO EM CREDITO)
			ISOWFTAREFA.ISOWFTrfPadSit_Codigo = 1  -- SITUACAO (PEDIDO APROVADO DE CREDITO)
		INNER JOIN ISOENTIDADE AS USUARIO_CEDITO ON -- USUÁRIO QUE LIBEROU O CRÉDITO DO CLIENTE
			ISOWFTAREFA.ISOWFTrf_RspExe_RspCodigo = USUARIO_CEDITO.ISOEnt_Codigo
		WHERE ISOWFTRF_PEDIDO.ISOEmp_Codigo = 11 AND
		ISOWFTRF_PEDIDO.ISOWFTrf_Ped_PrcCodigo = (SELECT MAX(X.ISOWFTrf_Ped_PrcCodigo) FROM ISOWFTRF_PEDIDO X WHERE ISOWFTRF_PEDIDO.ISOEmp_Codigo = X.ISOEmp_Codigo AND ISOWFTRF_PEDIDO.ISOPvPed_Codigo = X.ISOPvPed_Codigo)),
	TIPO_FRETE AS (
		SELECT 	DISTINCT
			ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOEmp_Codigo,
			ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOPvPed_Codigo,
			COALESCE(ISOPvPedidoAttOptValue,'') AS ISOPvPedidoTipoFrete
		FROM ISOPVPEDIDOATTVALUES AS ISOPVPEDIDOATTVALUES_TIPO_FRETE
		INNER JOIN ISOPVPEDIDOATTLEVEL1 ON
			ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOEmp_Codigo = ISOPVPEDIDOATTLEVEL1.ISOEmp_Codigo AND
			ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOPvPedidoAttId = ISOPVPEDIDOATTLEVEL1.ISOPvPedidoAttId AND
			ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOPvPedidoAttOptId = ISOPVPEDIDOATTLEVEL1.ISOPvPedidoAttOptId AND
			ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOPvPedidoAttId = 104 -- CÓDIGO DA PERGUNTA TIPO DO FRETE
		WHERE
			ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOEmp_Codigo = 11),
	TRANSPORTADORA AS (
		SELECT 	DISTINCT
			ISOPVPEDIDOATTVALUES_TRANSP.ISOEmp_Codigo,
			ISOPVPEDIDOATTVALUES_TRANSP.ISOPvPed_Codigo,
			COALESCE(ISOPvTrp_CodigoExterno,'') AS ISOPvPedido_CodigoTRP
		FROM ISOPVPEDIDOATTVALUES AS ISOPVPEDIDOATTVALUES_TRANSP
		INNER JOIN ISOPVTRANSPORTADORA ON
			ISOPVTRANSPORTADORA.ISOPvTrp_Codigo = ISOPVPEDIDOATTVALUES_TRANSP.ISOPvPedidoAttOptId AND
			ISOPVPEDIDOATTVALUES_TRANSP.ISOPvPedidoAttId = 105 AND -- CÓDIGO DA PERGUNTA TRANSPORTADORA
			ISOPVTRANSPORTADORA.ISOPvTrp_Flag = 'A'
		WHERE ISOPVPEDIDOATTVALUES_TRANSP.ISOEmp_Codigo = 11),
	--OBSERVACAO_ITEM_PEDIDO AS (
	--	SELECT
	--		ISOEmp_Codigo,
	--		ISOPvPed_Codigo,
	--		ISOPvPedIte_Codigo,
	--		ISOPvPedItemAttValue
	--	FROM ISOPVPEDITEMATTVALUES WITH (nOLOCK)
	--	WHERE
	--		ISOEmp_Codigo = 11 AND
	--		ISOPvPedItemAttId = 2),
	OC_DO_CLIENTE AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (nOLOCK)
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 1),
	LINHA_PEDIDO_CLIENTE AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (nOLOCK)
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 2),
	LINHA_ORDEM_COMPRA AS (
		SELECT ISOPVPEDITEM.ISOEmp_Codigo, ISOPVPEDITEM.ISOPVPED_CODIGO, ITEM_PEDIDO, ITEM_CLIENTE
			FROM ISOPVPEDITEM LEFT OUTER JOIN (
			SELECT
				ISOEMP_CODIGO,
				ISOPVPED_CODIGO,
				CASE
					WHEN CHARINDEX('-',VALOR,1) > 1
					THEN SUBSTRING(VALOR,1,CHARINDEX('-',VALOR,1)-1)
					ELSE 0
				END AS ITEM_PEDIDO,
				SUBSTRING(VALOR,CHARINDEX('-',VALOR,1)+1,3) AS ITEM_CLIENTE
			FROM ISOPVPEDIDOATTVALUES CROSS APPLY DBO.SPLIT(ISOPVPEDIDOATTVALUELONG,CHAR(10))
			WHERE ISOEMP_CODIGO = 11
			AND ISOPVPEDIDOATTID = 106
			AND CHARINDEX('-',VALOR,1) > 1
			AND VALOR <> '') DADO_COMPLEMENTAR_PEDIDO
				ON ISOPVPEDITEM.ISOEmp_Codigo = DADO_COMPLEMENTAR_PEDIDO.ISOEmp_Codigo AND
					ISOPVPEDITEM.ISOPvPed_Codigo = DADO_COMPLEMENTAR_PEDIDO.ISOPvPed_Codigo AND
					ISOPVPEDITEM.ISOPvPedIte_Codigo = DADO_COMPLEMENTAR_PEDIDO.ITEM_PEDIDO
			WHERE ISOPVPEDITEM.ISOEmp_Codigo = 11),
	LOTE1 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- lote 1 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 4),
	QTD1 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- qtde 1 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 5),
	LOTE2 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- lote 2 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 6),
	QTD2 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- qtde 2 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 7),
	LOTE3 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- lote 3 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 8),
	QTD3 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- qtde 3 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 9),
	LOTE4 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- lote 4 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 10),
	QTD4 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- qtde 4 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 11),
	LOTE5 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- lote 5 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 12),
	QTD5 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK)-- qtde 5 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 13),
	NATUREZA_OPERACAO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPedTip_Codigo,
			COALESCE(ISOPvPedTip_NaturezaOperacaoCo,'') AS ISOPvPedTip_NaturezaOperacaoCo
		FROM ISOPVPEDTIPO WITH (nOLOCK)
		WHERE
			ISOEmp_Codigo = 11),
	MATRIZ_ICMS AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_CliCodigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			ISOPrd_Codigo,
			ISOPvMatICMS_SubTribICMSDocFis,
			ISOPvMatICMS_AliquotaICMS
		FROM MacroConsultaMatrizICMS WITH (NOLOCK)
		WHERE
			ISOEmp_Codigo = 11)
SELECT
	PEDIDO.ISOEmp_Codigo, -- Código da empresa
	PEDIDO.ISOPvPed_Codigo, -- Código CRM do Pedido
	PEDIDO.ISOPvPed_CliCodigo, -- Código CRM do cliente
	PEDIDO.ISOPvPed_DtaPedido,  -- Data do pedido
	PEDIDO.ISOPvPed_HoraPedido, -- Hora do pedido
	CASE CONDICAO_PAGAMENTO.ISOPeCntPgt_Forma
		WHEN 'Bol' THEN 'BOLETO'
		WHEN 'Car' THEN 'CARTAO'
		WHEN 'Che' THEN 'CHEQUE'
		WHEN 'Dep' THEN 'DEPOSITO'
		WHEN 'Din' THEN 'Dinheiro'
	END AS ISOPeCntPgt_Forma, -- Forma de pagamento
	PEDIDO.ISOPvPed_Pagamento, -- Condição de pagamento
	PEDIDO.ISOPvPed_DtaSolEntrega,
	PEDIDO.ISOPvPed_CodEndEntrega,
	PEDIDO.ISOPvPedOri_Codigo,
	PEDIDO.ISOPvPedTip_Codigo,
	PEDIDO.ISOPvPed_CodEndCobranca,

	CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0 THEN TOTAL_PEDIDO_EMPENHO.ISOPvPed_ValorTotalPedido ELSE PEDIDO.ISOPvPed_ValorTotalPedido END AS ISOPvPed_ValorTotalPedido,

	PEDIDO_ITEM.ISOPvPedIte_Codigo, -- Sequencial do item do pedido
	PEDIDO_ITEM.ISOPrd_Codigo, -- Código do produto
	CASE
		WHEN ISNULL(NULLIF(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0),0) = 0
		THEN 0
		ELSE PEDIDO_ITEM.ISOPvPedIte_Quantidade
	END ISOPvPedIte_Quantidade,
	PEDIDO_ITEM.ISOPvPedIte_DataEntregaItem AS ISOPvPedIte_DataPromessa,
	PEDIDO_ITEM.ISOPvPedIte_DtaSolEntrega,
	PEDIDO_ITEM.ISOPvPedIte_UnidadeOrigem,
	PEDIDO_ITEM.ISOPvPedIte_UnidadeDestino,
	ROUND(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0) AS ISOPrdUndFatC_FatorConversao, -- Fator de conversão sem decimais
	ROUND(PEDIDO_ITEM.ISOPvPedIte_Quantidade * ROUND(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0),0) AS ISOPvPedIte_Qtd_UM_estoque,
	CASE
		WHEN ISNULL(NULLIF(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0),0) = 0
		THEN 0
		--ELSE CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho >0 THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho ELSE ROUND(PEDIDO_ITEM.ISOPvPedIte_ValorUnitario,6) END
		ELSE CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho >0 THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho ELSE ROUND(PEDIDO_ITEM.ISOPvPedIte_PrecoAjustadoTotal / PEDIDO_ITEM.ISOPvPedIte_Quantidade,6) END
	END ISOPvPedIte_Vlr_Total_Unitario,

	CASE
		WHEN ISNULL(NULLIF(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0),0) = 0
		THEN 0
		--ELSE CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0 THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho ELSE ROUND(PEDIDO_ITEM.ISOPvPedIte_ValorUnitario,6) END / NULLIF(ROUND(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0),0)
		ELSE CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0 THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho ELSE ROUND(PEDIDO_ITEM.ISOPvPedIte_PrecoAjustadoTotal / PEDIDO_ITEM.ISOPvPedIte_Quantidade,6) END / NULLIF(ROUND(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0),0)
	END ISOPvPedIte_Vlr_Total_Unitario_EST,

	PEDIDO_ITEM.ISOPvPedIteSit_Codigo,
	PEDIDO_ITEM.ISOPvPedIte_AgendamentoData,
	PEDIDO_ITEM.ISOPvPedIte_AgendamentoHoraIni,
	PEDIDO_ITEM.ISOPvPedIte_AgendamentoHoraFin,
	PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,
	CASE
		WHEN COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) > 0
		THEN 0
		ELSE COALESCE(PEDIDO.ISOPvPed_ValorFrete,0)
	END AS ISOPvPed_ValorFrete,
	COALESCE(ORIGEM_PROTHEUS.ISOEmpEnt_Ori_Codigo,'') AS ISOEmpEnt_CliCod_ERP,
	ORIGEM_LX.ISOEmpEnt_Ori_Codigo AS ISOEmpEnt_Ori_LX,
	LOCAL_FATURAMENTO.ISOPvCDOri_Armazem AS ISOPvPedIte_Armazem,
	COALESCE(CLIENTE.ISOEntCli_Operacao,'') AS ISOEntCli_Operacao,
	ESTABELECIMENTO_LX.ISOPvCD_Estabelecimento AS ISOPvCD_Estabelecimento_LX,
	PEDIDO.ISOPvPed_CodigoAtendente AS ISOPvPed_CodigoAtendente, -- Código do atendente que criou o pedido
	ATENDENTE_PEDIDO.ISOEnt_Nome AS ISOEnt_NomeAtendente, -- Nome do atendente que criou o pedido

	/*
	'2020-05-13 00:00:00.000' AS ISOWFTrf_DataLiberacaoCredito, -- Data em que a tarefa de liberação de crédito foi executada
    '11:00:00' AS ISOWFTrf_HoraLiberacaoCredito,  -- Hora em que a tarefa de liberação de crédito foi executada
    975190 AS ISOWFTrf_CodigoAtendente, -- Responsável que executou a tarefa de liberação de crédito
	*/

	COALESCE(ANALISE_CREDITO.ISOWFTrf_DataLiberacaoCredito,'') AS ISOWFTrf_DataLiberacaoCredito, -- Data em que a tarefa de liberação de crédito foi executada
    COALESCE(ANALISE_CREDITO.ISOWFTrf_HoraLiberacaoCredito,'') AS ISOWFTrf_HoraLiberacaoCredito,  -- Hora em que a tarefa de liberação de crédito foi executada
    COALESCE(ANALISE_CREDITO.ISOWFTrf_CodigoAtendente,'') AS ISOWFTrf_CodigoAtendente, -- Responsável que executou a tarefa de liberação de crédito

	CASE
		WHEN PEDIDO.ISOPvPedOri_Codigo = 'EUR' THEN 3
		WHEN PEDIDO.ISOPvPedOri_Codigo = 'EU1' THEN 3
		WHEN PEDIDO.ISOPvPedOri_Codigo = 'USD' THEN 2
		WHEN PEDIDO.ISOPvPedOri_Codigo = 'US1' THEN 2
		ELSE 1
	END AS ISOMoe_Codigo,

	COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorIPI,0) AS ISOPvPedIte_ValorIPI,
	COALESCE(PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria,0) AS ISOPvPedIte_VlrSubsTrib,
	COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorICMS,0) AS ISOPvPedIte_ValorICMS,
	COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorPIS,0) AS ISOPvPedIte_ValorPIS,
	COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorCofins,0) AS ISOPvPedIte_ValorCofins,
	COALESCE(PEDIDO_ITEM.ISOPVPedIte_ValorFCPST,0) AS ISOPVPedIte_ValorFCPST,
	COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorFCP,0) AS ISOPvPedIte_ValorFCP,
	COALESCE(TRANSPORTADORA.ISOPvPedido_CodigoTRP,'') AS ISOPvPedido_CodigoTRP,
	COALESCE(TIPO_FRETE.ISOPvPedidoTipoFrete,'') AS ISOPvPedidoTipoFrete,
	COALESCE(TABELA_CLIENTE.ISOEntClienteAttOtherValue,'') AS ISOEmpEnt_Tabela_Preco,
	PEDIDO_ITEM.ISOPvPedIte_PrecoLista,
	COALESCE(PEDIDO.ISOPVPed_OrdCompra,'') AS ISOPVPed_OrdCompra,

	CASE
		WHEN LINHA_ORDEM_COMPRA.ITEM_CLIENTE <> ''
		THEN COALESCE(PEDIDO.ISOPVPed_OrdCompra,'')
		ELSE
			CASE
				WHEN COALESCE(RTRIM(LTRIM(SUBSTRING(OC_DO_CLIENTE.ISOPvPedItemAttValue,1,15))),'') <> ''
				THEN COALESCE(RTRIM(LTRIM(SUBSTRING(OC_DO_CLIENTE.ISOPvPedItemAttValue,1,15))),'')
				ELSE COALESCE(PEDIDO.ISOPVPed_OrdCompra,'')
			END
	END AS ISOPvPedIte_NrOrdemCompra,

	COALESCE(LINHA_PEDIDO_CLIENTE.ISOPvPedItemAttValue,LINHA_ORDEM_COMPRA.ITEM_CLIENTE,'') AS ISOPvPedIte_LinhaOrdemCompra,

	COALESCE(RTRIM(LTRIM(SUBSTRING(LOTE1.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_Lote1,
	COALESCE(RTRIM(LTRIM(SUBSTRING(QTD1.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_QtdeLote1,
	COALESCE(RTRIM(LTRIM(SUBSTRING(LOTE2.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_Lote2,
	COALESCE(RTRIM(LTRIM(SUBSTRING(QTD2.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_QtdeLote2,
	COALESCE(RTRIM(LTRIM(SUBSTRING(LOTE3.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_Lote3,
	COALESCE(RTRIM(LTRIM(SUBSTRING(QTD3.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_QtdeLote3,
	COALESCE(RTRIM(LTRIM(SUBSTRING(LOTE4.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_Lote4,
	COALESCE(RTRIM(LTRIM(SUBSTRING(QTD4.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_QtdeLote4,
	COALESCE(RTRIM(LTRIM(SUBSTRING(LOTE5.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_Lote5,
	COALESCE(RTRIM(LTRIM(SUBSTRING(QTD5.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_QtdeLote5,
	COALESCE(NATUREZA_OPERACAO.ISOPvPedTip_NaturezaOperacaoCo,'') AS ISOPvPed_Operacao,

	/*
	Inativado por devergência de valores com protheus 13/05/20 (Edilon,Leticia)
	(PEDIDO_ITEM.ISOPvPedIte_ValorTotalCalculoF - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade)) AS ISOPvPedIte_PrecoCMLIntegracaoBO,
	((PEDIDO_ITEM.ISOPvPedIte_ValorTotalCalculoF - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade)) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao) AS ISOPvPedIte_PrecoUNESTIntegracaoBO,
	*/

/*
	CASE
		WHEN MATRIZ_ICMS.ISOPvMatICMS_SubTribICMSDocFis = 1
		THEN ROUND((PEDIDO_ITEM.ISOPvPedIte_ValorUnitario - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade)),6)
		ELSE ROUND((CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0 THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho ELSE PEDIDO_ITEM.ISOPvPedIte_ValorUnitario END - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade) - (PEDIDO_ITEM.ISOPvPedIte_ValorIPI / PEDIDO_ITEM.ISOPvPedIte_Quantidade)),6)
	END AS ISOPvPedIte_PrecoCMLIntegracaoBO,

	CASE
		WHEN MATRIZ_ICMS.ISOPvMatICMS_SubTribICMSDocFis = 1
		THEN ROUND(((PEDIDO_ITEM.ISOPvPedIte_ValorTotalCalculoF - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade)) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao),6)
		ELSE ROUND(((CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0 THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho ELSE PEDIDO_ITEM.ISOPvPedIte_ValorUnitario END - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade) - (PEDIDO_ITEM.ISOPvPedIte_ValorIPI / PEDIDO_ITEM.ISOPvPedIte_Quantidade)) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao),6)
	END AS ISOPvPedIte_PrecoUNESTIntegracaoBO,
*/
	CASE
		WHEN COALESCE(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0) = 0
			THEN 0
		ELSE
		CASE
			-- cliente TEM desoneração e o pedido é empenho
			WHEN MATRIZ_ICMS.ISOPvMatICMS_SubTribICMSDocFis = 1 AND COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) > 0
				THEN ROUND(((((PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho / (1 - (MATRIZ_ICMS.ISOPvMatICMS_AliquotaICMS/100)) / (1 + (PEDIDO_ITEM.ISOPvPedIte_PercentualIPI / 100)))))),6)
			-- cliente TEM desoneração e o pedido NÃO é empenho
			WHEN MATRIZ_ICMS.ISOPvMatICMS_SubTribICMSDocFis = 1 AND COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) = 0
				-- desativado 22/06/2020 para utilizar novo campo de preco ajustado do item --	THEN ROUND(((PEDIDO_ITEM.ISOPvPedIte_ValorTotalCalculoF - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade)) ),6)
				THEN ROUND(PEDIDO_ITEM.ISOPvPedIte_PrecoAjustado ,6)
			--ELSE ROUND((CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0 THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho ELSE PEDIDO_ITEM.ISOPvPedIte_ValorUnitario END - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade) - (PEDIDO_ITEM.ISOPvPedIte_ValorIPI / PEDIDO_ITEM.ISOPvPedIte_Quantidade)),6)
			-- cliente SEM desoneração
			ELSE ROUND((CASE
							WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0
								THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho / (1 + ((PEDIDO_ITEM.ISOPvPedIte_PercSubsTributaria + PEDIDO_ITEM.ISOPvPedIte_PercentualFCPST)/100.0) ) / ((1+(PEDIDO_ITEM.ISOPvPedIte_PercentualIPI/100.0)) )
							--inativado pois não considerava o rateio do frete
							--ELSE (PEDIDO_ITEM.ISOPvPedIte_ValorUnitario - ((PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade) + PEDIDO_ITEM.ISOPVPedIte_ValorFCPST) - (PEDIDO_ITEM.ISOPvPedIte_ValorIPI / PEDIDO_ITEM.ISOPvPedIte_Quantidade))
							-- desativado 22/06/2020 para utilizar novo campo de preco ajustado do item --	ELSE ((((PEDIDO_ITEM.ISOPvPedIte_ValorUnitario * PEDIDO_ITEM.ISOPvPedIte_Quantidade) - (((PEDIDO_ITEM.ISOPvPedIte_ValorUnitario * PEDIDO_ITEM.ISOPvPedIte_Quantidade) / TOTAL_PEDIDO.ISOPvPed_ValorTotalPedido) * PEDIDO.ISOPvPed_ValorFrete)) / PEDIDO_ITEM.ISOPvPedIte_Quantidade) - ((PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade) + PEDIDO_ITEM.ISOPVPedIte_ValorFCPST) - (PEDIDO_ITEM.ISOPvPedIte_ValorIPI / PEDIDO_ITEM.ISOPvPedIte_Quantidade))
							ELSE ((((PEDIDO_ITEM.ISOPvPedIte_PrecoAjustado * PEDIDO_ITEM.ISOPvPedIte_Quantidade) - (((PEDIDO_ITEM.ISOPvPedIte_ValorUnitario * PEDIDO_ITEM.ISOPvPedIte_Quantidade) / TOTAL_PEDIDO.ISOPvPed_ValorTotalPedido) * PEDIDO.ISOPvPed_ValorFrete)) / PEDIDO_ITEM.ISOPvPedIte_Quantidade) )
						END ) ,6)
		END
	END AS ISOPvPedIte_PrecoCMLIntegracaoBO,

	CASE
		WHEN COALESCE(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0) = 0
			THEN 0
		ELSE
		CASE
			-- cliente TEM desoneração e o pedido é empenho
			WHEN MATRIZ_ICMS.ISOPvMatICMS_SubTribICMSDocFis = 1 AND COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) > 0
				THEN ROUND(((((PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho / (1 - (MATRIZ_ICMS.ISOPvMatICMS_AliquotaICMS/100)) / (1 + (PEDIDO_ITEM.ISOPvPedIte_PercentualIPI / 100))))) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao),6)
			-- cliente TEM desoneração e o pedido NÃO é empenho
			WHEN MATRIZ_ICMS.ISOPvMatICMS_SubTribICMSDocFis = 1 AND COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) = 0
			-- desativado 22/06/2020 para utilizar novo campo de preco ajustado do item --	THEN ROUND(((PEDIDO_ITEM.ISOPvPedIte_ValorTotalCalculoF - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade)) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao),6)
				THEN ROUND((PEDIDO_ITEM.ISOPvPedIte_PrecoAjustado / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao),6)
			-- desativado 28/05/2020 pois utilizando valor dos impostos os valores não fechavam ELSE ROUND(((CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0 THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho ELSE PEDIDO_ITEM.ISOPvPedIte_ValorUnitario END - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade) - (PEDIDO_ITEM.ISOPvPedIte_ValorIPI / PEDIDO_ITEM.ISOPvPedIte_Quantidade)) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao),6)
			-- cliente SEM desoneração
			ELSE ROUND((CASE
							WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0
								THEN COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) / (1 + ((PEDIDO_ITEM.ISOPvPedIte_PercSubsTributaria + PEDIDO_ITEM.ISOPvPedIte_PercentualFCPST)/100.0) ) / ((1+(PEDIDO_ITEM.ISOPvPedIte_PercentualIPI/100.0)) )
							--inativado pois não considerava o rateio do frete
							--ELSE (PEDIDO_ITEM.ISOPvPedIte_ValorUnitario - ((PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade) + PEDIDO_ITEM.ISOPVPedIte_ValorFCPST) - (PEDIDO_ITEM.ISOPvPedIte_ValorIPI / PEDIDO_ITEM.ISOPvPedIte_Quantidade))
							-- desativado 22/06/2020 para utilizar novo campo de preco ajustado do item --	ELSE ((((PEDIDO_ITEM.ISOPvPedIte_ValorUnitario * PEDIDO_ITEM.ISOPvPedIte_Quantidade) - (((PEDIDO_ITEM.ISOPvPedIte_ValorUnitario * PEDIDO_ITEM.ISOPvPedIte_Quantidade) / TOTAL_PEDIDO.ISOPvPed_ValorTotalPedido) * PEDIDO.ISOPvPed_ValorFrete)) / PEDIDO_ITEM.ISOPvPedIte_Quantidade) - ((PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade) + PEDIDO_ITEM.ISOPVPedIte_ValorFCPST) - (PEDIDO_ITEM.ISOPvPedIte_ValorIPI / PEDIDO_ITEM.ISOPvPedIte_Quantidade))
							ELSE ((PEDIDO_ITEM.ISOPvPedIte_PrecoAjustado) - ((((PEDIDO_ITEM.ISOPvPedIte_PrecoAjustado * PEDIDO_ITEM.ISOPvPedIte_Quantidade) / TOTAL_PEDIDO.ISOPvPed_ValorTotalPedido) * PEDIDO.ISOPvPed_ValorFrete) / PEDIDO_ITEM.ISOPvPedIte_Quantidade))
						END ) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,6)
		END
	END AS ISOPvPedIte_PrecoUNESTIntegracaoBO,

	COALESCE(EMPENHO.ISOCttPedCon_NumeroEmp,'') AS ISOPvPedido_NumeroEmpenho,
	TOTAL_LINHAS_PEDIDO.ISOPvPedIte_TotalLinhas

	-- INICIO SIMULACAO DE PREÇOS
	--(1 + (PEDIDO_ITEM.ISOPvPedIte_PercentualIPI / 100)) IPI,
	--(1 - (MATRIZ_ICMS.ISOPvMatICMS_AliquotaICMS/100)) ICMS,
	--PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho EMPENHO,
	--PEDIDO_ITEM.ISOPvPedIte_Quantidade QUANTIDADE,
	--FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao FATOR,
	--ROUND(ROUND(ROUND((PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho  / (1 - (MATRIZ_ICMS.ISOPvMatICMS_AliquotaICMS/100))) / (1 + (PEDIDO_ITEM.ISOPvPedIte_PercentualIPI / 100)) * PEDIDO_ITEM.ISOPvPedIte_Quantidade,2) * (1 + (PEDIDO_ITEM.ISOPvPedIte_PercentualIPI/100)),2) * (1 - (MATRIZ_ICMS.ISOPvMatICMS_AliquotaICMS/100)),2) SIMULACAO_PROTHEUS,
	--CASE
	--	WHEN MATRIZ_ICMS.ISOPvMatICMS_SubTribICMSDocFis = 1 AND COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) > 0
	--		THEN ROUND(((((PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho / (1 - (MATRIZ_ICMS.ISOPvMatICMS_AliquotaICMS/100)) / (1 + (PEDIDO_ITEM.ISOPvPedIte_PercentualIPI / 100))))) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao),6)
	--	WHEN MATRIZ_ICMS.ISOPvMatICMS_SubTribICMSDocFis = 1 AND COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) = 0
	--		THEN ROUND(((PEDIDO_ITEM.ISOPvPedIte_ValorTotalCalculoF - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade)) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao),6)
	--	ELSE ROUND(((CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0 THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho ELSE PEDIDO_ITEM.ISOPvPedIte_ValorUnitario END - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade) - (PEDIDO_ITEM.ISOPvPedIte_ValorIPI / PEDIDO_ITEM.ISOPvPedIte_Quantidade)) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao),6)
	--END * PEDIDO_ITEM.ISOPvPedIte_Quantidade AS SIMULADO_ISO,
	--PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho *	PEDIDO_ITEM.ISOPvPedIte_Quantidade RESULTADO_ISO
	-- TÉRMINO SIMULACAO DE PREÇOS
FROM
	PEDIDO -- CABECALHO DO PEDIDO
	INNER JOIN PEDIDO_ITEM ON -- ITEM DO PEDIDO
		PEDIDO.ISOEmp_Codigo = PEDIDO_ITEM.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = PEDIDO_ITEM.ISOPvPed_Codigo
	INNER JOIN TOTAL_LINHAS_PEDIDO ON -- TOTAL DE LINHAS DO PEDIDO
		PEDIDO.ISOEmp_Codigo = TOTAL_LINHAS_PEDIDO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = TOTAL_LINHAS_PEDIDO.ISOPvPed_Codigo
	INNER JOIN ATENDENTE_PEDIDO ON  -- ATENDENTE QUE CRIOU O PEDIDO
		PEDIDO.ISOPvPed_CodigoAtendente = ATENDENTE_PEDIDO.ISOEnt_Codigo
	INNER JOIN FATOR_CONVERSAO_PRODUTO ON -- UNIDADES DE MEDIDA DO ITEM DO PEDIDO
		PEDIDO_ITEM.ISOEmp_Codigo = FATOR_CONVERSAO_PRODUTO.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPrd_Codigo = FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_PrdCodigo AND
		PEDIDO_ITEM.ISOPvPedIte_UnidadeOrigem = FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_UndOrigem AND
		PEDIDO_ITEM.ISOPvPedIte_UnidadeDestino = FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_UndDestino AND
		FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_Flag = 'A' AND
		FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_Armazem = ''
	INNER JOIN CLIENTE ON -- INFORMAÇÕES DO CLIENTE
		PEDIDO.ISOEmp_Codigo = CLIENTE.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_CliCodigo = CLIENTE.ISOEntCli_Codigo
    INNER JOIN LOCAL_FATURAMENTO ON
		PEDIDO.ISOEmp_Codigo = LOCAL_FATURAMENTO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_EstadoOrigem = LOCAL_FATURAMENTO.ISOPvCD_Origem AND
        PEDIDO.ISOPvPed_EstadoDestino = LOCAL_FATURAMENTO.ISOPvCD_Destino AND
        PEDIDO.ISOPvPedOri_Codigo = LOCAL_FATURAMENTO.ISOPvCDOri_Pedido
	LEFT OUTER JOIN EMPENHO ON -- EMPENHO DO PEDIDO
		PEDIDO.ISOEmp_Codigo = EMPENHO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = EMPENHO.ISOCttPedCon_PedidoCodigo

	LEFT OUTER JOIN TOTAL_PEDIDO_EMPENHO ON -- EMPENHO DO PEDIDO
		PEDIDO.ISOEmp_Codigo = TOTAL_PEDIDO_EMPENHO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = TOTAL_PEDIDO_EMPENHO.ISOPvPed_Codigo

	LEFT OUTER JOIN TOTAL_PEDIDO ON -- VALOR TOTAL DO PEDIDO
		PEDIDO.ISOEmp_Codigo = TOTAL_PEDIDO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = TOTAL_PEDIDO.ISOPvPed_Codigo

	LEFT OUTER JOIN TABELA_CLIENTE ON -- TABELA DO CLIENTE
		PEDIDO.ISOEmp_Codigo = TABELA_CLIENTE.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_CliCodigo = TABELA_CLIENTE.ISOEntCli_Codigo
		AND TABELA_CLIENTE.ISOEntClienteAttId = 99
	LEFT OUTER JOIN ESTABELECIMENTO_LX ON -- ESTABELECIMENTO DO PEDIDO
		PEDIDO.ISOEmp_Codigo = ESTABELECIMENTO_LX.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_EstadoOrigem = ESTABELECIMENTO_LX.ISOPvCD_Origem AND
        PEDIDO.ISOPvPed_EstadoDestino = ESTABELECIMENTO_LX.ISOPvCD_Destino
	LEFT OUTER JOIN ORIGEM_PROTHEUS ON -- PESQUISA CÓDIGO PROTHEUS DO CLIENTE
		PEDIDO.ISOEmp_Codigo = ORIGEM_PROTHEUS.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_CliCodigo = ORIGEM_PROTHEUS.ISOEmpEnt_EntCodigo AND
		ORIGEM_PROTHEUS.ISOEmpOri_Codigo = 13
	LEFT OUTER JOIN ORIGEM_LX ON  -- PESQUISA CÓDIGO LX DO CLIENTE
		PEDIDO.ISOEmp_Codigo = ORIGEM_LX.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_CliCodigo = ORIGEM_LX.ISOEmpEnt_EntCodigo AND
		ORIGEM_LX.ISOEmpOri_Codigo = 2
	LEFT OUTER JOIN CONDICAO_PAGAMENTO ON
		PEDIDO.ISOEmp_Codigo = CONDICAO_PAGAMENTO.ISOEmp_Codigo AND
		PEDIDO.ISOPeCndPgt_Codigo = CONDICAO_PAGAMENTO.ISOPeCndPgt_Codigo
	LEFT OUTER JOIN ANALISE_CREDITO ON  -- PESQUISA DA TAREFA DE LIBERAÇÃO DE CRÉDITO
		PEDIDO.ISOEmp_Codigo = ANALISE_CREDITO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = ANALISE_CREDITO.ISOPvPed_Codigo
	LEFT OUTER JOIN TIPO_FRETE ON -- INFORMACOES DE FRETE DO PEDIDO
		PEDIDO.ISOEmp_Codigo = TIPO_FRETE.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = TIPO_FRETE.ISOPvPed_Codigo
	LEFT OUTER JOIN TRANSPORTADORA ON -- INFORMACOES DA TRANSPORTADORA DO PEDIDO
		PEDIDO.ISOEmp_Codigo = TRANSPORTADORA.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = TRANSPORTADORA.ISOPvPed_Codigo
	LEFT OUTER JOIN	LINHA_PEDIDO_CLIENTE  ON  -- Observação do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = LINHA_PEDIDO_CLIENTE.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = LINHA_PEDIDO_CLIENTE.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = LINHA_PEDIDO_CLIENTE.ISOPvPedIte_Codigo

	LEFT OUTER JOIN	LINHA_ORDEM_COMPRA ON  -- Observação do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = LINHA_ORDEM_COMPRA.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = LINHA_ORDEM_COMPRA.ISOPvPed_Codigo AND
	    PEDIDO_ITEM.ISOPvPedIte_Codigo = LINHA_ORDEM_COMPRA.ITEM_PEDIDO

	LEFT OUTER JOIN	OC_DO_CLIENTE ON  -- Observação do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = OC_DO_CLIENTE.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = OC_DO_CLIENTE.ISOPvPed_Codigo AND
	    PEDIDO_ITEM.ISOPvPedIte_Codigo = OC_DO_CLIENTE.ISOPvPedIte_Codigo

	LEFT OUTER JOIN	LOTE1 ON  -- lote 1 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = LOTE1.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = LOTE1.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = LOTE1.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	QTD1 ON  -- qtde 1 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = QTD1.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = QTD1.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = QTD1.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	LOTE2 ON  -- lote 2 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = LOTE2.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = LOTE2.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = LOTE2.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	QTD2 ON  -- qtde 2 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = QTD2.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = QTD2.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = QTD2.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	LOTE3 ON  -- lote 3 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = LOTE3.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = LOTE3.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = LOTE3.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	QTD3 ON  -- qtde 3 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = QTD3.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = QTD3.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = QTD3.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	LOTE4 ON  -- lote 4 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = LOTE4.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = LOTE4.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = LOTE4.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	QTD4 ON  -- qtde 4 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = QTD4.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = QTD4.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = QTD4.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	LOTE5 ON  -- lote 5 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = LOTE5.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = LOTE5.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = LOTE5.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	QTD5 ON  -- qtde 5 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = QTD5.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = QTD5.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = QTD5.ISOPvPedIte_Codigo
	LEFT OUTER JOIN NATUREZA_OPERACAO ON
		PEDIDO.ISOEmp_Codigo = NATUREZA_OPERACAO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPedTip_Codigo = NATUREZA_OPERACAO.ISOPvPedTip_Codigo
	LEFT OUTER JOIN MATRIZ_ICMS ON
		PEDIDO_ITEM.ISOEmp_Codigo = MATRIZ_ICMS.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = MATRIZ_ICMS.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = MATRIZ_ICMS.ISOPvPedIte_Codigo
WHERE
	PEDIDO.ISOEmp_Codigo = 11 AND
	PEDIDO_ITEM.ISOPvPedIteSit_Codigo = 1
	--PEDIDO.ISOPvPed_Codigo = 8742706 and

	AND PEDIDO.ISOPvPedSit_Codigo in (1, 30)     --- ABERTO /  PEDIDO LIBERADO DE CREDITO

	--PEDIDO.ISOPvPed_Codigo between 8740390 and 8740890 -- pedidos indaial
	--PEDIDO.ISOPvPed_Codigo between 8664441 AND 8739451 AND -- pedidos do simulador

	AND (
		-- ANALISE DE CREDITO / INATIVIDADE DO CLIENTE / TITULOS EM ABERTO
		PEDIDO.ISOPvPed_Codigo NOT IN (select isopvped_codigo from [MACRO_ANALISE_CREDITO] where ISOEmp_Codigo = 11 and ISOPvPedSit_Codigo = 1)
		--PEDIDO.ISOPvPed_Codigo NOT IN (SELECT ISOPvPed_Codigo FROM GATILHO_C21_ANALISE_LIMITE_CREDITO WHERE ISOEmp_Codigo = 11 AND  ((LIMITE_CREDITO - TOTAL_CONTAS_RECEBER - PED_EM_ABERTO) < TOTAL_PEDIDO) OR (DATEDIFF(DD,DATA_ULTIMA_COMPRA,GETDATE()) > 60) OR (DATEDIFF(DD,DATA_TITULO,GETDATE()) > 1))
		--OR
		-- ANALISE PRAZO MEDIO
		--PEDIDO.ISOPvPed_Codigo NOT IN (SELECT ISOPvPed_Codigo FROM GATILHO_C22_ANALISE_PRAZO_MEDIO_CLIENTE WITH (NOLOCK) WHERE (1=1) AND PRAZO_MEDIO_CP > PRAZO_MEDIO_CLIENTE)
	)

/*
SELECT * FROM MACROISOPvPedido2

SELECT * FROM MACROISOPvPedido

select *
FROM MACRO_ANALISE_CREDITO WITH (NOLOCK) CROSS APPLY (SELECT ISOENTORG_CODIGO, ISOENTSEG_CODIGO FROM MACROISOUNIONORG_PES) AS DUMMY(COD_CLIENTE, SEGMENTO)
WHERE ISOEMP_CODIGO = 11
AND ISOPVPEDSIT_CODIGO = 1
AND (ISOPVPED_CLICODIGO = COD_CLIENTE AND SEGMENTO IN (1,2))

select * from isosdconexecucao
WHERE ISOEMP_CODIGO = 11
and ISOSDConExe_Codigo >= 395581965
and ISOSDConExe_Comando like '%credito%'

INSERT INTO ISOSDCON_PVPEDIDO
SELECT ISOEMP_CODIGO, 395582093, ISOPVPED_CODIGO,'A', CAST(CONVERT(CHAR , GETDATE(), 120) AS DATETIME), 977744
FROM MACRO_ANALISE_CREDITO WITH (NOLOCK) CROSS APPLY (SELECT ISOENTORG_CODIGO, ISOENTSEG_CODIGO FROM MACROISOUNIONORG_PES) AS DUMMY(COD_CLIENTE, SEGMENTO)
 WHERE (ISOEmp_Codigo = 11 AND ISOPvPed_DataAlteracao >= '2020-07-06 11:58:56.000' ) AND (   ISOEMP_CODIGO = 11
AND ISOPVPEDSIT_CODIGO = 1
AND (ISOPVPED_CLICODIGO = COD_CLIENTE AND SEGMENTO IN (1,2)))

*/;


-- dbo.MACROISOPvPedido_10022021 source

CREATE VIEW [dbo].[MACROISOPvPedido]
as
with
	PEDIDO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPed_CliCodigo,
			ISOPvPed_EstadoOrigem,
			ISOPvPed_EstadoDestino,
			ISOPvPed_CodigoAtendente,
			ISOPvPedSit_Codigo,
			ISOPvPedOri_Codigo,
			ISOPvPed_CodEndCobranca,
			ISOPvPed_ValorTotalPedido,
			ISOPeCndPgt_Codigo,
			ISOPvPed_ValorFrete,
			ISOPvPedTip_Codigo,
			ISOPvPed_Pagamento, -- Condição de pagamento
			ISOPVPed_OrdCompra,
			ISOPvPed_DtaSolEntrega,
			ISOPvPed_CodEndEntrega,
			ISOPvPed_DtaPedido,  -- Data do pedido
			ISOPvPed_HoraPedido -- Hora do pedido
		FROM ISOPVPEDIDO WITH (nOLOCK)
		WHERE
			ISOEmp_Codigo = 11
			AND ISOPvPedSit_Codigo in (1, 30)
			--and ISOPvPedSit_Codigo = 999
			--AND ISOPvPed_Codigo IN (7834128)
			--and ISOPvPed_Codigo NOT IN (select isopvped_codigo from [MACRO_ANALISE_CREDITO] where ISOEmp_Codigo = 11)
			),
	PEDIDO_ITEM AS (
		SELECT
			ISOPVPEDITEM.ISOEmp_Codigo,
			ISOPVPEDITEM.ISOPvPed_Codigo,
			ISOPVPEDITEM.ISOPvPedIte_Codigo,
			ISOPVPEDITEM.ISOPrd_Codigo,
			ISOPVPEDITEM.ISOPvPedIte_Quantidade,
			ISOPVPEDITEM.ISOPvPedIte_DtaSolEntrega,
			ISOPVPEDITEM.ISOPvPedIte_UnidadeOrigem,
			ISOPVPEDITEM.ISOPvPedIte_UnidadeDestino,
			ISOPVPEDITEM.ISOPvPedIte_ValorUnitario,
			ISOPVPEDITEM.ISOPvPedIteSit_Codigo,
			ISOPVPEDITEM.ISOPvPedIte_AgendamentoData,
			ISOPVPEDITEM.ISOPvPedIte_AgendamentoHoraIni,
			ISOPVPEDITEM.ISOPvPedIte_AgendamentoHoraFin,
			ISOPVPEDITEM.ISOPvPedIte_ValorEmpenho,
			ISOPVPEDITEM.ISOPvPedIte_PrecoLista,
			ISOPVPEDITEM.ISOPvPedIte_ValorIPI,
			ISOPVPEDITEM.ISOPvPedIte_VlrSubsTributaria,
			ISOPVPEDITEM.ISOPvPedIte_ValorICMS,
			ISOPVPEDITEM.ISOPvPedIte_ValorPIS,
			ISOPVPEDITEM.ISOPvPedIte_ValorCofins,
			ISOPVPEDITEM.ISOPVPedIte_ValorFCPST,
			ISOPVPEDITEM.ISOPvPedIte_ValorFCP,
			ISOPVPEDITEM.ISOPvPedIte_ValorTotalCalculoF,
			ISOPVPEDITEM.ISOPvPedIte_DataEntregaItem,
			ISOPVPEDITEM.ISOPvPedIte_PercentualIPI,
			ISOPVPEDITEM.ISOPvPedIte_PercSubsTributaria,
			ISOPVPEDITEM.ISOPvPedIte_PercentualFCPST,
			ISOPVPEDITEM.ISOPvPedIte_PrecoAjustado,
			ISOPVPEDITEM.ISOPvPedIte_PrecoAjustadoTotal
		FROM ISOPVPEDITEM INNER JOIN ISOPVPEDIDO
			ON ISOPVPEDIDO.ISOEmp_Codigo = ISOPVPEDITEM.ISOEmp_Codigo
			AND ISOPVPEDIDO.ISOPvPed_Codigo = ISOPVPEDITEM.ISOPvPed_Codigo
			AND ISOPVPEDIDO.ISOPvPedSit_Codigo in (1, 30)
		WHERE
			ISOPVPEDITEM.ISOEmp_Codigo = 11
			AND ISOPVPEDITEM.ISOPvPedIteSit_Codigo = 1
			),
	TOTAL_LINHAS_PEDIDO AS (
		SELECT
			ISOPVPEDITEM.ISOEmp_Codigo,
			ISOPVPEDITEM.ISOPvPed_Codigo,
			COUNT(*) AS ISOPvPedIte_TotalLinhas
		FROM ISOPVPEDITEM INNER JOIN ISOPVPEDIDO
			ON ISOPVPEDIDO.ISOEmp_Codigo = ISOPVPEDITEM.ISOEmp_Codigo
			AND ISOPVPEDIDO.ISOPvPed_Codigo = ISOPVPEDITEM.ISOPvPed_Codigo
			AND ISOPVPEDIDO.ISOPvPedSit_Codigo in (1, 30)
		WHERE
			ISOPVPEDITEM.ISOEmp_Codigo = 11
			AND ISOPVPEDITEM.ISOPvPedIteSit_Codigo = 1
		GROUP BY
			ISOPVPEDITEM.ISOEmp_Codigo,
			ISOPVPEDITEM.ISOPvPed_Codigo),
	TOTAL_PEDIDO_EMPENHO AS (
		SELECT
			ISOPVPEDITEM.ISOEmp_Codigo,
			ISOPVPEDITEM.ISOPvPed_Codigo,
			SUM(ISOPVPEDITEM.ISOPvPedIte_Quantidade * ISOPVPEDITEM.ISOPvPedIte_ValorEmpenho) AS ISOPvPed_ValorTotalPedido
		FROM         ISOPVPEDITEM INNER JOIN ISOPVPEDIDO
			ON ISOPVPEDIDO.ISOEmp_Codigo = ISOPVPEDITEM.ISOEmp_Codigo
			AND ISOPVPEDIDO.ISOPvPed_Codigo = ISOPVPEDITEM.ISOPvPed_Codigo
			AND ISOPVPEDIDO.ISOPvPedSit_Codigo in (1, 30)
		WHERE     (ISOPVPEDITEM.ISOEmp_Codigo = 11) AND (ISOPVPEDITEM.ISOPvPedIteSit_Codigo = 1)
		GROUP BY ISOPVPEDITEM.ISOEmp_Codigo, ISOPVPEDITEM.ISOPvPed_Codigo),
	TOTAL_PEDIDO AS (
		SELECT
			ISOPVPEDITEM.ISOEmp_Codigo,
			ISOPVPEDITEM.ISOPvPed_Codigo,
			SUM(ISOPVPEDITEM.ISOPvPedIte_Quantidade * ISOPVPEDITEM.ISOPvPedIte_PrecoAjustado) AS ISOPvPed_ValorTotalPedido
		FROM         ISOPVPEDITEM INNER JOIN ISOPVPEDIDO
			ON ISOPVPEDIDO.ISOEmp_Codigo = ISOPVPEDITEM.ISOEmp_Codigo
			AND ISOPVPEDIDO.ISOPvPed_Codigo = ISOPVPEDITEM.ISOPvPed_Codigo
			AND ISOPVPEDIDO.ISOPvPedSit_Codigo in (1, 30)
		WHERE     (ISOPVPEDITEM.ISOEmp_Codigo = 11) AND (ISOPVPEDITEM.ISOPvPedIteSit_Codigo = 1) --and ISOPvPed_Codigo >= 8741752
		GROUP BY ISOPVPEDITEM.ISOEmp_Codigo, ISOPVPEDITEM.ISOPvPed_Codigo),
	ATENDENTE_PEDIDO AS (
		SELECT
			ISOEnt_Codigo,
			ISOEnt_Nome
		FROM ISOENTIDADE INNER JOIN ISOENTUSUARIO
			ON ISOENTIDADE.ISOEnt_Codigo = ISOENTUSUARIO.ISOEntUsu_Codigo),
	FATOR_CONVERSAO_PRODUTO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPrdUndFatC_PrdCodigo,
			ISOPrdUndFatC_UndOrigem,
			ISOPrdUndFatC_UndDestino,
			-- criado regra de divisão quando a unidade de medida for "M"  --  22/07/2020 zagoto,edilon,cris
			case
				when ISOPrdUndFatC_UndDestino = 'M' then 1 / ISOPrdUndFatC_FatorConversao
				else ISOPrdUndFatC_FatorConversao
			end ISOPrdUndFatC_FatorConversao,
			ISOPrdUndFatC_Flag,
			ISOPrdUndFatC_Armazem
		FROM ISOPRDUNDFATORCONVERSAO WITH (NOLOCK)
		WHERE ISOEmp_Codigo = 11 and ISOPrdUndFatC_Flag = 'A' AND ISOPrdUndFatC_Armazem = ''), -- 02/12/2020 Zagoto - incluido critério de flag PERFORMANCE
	CLIENTE AS (
		SELECT	DISTINCT
			ISOENTCLIENTE.ISOEmp_Codigo,
			ISOENTCLIENTE.ISOEntCli_Codigo,
			ISOENTCLIENTE.ISOEntCli_Operacao
		FROM ISOENTCLIENTE INNER JOIN ISOPVPEDIDO
			ON ISOENTCLIENTE.ISOEmp_Codigo = ISOPVPEDIDO.ISOEmp_Codigo
				AND ISOENTCLIENTE.ISOEntCli_Codigo = ISOPVPEDIDO.ISOPvPed_CliCodigo
				AND ISOPVPEDIDO.ISOEmp_Codigo= 11
				AND ISOPVPEDIDO.ISOPvPedSit_Codigo in (1, 30)),
	LOCAL_FATURAMENTO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvCD_Origem,
			ISOPvCD_Destino,
			ISOPvCDOri_Pedido,
			ISOPvCDOri_Armazem
		FROM ISOPVCDORIGEM WITH (nOLOCK)),
	EMPENHO AS (
		SELECT
			ISOCTPEDCONTRATO.ISOEmp_Codigo,
			ISOCTPEDCONTRATO.ISOCttPedCon_PedidoCodigo,
			ISOCTPEDCONTRATO.ISOCttPedCon_NumeroEmp
		FROM ISOCTPEDCONTRATO WITH (nOLOCK)
		INNER JOIN ISOPVPEDIDO
			ON ISOPVPEDIDO.ISOEmp_Codigo = ISOCTPEDCONTRATO.ISOEmp_Codigo
			AND ISOPVPEDIDO.ISOPvPed_Codigo = ISOCTPEDCONTRATO.ISOCttPedCon_PedidoCodigo
			AND ISOPVPEDIDO.ISOEmp_Codigo = 11
			AND ISOPVPEDIDO.ISOPvPedSit_Codigo in (1, 30)),
	TABELA_CLIENTE AS (
		SELECT	DISTINCT
			ISOENTCLIENTEATTVALUES.ISOEmp_Codigo,
			ISOENTCLIENTEATTVALUES.ISOEntCli_Codigo,
			ISOENTCLIENTEATTVALUES.ISOEntClienteAttId,
			ISOENTCLIENTEATTVALUES.ISOEntClienteAttOtherValue
		FROM ISOENTCLIENTEATTVALUES INNER JOIN ISOPVPEDIDO
			ON ISOENTCLIENTEATTVALUES.ISOEmp_Codigo = ISOPVPEDIDO.ISOEmp_Codigo
				AND ISOENTCLIENTEATTVALUES.ISOEntCli_Codigo = ISOPVPEDIDO.ISOPvPed_CliCodigo
				AND ISOPVPEDIDO.ISOEmp_Codigo= 11
				AND ISOPVPEDIDO.ISOPvPedSit_Codigo in (1, 30)
		WHERE
			ISOENTCLIENTEATTVALUES.ISOEmp_Codigo = 11 AND
			ISOENTCLIENTEATTVALUES.ISOEntClienteAttId = 99),
	ESTABELECIMENTO_LX AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvCD_Origem,
			ISOPvCD_Destino,
			ISOPvCD_Estabelecimento
		FROM ISOPVCD WITH (nOLOCK)),
	ORIGEM_PROTHEUS AS (
		SELECT
			ISOEmp_Codigo,
			ISOEmpEnt_EntCodigo,
			ISOEmpOri_Codigo,
			ISOEmpEnt_Ori_Codigo
		FROM ISOEMPENT_ORIGEM WITH (nOLOCK)
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOEmpOri_Codigo = 13),
	ORIGEM_LX AS (
		SELECT	DISTINCT
			ISOEMPENT_ORIGEM.ISOEmp_Codigo,
			ISOEMPENT_ORIGEM.ISOEmpEnt_EntCodigo,
			ISOEMPENT_ORIGEM.ISOEmpOri_Codigo,
			ISOEMPENT_ORIGEM.ISOEmpEnt_Ori_Codigo
		FROM ISOEMPENT_ORIGEM INNER JOIN ISOPVPEDIDO
			ON ISOEMPENT_ORIGEM.ISOEmp_Codigo = ISOPVPEDIDO.ISOEmp_Codigo
				AND ISOEMPENT_ORIGEM.ISOEmpEnt_EntCodigo = ISOPVPEDIDO.ISOPvPed_CliCodigo
				AND ISOPVPEDIDO.ISOEmp_Codigo= 11
				AND ISOPVPEDIDO.ISOPvPedSit_Codigo in (1, 30)
		WHERE
			ISOEMPENT_ORIGEM.ISOEmp_Codigo = 11 AND
			ISOEMPENT_ORIGEM.ISOEmpOri_Codigo = 2),
	CONDICAO_PAGAMENTO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPeCndPgt_Codigo,
			ISOPeCntPgt_Forma
		FROM ISOPECNDPAGAMENTO WITH (nOLOCK)),
	CUSTO_FINANCEIRO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvTV_Codigo,
			ISOPvEstab_Codigo,
			ISOPvEstabTbV_PercDespFinancei
		FROM ISOPvEstab_TblVenda
		WHERE
			ISOEMP_CODIGO = 11
	),
	ANALISE_CREDITO AS (
		SELECT
			ISOWFTRF_PEDIDO.ISOEmp_Codigo,
			ISOWFTRF_PEDIDO.ISOPvPed_Codigo,
		    CASE WHEN ISOWFTrf_RspExe_RspCodigo IS NULL THEN '' ELSE CONVERT(VARCHAR(8), ISOWFTrf_DataSolucao, 112) END AS ISOWFTrf_DataLiberacaoCredito,  -- Data em que a tarefa de liberação de crédito foi executada
			CASE WHEN ISOWFTrf_RspExe_RspCodigo IS NULL THEN '' ELSE CONVERT(VARCHAR(8), ISOWFTrf_DataSolucao, 108) END AS ISOWFTrf_HoraLiberacaoCredito,
			CASE WHEN ISOWFTrf_RspExe_RspCodigo IS NULL THEN '' ELSE COALESCE(CAST(ISOWFTrf_RspExe_RspCodigo AS VARCHAR(10)),'')+'-'+COALESCE(USUARIO_CEDITO.ISOEnt_Nome,'') END AS ISOWFTrf_CodigoAtendente
		FROM ISOWFTRF_PEDIDO INNER JOIN ISOWFPROCEDIMENTO ON
			ISOWFTRF_PEDIDO.ISOEmp_Codigo = ISOWFPROCEDIMENTO.ISOEmp_Codigo AND
			ISOWFTRF_PEDIDO.ISOWFTrf_Ped_PrcCodigo = ISOWFPROCEDIMENTO.ISOWFPrc_Codigo AND
			ISOWFPROCEDIMENTO.ISOWFPrcPad_Codigo IN (SELECT ISOWFPrcPad_Codigo FROM ISOWFPrcPadrao where isoemp_codigo = 11 and ISOWFPrcPad_Descricao like 'BO%' and ISOWFPrcPad_Flag = 'A') AND -- PROCEDIMENTO ( PEDIDO - ANALISE DE CREDITO)
			ISOWFTRF_PEDIDO.ISOWFTrf_Ped_TrfCodigo = 1 --- CÓDIGO DA TAREFA QUE O ATENDENTE IRÁ CONFIRMAR O CRÉDITO DO CLIENTE ********
		INNER JOIN ISOWFTAREFA ON -- TAREFA DE LIBERAÇÃO DE CRÉDITO
			ISOWFTRF_PEDIDO.ISOEmp_Codigo = ISOWFTAREFA.ISOEmp_Codigo AND
			ISOWFTRF_PEDIDO.ISOWFTrf_Ped_PrcCodigo = ISOWFTAREFA.ISOWFPrc_Codigo AND
			ISOWFTRF_PEDIDO.ISOWFTrf_Ped_TrfCodigo = ISOWFTAREFA.ISOWFTrfPad_Codigo AND
			ISOWFTAREFA.ISOWFTrfPad_Codigo = 1 AND  -- TAREFA (ANALISAR PEDIDO RETIDO EM CREDITO)
			ISOWFTAREFA.ISOWFTrfPadSit_Codigo = 1  -- SITUACAO (PEDIDO APROVADO DE CREDITO)
		INNER JOIN ISOENTIDADE AS USUARIO_CEDITO ON -- USUÁRIO QUE LIBEROU O CRÉDITO DO CLIENTE
			ISOWFTAREFA.ISOWFTrf_RspExe_RspCodigo = USUARIO_CEDITO.ISOEnt_Codigo
		WHERE ISOWFTRF_PEDIDO.ISOEmp_Codigo = 11
		AND ISOWFTRF_PEDIDO.ISOPvPed_Codigo IN (SELECT ISOPVPED_CODIGO FROM ISOPVPEDIDO WHERE ISOEMP_CODIGO = 11 AND ISOPVPEDSIT_CODIGO IN (1,30))
		AND ISOWFTRF_PEDIDO.ISOWFTrf_Ped_PrcCodigo = (SELECT MAX(X.ISOWFTrf_Ped_PrcCodigo) FROM ISOWFTRF_PEDIDO X WHERE ISOWFTRF_PEDIDO.ISOEmp_Codigo = X.ISOEmp_Codigo AND ISOWFTRF_PEDIDO.ISOPvPed_Codigo = X.ISOPvPed_Codigo)),
	TIPO_FRETE AS (
		SELECT 	DISTINCT
			ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOEmp_Codigo,
			ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOPvPed_Codigo,
			COALESCE(ISOPvPedidoAttOptValue,'') AS ISOPvPedidoTipoFrete
		FROM ISOPVPEDIDOATTVALUES AS ISOPVPEDIDOATTVALUES_TIPO_FRETE
		INNER JOIN ISOPVPEDIDOATTLEVEL1 ON
			ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOEmp_Codigo = ISOPVPEDIDOATTLEVEL1.ISOEmp_Codigo AND
			ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOPvPedidoAttId = ISOPVPEDIDOATTLEVEL1.ISOPvPedidoAttId AND
			ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOPvPedidoAttOptId = ISOPVPEDIDOATTLEVEL1.ISOPvPedidoAttOptId AND
			ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOPvPedidoAttId = 104 -- CÓDIGO DA PERGUNTA TIPO DO FRETE
		WHERE
			ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOEmp_Codigo = 11
			AND ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOPvPed_Codigo IN (SELECT ISOPVPED_CODIGO FROM ISOPVPEDIDO WHERE ISOEMP_CODIGO = 11 AND ISOPVPEDSIT_CODIGO IN (1,30))
			),
	TRANSPORTADORA AS (
		SELECT 	DISTINCT
			ISOPVPEDIDOATTVALUES_TRANSP.ISOEmp_Codigo,
			ISOPVPEDIDOATTVALUES_TRANSP.ISOPvPed_Codigo,
			COALESCE(ISOPvTrp_CodigoExterno,'') AS ISOPvPedido_CodigoTRP
		FROM ISOPVPEDIDOATTVALUES AS ISOPVPEDIDOATTVALUES_TRANSP
		INNER JOIN ISOPVTRANSPORTADORA ON
			ISOPVTRANSPORTADORA.ISOPvTrp_Codigo = ISOPVPEDIDOATTVALUES_TRANSP.ISOPvPedidoAttOptId AND
			ISOPVPEDIDOATTVALUES_TRANSP.ISOPvPedidoAttId = 105 --AND -- CÓDIGO DA PERGUNTA TRANSPORTADORA
			--ISOPVTRANSPORTADORA.ISOPvTrp_Flag = 'A'
		WHERE ISOPVPEDIDOATTVALUES_TRANSP.ISOEmp_Codigo = 11
			AND ISOPVPEDIDOATTVALUES_TRANSP.ISOPvPed_Codigo IN (SELECT ISOPVPED_CODIGO FROM ISOPVPEDIDO WHERE ISOEMP_CODIGO = 11 AND ISOPVPEDSIT_CODIGO IN (1,30))
		),
	--OBSERVACAO_ITEM_PEDIDO AS (
	--	SELECT
	--		ISOEmp_Codigo,
	--		ISOPvPed_Codigo,
	--		ISOPvPedIte_Codigo,
	--		ISOPvPedItemAttValue
	--	FROM ISOPVPEDITEMATTVALUES WITH (nOLOCK)
	--	WHERE
	--		ISOEmp_Codigo = 11 AND
	--		ISOPvPedItemAttId = 2),
	OC_DO_CLIENTE AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (nOLOCK)
		WHERE
			ISOEmp_Codigo = 11
			AND ISOPVPEDITEMATTVALUES.ISOPvPed_Codigo IN (SELECT ISOPVPED_CODIGO FROM ISOPVPEDIDO WHERE ISOEMP_CODIGO = 11 AND ISOPVPEDSIT_CODIGO IN (1,30))
			AND ISOPvPedItemAttId = 1),
	LINHA_PEDIDO_CLIENTE AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (nOLOCK)
		WHERE
			ISOEmp_Codigo = 11
			AND ISOPVPEDITEMATTVALUES.ISOPvPed_Codigo IN (SELECT ISOPVPED_CODIGO FROM ISOPVPEDIDO WHERE ISOEMP_CODIGO = 11 AND ISOPVPEDSIT_CODIGO IN (1,30))
			AND ISOPvPedItemAttId = 2),
	LINHA_ORDEM_COMPRA AS (
		SELECT ISOPVPEDITEM.ISOEmp_Codigo, ISOPVPEDITEM.ISOPVPED_CODIGO, ITEM_PEDIDO, ITEM_CLIENTE
			FROM ISOPVPEDITEM LEFT OUTER JOIN (
			SELECT
				ISOEMP_CODIGO,
				ISOPVPED_CODIGO,
				CASE
					WHEN CHARINDEX('-',VALOR,1) > 1
					THEN SUBSTRING(VALOR,1,CHARINDEX('-',VALOR,1)-1)
					ELSE 0
				END AS ITEM_PEDIDO,
				SUBSTRING(VALOR,CHARINDEX('-',VALOR,1)+1,3) AS ITEM_CLIENTE
			FROM ISOPVPEDIDOATTVALUES CROSS APPLY DBO.SPLIT(ISOPVPEDIDOATTVALUELONG,CHAR(10))
			WHERE ISOEMP_CODIGO = 11
			AND ISOPVPEDIDOATTID = 106
			AND PATINDEX('%[A-Z]%', ISOPVPEDIDOATTVALUELONG) = 0
			AND ISOPVPED_CODIGO IN (SELECT ISOPVPED_CODIGO FROM ISOPVPEDIDO WHERE ISOEMP_CODIGO = 11 AND ISOPVPEDSIT_CODIGO IN (1,30))
			AND CHARINDEX('-',VALOR,1) > 1
			AND VALOR <> '') DADO_COMPLEMENTAR_PEDIDO
				ON ISOPVPEDITEM.ISOEmp_Codigo = DADO_COMPLEMENTAR_PEDIDO.ISOEmp_Codigo AND
					ISOPVPEDITEM.ISOPvPed_Codigo = DADO_COMPLEMENTAR_PEDIDO.ISOPvPed_Codigo AND
					ISOPVPEDITEM.ISOPvPedIte_Codigo = DADO_COMPLEMENTAR_PEDIDO.ITEM_PEDIDO
			WHERE ISOPVPEDITEM.ISOEmp_Codigo = 11
			AND ISOPVPEDITEM.ISOPVPED_CODIGO IN (SELECT ISOPVPED_CODIGO FROM ISOPVPEDIDO WHERE ISOEMP_CODIGO = 11 AND ISOPVPEDSIT_CODIGO IN (1,30))),
	LOTE1 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- lote 1 do item do pedido
		WHERE
			ISOEmp_Codigo = 11
			AND ISOPVPEDITEMATTVALUES.ISOPvPed_Codigo IN (SELECT ISOPVPED_CODIGO FROM ISOPVPEDIDO WHERE ISOEMP_CODIGO = 11 AND ISOPVPEDSIT_CODIGO IN (1,30))
			AND ISOPvPedItemAttId = 4),
	QTD1 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- qtde 1 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 5),
	LOTE2 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- lote 2 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 6),
	QTD2 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- qtde 2 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 7),
	LOTE3 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- lote 3 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 8),
	QTD3 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- qtde 3 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 9),
	LOTE4 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- lote 4 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 10),
	QTD4 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- qtde 4 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 11),
	LOTE5 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- lote 5 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 12),
	QTD5 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK)-- qtde 5 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 13),
	NATUREZA_OPERACAO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPedTip_Codigo,
			COALESCE(ISOPvPedTip_NaturezaOperacaoCo,'') AS ISOPvPedTip_NaturezaOperacaoCo
		FROM ISOPVPEDTIPO WITH (nOLOCK)
		WHERE
			ISOEmp_Codigo = 11)
	--MATRIZ_ICMS AS (
	--	SELECT
	--		ISOEmp_Codigo,
	--		ISOPvPed_CliCodigo,
	--		ISOPvPed_Codigo,
	--		ISOPvPedIte_Codigo,
	--		ISOPrd_Codigo,
	--		ISOPvMatICMS_SubTribICMSDocFis,
	--		ISOPvMatICMS_AliquotaICMS
	--	FROM MacroConsultaMatrizICMS WITH (NOLOCK)
	--	WHERE
	--		ISOEmp_Codigo = 11)
SELECT
	PEDIDO.ISOEmp_Codigo, -- Código da empresa
	PEDIDO.ISOPvPed_Codigo, -- Código CRM do Pedido
	PEDIDO.ISOPvPed_CliCodigo, -- Código CRM do cliente
	PEDIDO.ISOPvPed_DtaPedido,  -- Data do pedido
	PEDIDO.ISOPvPed_HoraPedido, -- Hora do pedido
	CASE CONDICAO_PAGAMENTO.ISOPeCntPgt_Forma
		WHEN 'Bol' THEN 'BOLETO'
		WHEN 'Car' THEN 'CARTAO'
		WHEN 'Che' THEN 'CHEQUE'
		WHEN 'Dep' THEN 'DEPOSITO'
		WHEN 'Din' THEN 'Dinheiro'
	END AS ISOPeCntPgt_Forma, -- Forma de pagamento
	PEDIDO.ISOPvPed_Pagamento, -- Condição de pagamento
	PEDIDO.ISOPvPed_DtaSolEntrega,
	PEDIDO.ISOPvPed_CodEndEntrega,
	PEDIDO.ISOPvPedOri_Codigo,
	PEDIDO.ISOPvPedTip_Codigo,
	PEDIDO.ISOPvPed_CodEndCobranca,

	CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0 THEN TOTAL_PEDIDO_EMPENHO.ISOPvPed_ValorTotalPedido ELSE PEDIDO.ISOPvPed_ValorTotalPedido END AS ISOPvPed_ValorTotalPedido,

	PEDIDO_ITEM.ISOPvPedIte_Codigo, -- Sequencial do item do pedido
	PEDIDO_ITEM.ISOPrd_Codigo, -- Código do produto
	CASE
		WHEN ISNULL(NULLIF(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0),0) = 0
		THEN 0
		ELSE PEDIDO_ITEM.ISOPvPedIte_Quantidade
	END ISOPvPedIte_Quantidade,
	PEDIDO_ITEM.ISOPvPedIte_DataEntregaItem AS ISOPvPedIte_DataPromessa,
	PEDIDO_ITEM.ISOPvPedIte_DtaSolEntrega,
	PEDIDO_ITEM.ISOPvPedIte_UnidadeOrigem,
	PEDIDO_ITEM.ISOPvPedIte_UnidadeDestino,
	ROUND(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,6) AS ISOPrdUndFatC_FatorConversao, -- Fator de conversão sem decimais
	ROUND(PEDIDO_ITEM.ISOPvPedIte_Quantidade * ROUND(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,6),0) AS ISOPvPedIte_Qtd_UM_estoque,
	CASE
		WHEN ISNULL(NULLIF(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0),0) = 0
		THEN 0
		--ELSE CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho >0 THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho ELSE ROUND(PEDIDO_ITEM.ISOPvPedIte_ValorUnitario,6) END
		ELSE CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho >0 THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho ELSE ROUND(PEDIDO_ITEM.ISOPvPedIte_PrecoAjustadoTotal / PEDIDO_ITEM.ISOPvPedIte_Quantidade,6) END
	END ISOPvPedIte_Vlr_Total_Unitario,

	CASE
		WHEN ISNULL(NULLIF(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0),0) = 0
		THEN 0
		--ELSE CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0 THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho ELSE ROUND(PEDIDO_ITEM.ISOPvPedIte_ValorUnitario,6) END / NULLIF(ROUND(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0),0)
		ELSE CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0 THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho ELSE ROUND(PEDIDO_ITEM.ISOPvPedIte_PrecoAjustadoTotal / PEDIDO_ITEM.ISOPvPedIte_Quantidade,6) END / NULLIF(ROUND(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,6),0)
	END ISOPvPedIte_Vlr_Total_Unitario_EST,

	PEDIDO_ITEM.ISOPvPedIteSit_Codigo,
	PEDIDO_ITEM.ISOPvPedIte_AgendamentoData,
	PEDIDO_ITEM.ISOPvPedIte_AgendamentoHoraIni,
	PEDIDO_ITEM.ISOPvPedIte_AgendamentoHoraFin,
	PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,
	-- DESATIVADO 21/08/2020 - EDILON - para pedidos de contrato o valor de frete deve ser mostrado
	--CASE
	--	WHEN COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) > 0
	--	THEN 0
	--	ELSE COALESCE(PEDIDO.ISOPvPed_ValorFrete,0)
	--END AS ISOPvPed_ValorFrete,
	COALESCE(PEDIDO.ISOPvPed_ValorFrete,0) AS ISOPvPed_ValorFrete,
	COALESCE(ORIGEM_PROTHEUS.ISOEmpEnt_Ori_Codigo,'') AS ISOEmpEnt_CliCod_ERP,
	ORIGEM_LX.ISOEmpEnt_Ori_Codigo AS ISOEmpEnt_Ori_LX,
	LOCAL_FATURAMENTO.ISOPvCDOri_Armazem AS ISOPvPedIte_Armazem,
	COALESCE(CLIENTE.ISOEntCli_Operacao,'') AS ISOEntCli_Operacao,
	ESTABELECIMENTO_LX.ISOPvCD_Estabelecimento AS ISOPvCD_Estabelecimento_LX,
	PEDIDO.ISOPvPed_CodigoAtendente AS ISOPvPed_CodigoAtendente, -- Código do atendente que criou o pedido
	ATENDENTE_PEDIDO.ISOEnt_Nome AS ISOEnt_NomeAtendente, -- Nome do atendente que criou o pedido

	/*
	'2020-05-13 00:00:00.000' AS ISOWFTrf_DataLiberacaoCredito, -- Data em que a tarefa de liberação de crédito foi executada
    '11:00:00' AS ISOWFTrf_HoraLiberacaoCredito,  -- Hora em que a tarefa de liberação de crédito foi executada
    975190 AS ISOWFTrf_CodigoAtendente, -- Responsável que executou a tarefa de liberação de crédito
	*/

	COALESCE(ANALISE_CREDITO.ISOWFTrf_DataLiberacaoCredito,'') AS ISOWFTrf_DataLiberacaoCredito, -- Data em que a tarefa de liberação de crédito foi executada
    COALESCE(ANALISE_CREDITO.ISOWFTrf_HoraLiberacaoCredito,'') AS ISOWFTrf_HoraLiberacaoCredito,  -- Hora em que a tarefa de liberação de crédito foi executada
    COALESCE(ANALISE_CREDITO.ISOWFTrf_CodigoAtendente,'') AS ISOWFTrf_CodigoAtendente, -- Responsável que executou a tarefa de liberação de crédito

	CASE
		WHEN PEDIDO.ISOPvPedOri_Codigo = 'EUR' THEN 3
		WHEN PEDIDO.ISOPvPedOri_Codigo = 'EU1' THEN 3
		WHEN PEDIDO.ISOPvPedOri_Codigo = 'USD' THEN 2
		WHEN PEDIDO.ISOPvPedOri_Codigo = 'US1' THEN 2
		ELSE 1
	END AS ISOMoe_Codigo,

	COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorIPI,0) AS ISOPvPedIte_ValorIPI,
	COALESCE(PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria,0) AS ISOPvPedIte_VlrSubsTrib,
	COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorICMS,0) AS ISOPvPedIte_ValorICMS,
	COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorPIS,0) AS ISOPvPedIte_ValorPIS,
	COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorCofins,0) AS ISOPvPedIte_ValorCofins,
	COALESCE(PEDIDO_ITEM.ISOPVPedIte_ValorFCPST,0) AS ISOPVPedIte_ValorFCPST,
	COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorFCP,0) AS ISOPvPedIte_ValorFCP,
	COALESCE(TRANSPORTADORA.ISOPvPedido_CodigoTRP,'') AS ISOPvPedido_CodigoTRP,
	COALESCE(TIPO_FRETE.ISOPvPedidoTipoFrete,'') AS ISOPvPedidoTipoFrete,
	COALESCE(TABELA_CLIENTE.ISOEntClienteAttOtherValue,'') AS ISOEmpEnt_Tabela_Preco,
	PEDIDO_ITEM.ISOPvPedIte_PrecoLista,
	COALESCE(PEDIDO.ISOPVPed_OrdCompra,'') AS ISOPVPed_OrdCompra,

	CASE
		WHEN LINHA_ORDEM_COMPRA.ITEM_CLIENTE <> ''
		THEN COALESCE(PEDIDO.ISOPVPed_OrdCompra,'')
		ELSE
			CASE
				WHEN COALESCE(RTRIM(LTRIM(SUBSTRING(OC_DO_CLIENTE.ISOPvPedItemAttValue,1,15))),'') <> ''
				THEN COALESCE(RTRIM(LTRIM(SUBSTRING(OC_DO_CLIENTE.ISOPvPedItemAttValue,1,15))),'')
				ELSE COALESCE(PEDIDO.ISOPVPed_OrdCompra,'')
			END
	END AS ISOPvPedIte_NrOrdemCompra,

	CASE
		WHEN ABS(COALESCE(LINHA_PEDIDO_CLIENTE.ISOPvPedItemAttValue,LINHA_ORDEM_COMPRA.ITEM_CLIENTE,'')) = 0 AND LINHA_ORDEM_COMPRA.ITEM_CLIENTE <> ''
		THEN PEDIDO_ITEM.ISOPvPedIte_Codigo
		ELSE ABS(COALESCE(LINHA_PEDIDO_CLIENTE.ISOPvPedItemAttValue,LINHA_ORDEM_COMPRA.ITEM_CLIENTE,''))
	END
		AS ISOPvPedIte_LinhaOrdemCompra,

	COALESCE(RTRIM(LTRIM(SUBSTRING(LOTE1.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_Lote1,
	COALESCE(RTRIM(LTRIM(SUBSTRING(QTD1.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_QtdeLote1,
	COALESCE(RTRIM(LTRIM(SUBSTRING(LOTE2.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_Lote2,
	COALESCE(RTRIM(LTRIM(SUBSTRING(QTD2.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_QtdeLote2,
	COALESCE(RTRIM(LTRIM(SUBSTRING(LOTE3.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_Lote3,
	COALESCE(RTRIM(LTRIM(SUBSTRING(QTD3.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_QtdeLote3,
	COALESCE(RTRIM(LTRIM(SUBSTRING(LOTE4.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_Lote4,
	COALESCE(RTRIM(LTRIM(SUBSTRING(QTD4.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_QtdeLote4,
	COALESCE(RTRIM(LTRIM(SUBSTRING(LOTE5.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_Lote5,
	COALESCE(RTRIM(LTRIM(SUBSTRING(QTD5.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_QtdeLote5,
	COALESCE(NATUREZA_OPERACAO.ISOPvPedTip_NaturezaOperacaoCo,'') AS ISOPvPed_Operacao,

	/*
	Inativado por devergência de valores com protheus 13/05/20 (Edilon,Leticia)
	(PEDIDO_ITEM.ISOPvPedIte_ValorTotalCalculoF - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade)) AS ISOPvPedIte_PrecoCMLIntegracaoBO,
	((PEDIDO_ITEM.ISOPvPedIte_ValorTotalCalculoF - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade)) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao) AS ISOPvPedIte_PrecoUNESTIntegracaoBO,
	*/

/*
	CASE
		WHEN MATRIZ_ICMS.ISOPvMatICMS_SubTribICMSDocFis = 1
		THEN ROUND((PEDIDO_ITEM.ISOPvPedIte_ValorUnitario - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade)),6)
		ELSE ROUND((CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0 THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho ELSE PEDIDO_ITEM.ISOPvPedIte_ValorUnitario END - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade) - (PEDIDO_ITEM.ISOPvPedIte_ValorIPI / PEDIDO_ITEM.ISOPvPedIte_Quantidade)),6)
	END AS ISOPvPedIte_PrecoCMLIntegracaoBO,

	CASE
		WHEN MATRIZ_ICMS.ISOPvMatICMS_SubTribICMSDocFis = 1
		THEN ROUND(((PEDIDO_ITEM.ISOPvPedIte_ValorTotalCalculoF - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade)) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao),6)
		ELSE ROUND(((CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0 THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho ELSE PEDIDO_ITEM.ISOPvPedIte_ValorUnitario END - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade) - (PEDIDO_ITEM.ISOPvPedIte_ValorIPI / PEDIDO_ITEM.ISOPvPedIte_Quantidade)) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao),6)
	END AS ISOPvPedIte_PrecoUNESTIntegracaoBO,
*/
	CASE
		WHEN COALESCE(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0) = 0
			THEN 0
		ELSE
		CASE
			-- cliente TEM desoneração e o pedido é empenho
			-- PERFORMANCE WHEN MATRIZ_ICMS.ISOPvMatICMS_SubTribICMSDocFis = 1 AND COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) > 0
			WHEN (SELECT ISOPvMatICMS_SubTribICMSDocFis FROM MacroConsultaMatrizICMS WHERE MacroConsultaMatrizICMS.ISOEmp_Codigo = PEDIDO_ITEM.ISOEmp_Codigo AND MacroConsultaMatrizICMS.ISOPvPed_Codigo = PEDIDO_ITEM.ISOPvPed_Codigo AND MacroConsultaMatrizICMS.ISOPvPedIte_Codigo = PEDIDO_ITEM.ISOPvPedIte_Codigo) = 1 AND COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) > 0
				-- PERFORMANCE THEN ROUND(((((PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho / (1 - (MATRIZ_ICMS.ISOPvMatICMS_AliquotaICMS/100)) / (1 + (PEDIDO_ITEM.ISOPvPedIte_PercentualIPI / 100)))))),6)
				THEN ROUND(((((PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho / (1 - ((SELECT ISOPvMatICMS_AliquotaICMS FROM MacroConsultaMatrizICMS WHERE MacroConsultaMatrizICMS.ISOEmp_Codigo = PEDIDO_ITEM.ISOEmp_Codigo AND MacroConsultaMatrizICMS.ISOPvPed_Codigo = PEDIDO_ITEM.ISOPvPed_Codigo AND MacroConsultaMatrizICMS.ISOPvPedIte_Codigo = PEDIDO_ITEM.ISOPvPedIte_Codigo)/100)) / (1 + (PEDIDO_ITEM.ISOPvPedIte_PercentualIPI / 100)))))),6)
			-- cliente TEM desoneração e o pedido NÃO é empenho
			-- PERFORMANCE WHEN MATRIZ_ICMS.ISOPvMatICMS_SubTribICMSDocFis = 1 AND COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) = 0
			WHEN (SELECT ISOPvMatICMS_SubTribICMSDocFis FROM MacroConsultaMatrizICMS WHERE MacroConsultaMatrizICMS.ISOEmp_Codigo = PEDIDO_ITEM.ISOEmp_Codigo AND MacroConsultaMatrizICMS.ISOPvPed_Codigo = PEDIDO_ITEM.ISOPvPed_Codigo AND MacroConsultaMatrizICMS.ISOPvPedIte_Codigo = PEDIDO_ITEM.ISOPvPedIte_Codigo) = 1 AND COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) = 0
				-- desativado 22/06/2020 para utilizar novo campo de preco ajustado do item --	THEN ROUND(((PEDIDO_ITEM.ISOPvPedIte_ValorTotalCalculoF - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade)) ),6)
				THEN ROUND(PEDIDO_ITEM.ISOPvPedIte_PrecoAjustado ,6)
			--ELSE ROUND((CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0 THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho ELSE PEDIDO_ITEM.ISOPvPedIte_ValorUnitario END - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade) - (PEDIDO_ITEM.ISOPvPedIte_ValorIPI / PEDIDO_ITEM.ISOPvPedIte_Quantidade)),6)
			-- cliente SEM desoneração
			ELSE ROUND((CASE
							WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0
								THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho / (1 + ((PEDIDO_ITEM.ISOPvPedIte_PercSubsTributaria + PEDIDO_ITEM.ISOPvPedIte_PercentualFCPST)/100.0) ) / ((1+(PEDIDO_ITEM.ISOPvPedIte_PercentualIPI/100.0)) )
							--inativado pois não considerava o rateio do frete
							--ELSE (PEDIDO_ITEM.ISOPvPedIte_ValorUnitario - ((PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade) + PEDIDO_ITEM.ISOPVPedIte_ValorFCPST) - (PEDIDO_ITEM.ISOPvPedIte_ValorIPI / PEDIDO_ITEM.ISOPvPedIte_Quantidade))
							-- desativado 22/06/2020 para utilizar novo campo de preco ajustado do item --	ELSE ((((PEDIDO_ITEM.ISOPvPedIte_ValorUnitario * PEDIDO_ITEM.ISOPvPedIte_Quantidade) - (((PEDIDO_ITEM.ISOPvPedIte_ValorUnitario * PEDIDO_ITEM.ISOPvPedIte_Quantidade) / TOTAL_PEDIDO.ISOPvPed_ValorTotalPedido) * PEDIDO.ISOPvPed_ValorFrete)) / PEDIDO_ITEM.ISOPvPedIte_Quantidade) - ((PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade) + PEDIDO_ITEM.ISOPVPedIte_ValorFCPST) - (PEDIDO_ITEM.ISOPvPedIte_ValorIPI / PEDIDO_ITEM.ISOPvPedIte_Quantidade))
							ELSE PEDIDO_ITEM.ISOPvPedIte_PrecoAjustado -- desativado 16/07/2020 o valor já está na unidade comercial * PEDIDO_ITEM.ISOPvPedIte_Quantidade -- desativado 09/07/2020 pois o preco ajustado já está sem o frete ((((PEDIDO_ITEM.ISOPvPedIte_PrecoAjustado * PEDIDO_ITEM.ISOPvPedIte_Quantidade) - (((PEDIDO_ITEM.ISOPvPedIte_ValorUnitario * PEDIDO_ITEM.ISOPvPedIte_Quantidade) / TOTAL_PEDIDO.ISOPvPed_ValorTotalPedido) * PEDIDO.ISOPvPed_ValorFrete)) / PEDIDO_ITEM.ISOPvPedIte_Quantidade) )
						END )  / (1 + (ISOPvEstabTbV_PercDespFinancei / 100.00) ),6)
		END
	END AS ISOPvPedIte_PrecoCMLIntegracaoBO,

	ROUND (
	CASE
		WHEN COALESCE(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0) = 0
			THEN 0
		ELSE
		CASE
			-- cliente TEM desoneração e o pedido é empenho
			-- PERFORMANCE WHEN MATRIZ_ICMS.ISOPvMatICMS_SubTribICMSDocFis = 1 AND COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) > 0
			WHEN (SELECT ISOPvMatICMS_SubTribICMSDocFis FROM MacroConsultaMatrizICMS WHERE MacroConsultaMatrizICMS.ISOEmp_Codigo = PEDIDO_ITEM.ISOEmp_Codigo AND MacroConsultaMatrizICMS.ISOPvPed_Codigo = PEDIDO_ITEM.ISOPvPed_Codigo AND MacroConsultaMatrizICMS.ISOPvPedIte_Codigo = PEDIDO_ITEM.ISOPvPedIte_Codigo) = 1 AND COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) > 0
				-- PERFORMANCE THEN ROUND(((((PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho / (1 - (MATRIZ_ICMS.ISOPvMatICMS_AliquotaICMS/100)) / (1 + (PEDIDO_ITEM.ISOPvPedIte_PercentualIPI / 100))))) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao),6)
				THEN ROUND(((((PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho / (1 - ((SELECT ISOPvMatICMS_AliquotaICMS FROM MacroConsultaMatrizICMS WHERE MacroConsultaMatrizICMS.ISOEmp_Codigo = PEDIDO_ITEM.ISOEmp_Codigo AND MacroConsultaMatrizICMS.ISOPvPed_Codigo = PEDIDO_ITEM.ISOPvPed_Codigo AND MacroConsultaMatrizICMS.ISOPvPedIte_Codigo = PEDIDO_ITEM.ISOPvPedIte_Codigo)/100)) / (1 + (PEDIDO_ITEM.ISOPvPedIte_PercentualIPI / 100))))) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao),6)
			-- cliente TEM desoneração e o pedido NÃO é empenho
			--PERFORMANCE WHEN MATRIZ_ICMS.ISOPvMatICMS_SubTribICMSDocFis = 1 AND COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) = 0
			WHEN (SELECT ISOPvMatICMS_SubTribICMSDocFis FROM MacroConsultaMatrizICMS WHERE MacroConsultaMatrizICMS.ISOEmp_Codigo = PEDIDO_ITEM.ISOEmp_Codigo AND MacroConsultaMatrizICMS.ISOPvPed_Codigo = PEDIDO_ITEM.ISOPvPed_Codigo AND MacroConsultaMatrizICMS.ISOPvPedIte_Codigo = PEDIDO_ITEM.ISOPvPedIte_Codigo) = 1 AND COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) = 0
			-- desativado 22/06/2020 para utilizar novo campo de preco ajustado do item --	THEN ROUND(((PEDIDO_ITEM.ISOPvPedIte_ValorTotalCalculoF - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade)) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao),6)
				THEN ROUND((PEDIDO_ITEM.ISOPvPedIte_PrecoAjustado / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao),6)
			-- desativado 28/05/2020 pois utilizando valor dos impostos os valores não fechavam ELSE ROUND(((CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0 THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho ELSE PEDIDO_ITEM.ISOPvPedIte_ValorUnitario END - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade) - (PEDIDO_ITEM.ISOPvPedIte_ValorIPI / PEDIDO_ITEM.ISOPvPedIte_Quantidade)) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao),6)
			-- cliente SEM desoneração
			ELSE ROUND((CASE
							WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0
								THEN COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) / (1 + ((PEDIDO_ITEM.ISOPvPedIte_PercSubsTributaria + PEDIDO_ITEM.ISOPvPedIte_PercentualFCPST)/100.0) ) / ((1+(PEDIDO_ITEM.ISOPvPedIte_PercentualIPI/100.0)) )
							--inativado pois não considerava o rateio do frete
							--ELSE (PEDIDO_ITEM.ISOPvPedIte_ValorUnitario - ((PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade) + PEDIDO_ITEM.ISOPVPedIte_ValorFCPST) - (PEDIDO_ITEM.ISOPvPedIte_ValorIPI / PEDIDO_ITEM.ISOPvPedIte_Quantidade))
							-- desativado 22/06/2020 para utilizar novo campo de preco ajustado do item --	ELSE ((((PEDIDO_ITEM.ISOPvPedIte_ValorUnitario * PEDIDO_ITEM.ISOPvPedIte_Quantidade) - (((PEDIDO_ITEM.ISOPvPedIte_ValorUnitario * PEDIDO_ITEM.ISOPvPedIte_Quantidade) / TOTAL_PEDIDO.ISOPvPed_ValorTotalPedido) * PEDIDO.ISOPvPed_ValorFrete)) / PEDIDO_ITEM.ISOPvPedIte_Quantidade) - ((PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade) + PEDIDO_ITEM.ISOPVPedIte_ValorFCPST) - (PEDIDO_ITEM.ISOPvPedIte_ValorIPI / PEDIDO_ITEM.ISOPvPedIte_Quantidade))
							ELSE PEDIDO_ITEM.ISOPvPedIte_PrecoAjustado ---  desativado 09/07/2020 pois o preco ajustado já está sem o frete ((PEDIDO_ITEM.ISOPvPedIte_PrecoAjustado) - ((((PEDIDO_ITEM.ISOPvPedIte_PrecoAjustado * PEDIDO_ITEM.ISOPvPedIte_Quantidade) / TOTAL_PEDIDO.ISOPvPed_ValorTotalPedido) * PEDIDO.ISOPvPed_ValorFrete) / PEDIDO_ITEM.ISOPvPedIte_Quantidade))
						END ) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,6)
		END
	END / (1 + (ISOPvEstabTbV_PercDespFinancei / 100.00) ), 6) AS ISOPvPedIte_PrecoUNESTIntegracaoBO,

	COALESCE(EMPENHO.ISOCttPedCon_NumeroEmp,'') AS ISOPvPedido_NumeroEmpenho,
	TOTAL_LINHAS_PEDIDO.ISOPvPedIte_TotalLinhas

	-- INICIO SIMULACAO DE PREÇOS
	--(1 + (PEDIDO_ITEM.ISOPvPedIte_PercentualIPI / 100)) IPI,
	--(1 - (MATRIZ_ICMS.ISOPvMatICMS_AliquotaICMS/100)) ICMS,
	--PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho EMPENHO,
	--PEDIDO_ITEM.ISOPvPedIte_Quantidade QUANTIDADE,
	--FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao FATOR,
	--ROUND(ROUND(ROUND((PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho  / (1 - (MATRIZ_ICMS.ISOPvMatICMS_AliquotaICMS/100))) / (1 + (PEDIDO_ITEM.ISOPvPedIte_PercentualIPI / 100)) * PEDIDO_ITEM.ISOPvPedIte_Quantidade,2) * (1 + (PEDIDO_ITEM.ISOPvPedIte_PercentualIPI/100)),2) * (1 - (MATRIZ_ICMS.ISOPvMatICMS_AliquotaICMS/100)),2) SIMULACAO_PROTHEUS,
	--CASE
	--	WHEN MATRIZ_ICMS.ISOPvMatICMS_SubTribICMSDocFis = 1 AND COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) > 0
	--		THEN ROUND(((((PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho / (1 - (MATRIZ_ICMS.ISOPvMatICMS_AliquotaICMS/100)) / (1 + (PEDIDO_ITEM.ISOPvPedIte_PercentualIPI / 100))))) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao),6)
	--	WHEN MATRIZ_ICMS.ISOPvMatICMS_SubTribICMSDocFis = 1 AND COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) = 0
	--		THEN ROUND(((PEDIDO_ITEM.ISOPvPedIte_ValorTotalCalculoF - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade)) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao),6)
	--	ELSE ROUND(((CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0 THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho ELSE PEDIDO_ITEM.ISOPvPedIte_ValorUnitario END - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade) - (PEDIDO_ITEM.ISOPvPedIte_ValorIPI / PEDIDO_ITEM.ISOPvPedIte_Quantidade)) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao),6)
	--END * PEDIDO_ITEM.ISOPvPedIte_Quantidade AS SIMULADO_ISO,
	--PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho *	PEDIDO_ITEM.ISOPvPedIte_Quantidade RESULTADO_ISO
	-- TÉRMINO SIMULACAO DE PREÇOS
FROM
	PEDIDO -- CABECALHO DO PEDIDO
	INNER JOIN PEDIDO_ITEM ON -- ITEM DO PEDIDO
		PEDIDO.ISOEmp_Codigo = PEDIDO_ITEM.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = PEDIDO_ITEM.ISOPvPed_Codigo
	INNER JOIN TOTAL_LINHAS_PEDIDO ON -- TOTAL DE LINHAS DO PEDIDO
		PEDIDO.ISOEmp_Codigo = TOTAL_LINHAS_PEDIDO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = TOTAL_LINHAS_PEDIDO.ISOPvPed_Codigo
	INNER JOIN ATENDENTE_PEDIDO ON  -- ATENDENTE QUE CRIOU O PEDIDO
		PEDIDO.ISOPvPed_CodigoAtendente = ATENDENTE_PEDIDO.ISOEnt_Codigo
	INNER JOIN FATOR_CONVERSAO_PRODUTO ON -- UNIDADES DE MEDIDA DO ITEM DO PEDIDO
		PEDIDO_ITEM.ISOEmp_Codigo = FATOR_CONVERSAO_PRODUTO.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPrd_Codigo = FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_PrdCodigo AND
		PEDIDO_ITEM.ISOPvPedIte_UnidadeOrigem = FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_UndOrigem AND
		PEDIDO_ITEM.ISOPvPedIte_UnidadeDestino = FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_UndDestino AND
		FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_Flag = 'A' AND
		FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_Armazem = ''
	INNER JOIN CLIENTE ON -- INFORMAÇÕES DO CLIENTE
		PEDIDO.ISOEmp_Codigo = CLIENTE.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_CliCodigo = CLIENTE.ISOEntCli_Codigo
    INNER JOIN LOCAL_FATURAMENTO ON
		PEDIDO.ISOEmp_Codigo = LOCAL_FATURAMENTO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_EstadoOrigem = LOCAL_FATURAMENTO.ISOPvCD_Origem AND
        PEDIDO.ISOPvPed_EstadoDestino = LOCAL_FATURAMENTO.ISOPvCD_Destino AND
        PEDIDO.ISOPvPedOri_Codigo = LOCAL_FATURAMENTO.ISOPvCDOri_Pedido
	INNER JOIN ESTABELECIMENTO_LX ON -- ESTABELECIMENTO DO PEDIDO
		PEDIDO.ISOEmp_Codigo = ESTABELECIMENTO_LX.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_EstadoOrigem = ESTABELECIMENTO_LX.ISOPvCD_Origem AND
        PEDIDO.ISOPvPed_EstadoDestino = ESTABELECIMENTO_LX.ISOPvCD_Destino
	INNER JOIN CUSTO_FINANCEIRO ON
		ESTABELECIMENTO_LX.ISOEmp_Codigo = CUSTO_FINANCEIRO.ISOEmp_Codigo AND
		ESTABELECIMENTO_LX.ISOPvCD_Estabelecimento = CUSTO_FINANCEIRO.ISOPvEstab_Codigo AND
		PEDIDO.ISOEmp_Codigo = CUSTO_FINANCEIRO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Pagamento = CUSTO_FINANCEIRO.ISOPvTV_Codigo

	LEFT OUTER JOIN EMPENHO ON -- EMPENHO DO PEDIDO
		PEDIDO.ISOEmp_Codigo = EMPENHO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = EMPENHO.ISOCttPedCon_PedidoCodigo

	LEFT OUTER JOIN TOTAL_PEDIDO_EMPENHO ON -- EMPENHO DO PEDIDO
		PEDIDO.ISOEmp_Codigo = TOTAL_PEDIDO_EMPENHO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = TOTAL_PEDIDO_EMPENHO.ISOPvPed_Codigo

	LEFT OUTER JOIN TOTAL_PEDIDO ON -- VALOR TOTAL DO PEDIDO
		PEDIDO.ISOEmp_Codigo = TOTAL_PEDIDO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = TOTAL_PEDIDO.ISOPvPed_Codigo

	LEFT OUTER JOIN TABELA_CLIENTE ON -- TABELA DO CLIENTE
		PEDIDO.ISOEmp_Codigo = TABELA_CLIENTE.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_CliCodigo = TABELA_CLIENTE.ISOEntCli_Codigo
		AND TABELA_CLIENTE.ISOEntClienteAttId = 99
	LEFT OUTER JOIN ORIGEM_PROTHEUS ON -- PESQUISA CÓDIGO PROTHEUS DO CLIENTE
		PEDIDO.ISOEmp_Codigo = ORIGEM_PROTHEUS.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_CliCodigo = ORIGEM_PROTHEUS.ISOEmpEnt_EntCodigo AND
		ORIGEM_PROTHEUS.ISOEmpOri_Codigo = 13
	LEFT OUTER JOIN ORIGEM_LX ON  -- PESQUISA CÓDIGO LX DO CLIENTE
		PEDIDO.ISOEmp_Codigo = ORIGEM_LX.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_CliCodigo = ORIGEM_LX.ISOEmpEnt_EntCodigo AND
		ORIGEM_LX.ISOEmpOri_Codigo = 2
	LEFT OUTER JOIN CONDICAO_PAGAMENTO ON
		PEDIDO.ISOEmp_Codigo = CONDICAO_PAGAMENTO.ISOEmp_Codigo AND
		PEDIDO.ISOPeCndPgt_Codigo = CONDICAO_PAGAMENTO.ISOPeCndPgt_Codigo
	LEFT OUTER JOIN ANALISE_CREDITO ON  -- PESQUISA DA TAREFA DE LIBERAÇÃO DE CRÉDITO
		PEDIDO.ISOEmp_Codigo = ANALISE_CREDITO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = ANALISE_CREDITO.ISOPvPed_Codigo
	LEFT OUTER JOIN TIPO_FRETE ON -- INFORMACOES DE FRETE DO PEDIDO
		PEDIDO.ISOEmp_Codigo = TIPO_FRETE.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = TIPO_FRETE.ISOPvPed_Codigo
	LEFT OUTER JOIN TRANSPORTADORA ON -- INFORMACOES DA TRANSPORTADORA DO PEDIDO
		PEDIDO.ISOEmp_Codigo = TRANSPORTADORA.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = TRANSPORTADORA.ISOPvPed_Codigo
	LEFT OUTER JOIN	LINHA_PEDIDO_CLIENTE  ON  -- Observação do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = LINHA_PEDIDO_CLIENTE.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = LINHA_PEDIDO_CLIENTE.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = LINHA_PEDIDO_CLIENTE.ISOPvPedIte_Codigo

	LEFT OUTER JOIN	LINHA_ORDEM_COMPRA ON  -- Observação do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = LINHA_ORDEM_COMPRA.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = LINHA_ORDEM_COMPRA.ISOPvPed_Codigo AND
	    PEDIDO_ITEM.ISOPvPedIte_Codigo = LINHA_ORDEM_COMPRA.ITEM_PEDIDO

	LEFT OUTER JOIN	OC_DO_CLIENTE ON  -- Observação do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = OC_DO_CLIENTE.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = OC_DO_CLIENTE.ISOPvPed_Codigo AND
	    PEDIDO_ITEM.ISOPvPedIte_Codigo = OC_DO_CLIENTE.ISOPvPedIte_Codigo

	LEFT OUTER JOIN	LOTE1 ON  -- lote 1 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = LOTE1.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = LOTE1.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = LOTE1.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	QTD1 ON  -- qtde 1 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = QTD1.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = QTD1.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = QTD1.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	LOTE2 ON  -- lote 2 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = LOTE2.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = LOTE2.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = LOTE2.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	QTD2 ON  -- qtde 2 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = QTD2.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = QTD2.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = QTD2.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	LOTE3 ON  -- lote 3 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = LOTE3.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = LOTE3.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = LOTE3.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	QTD3 ON  -- qtde 3 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = QTD3.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = QTD3.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = QTD3.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	LOTE4 ON  -- lote 4 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = LOTE4.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = LOTE4.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = LOTE4.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	QTD4 ON  -- qtde 4 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = QTD4.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = QTD4.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = QTD4.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	LOTE5 ON  -- lote 5 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = LOTE5.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = LOTE5.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = LOTE5.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	QTD5 ON  -- qtde 5 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = QTD5.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = QTD5.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = QTD5.ISOPvPedIte_Codigo
	LEFT OUTER JOIN NATUREZA_OPERACAO ON
		PEDIDO.ISOEmp_Codigo = NATUREZA_OPERACAO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPedTip_Codigo = NATUREZA_OPERACAO.ISOPvPedTip_Codigo
	--LEFT OUTER JOIN MATRIZ_ICMS ON
	--	PEDIDO_ITEM.ISOEmp_Codigo = MATRIZ_ICMS.ISOEmp_Codigo AND
	--	PEDIDO_ITEM.ISOPvPed_Codigo = MATRIZ_ICMS.ISOPvPed_Codigo AND
	--	PEDIDO_ITEM.ISOPvPedIte_Codigo = MATRIZ_ICMS.ISOPvPedIte_Codigo
WHERE
	PEDIDO.ISOEmp_Codigo = 11 --AND
	--PEDIDO_ITEM.ISOPvPedIteSit_Codigo = 1
	--PEDIDO.ISOPvPed_Codigo = 8742706 and

	AND PEDIDO.ISOPvPedSit_Codigo in (1, 30)     --- ABERTO /  PEDIDO LIBERADO DE CREDITO

	--PEDIDO.ISOPvPed_Codigo between 8740390 and 8740890 -- pedidos indaial
	--PEDIDO.ISOPvPed_Codigo between 8664441 AND 8739451 AND -- pedidos do simulador;


-- dbo.MACROISOPvPedido_22062020 source

CREATE VIEW [dbo].[MACROISOPvPedido_22062020]
as
with
	PEDIDO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPed_CliCodigo,
			ISOPvPed_EstadoOrigem,
			ISOPvPed_EstadoDestino,
			ISOPvPed_CodigoAtendente,
			ISOPvPedSit_Codigo,
			ISOPvPedOri_Codigo,
			ISOPvPed_CodEndCobranca,
			ISOPvPed_ValorTotalPedido,
			ISOPeCndPgt_Codigo,
			ISOPvPed_ValorFrete,
			ISOPvPedTip_Codigo,
			ISOPvPed_Pagamento, -- Condição de pagamento
			ISOPVPed_OrdCompra,
			ISOPvPed_DtaSolEntrega,
			ISOPvPed_CodEndEntrega,
			ISOPvPed_DtaPedido,  -- Data do pedido
			ISOPvPed_HoraPedido -- Hora do pedido
		FROM ISOPVPEDIDO WITH (nOLOCK)
		WHERE
			ISOEmp_Codigo = 11
			),
	PEDIDO_ITEM AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			ISOPrd_Codigo,
			ISOPvPedIte_Quantidade,
			ISOPvPedIte_DtaSolEntrega,
			ISOPvPedIte_UnidadeOrigem,
			ISOPvPedIte_UnidadeDestino,
			ISOPvPedIte_ValorUnitario,
			ISOPvPedIteSit_Codigo,
			ISOPvPedIte_AgendamentoData,
			ISOPvPedIte_AgendamentoHoraIni,
			ISOPvPedIte_AgendamentoHoraFin,
			ISOPvPedIte_ValorEmpenho,
			ISOPvPedIte_PrecoLista,
			ISOPvPedIte_ValorIPI,
			ISOPvPedIte_VlrSubsTributaria,
			ISOPvPedIte_ValorICMS,
			ISOPvPedIte_ValorPIS,
			ISOPvPedIte_ValorCofins,
			ISOPVPedIte_ValorFCPST,
			ISOPvPedIte_ValorFCP,
			ISOPvPedIte_ValorTotalCalculoF,
			ISOPvPedIte_DataEntregaItem,
			ISOPvPedIte_PercentualIPI,
			ISOPvPedIte_PercSubsTributaria,
			ISOPvPedIte_PercentualFCPST
		FROM ISOPVPEDITEM WITH (nOLOCK)
		WHERE
			ISOEmp_Codigo = 11
			),
	TOTAL_LINHAS_PEDIDO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			COUNT(*) AS ISOPvPedIte_TotalLinhas
		FROM ISOPVPEDITEM WITH (nOLOCK)
		WHERE
			ISOEmp_Codigo = 11
			AND ISOPvPedIteSit_Codigo = 1
		GROUP BY
			ISOEmp_Codigo,
			ISOPvPed_Codigo),
	TOTAL_PEDIDO_EMPENHO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			SUM(ISOPvPedIte_Quantidade * ISOPvPedIte_ValorEmpenho) AS ISOPvPed_ValorTotalPedido
		FROM         ISOPVPEDITEM WITH (nOLOCK)
		WHERE     (ISOEmp_Codigo = 11) AND (ISOPvPedIteSit_Codigo = 1)
		GROUP BY ISOEmp_Codigo, ISOPvPed_Codigo),
	TOTAL_PEDIDO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			SUM(ISOPvPedIte_Quantidade * ISOPvPedIte_ValorUnitario) AS ISOPvPed_ValorTotalPedido
		FROM         ISOPVPEDITEM WITH (nOLOCK)
		WHERE     (ISOEmp_Codigo = 11) AND (ISOPvPedIteSit_Codigo = 1) --and ISOPvPed_Codigo >= 8741752
		GROUP BY ISOEmp_Codigo, ISOPvPed_Codigo),
	ATENDENTE_PEDIDO AS (
		SELECT
			ISOEnt_Codigo,
			ISOEnt_Nome
		FROM ISOENTIDADE WITH (nOLOCK)),
	FATOR_CONVERSAO_PRODUTO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPrdUndFatC_PrdCodigo,
			ISOPrdUndFatC_UndOrigem,
			ISOPrdUndFatC_UndDestino,
			ISOPrdUndFatC_FatorConversao,
			ISOPrdUndFatC_Flag,
			ISOPrdUndFatC_Armazem
		FROM ISOPRDUNDFATORCONVERSAO WITH (nOLOCK)),
	CLIENTE AS (
		SELECT
			ISOEmp_Codigo,
			ISOEntCli_Codigo,
			ISOEntCli_Operacao
		FROM ISOENTCLIENTE WITH (nOLOCK)),
	LOCAL_FATURAMENTO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvCD_Origem,
			ISOPvCD_Destino,
			ISOPvCDOri_Pedido,
			ISOPvCDOri_Armazem
		FROM ISOPVCDORIGEM WITH (nOLOCK)),
	EMPENHO AS (
		SELECT
			ISOEmp_Codigo,
			ISOCttPedCon_PedidoCodigo,
			ISOCttPedCon_NumeroEmp
		FROM ISOCTPEDCONTRATO WITH (nOLOCK)),
	TABELA_CLIENTE AS (
		SELECT
			ISOEmp_Codigo,
			ISOEntCli_Codigo,
			ISOEntClienteAttId,
			ISOEntClienteAttOtherValue
		FROM ISOENTCLIENTEATTVALUES WITH (nOLOCK)
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOEntClienteAttId = 99),
	ESTABELECIMENTO_LX AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvCD_Origem,
			ISOPvCD_Destino,
			ISOPvCD_Estabelecimento
		FROM ISOPVCD WITH (nOLOCK)),
	ORIGEM_PROTHEUS AS (
		SELECT
			ISOEmp_Codigo,
			ISOEmpEnt_EntCodigo,
			ISOEmpOri_Codigo,
			ISOEmpEnt_Ori_Codigo
		FROM ISOEMPENT_ORIGEM WITH (nOLOCK)
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOEmpOri_Codigo = 13),
	ORIGEM_LX AS (
		SELECT
			ISOEmp_Codigo,
			ISOEmpEnt_EntCodigo,
			ISOEmpOri_Codigo,
			ISOEmpEnt_Ori_Codigo
		FROM ISOEMPENT_ORIGEM WITH (nOLOCK)
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOEmpOri_Codigo = 2),
	CONDICAO_PAGAMENTO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPeCndPgt_Codigo,
			ISOPeCntPgt_Forma
		FROM ISOPECNDPAGAMENTO WITH (nOLOCK)),
	ANALISE_CREDITO AS (
		SELECT
			ISOWFTRF_PEDIDO.ISOEmp_Codigo,
			ISOWFTRF_PEDIDO.ISOPvPed_Codigo,
		    CASE WHEN ISOWFTrf_RspExe_RspCodigo IS NULL THEN '' ELSE CONVERT(VARCHAR(8), ISOWFTrf_DataSolucao, 112) END AS ISOWFTrf_DataLiberacaoCredito,  -- Data em que a tarefa de liberação de crédito foi executada
			CASE WHEN ISOWFTrf_RspExe_RspCodigo IS NULL THEN '' ELSE CONVERT(VARCHAR(8), ISOWFTrf_DataSolucao, 108) END AS ISOWFTrf_HoraLiberacaoCredito,
			CASE WHEN ISOWFTrf_RspExe_RspCodigo IS NULL THEN '' ELSE COALESCE(CAST(ISOWFTrf_RspExe_RspCodigo AS VARCHAR(10)),'')+'-'+COALESCE(USUARIO_CEDITO.ISOEnt_Nome,'') END AS ISOWFTrf_CodigoAtendente
		FROM ISOWFTRF_PEDIDO INNER JOIN ISOWFPROCEDIMENTO ON
			ISOWFTRF_PEDIDO.ISOEmp_Codigo = ISOWFPROCEDIMENTO.ISOEmp_Codigo AND
			ISOWFTRF_PEDIDO.ISOWFTrf_Ped_PrcCodigo = ISOWFPROCEDIMENTO.ISOWFPrc_Codigo AND
			ISOWFPROCEDIMENTO.ISOWFPrcPad_Codigo IN (324,327) AND -- PROCEDIMENTO ( PEDIDO - ANALISE DE CREDITO)
			ISOWFTRF_PEDIDO.ISOWFTrf_Ped_TrfCodigo = 1 --- CÓDIGO DA TAREFA QUE O ATENDENTE IRÁ CONFIRMAR O CRÉDITO DO CLIENTE ********
		INNER JOIN ISOWFTAREFA ON -- TAREFA DE LIBERAÇÃO DE CRÉDITO
			ISOWFTRF_PEDIDO.ISOEmp_Codigo = ISOWFTAREFA.ISOEmp_Codigo AND
			ISOWFTRF_PEDIDO.ISOWFTrf_Ped_PrcCodigo = ISOWFTAREFA.ISOWFPrc_Codigo AND
			ISOWFTRF_PEDIDO.ISOWFTrf_Ped_TrfCodigo = ISOWFTAREFA.ISOWFTrfPad_Codigo AND
			ISOWFTAREFA.ISOWFTrfPad_Codigo = 1 AND  -- TAREFA (ANALISAR PEDIDO RETIDO EM CREDITO)
			ISOWFTAREFA.ISOWFTrfPadSit_Codigo = 1  -- SITUACAO (PEDIDO APROVADO DE CREDITO)
		INNER JOIN ISOENTIDADE AS USUARIO_CEDITO ON -- USUÁRIO QUE LIBEROU O CRÉDITO DO CLIENTE
			ISOWFTAREFA.ISOWFTrf_RspExe_RspCodigo = USUARIO_CEDITO.ISOEnt_Codigo
		WHERE ISOWFTRF_PEDIDO.ISOEmp_Codigo = 11 AND
		ISOWFTRF_PEDIDO.ISOWFTrf_Ped_PrcCodigo = (SELECT MAX(X.ISOWFTrf_Ped_PrcCodigo) FROM ISOWFTRF_PEDIDO X WHERE ISOWFTRF_PEDIDO.ISOEmp_Codigo = X.ISOEmp_Codigo AND ISOWFTRF_PEDIDO.ISOPvPed_Codigo = X.ISOPvPed_Codigo)),
	TIPO_FRETE AS (
		SELECT 	DISTINCT
			ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOEmp_Codigo,
			ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOPvPed_Codigo,
			COALESCE(ISOPvPedidoAttOptValue,'') AS ISOPvPedidoTipoFrete
		FROM ISOPVPEDIDOATTVALUES AS ISOPVPEDIDOATTVALUES_TIPO_FRETE
		INNER JOIN ISOPVPEDIDOATTLEVEL1 ON
			ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOEmp_Codigo = ISOPVPEDIDOATTLEVEL1.ISOEmp_Codigo AND
			ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOPvPedidoAttId = ISOPVPEDIDOATTLEVEL1.ISOPvPedidoAttId AND
			ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOPvPedidoAttOptId = ISOPVPEDIDOATTLEVEL1.ISOPvPedidoAttOptId AND
			ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOPvPedidoAttId = 104 -- CÓDIGO DA PERGUNTA TIPO DO FRETE
		WHERE
			ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOEmp_Codigo = 11),
	TRANSPORTADORA AS (
		SELECT 	DISTINCT
			ISOPVPEDIDOATTVALUES_TRANSP.ISOEmp_Codigo,
			ISOPVPEDIDOATTVALUES_TRANSP.ISOPvPed_Codigo,
			COALESCE(ISOPvTrp_CodigoExterno,'') AS ISOPvPedido_CodigoTRP
		FROM ISOPVPEDIDOATTVALUES AS ISOPVPEDIDOATTVALUES_TRANSP
		INNER JOIN ISOPVTRANSPORTADORA ON
			ISOPVTRANSPORTADORA.ISOPvTrp_Codigo = ISOPVPEDIDOATTVALUES_TRANSP.ISOPvPedidoAttOptId AND
			ISOPVPEDIDOATTVALUES_TRANSP.ISOPvPedidoAttId = 105 AND -- CÓDIGO DA PERGUNTA TRANSPORTADORA
			ISOPVTRANSPORTADORA.ISOPvTrp_Flag = 'A'
		WHERE ISOPVPEDIDOATTVALUES_TRANSP.ISOEmp_Codigo = 11),
	--OBSERVACAO_ITEM_PEDIDO AS (
	--	SELECT
	--		ISOEmp_Codigo,
	--		ISOPvPed_Codigo,
	--		ISOPvPedIte_Codigo,
	--		ISOPvPedItemAttValue
	--	FROM ISOPVPEDITEMATTVALUES WITH (nOLOCK)
	--	WHERE
	--		ISOEmp_Codigo = 11 AND
	--		ISOPvPedItemAttId = 2),
	OC_DO_CLIENTE AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (nOLOCK)
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 2),
	LINHA_PEDIDO_CLIENTE AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (nOLOCK)
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 18),
	LINHA_ORDEM_COMPRA AS (
		SELECT ISOPVPEDITEM.ISOEmp_Codigo, ISOPVPEDITEM.ISOPVPED_CODIGO, ITEM_PEDIDO, ITEM_CLIENTE
			FROM ISOPVPEDITEM LEFT OUTER JOIN (
			SELECT
				ISOEMP_CODIGO,
				ISOPVPED_CODIGO,
				CASE
					WHEN CHARINDEX('-',VALOR,1) > 1
					THEN SUBSTRING(VALOR,1,CHARINDEX('-',VALOR,1)-1)
					ELSE 0
				END AS ITEM_PEDIDO,
				SUBSTRING(VALOR,CHARINDEX('-',VALOR,1)+1,3) AS ITEM_CLIENTE
			FROM ISOPVPEDIDOATTVALUES CROSS APPLY DBO.SPLIT(ISOPVPEDIDOATTVALUELONG,CHAR(10))
			WHERE ISOEMP_CODIGO = 11
			AND ISOPVPEDIDOATTID = 107
			AND CHARINDEX('-',VALOR,1) > 1
			AND VALOR <> '') DADO_COMPLEMENTAR_PEDIDO
				ON ISOPVPEDITEM.ISOEmp_Codigo = DADO_COMPLEMENTAR_PEDIDO.ISOEmp_Codigo AND
					ISOPVPEDITEM.ISOPvPed_Codigo = DADO_COMPLEMENTAR_PEDIDO.ISOPvPed_Codigo AND
					ISOPVPEDITEM.ISOPvPedIte_Codigo = DADO_COMPLEMENTAR_PEDIDO.ITEM_PEDIDO
			WHERE ISOPVPEDITEM.ISOEmp_Codigo = 11),
	LOTE1 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- lote 1 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 3),
	QTD1 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- qtde 1 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 4),
	LOTE2 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- lote 2 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 5),
	QTD2 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- qtde 2 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 6),
	LOTE3 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- lote 3 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 7),
	QTD3 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- qtde 3 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 8),
	LOTE4 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- lote 4 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 9),
	QTD4 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- qtde 4 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 10),
	LOTE5 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- lote 5 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 11),
	QTD5 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK)-- qtde 5 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 12),
	NATUREZA_OPERACAO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPedTip_Codigo,
			COALESCE(ISOPvPedTip_NaturezaOperacaoCo,'') AS ISOPvPedTip_NaturezaOperacaoCo
		FROM ISOPVPEDTIPO WITH (nOLOCK)
		WHERE
			ISOEmp_Codigo = 11),
	MATRIZ_ICMS AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_CliCodigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			ISOPrd_Codigo,
			ISOPvMatICMS_SubTribICMSDocFis,
			ISOPvMatICMS_AliquotaICMS
		FROM MacroConsultaMatrizICMS WITH (NOLOCK)
		WHERE
			ISOEmp_Codigo = 11)
SELECT
	PEDIDO.ISOEmp_Codigo, -- Código da empresa
	PEDIDO.ISOPvPed_Codigo, -- Código CRM do Pedido
	PEDIDO.ISOPvPed_CliCodigo, -- Código CRM do cliente
	PEDIDO.ISOPvPed_DtaPedido,  -- Data do pedido
	PEDIDO.ISOPvPed_HoraPedido, -- Hora do pedido
	CASE CONDICAO_PAGAMENTO.ISOPeCntPgt_Forma
		WHEN 'Bol' THEN 'BOLETO'
		WHEN 'Car' THEN 'CARTAO'
		WHEN 'Che' THEN 'CHEQUE'
		WHEN 'Dep' THEN 'DEPOSITO'
		WHEN 'Din' THEN 'Dinheiro'
	END AS ISOPeCntPgt_Forma, -- Forma de pagamento
	PEDIDO.ISOPvPed_Pagamento, -- Condição de pagamento
	PEDIDO.ISOPvPed_DtaSolEntrega,
	PEDIDO.ISOPvPed_CodEndEntrega,
	PEDIDO.ISOPvPedOri_Codigo,
	PEDIDO.ISOPvPedTip_Codigo,
	PEDIDO.ISOPvPed_CodEndCobranca,

	CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0 THEN TOTAL_PEDIDO_EMPENHO.ISOPvPed_ValorTotalPedido ELSE PEDIDO.ISOPvPed_ValorTotalPedido END AS ISOPvPed_ValorTotalPedido,

	PEDIDO_ITEM.ISOPvPedIte_Codigo, -- Sequencial do item do pedido
	PEDIDO_ITEM.ISOPrd_Codigo, -- Código do produto
	CASE
		WHEN ISNULL(NULLIF(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0),0) = 0
		THEN 0
		ELSE PEDIDO_ITEM.ISOPvPedIte_Quantidade
	END ISOPvPedIte_Quantidade,
	PEDIDO_ITEM.ISOPvPedIte_DataEntregaItem AS ISOPvPedIte_DataPromessa,
	PEDIDO_ITEM.ISOPvPedIte_DtaSolEntrega,
	PEDIDO_ITEM.ISOPvPedIte_UnidadeOrigem,
	PEDIDO_ITEM.ISOPvPedIte_UnidadeDestino,
	ROUND(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0) AS ISOPrdUndFatC_FatorConversao, -- Fator de conversão sem decimais
	ROUND(PEDIDO_ITEM.ISOPvPedIte_Quantidade * ROUND(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0),0) AS ISOPvPedIte_Qtd_UM_estoque,
	CASE
		WHEN ISNULL(NULLIF(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0),0) = 0
		THEN 0
		ELSE CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho >0 THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho ELSE ROUND(PEDIDO_ITEM.ISOPvPedIte_ValorUnitario,6) END
	END ISOPvPedIte_Vlr_Total_Unitario,

	CASE
		WHEN ISNULL(NULLIF(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0),0) = 0
		THEN 0
		ELSE CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0 THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho ELSE ROUND(PEDIDO_ITEM.ISOPvPedIte_ValorUnitario,6) END / NULLIF(ROUND(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0),0)
	END ISOPvPedIte_Vlr_Total_Unitario_EST,

	PEDIDO_ITEM.ISOPvPedIteSit_Codigo,
	PEDIDO_ITEM.ISOPvPedIte_AgendamentoData,
	PEDIDO_ITEM.ISOPvPedIte_AgendamentoHoraIni,
	PEDIDO_ITEM.ISOPvPedIte_AgendamentoHoraFin,
	PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,
	CASE
		WHEN COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) > 0
		THEN 0
		ELSE COALESCE(PEDIDO.ISOPvPed_ValorFrete,0)
	END AS ISOPvPed_ValorFrete,
	COALESCE(ORIGEM_PROTHEUS.ISOEmpEnt_Ori_Codigo,'') AS ISOEmpEnt_CliCod_ERP,
	ORIGEM_LX.ISOEmpEnt_Ori_Codigo AS ISOEmpEnt_Ori_LX,
	LOCAL_FATURAMENTO.ISOPvCDOri_Armazem AS ISOPvPedIte_Armazem,
	COALESCE(CLIENTE.ISOEntCli_Operacao,'') AS ISOEntCli_Operacao,
	ESTABELECIMENTO_LX.ISOPvCD_Estabelecimento AS ISOPvCD_Estabelecimento_LX,
	PEDIDO.ISOPvPed_CodigoAtendente AS ISOPvPed_CodigoAtendente, -- Código do atendente que criou o pedido
	ATENDENTE_PEDIDO.ISOEnt_Nome AS ISOEnt_NomeAtendente, -- Nome do atendente que criou o pedido

	/*
	'2020-05-13 00:00:00.000' AS ISOWFTrf_DataLiberacaoCredito, -- Data em que a tarefa de liberação de crédito foi executada
    '11:00:00' AS ISOWFTrf_HoraLiberacaoCredito,  -- Hora em que a tarefa de liberação de crédito foi executada
    975190 AS ISOWFTrf_CodigoAtendente, -- Responsável que executou a tarefa de liberação de crédito
	*/

	COALESCE(ANALISE_CREDITO.ISOWFTrf_DataLiberacaoCredito,'') AS ISOWFTrf_DataLiberacaoCredito, -- Data em que a tarefa de liberação de crédito foi executada
    COALESCE(ANALISE_CREDITO.ISOWFTrf_HoraLiberacaoCredito,'') AS ISOWFTrf_HoraLiberacaoCredito,  -- Hora em que a tarefa de liberação de crédito foi executada
    COALESCE(ANALISE_CREDITO.ISOWFTrf_CodigoAtendente,'') AS ISOWFTrf_CodigoAtendente, -- Responsável que executou a tarefa de liberação de crédito

	CASE
		WHEN PEDIDO.ISOPvPedOri_Codigo = 'EUR' THEN 3
		WHEN PEDIDO.ISOPvPedOri_Codigo = 'EU1' THEN 3
		WHEN PEDIDO.ISOPvPedOri_Codigo = 'USD' THEN 2
		WHEN PEDIDO.ISOPvPedOri_Codigo = 'US1' THEN 2
		ELSE 1
	END AS ISOMoe_Codigo,

	COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorIPI,0) AS ISOPvPedIte_ValorIPI,
	COALESCE(PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria,0) AS ISOPvPedIte_VlrSubsTrib,
	COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorICMS,0) AS ISOPvPedIte_ValorICMS,
	COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorPIS,0) AS ISOPvPedIte_ValorPIS,
	COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorCofins,0) AS ISOPvPedIte_ValorCofins,
	COALESCE(PEDIDO_ITEM.ISOPVPedIte_ValorFCPST,0) AS ISOPVPedIte_ValorFCPST,
	COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorFCP,0) AS ISOPvPedIte_ValorFCP,
	COALESCE(TRANSPORTADORA.ISOPvPedido_CodigoTRP,'') AS ISOPvPedido_CodigoTRP,
	COALESCE(TIPO_FRETE.ISOPvPedidoTipoFrete,'') AS ISOPvPedidoTipoFrete,
	COALESCE(TABELA_CLIENTE.ISOEntClienteAttOtherValue,'') AS ISOEmpEnt_Tabela_Preco,
	PEDIDO_ITEM.ISOPvPedIte_PrecoLista,
	COALESCE(PEDIDO.ISOPVPed_OrdCompra,'') AS ISOPVPed_OrdCompra,

	CASE
		WHEN LINHA_ORDEM_COMPRA.ITEM_CLIENTE <> ''
		THEN COALESCE(PEDIDO.ISOPVPed_OrdCompra,'')
		ELSE
			CASE
				WHEN COALESCE(RTRIM(LTRIM(SUBSTRING(OC_DO_CLIENTE.ISOPvPedItemAttValue,1,15))),'') <> ''
				THEN COALESCE(RTRIM(LTRIM(SUBSTRING(OC_DO_CLIENTE.ISOPvPedItemAttValue,1,15))),'')
				ELSE COALESCE(PEDIDO.ISOPVPed_OrdCompra,'')
			END
	END AS ISOPvPedIte_NrOrdemCompra,

	COALESCE(LINHA_PEDIDO_CLIENTE.ISOPvPedItemAttValue,LINHA_ORDEM_COMPRA.ITEM_CLIENTE,'') AS ISOPvPedIte_LinhaOrdemCompra,

	COALESCE(RTRIM(LTRIM(SUBSTRING(LOTE1.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_Lote1,
	COALESCE(RTRIM(LTRIM(SUBSTRING(QTD1.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_QtdeLote1,
	COALESCE(RTRIM(LTRIM(SUBSTRING(LOTE2.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_Lote2,
	COALESCE(RTRIM(LTRIM(SUBSTRING(QTD2.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_QtdeLote2,
	COALESCE(RTRIM(LTRIM(SUBSTRING(LOTE3.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_Lote3,
	COALESCE(RTRIM(LTRIM(SUBSTRING(QTD3.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_QtdeLote3,
	COALESCE(RTRIM(LTRIM(SUBSTRING(LOTE4.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_Lote4,
	COALESCE(RTRIM(LTRIM(SUBSTRING(QTD4.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_QtdeLote4,
	COALESCE(RTRIM(LTRIM(SUBSTRING(LOTE5.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_Lote5,
	COALESCE(RTRIM(LTRIM(SUBSTRING(QTD5.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_QtdeLote5,
	COALESCE(NATUREZA_OPERACAO.ISOPvPedTip_NaturezaOperacaoCo,'') AS ISOPvPed_Operacao,

	/*
	Inativado por devergência de valores com protheus 13/05/20 (Edilon,Leticia)
	(PEDIDO_ITEM.ISOPvPedIte_ValorTotalCalculoF - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade)) AS ISOPvPedIte_PrecoCMLIntegracaoBO,
	((PEDIDO_ITEM.ISOPvPedIte_ValorTotalCalculoF - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade)) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao) AS ISOPvPedIte_PrecoUNESTIntegracaoBO,
	*/

/*
	CASE
		WHEN MATRIZ_ICMS.ISOPvMatICMS_SubTribICMSDocFis = 1
		THEN ROUND((PEDIDO_ITEM.ISOPvPedIte_ValorUnitario - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade)),6)
		ELSE ROUND((CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0 THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho ELSE PEDIDO_ITEM.ISOPvPedIte_ValorUnitario END - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade) - (PEDIDO_ITEM.ISOPvPedIte_ValorIPI / PEDIDO_ITEM.ISOPvPedIte_Quantidade)),6)
	END AS ISOPvPedIte_PrecoCMLIntegracaoBO,

	CASE
		WHEN MATRIZ_ICMS.ISOPvMatICMS_SubTribICMSDocFis = 1
		THEN ROUND(((PEDIDO_ITEM.ISOPvPedIte_ValorTotalCalculoF - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade)) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao),6)
		ELSE ROUND(((CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0 THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho ELSE PEDIDO_ITEM.ISOPvPedIte_ValorUnitario END - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade) - (PEDIDO_ITEM.ISOPvPedIte_ValorIPI / PEDIDO_ITEM.ISOPvPedIte_Quantidade)) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao),6)
	END AS ISOPvPedIte_PrecoUNESTIntegracaoBO,
*/
	CASE
		WHEN COALESCE(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0) = 0
			THEN 0
		ELSE
		CASE
			-- cliente TEM desoneração e o pedido é empenho
			WHEN MATRIZ_ICMS.ISOPvMatICMS_SubTribICMSDocFis = 1 AND COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) > 0
				THEN ROUND(((((PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho / (1 - (MATRIZ_ICMS.ISOPvMatICMS_AliquotaICMS/100)) / (1 + (PEDIDO_ITEM.ISOPvPedIte_PercentualIPI / 100)))))),6)
			-- cliente TEM desoneração e o pedido NÃO é empenho
			WHEN MATRIZ_ICMS.ISOPvMatICMS_SubTribICMSDocFis = 1 AND COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) = 0
				THEN ROUND(((PEDIDO_ITEM.ISOPvPedIte_ValorTotalCalculoF - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade)) ),6)
			--ELSE ROUND((CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0 THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho ELSE PEDIDO_ITEM.ISOPvPedIte_ValorUnitario END - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade) - (PEDIDO_ITEM.ISOPvPedIte_ValorIPI / PEDIDO_ITEM.ISOPvPedIte_Quantidade)),6)
			-- cliente SEM desoneração
			ELSE ROUND((CASE
							WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0
								THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho / (1 + ((PEDIDO_ITEM.ISOPvPedIte_PercSubsTributaria + PEDIDO_ITEM.ISOPvPedIte_PercentualFCPST)/100.0) ) / ((1+(PEDIDO_ITEM.ISOPvPedIte_PercentualIPI/100.0)) )
							--inativado pois não considerava o rateio do frete
							--ELSE (PEDIDO_ITEM.ISOPvPedIte_ValorUnitario - ((PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade) + PEDIDO_ITEM.ISOPVPedIte_ValorFCPST) - (PEDIDO_ITEM.ISOPvPedIte_ValorIPI / PEDIDO_ITEM.ISOPvPedIte_Quantidade))
							ELSE ((((PEDIDO_ITEM.ISOPvPedIte_ValorUnitario * PEDIDO_ITEM.ISOPvPedIte_Quantidade) - (((PEDIDO_ITEM.ISOPvPedIte_ValorUnitario * PEDIDO_ITEM.ISOPvPedIte_Quantidade) / TOTAL_PEDIDO.ISOPvPed_ValorTotalPedido) * PEDIDO.ISOPvPed_ValorFrete)) / PEDIDO_ITEM.ISOPvPedIte_Quantidade) - ((PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade) + PEDIDO_ITEM.ISOPVPedIte_ValorFCPST) - (PEDIDO_ITEM.ISOPvPedIte_ValorIPI / PEDIDO_ITEM.ISOPvPedIte_Quantidade))
						END ) ,6)
		END
	END AS ISOPvPedIte_PrecoCMLIntegracaoBO,

	case
		when pedido.ISOPvPed_Codigo = 8742686 and PEDIDO_ITEM.ISOPrd_Codigo = '411485' then 5.255833
		when pedido.ISOPvPed_Codigo = 8742686 and PEDIDO_ITEM.ISOPrd_Codigo = '411195' then 4.621667
		when pedido.ISOPvPed_Codigo = 8742681 and PEDIDO_ITEM.ISOPrd_Codigo = '411485' then 5.255833
		when pedido.ISOPvPed_Codigo = 8742684 and PEDIDO_ITEM.ISOPrd_Codigo = '411195' then 4.621667
		when pedido.ISOPvPed_Codigo = 8742689 and PEDIDO_ITEM.ISOPrd_Codigo = '162462' then 12.48
		when pedido.ISOPvPed_Codigo = 8742689 and PEDIDO_ITEM.ISOPrd_Codigo = '619768' then 11.93
		else
	CASE
		WHEN COALESCE(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0) = 0
			THEN 0
		ELSE
		CASE
			-- cliente TEM desoneração e o pedido é empenho
			WHEN MATRIZ_ICMS.ISOPvMatICMS_SubTribICMSDocFis = 1 AND COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) > 0
				THEN ROUND(((((PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho / (1 - (MATRIZ_ICMS.ISOPvMatICMS_AliquotaICMS/100)) / (1 + (PEDIDO_ITEM.ISOPvPedIte_PercentualIPI / 100))))) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao),6)
			-- cliente TEM desoneração e o pedido NÃO é empenho
			WHEN MATRIZ_ICMS.ISOPvMatICMS_SubTribICMSDocFis = 1 AND COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) = 0
				THEN ROUND(((PEDIDO_ITEM.ISOPvPedIte_ValorTotalCalculoF - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade)) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao),6)
			-- desativado 28/05/2020 pois utilizando valor dos impostos os valores não fechavam ELSE ROUND(((CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0 THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho ELSE PEDIDO_ITEM.ISOPvPedIte_ValorUnitario END - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade) - (PEDIDO_ITEM.ISOPvPedIte_ValorIPI / PEDIDO_ITEM.ISOPvPedIte_Quantidade)) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao),6)
			-- cliente SEM desoneração
			ELSE ROUND(((CASE
							WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0
								THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho / (1 + ((PEDIDO_ITEM.ISOPvPedIte_PercSubsTributaria + PEDIDO_ITEM.ISOPvPedIte_PercentualFCPST)/100.0) ) / ((1+(PEDIDO_ITEM.ISOPvPedIte_PercentualIPI/100.0)) )
							--inativado pois não considerava o rateio do frete
							--ELSE (PEDIDO_ITEM.ISOPvPedIte_ValorUnitario - ((PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade) + PEDIDO_ITEM.ISOPVPedIte_ValorFCPST) - (PEDIDO_ITEM.ISOPvPedIte_ValorIPI / PEDIDO_ITEM.ISOPvPedIte_Quantidade))
							ELSE ((((PEDIDO_ITEM.ISOPvPedIte_ValorUnitario * PEDIDO_ITEM.ISOPvPedIte_Quantidade) - (((PEDIDO_ITEM.ISOPvPedIte_ValorUnitario * PEDIDO_ITEM.ISOPvPedIte_Quantidade) / TOTAL_PEDIDO.ISOPvPed_ValorTotalPedido) * PEDIDO.ISOPvPed_ValorFrete)) / PEDIDO_ITEM.ISOPvPedIte_Quantidade) - ((PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade) + PEDIDO_ITEM.ISOPVPedIte_ValorFCPST) - (PEDIDO_ITEM.ISOPvPedIte_ValorIPI / PEDIDO_ITEM.ISOPvPedIte_Quantidade))
						END ) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao),6)
		END
	END end AS ISOPvPedIte_PrecoUNESTIntegracaoBO,

	COALESCE(EMPENHO.ISOCttPedCon_NumeroEmp,'') AS ISOPvPedido_NumeroEmpenho,
	TOTAL_LINHAS_PEDIDO.ISOPvPedIte_TotalLinhas

	-- INICIO SIMULACAO DE PREÇOS
	--(1 + (PEDIDO_ITEM.ISOPvPedIte_PercentualIPI / 100)) IPI,
	--(1 - (MATRIZ_ICMS.ISOPvMatICMS_AliquotaICMS/100)) ICMS,
	--PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho EMPENHO,
	--PEDIDO_ITEM.ISOPvPedIte_Quantidade QUANTIDADE,
	--FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao FATOR,
	--ROUND(ROUND(ROUND((PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho  / (1 - (MATRIZ_ICMS.ISOPvMatICMS_AliquotaICMS/100))) / (1 + (PEDIDO_ITEM.ISOPvPedIte_PercentualIPI / 100)) * PEDIDO_ITEM.ISOPvPedIte_Quantidade,2) * (1 + (PEDIDO_ITEM.ISOPvPedIte_PercentualIPI/100)),2) * (1 - (MATRIZ_ICMS.ISOPvMatICMS_AliquotaICMS/100)),2) SIMULACAO_PROTHEUS,
	--CASE
	--	WHEN MATRIZ_ICMS.ISOPvMatICMS_SubTribICMSDocFis = 1 AND COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) > 0
	--		THEN ROUND(((((PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho / (1 - (MATRIZ_ICMS.ISOPvMatICMS_AliquotaICMS/100)) / (1 + (PEDIDO_ITEM.ISOPvPedIte_PercentualIPI / 100))))) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao),6)
	--	WHEN MATRIZ_ICMS.ISOPvMatICMS_SubTribICMSDocFis = 1 AND COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) = 0
	--		THEN ROUND(((PEDIDO_ITEM.ISOPvPedIte_ValorTotalCalculoF - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade)) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao),6)
	--	ELSE ROUND(((CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0 THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho ELSE PEDIDO_ITEM.ISOPvPedIte_ValorUnitario END - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade) - (PEDIDO_ITEM.ISOPvPedIte_ValorIPI / PEDIDO_ITEM.ISOPvPedIte_Quantidade)) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao),6)
	--END * PEDIDO_ITEM.ISOPvPedIte_Quantidade AS SIMULADO_ISO,
	--PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho *	PEDIDO_ITEM.ISOPvPedIte_Quantidade RESULTADO_ISO
	-- TÉRMINO SIMULACAO DE PREÇOS
FROM
	PEDIDO -- CABECALHO DO PEDIDO
	INNER JOIN PEDIDO_ITEM ON -- ITEM DO PEDIDO
		PEDIDO.ISOEmp_Codigo = PEDIDO_ITEM.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = PEDIDO_ITEM.ISOPvPed_Codigo
	INNER JOIN TOTAL_LINHAS_PEDIDO ON -- TOTAL DE LINHAS DO PEDIDO
		PEDIDO.ISOEmp_Codigo = TOTAL_LINHAS_PEDIDO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = TOTAL_LINHAS_PEDIDO.ISOPvPed_Codigo
	INNER JOIN ATENDENTE_PEDIDO ON  -- ATENDENTE QUE CRIOU O PEDIDO
		PEDIDO.ISOPvPed_CodigoAtendente = ATENDENTE_PEDIDO.ISOEnt_Codigo
	INNER JOIN FATOR_CONVERSAO_PRODUTO ON -- UNIDADES DE MEDIDA DO ITEM DO PEDIDO
		PEDIDO_ITEM.ISOEmp_Codigo = FATOR_CONVERSAO_PRODUTO.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPrd_Codigo = FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_PrdCodigo AND
		PEDIDO_ITEM.ISOPvPedIte_UnidadeOrigem = FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_UndOrigem AND
		PEDIDO_ITEM.ISOPvPedIte_UnidadeDestino = FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_UndDestino AND
		FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_Flag = 'A' AND
		FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_Armazem = ''
	INNER JOIN CLIENTE ON -- INFORMAÇÕES DO CLIENTE
		PEDIDO.ISOEmp_Codigo = CLIENTE.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_CliCodigo = CLIENTE.ISOEntCli_Codigo
    INNER JOIN LOCAL_FATURAMENTO ON
		PEDIDO.ISOEmp_Codigo = LOCAL_FATURAMENTO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_EstadoOrigem = LOCAL_FATURAMENTO.ISOPvCD_Origem AND
        PEDIDO.ISOPvPed_EstadoDestino = LOCAL_FATURAMENTO.ISOPvCD_Destino AND
        PEDIDO.ISOPvPedOri_Codigo = LOCAL_FATURAMENTO.ISOPvCDOri_Pedido
	LEFT OUTER JOIN EMPENHO ON -- EMPENHO DO PEDIDO
		PEDIDO.ISOEmp_Codigo = EMPENHO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = EMPENHO.ISOCttPedCon_PedidoCodigo

	LEFT OUTER JOIN TOTAL_PEDIDO_EMPENHO ON -- EMPENHO DO PEDIDO
		PEDIDO.ISOEmp_Codigo = TOTAL_PEDIDO_EMPENHO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = TOTAL_PEDIDO_EMPENHO.ISOPvPed_Codigo

	LEFT OUTER JOIN TOTAL_PEDIDO ON -- VALOR TOTAL DO PEDIDO
		PEDIDO.ISOEmp_Codigo = TOTAL_PEDIDO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = TOTAL_PEDIDO.ISOPvPed_Codigo

	LEFT OUTER JOIN TABELA_CLIENTE ON -- TABELA DO CLIENTE
		PEDIDO.ISOEmp_Codigo = TABELA_CLIENTE.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_CliCodigo = TABELA_CLIENTE.ISOEntCli_Codigo
		AND TABELA_CLIENTE.ISOEntClienteAttId = 99
	LEFT OUTER JOIN ESTABELECIMENTO_LX ON -- ESTABELECIMENTO DO PEDIDO
		PEDIDO.ISOEmp_Codigo = ESTABELECIMENTO_LX.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_EstadoOrigem = ESTABELECIMENTO_LX.ISOPvCD_Origem AND
        PEDIDO.ISOPvPed_EstadoDestino = ESTABELECIMENTO_LX.ISOPvCD_Destino
	LEFT OUTER JOIN ORIGEM_PROTHEUS ON -- PESQUISA CÓDIGO PROTHEUS DO CLIENTE
		PEDIDO.ISOEmp_Codigo = ORIGEM_PROTHEUS.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_CliCodigo = ORIGEM_PROTHEUS.ISOEmpEnt_EntCodigo AND
		ORIGEM_PROTHEUS.ISOEmpOri_Codigo = 13
	LEFT OUTER JOIN ORIGEM_LX ON  -- PESQUISA CÓDIGO LX DO CLIENTE
		PEDIDO.ISOEmp_Codigo = ORIGEM_LX.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_CliCodigo = ORIGEM_LX.ISOEmpEnt_EntCodigo AND
		ORIGEM_LX.ISOEmpOri_Codigo = 2
	LEFT OUTER JOIN CONDICAO_PAGAMENTO ON
		PEDIDO.ISOEmp_Codigo = CONDICAO_PAGAMENTO.ISOEmp_Codigo AND
		PEDIDO.ISOPeCndPgt_Codigo = CONDICAO_PAGAMENTO.ISOPeCndPgt_Codigo
	LEFT OUTER JOIN ANALISE_CREDITO ON  -- PESQUISA DA TAREFA DE LIBERAÇÃO DE CRÉDITO
		PEDIDO.ISOEmp_Codigo = ANALISE_CREDITO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = ANALISE_CREDITO.ISOPvPed_Codigo
	LEFT OUTER JOIN TIPO_FRETE ON -- INFORMACOES DE FRETE DO PEDIDO
		PEDIDO.ISOEmp_Codigo = TIPO_FRETE.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = TIPO_FRETE.ISOPvPed_Codigo
	LEFT OUTER JOIN TRANSPORTADORA ON -- INFORMACOES DA TRANSPORTADORA DO PEDIDO
		PEDIDO.ISOEmp_Codigo = TRANSPORTADORA.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = TRANSPORTADORA.ISOPvPed_Codigo
	LEFT OUTER JOIN	LINHA_PEDIDO_CLIENTE  ON  -- Observação do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = LINHA_PEDIDO_CLIENTE.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = LINHA_PEDIDO_CLIENTE.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = LINHA_PEDIDO_CLIENTE.ISOPvPedIte_Codigo

	LEFT OUTER JOIN	LINHA_ORDEM_COMPRA ON  -- Observação do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = LINHA_ORDEM_COMPRA.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = LINHA_ORDEM_COMPRA.ISOPvPed_Codigo AND
	    PEDIDO_ITEM.ISOPvPedIte_Codigo = LINHA_ORDEM_COMPRA.ITEM_PEDIDO

	LEFT OUTER JOIN	OC_DO_CLIENTE ON  -- Observação do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = OC_DO_CLIENTE.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = OC_DO_CLIENTE.ISOPvPed_Codigo AND
	    PEDIDO_ITEM.ISOPvPedIte_Codigo = OC_DO_CLIENTE.ISOPvPedIte_Codigo

	LEFT OUTER JOIN	LOTE1 ON  -- lote 1 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = LOTE1.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = LOTE1.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = LOTE1.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	QTD1 ON  -- qtde 1 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = QTD1.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = QTD1.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = QTD1.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	LOTE2 ON  -- lote 2 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = LOTE2.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = LOTE2.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = LOTE2.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	QTD2 ON  -- qtde 2 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = QTD2.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = QTD2.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = QTD2.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	LOTE3 ON  -- lote 3 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = LOTE3.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = LOTE3.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = LOTE3.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	QTD3 ON  -- qtde 3 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = QTD3.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = QTD3.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = QTD3.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	LOTE4 ON  -- lote 4 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = LOTE4.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = LOTE4.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = LOTE4.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	QTD4 ON  -- qtde 4 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = QTD4.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = QTD4.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = QTD4.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	LOTE5 ON  -- lote 5 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = LOTE5.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = LOTE5.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = LOTE5.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	QTD5 ON  -- qtde 5 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = QTD5.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = QTD5.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = QTD5.ISOPvPedIte_Codigo
	LEFT OUTER JOIN NATUREZA_OPERACAO ON
		PEDIDO.ISOEmp_Codigo = NATUREZA_OPERACAO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPedTip_Codigo = NATUREZA_OPERACAO.ISOPvPedTip_Codigo
	LEFT OUTER JOIN MATRIZ_ICMS ON
		PEDIDO_ITEM.ISOEmp_Codigo = MATRIZ_ICMS.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = MATRIZ_ICMS.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = MATRIZ_ICMS.ISOPvPedIte_Codigo
WHERE
	PEDIDO.ISOEmp_Codigo = 11 AND
	PEDIDO_ITEM.ISOPvPedIteSit_Codigo = 1 AND
	--PEDIDO.ISOPvPed_Codigo = 8742706 and
	PEDIDO.ISOPvPedSit_Codigo in (1, 32)  AND
	--PEDIDO.ISOPvPed_Codigo between 8740390 and 8740890 -- pedidos indaial
	--PEDIDO.ISOPvPed_Codigo between 8664441 AND 8739451 AND -- pedidos do simulador
	(
		-- ANALISE DE CREDITO / INATIVIDADE DO CLIENTE / TITULOS EM ABERTO
		PEDIDO.ISOPvPed_Codigo NOT IN (select isopvped_codigo from [MACRO_ANALISE_CREDITO] where ISOEmp_Codigo = 11 and ISOPvPedSit_Codigo = 1)
		--PEDIDO.ISOPvPed_Codigo NOT IN (SELECT ISOPvPed_Codigo FROM GATILHO_C21_ANALISE_LIMITE_CREDITO WHERE ISOEmp_Codigo = 11 AND  ((LIMITE_CREDITO - TOTAL_CONTAS_RECEBER - PED_EM_ABERTO) < TOTAL_PEDIDO) OR (DATEDIFF(DD,DATA_ULTIMA_COMPRA,GETDATE()) > 60) OR (DATEDIFF(DD,DATA_TITULO,GETDATE()) > 1))
		--OR
		-- ANALISE PRAZO MEDIO
		--PEDIDO.ISOPvPed_Codigo NOT IN (SELECT ISOPvPed_Codigo FROM GATILHO_C22_ANALISE_PRAZO_MEDIO_CLIENTE WITH (NOLOCK) WHERE (1=1) AND PRAZO_MEDIO_CP > PRAZO_MEDIO_CLIENTE)
	)


/*
SELECT * FROM MACROISOPvPedido2

SELECT * FROM MACROISOPvPedido

*/;


-- dbo.MACROISOPvPedido_23072020 source

CREATE VIEW [dbo].[MACROISOPvPedido_23072020]
as
with
	PEDIDO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPed_CliCodigo,
			ISOPvPed_EstadoOrigem,
			ISOPvPed_EstadoDestino,
			ISOPvPed_CodigoAtendente,
			ISOPvPedSit_Codigo,
			ISOPvPedOri_Codigo,
			ISOPvPed_CodEndCobranca,
			ISOPvPed_ValorTotalPedido,
			ISOPeCndPgt_Codigo,
			ISOPvPed_ValorFrete,
			ISOPvPedTip_Codigo,
			ISOPvPed_Pagamento, -- Condição de pagamento
			ISOPVPed_OrdCompra,
			ISOPvPed_DtaSolEntrega,
			ISOPvPed_CodEndEntrega,
			ISOPvPed_DtaPedido,  -- Data do pedido
			ISOPvPed_HoraPedido -- Hora do pedido
		FROM ISOPVPEDIDO WITH (nOLOCK)
		WHERE
			ISOEmp_Codigo = 11
			AND ISOPvPedSit_Codigo in (1, 30)
			--and ISOPvPedSit_Codigo = 999
			-- PROCESSADOS MONICA -- 7777729, 7777641,7777620,7777548,7777545,7777675,7777880,7777694,7777536,7777741,7777477,7777462,7777605,7777509
			-- processados joice -- 7777496,7777613,7777462,7777477,7777630,7777607,7777644,7777633,7777627,7777626,7777605,7777509, 7777641,7777620,7777548,7777545,7777675,7777880,7777694,7777536,7777741
			-- processados angelica -- 7777579,7777584,7777472,7777632,7777469,7777490,7777499,7777507,7777519
			-- processados industrial -- 7777395,7777397,7777435,7777435,7777436,7777438,7777440,7777441,7777522,7777533,7777574,7777628,7777835, 7777775, 7777771, 7777769
			-- processados licitacao -- 7777836,7777845,7777845,
			-- processados tancredo -- 7777759
			-- processados janaina -- 7777701,7774651,7777520,7776454,7776456,7776457,7776452,7776453,
			-- processados akorel -- 7777572,7777591,7777631
			--AND ISOPvPed_Codigo IN (7780213)
			--(joice)
			--7777486,7777497,7777579,7777584 (angelica)
			-- (ronise)
			-- (tancredo)
			-- (adriane)
			--(suporte industrial)
			-- (janaina)
			-- (monica)
			),
	PEDIDO_ITEM AS (
		SELECT
			ISOPVPEDITEM.ISOEmp_Codigo,
			ISOPVPEDITEM.ISOPvPed_Codigo,
			ISOPVPEDITEM.ISOPvPedIte_Codigo,
			ISOPVPEDITEM.ISOPrd_Codigo,
			ISOPVPEDITEM.ISOPvPedIte_Quantidade,
			ISOPVPEDITEM.ISOPvPedIte_DtaSolEntrega,
			ISOPVPEDITEM.ISOPvPedIte_UnidadeOrigem,
			ISOPVPEDITEM.ISOPvPedIte_UnidadeDestino,
			ISOPVPEDITEM.ISOPvPedIte_ValorUnitario,
			ISOPVPEDITEM.ISOPvPedIteSit_Codigo,
			ISOPVPEDITEM.ISOPvPedIte_AgendamentoData,
			ISOPVPEDITEM.ISOPvPedIte_AgendamentoHoraIni,
			ISOPVPEDITEM.ISOPvPedIte_AgendamentoHoraFin,
			ISOPVPEDITEM.ISOPvPedIte_ValorEmpenho,
			ISOPVPEDITEM.ISOPvPedIte_PrecoLista,
			ISOPVPEDITEM.ISOPvPedIte_ValorIPI,
			ISOPVPEDITEM.ISOPvPedIte_VlrSubsTributaria,
			ISOPVPEDITEM.ISOPvPedIte_ValorICMS,
			ISOPVPEDITEM.ISOPvPedIte_ValorPIS,
			ISOPVPEDITEM.ISOPvPedIte_ValorCofins,
			ISOPVPEDITEM.ISOPVPedIte_ValorFCPST,
			ISOPVPEDITEM.ISOPvPedIte_ValorFCP,
			ISOPVPEDITEM.ISOPvPedIte_ValorTotalCalculoF,
			ISOPVPEDITEM.ISOPvPedIte_DataEntregaItem,
			ISOPVPEDITEM.ISOPvPedIte_PercentualIPI,
			ISOPVPEDITEM.ISOPvPedIte_PercSubsTributaria,
			ISOPVPEDITEM.ISOPvPedIte_PercentualFCPST,
			ISOPVPEDITEM.ISOPvPedIte_PrecoAjustado,
			ISOPVPEDITEM.ISOPvPedIte_PrecoAjustadoTotal
		FROM ISOPVPEDITEM INNER JOIN ISOPVPEDIDO
			ON ISOPVPEDIDO.ISOEmp_Codigo = ISOPVPEDITEM.ISOEmp_Codigo
			AND ISOPVPEDIDO.ISOPvPed_Codigo = ISOPVPEDITEM.ISOPvPed_Codigo
			AND ISOPVPEDIDO.ISOPvPedSit_Codigo in (1, 30)
		WHERE
			ISOPVPEDITEM.ISOEmp_Codigo = 11
			),
	TOTAL_LINHAS_PEDIDO AS (
		SELECT
			ISOPVPEDITEM.ISOEmp_Codigo,
			ISOPVPEDITEM.ISOPvPed_Codigo,
			COUNT(*) AS ISOPvPedIte_TotalLinhas
		FROM ISOPVPEDITEM INNER JOIN ISOPVPEDIDO
			ON ISOPVPEDIDO.ISOEmp_Codigo = ISOPVPEDITEM.ISOEmp_Codigo
			AND ISOPVPEDIDO.ISOPvPed_Codigo = ISOPVPEDITEM.ISOPvPed_Codigo
			AND ISOPVPEDIDO.ISOPvPedSit_Codigo in (1, 30)
		WHERE
			ISOPVPEDITEM.ISOEmp_Codigo = 11
			AND ISOPVPEDITEM.ISOPvPedIteSit_Codigo = 1
		GROUP BY
			ISOPVPEDITEM.ISOEmp_Codigo,
			ISOPVPEDITEM.ISOPvPed_Codigo),
	TOTAL_PEDIDO_EMPENHO AS (
		SELECT
			ISOPVPEDITEM.ISOEmp_Codigo,
			ISOPVPEDITEM.ISOPvPed_Codigo,
			SUM(ISOPVPEDITEM.ISOPvPedIte_Quantidade * ISOPVPEDITEM.ISOPvPedIte_ValorEmpenho) AS ISOPvPed_ValorTotalPedido
		FROM         ISOPVPEDITEM INNER JOIN ISOPVPEDIDO
			ON ISOPVPEDIDO.ISOEmp_Codigo = ISOPVPEDITEM.ISOEmp_Codigo
			AND ISOPVPEDIDO.ISOPvPed_Codigo = ISOPVPEDITEM.ISOPvPed_Codigo
			AND ISOPVPEDIDO.ISOPvPedSit_Codigo in (1, 30)
		WHERE     (ISOPVPEDITEM.ISOEmp_Codigo = 11) AND (ISOPVPEDITEM.ISOPvPedIteSit_Codigo = 1)
		GROUP BY ISOPVPEDITEM.ISOEmp_Codigo, ISOPVPEDITEM.ISOPvPed_Codigo),
	TOTAL_PEDIDO AS (
		SELECT
			ISOPVPEDITEM.ISOEmp_Codigo,
			ISOPVPEDITEM.ISOPvPed_Codigo,
			SUM(ISOPVPEDITEM.ISOPvPedIte_Quantidade * ISOPVPEDITEM.ISOPvPedIte_PrecoAjustado) AS ISOPvPed_ValorTotalPedido
		FROM         ISOPVPEDITEM INNER JOIN ISOPVPEDIDO
			ON ISOPVPEDIDO.ISOEmp_Codigo = ISOPVPEDITEM.ISOEmp_Codigo
			AND ISOPVPEDIDO.ISOPvPed_Codigo = ISOPVPEDITEM.ISOPvPed_Codigo
			AND ISOPVPEDIDO.ISOPvPedSit_Codigo in (1, 30)
		WHERE     (ISOPVPEDITEM.ISOEmp_Codigo = 11) AND (ISOPVPEDITEM.ISOPvPedIteSit_Codigo = 1) --and ISOPvPed_Codigo >= 8741752
		GROUP BY ISOPVPEDITEM.ISOEmp_Codigo, ISOPVPEDITEM.ISOPvPed_Codigo),
	ATENDENTE_PEDIDO AS (
		SELECT
			ISOEnt_Codigo,
			ISOEnt_Nome
		FROM ISOENTIDADE INNER JOIN ISOENTUSUARIO
			ON ISOENTIDADE.ISOEnt_Codigo = ISOENTUSUARIO.ISOEntUsu_Codigo),
	FATOR_CONVERSAO_PRODUTO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPrdUndFatC_PrdCodigo,
			ISOPrdUndFatC_UndOrigem,
			ISOPrdUndFatC_UndDestino,
			-- criado regra de divisão quando a unidade de medida for "M"  --  22/07/2020 zagoto,edilon,cris
			case
				when ISOPrdUndFatC_UndDestino = 'M' then 1 / ISOPrdUndFatC_FatorConversao
				else ISOPrdUndFatC_FatorConversao
			end ISOPrdUndFatC_FatorConversao,
			ISOPrdUndFatC_Flag,
			ISOPrdUndFatC_Armazem
		FROM ISOPRDUNDFATORCONVERSAO WITH (NOLOCK)),
	CLIENTE AS (
		SELECT
			ISOENTCLIENTE.ISOEmp_Codigo,
			ISOENTCLIENTE.ISOEntCli_Codigo,
			ISOENTCLIENTE.ISOEntCli_Operacao
		FROM ISOENTCLIENTE INNER JOIN ISOPVPEDIDO
			ON ISOENTCLIENTE.ISOEmp_Codigo = ISOPVPEDIDO.ISOEmp_Codigo
				AND ISOENTCLIENTE.ISOEntCli_Codigo = ISOPVPEDIDO.ISOPvPed_CliCodigo
				AND ISOPVPEDIDO.ISOEmp_Codigo= 11
				AND ISOPVPEDIDO.ISOPvPedSit_Codigo in (1, 30)),
	LOCAL_FATURAMENTO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvCD_Origem,
			ISOPvCD_Destino,
			ISOPvCDOri_Pedido,
			ISOPvCDOri_Armazem
		FROM ISOPVCDORIGEM WITH (nOLOCK)),
	EMPENHO AS (
		SELECT
			ISOEmp_Codigo,
			ISOCttPedCon_PedidoCodigo,
			ISOCttPedCon_NumeroEmp
		FROM ISOCTPEDCONTRATO WITH (nOLOCK)),
	TABELA_CLIENTE AS (
		SELECT
			ISOENTCLIENTEATTVALUES.ISOEmp_Codigo,
			ISOENTCLIENTEATTVALUES.ISOEntCli_Codigo,
			ISOENTCLIENTEATTVALUES.ISOEntClienteAttId,
			ISOENTCLIENTEATTVALUES.ISOEntClienteAttOtherValue
		FROM ISOENTCLIENTEATTVALUES INNER JOIN ISOPVPEDIDO
			ON ISOENTCLIENTEATTVALUES.ISOEmp_Codigo = ISOPVPEDIDO.ISOEmp_Codigo
				AND ISOENTCLIENTEATTVALUES.ISOEntCli_Codigo = ISOPVPEDIDO.ISOPvPed_CliCodigo
				AND ISOPVPEDIDO.ISOEmp_Codigo= 11
				AND ISOPVPEDIDO.ISOPvPedSit_Codigo in (1, 30)
		WHERE
			ISOENTCLIENTEATTVALUES.ISOEmp_Codigo = 11 AND
			ISOENTCLIENTEATTVALUES.ISOEntClienteAttId = 99),
	ESTABELECIMENTO_LX AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvCD_Origem,
			ISOPvCD_Destino,
			ISOPvCD_Estabelecimento
		FROM ISOPVCD WITH (nOLOCK)),
	ORIGEM_PROTHEUS AS (
		SELECT
			ISOEmp_Codigo,
			ISOEmpEnt_EntCodigo,
			ISOEmpOri_Codigo,
			ISOEmpEnt_Ori_Codigo
		FROM ISOEMPENT_ORIGEM WITH (nOLOCK)
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOEmpOri_Codigo = 13),
	ORIGEM_LX AS (
		SELECT
			ISOEMPENT_ORIGEM.ISOEmp_Codigo,
			ISOEMPENT_ORIGEM.ISOEmpEnt_EntCodigo,
			ISOEMPENT_ORIGEM.ISOEmpOri_Codigo,
			ISOEMPENT_ORIGEM.ISOEmpEnt_Ori_Codigo
		FROM ISOEMPENT_ORIGEM INNER JOIN ISOPVPEDIDO
			ON ISOEMPENT_ORIGEM.ISOEmp_Codigo = ISOPVPEDIDO.ISOEmp_Codigo
				AND ISOEMPENT_ORIGEM.ISOEmpEnt_EntCodigo = ISOPVPEDIDO.ISOPvPed_CliCodigo
				AND ISOPVPEDIDO.ISOEmp_Codigo= 11
				AND ISOPVPEDIDO.ISOPvPedSit_Codigo in (1, 30)
		WHERE
			ISOEMPENT_ORIGEM.ISOEmp_Codigo = 11 AND
			ISOEMPENT_ORIGEM.ISOEmpOri_Codigo = 2),
	CONDICAO_PAGAMENTO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPeCndPgt_Codigo,
			ISOPeCntPgt_Forma
		FROM ISOPECNDPAGAMENTO WITH (nOLOCK)),
	CUSTO_FINANCEIRO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvTV_Codigo,
			ISOPvEstab_Codigo,
			ISOPvEstabTbV_PercDespFinancei
		FROM ISOPvEstab_TblVenda
		WHERE
			ISOEMP_CODIGO = 11
	),
	ANALISE_CREDITO AS (
		SELECT
			ISOWFTRF_PEDIDO.ISOEmp_Codigo,
			ISOWFTRF_PEDIDO.ISOPvPed_Codigo,
		    CASE WHEN ISOWFTrf_RspExe_RspCodigo IS NULL THEN '' ELSE CONVERT(VARCHAR(8), ISOWFTrf_DataSolucao, 112) END AS ISOWFTrf_DataLiberacaoCredito,  -- Data em que a tarefa de liberação de crédito foi executada
			CASE WHEN ISOWFTrf_RspExe_RspCodigo IS NULL THEN '' ELSE CONVERT(VARCHAR(8), ISOWFTrf_DataSolucao, 108) END AS ISOWFTrf_HoraLiberacaoCredito,
			CASE WHEN ISOWFTrf_RspExe_RspCodigo IS NULL THEN '' ELSE COALESCE(CAST(ISOWFTrf_RspExe_RspCodigo AS VARCHAR(10)),'')+'-'+COALESCE(USUARIO_CEDITO.ISOEnt_Nome,'') END AS ISOWFTrf_CodigoAtendente
		FROM ISOWFTRF_PEDIDO INNER JOIN ISOWFPROCEDIMENTO ON
			ISOWFTRF_PEDIDO.ISOEmp_Codigo = ISOWFPROCEDIMENTO.ISOEmp_Codigo AND
			ISOWFTRF_PEDIDO.ISOWFTrf_Ped_PrcCodigo = ISOWFPROCEDIMENTO.ISOWFPrc_Codigo AND
			ISOWFPROCEDIMENTO.ISOWFPrcPad_Codigo IN (324,326) AND -- PROCEDIMENTO ( PEDIDO - ANALISE DE CREDITO)
			ISOWFTRF_PEDIDO.ISOWFTrf_Ped_TrfCodigo = 1 --- CÓDIGO DA TAREFA QUE O ATENDENTE IRÁ CONFIRMAR O CRÉDITO DO CLIENTE ********
		INNER JOIN ISOWFTAREFA ON -- TAREFA DE LIBERAÇÃO DE CRÉDITO
			ISOWFTRF_PEDIDO.ISOEmp_Codigo = ISOWFTAREFA.ISOEmp_Codigo AND
			ISOWFTRF_PEDIDO.ISOWFTrf_Ped_PrcCodigo = ISOWFTAREFA.ISOWFPrc_Codigo AND
			ISOWFTRF_PEDIDO.ISOWFTrf_Ped_TrfCodigo = ISOWFTAREFA.ISOWFTrfPad_Codigo AND
			ISOWFTAREFA.ISOWFTrfPad_Codigo = 1 AND  -- TAREFA (ANALISAR PEDIDO RETIDO EM CREDITO)
			ISOWFTAREFA.ISOWFTrfPadSit_Codigo = 1  -- SITUACAO (PEDIDO APROVADO DE CREDITO)
		INNER JOIN ISOENTIDADE AS USUARIO_CEDITO ON -- USUÁRIO QUE LIBEROU O CRÉDITO DO CLIENTE
			ISOWFTAREFA.ISOWFTrf_RspExe_RspCodigo = USUARIO_CEDITO.ISOEnt_Codigo
		WHERE ISOWFTRF_PEDIDO.ISOEmp_Codigo = 11 AND
		ISOWFTRF_PEDIDO.ISOWFTrf_Ped_PrcCodigo = (SELECT MAX(X.ISOWFTrf_Ped_PrcCodigo) FROM ISOWFTRF_PEDIDO X WHERE ISOWFTRF_PEDIDO.ISOEmp_Codigo = X.ISOEmp_Codigo AND ISOWFTRF_PEDIDO.ISOPvPed_Codigo = X.ISOPvPed_Codigo)),
	TIPO_FRETE AS (
		SELECT 	DISTINCT
			ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOEmp_Codigo,
			ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOPvPed_Codigo,
			COALESCE(ISOPvPedidoAttOptValue,'') AS ISOPvPedidoTipoFrete
		FROM ISOPVPEDIDOATTVALUES AS ISOPVPEDIDOATTVALUES_TIPO_FRETE
		INNER JOIN ISOPVPEDIDOATTLEVEL1 ON
			ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOEmp_Codigo = ISOPVPEDIDOATTLEVEL1.ISOEmp_Codigo AND
			ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOPvPedidoAttId = ISOPVPEDIDOATTLEVEL1.ISOPvPedidoAttId AND
			ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOPvPedidoAttOptId = ISOPVPEDIDOATTLEVEL1.ISOPvPedidoAttOptId AND
			ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOPvPedidoAttId = 104 -- CÓDIGO DA PERGUNTA TIPO DO FRETE
		WHERE
			ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOEmp_Codigo = 11),
	TRANSPORTADORA AS (
		SELECT 	DISTINCT
			ISOPVPEDIDOATTVALUES_TRANSP.ISOEmp_Codigo,
			ISOPVPEDIDOATTVALUES_TRANSP.ISOPvPed_Codigo,
			COALESCE(ISOPvTrp_CodigoExterno,'') AS ISOPvPedido_CodigoTRP
		FROM ISOPVPEDIDOATTVALUES AS ISOPVPEDIDOATTVALUES_TRANSP
		INNER JOIN ISOPVTRANSPORTADORA ON
			ISOPVTRANSPORTADORA.ISOPvTrp_Codigo = ISOPVPEDIDOATTVALUES_TRANSP.ISOPvPedidoAttOptId AND
			ISOPVPEDIDOATTVALUES_TRANSP.ISOPvPedidoAttId = 105 --AND -- CÓDIGO DA PERGUNTA TRANSPORTADORA
			--ISOPVTRANSPORTADORA.ISOPvTrp_Flag = 'A'
		WHERE ISOPVPEDIDOATTVALUES_TRANSP.ISOEmp_Codigo = 11),
	--OBSERVACAO_ITEM_PEDIDO AS (
	--	SELECT
	--		ISOEmp_Codigo,
	--		ISOPvPed_Codigo,
	--		ISOPvPedIte_Codigo,
	--		ISOPvPedItemAttValue
	--	FROM ISOPVPEDITEMATTVALUES WITH (nOLOCK)
	--	WHERE
	--		ISOEmp_Codigo = 11 AND
	--		ISOPvPedItemAttId = 2),
	OC_DO_CLIENTE AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (nOLOCK)
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 1),
	LINHA_PEDIDO_CLIENTE AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (nOLOCK)
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 2),
	LINHA_ORDEM_COMPRA AS (
		SELECT ISOPVPEDITEM.ISOEmp_Codigo, ISOPVPEDITEM.ISOPVPED_CODIGO, ITEM_PEDIDO, ITEM_CLIENTE
			FROM ISOPVPEDITEM LEFT OUTER JOIN (
			SELECT
				ISOEMP_CODIGO,
				ISOPVPED_CODIGO,
				CASE
					WHEN CHARINDEX('-',VALOR,1) > 1
					THEN SUBSTRING(VALOR,1,CHARINDEX('-',VALOR,1)-1)
					ELSE 0
				END AS ITEM_PEDIDO,
				SUBSTRING(VALOR,CHARINDEX('-',VALOR,1)+1,3) AS ITEM_CLIENTE
			FROM ISOPVPEDIDOATTVALUES CROSS APPLY DBO.SPLIT(ISOPVPEDIDOATTVALUELONG,CHAR(10))
			WHERE ISOEMP_CODIGO = 11
			AND ISOPVPEDIDOATTID = 106
			AND ISOPVPED_CODIGO IN (SELECT ISOPVPED_CODIGO FROM ISOPVPEDIDO WHERE ISOEMP_CODIGO = 11 AND ISOPVPEDSIT_CODIGO IN (1,30))
			AND CHARINDEX('-',VALOR,1) > 1
			AND VALOR <> '') DADO_COMPLEMENTAR_PEDIDO
				ON ISOPVPEDITEM.ISOEmp_Codigo = DADO_COMPLEMENTAR_PEDIDO.ISOEmp_Codigo AND
					ISOPVPEDITEM.ISOPvPed_Codigo = DADO_COMPLEMENTAR_PEDIDO.ISOPvPed_Codigo AND
					ISOPVPEDITEM.ISOPvPedIte_Codigo = DADO_COMPLEMENTAR_PEDIDO.ITEM_PEDIDO
			WHERE ISOPVPEDITEM.ISOEmp_Codigo = 11
			AND ISOPVPEDITEM.ISOPVPED_CODIGO IN (SELECT ISOPVPED_CODIGO FROM ISOPVPEDIDO WHERE ISOEMP_CODIGO = 11 AND ISOPVPEDSIT_CODIGO IN (1,30))),
	LOTE1 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- lote 1 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 4),
	QTD1 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- qtde 1 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 5),
	LOTE2 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- lote 2 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 6),
	QTD2 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- qtde 2 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 7),
	LOTE3 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- lote 3 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 8),
	QTD3 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- qtde 3 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 9),
	LOTE4 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- lote 4 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 10),
	QTD4 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- qtde 4 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 11),
	LOTE5 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- lote 5 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 12),
	QTD5 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK)-- qtde 5 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 13),
	NATUREZA_OPERACAO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPedTip_Codigo,
			COALESCE(ISOPvPedTip_NaturezaOperacaoCo,'') AS ISOPvPedTip_NaturezaOperacaoCo
		FROM ISOPVPEDTIPO WITH (nOLOCK)
		WHERE
			ISOEmp_Codigo = 11),
	MATRIZ_ICMS AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_CliCodigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			ISOPrd_Codigo,
			ISOPvMatICMS_SubTribICMSDocFis,
			ISOPvMatICMS_AliquotaICMS
		FROM MacroConsultaMatrizICMS WITH (NOLOCK)
		WHERE
			ISOEmp_Codigo = 11)
SELECT
	PEDIDO.ISOEmp_Codigo, -- Código da empresa
	PEDIDO.ISOPvPed_Codigo, -- Código CRM do Pedido
	PEDIDO.ISOPvPed_CliCodigo, -- Código CRM do cliente
	PEDIDO.ISOPvPed_DtaPedido,  -- Data do pedido
	PEDIDO.ISOPvPed_HoraPedido, -- Hora do pedido
	CASE CONDICAO_PAGAMENTO.ISOPeCntPgt_Forma
		WHEN 'Bol' THEN 'BOLETO'
		WHEN 'Car' THEN 'CARTAO'
		WHEN 'Che' THEN 'CHEQUE'
		WHEN 'Dep' THEN 'DEPOSITO'
		WHEN 'Din' THEN 'Dinheiro'
	END AS ISOPeCntPgt_Forma, -- Forma de pagamento
	PEDIDO.ISOPvPed_Pagamento, -- Condição de pagamento
	PEDIDO.ISOPvPed_DtaSolEntrega,
	PEDIDO.ISOPvPed_CodEndEntrega,
	PEDIDO.ISOPvPedOri_Codigo,
	PEDIDO.ISOPvPedTip_Codigo,
	PEDIDO.ISOPvPed_CodEndCobranca,

	CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0 THEN TOTAL_PEDIDO_EMPENHO.ISOPvPed_ValorTotalPedido ELSE PEDIDO.ISOPvPed_ValorTotalPedido END AS ISOPvPed_ValorTotalPedido,

	PEDIDO_ITEM.ISOPvPedIte_Codigo, -- Sequencial do item do pedido
	PEDIDO_ITEM.ISOPrd_Codigo, -- Código do produto
	CASE
		WHEN ISNULL(NULLIF(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0),0) = 0
		THEN 0
		ELSE PEDIDO_ITEM.ISOPvPedIte_Quantidade
	END ISOPvPedIte_Quantidade,
	PEDIDO_ITEM.ISOPvPedIte_DataEntregaItem AS ISOPvPedIte_DataPromessa,
	PEDIDO_ITEM.ISOPvPedIte_DtaSolEntrega,
	PEDIDO_ITEM.ISOPvPedIte_UnidadeOrigem,
	PEDIDO_ITEM.ISOPvPedIte_UnidadeDestino,
	ROUND(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,6) AS ISOPrdUndFatC_FatorConversao, -- Fator de conversão sem decimais
	ROUND(PEDIDO_ITEM.ISOPvPedIte_Quantidade * ROUND(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,6),0) AS ISOPvPedIte_Qtd_UM_estoque,
	CASE
		WHEN ISNULL(NULLIF(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0),0) = 0
		THEN 0
		--ELSE CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho >0 THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho ELSE ROUND(PEDIDO_ITEM.ISOPvPedIte_ValorUnitario,6) END
		ELSE CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho >0 THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho ELSE ROUND(PEDIDO_ITEM.ISOPvPedIte_PrecoAjustadoTotal / PEDIDO_ITEM.ISOPvPedIte_Quantidade,6) END
	END ISOPvPedIte_Vlr_Total_Unitario,

	CASE
		WHEN ISNULL(NULLIF(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0),0) = 0
		THEN 0
		--ELSE CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0 THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho ELSE ROUND(PEDIDO_ITEM.ISOPvPedIte_ValorUnitario,6) END / NULLIF(ROUND(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0),0)
		ELSE CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0 THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho ELSE ROUND(PEDIDO_ITEM.ISOPvPedIte_PrecoAjustadoTotal / PEDIDO_ITEM.ISOPvPedIte_Quantidade,6) END / NULLIF(ROUND(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,6),0)
	END ISOPvPedIte_Vlr_Total_Unitario_EST,

	PEDIDO_ITEM.ISOPvPedIteSit_Codigo,
	PEDIDO_ITEM.ISOPvPedIte_AgendamentoData,
	PEDIDO_ITEM.ISOPvPedIte_AgendamentoHoraIni,
	PEDIDO_ITEM.ISOPvPedIte_AgendamentoHoraFin,
	PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,
	CASE
		WHEN COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) > 0
		THEN 0
		ELSE COALESCE(PEDIDO.ISOPvPed_ValorFrete,0)
	END AS ISOPvPed_ValorFrete,
	COALESCE(ORIGEM_PROTHEUS.ISOEmpEnt_Ori_Codigo,'') AS ISOEmpEnt_CliCod_ERP,
	ORIGEM_LX.ISOEmpEnt_Ori_Codigo AS ISOEmpEnt_Ori_LX,
	LOCAL_FATURAMENTO.ISOPvCDOri_Armazem AS ISOPvPedIte_Armazem,
	COALESCE(CLIENTE.ISOEntCli_Operacao,'') AS ISOEntCli_Operacao,
	ESTABELECIMENTO_LX.ISOPvCD_Estabelecimento AS ISOPvCD_Estabelecimento_LX,
	PEDIDO.ISOPvPed_CodigoAtendente AS ISOPvPed_CodigoAtendente, -- Código do atendente que criou o pedido
	ATENDENTE_PEDIDO.ISOEnt_Nome AS ISOEnt_NomeAtendente, -- Nome do atendente que criou o pedido

	/*
	'2020-05-13 00:00:00.000' AS ISOWFTrf_DataLiberacaoCredito, -- Data em que a tarefa de liberação de crédito foi executada
    '11:00:00' AS ISOWFTrf_HoraLiberacaoCredito,  -- Hora em que a tarefa de liberação de crédito foi executada
    975190 AS ISOWFTrf_CodigoAtendente, -- Responsável que executou a tarefa de liberação de crédito
	*/

	COALESCE(ANALISE_CREDITO.ISOWFTrf_DataLiberacaoCredito,'') AS ISOWFTrf_DataLiberacaoCredito, -- Data em que a tarefa de liberação de crédito foi executada
    COALESCE(ANALISE_CREDITO.ISOWFTrf_HoraLiberacaoCredito,'') AS ISOWFTrf_HoraLiberacaoCredito,  -- Hora em que a tarefa de liberação de crédito foi executada
    COALESCE(ANALISE_CREDITO.ISOWFTrf_CodigoAtendente,'') AS ISOWFTrf_CodigoAtendente, -- Responsável que executou a tarefa de liberação de crédito

	CASE
		WHEN PEDIDO.ISOPvPedOri_Codigo = 'EUR' THEN 3
		WHEN PEDIDO.ISOPvPedOri_Codigo = 'EU1' THEN 3
		WHEN PEDIDO.ISOPvPedOri_Codigo = 'USD' THEN 2
		WHEN PEDIDO.ISOPvPedOri_Codigo = 'US1' THEN 2
		ELSE 1
	END AS ISOMoe_Codigo,

	COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorIPI,0) AS ISOPvPedIte_ValorIPI,
	COALESCE(PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria,0) AS ISOPvPedIte_VlrSubsTrib,
	COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorICMS,0) AS ISOPvPedIte_ValorICMS,
	COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorPIS,0) AS ISOPvPedIte_ValorPIS,
	COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorCofins,0) AS ISOPvPedIte_ValorCofins,
	COALESCE(PEDIDO_ITEM.ISOPVPedIte_ValorFCPST,0) AS ISOPVPedIte_ValorFCPST,
	COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorFCP,0) AS ISOPvPedIte_ValorFCP,
	COALESCE(TRANSPORTADORA.ISOPvPedido_CodigoTRP,'') AS ISOPvPedido_CodigoTRP,
	COALESCE(TIPO_FRETE.ISOPvPedidoTipoFrete,'') AS ISOPvPedidoTipoFrete,
	COALESCE(TABELA_CLIENTE.ISOEntClienteAttOtherValue,'') AS ISOEmpEnt_Tabela_Preco,
	PEDIDO_ITEM.ISOPvPedIte_PrecoLista,
	COALESCE(PEDIDO.ISOPVPed_OrdCompra,'') AS ISOPVPed_OrdCompra,

	CASE
		WHEN LINHA_ORDEM_COMPRA.ITEM_CLIENTE <> ''
		THEN COALESCE(PEDIDO.ISOPVPed_OrdCompra,'')
		ELSE
			CASE
				WHEN COALESCE(RTRIM(LTRIM(SUBSTRING(OC_DO_CLIENTE.ISOPvPedItemAttValue,1,15))),'') <> ''
				THEN COALESCE(RTRIM(LTRIM(SUBSTRING(OC_DO_CLIENTE.ISOPvPedItemAttValue,1,15))),'')
				ELSE COALESCE(PEDIDO.ISOPVPed_OrdCompra,'')
			END
	END AS ISOPvPedIte_NrOrdemCompra,

	COALESCE(LINHA_PEDIDO_CLIENTE.ISOPvPedItemAttValue,LINHA_ORDEM_COMPRA.ITEM_CLIENTE,'') AS ISOPvPedIte_LinhaOrdemCompra,

	COALESCE(RTRIM(LTRIM(SUBSTRING(LOTE1.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_Lote1,
	COALESCE(RTRIM(LTRIM(SUBSTRING(QTD1.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_QtdeLote1,
	COALESCE(RTRIM(LTRIM(SUBSTRING(LOTE2.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_Lote2,
	COALESCE(RTRIM(LTRIM(SUBSTRING(QTD2.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_QtdeLote2,
	COALESCE(RTRIM(LTRIM(SUBSTRING(LOTE3.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_Lote3,
	COALESCE(RTRIM(LTRIM(SUBSTRING(QTD3.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_QtdeLote3,
	COALESCE(RTRIM(LTRIM(SUBSTRING(LOTE4.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_Lote4,
	COALESCE(RTRIM(LTRIM(SUBSTRING(QTD4.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_QtdeLote4,
	COALESCE(RTRIM(LTRIM(SUBSTRING(LOTE5.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_Lote5,
	COALESCE(RTRIM(LTRIM(SUBSTRING(QTD5.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_QtdeLote5,
	COALESCE(NATUREZA_OPERACAO.ISOPvPedTip_NaturezaOperacaoCo,'') AS ISOPvPed_Operacao,

	/*
	Inativado por devergência de valores com protheus 13/05/20 (Edilon,Leticia)
	(PEDIDO_ITEM.ISOPvPedIte_ValorTotalCalculoF - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade)) AS ISOPvPedIte_PrecoCMLIntegracaoBO,
	((PEDIDO_ITEM.ISOPvPedIte_ValorTotalCalculoF - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade)) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao) AS ISOPvPedIte_PrecoUNESTIntegracaoBO,
	*/

/*
	CASE
		WHEN MATRIZ_ICMS.ISOPvMatICMS_SubTribICMSDocFis = 1
		THEN ROUND((PEDIDO_ITEM.ISOPvPedIte_ValorUnitario - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade)),6)
		ELSE ROUND((CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0 THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho ELSE PEDIDO_ITEM.ISOPvPedIte_ValorUnitario END - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade) - (PEDIDO_ITEM.ISOPvPedIte_ValorIPI / PEDIDO_ITEM.ISOPvPedIte_Quantidade)),6)
	END AS ISOPvPedIte_PrecoCMLIntegracaoBO,

	CASE
		WHEN MATRIZ_ICMS.ISOPvMatICMS_SubTribICMSDocFis = 1
		THEN ROUND(((PEDIDO_ITEM.ISOPvPedIte_ValorTotalCalculoF - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade)) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao),6)
		ELSE ROUND(((CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0 THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho ELSE PEDIDO_ITEM.ISOPvPedIte_ValorUnitario END - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade) - (PEDIDO_ITEM.ISOPvPedIte_ValorIPI / PEDIDO_ITEM.ISOPvPedIte_Quantidade)) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao),6)
	END AS ISOPvPedIte_PrecoUNESTIntegracaoBO,
*/
	CASE
		WHEN COALESCE(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0) = 0
			THEN 0
		ELSE
		CASE
			-- cliente TEM desoneração e o pedido é empenho
			WHEN MATRIZ_ICMS.ISOPvMatICMS_SubTribICMSDocFis = 1 AND COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) > 0
				THEN ROUND(((((PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho / (1 - (MATRIZ_ICMS.ISOPvMatICMS_AliquotaICMS/100)) / (1 + (PEDIDO_ITEM.ISOPvPedIte_PercentualIPI / 100)))))),6)
			-- cliente TEM desoneração e o pedido NÃO é empenho
			WHEN MATRIZ_ICMS.ISOPvMatICMS_SubTribICMSDocFis = 1 AND COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) = 0
				-- desativado 22/06/2020 para utilizar novo campo de preco ajustado do item --	THEN ROUND(((PEDIDO_ITEM.ISOPvPedIte_ValorTotalCalculoF - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade)) ),6)
				THEN ROUND(PEDIDO_ITEM.ISOPvPedIte_PrecoAjustado ,6)
			--ELSE ROUND((CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0 THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho ELSE PEDIDO_ITEM.ISOPvPedIte_ValorUnitario END - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade) - (PEDIDO_ITEM.ISOPvPedIte_ValorIPI / PEDIDO_ITEM.ISOPvPedIte_Quantidade)),6)
			-- cliente SEM desoneração
			ELSE ROUND((CASE
							WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0
								THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho / (1 + ((PEDIDO_ITEM.ISOPvPedIte_PercSubsTributaria + PEDIDO_ITEM.ISOPvPedIte_PercentualFCPST)/100.0) ) / ((1+(PEDIDO_ITEM.ISOPvPedIte_PercentualIPI/100.0)) )
							--inativado pois não considerava o rateio do frete
							--ELSE (PEDIDO_ITEM.ISOPvPedIte_ValorUnitario - ((PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade) + PEDIDO_ITEM.ISOPVPedIte_ValorFCPST) - (PEDIDO_ITEM.ISOPvPedIte_ValorIPI / PEDIDO_ITEM.ISOPvPedIte_Quantidade))
							-- desativado 22/06/2020 para utilizar novo campo de preco ajustado do item --	ELSE ((((PEDIDO_ITEM.ISOPvPedIte_ValorUnitario * PEDIDO_ITEM.ISOPvPedIte_Quantidade) - (((PEDIDO_ITEM.ISOPvPedIte_ValorUnitario * PEDIDO_ITEM.ISOPvPedIte_Quantidade) / TOTAL_PEDIDO.ISOPvPed_ValorTotalPedido) * PEDIDO.ISOPvPed_ValorFrete)) / PEDIDO_ITEM.ISOPvPedIte_Quantidade) - ((PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade) + PEDIDO_ITEM.ISOPVPedIte_ValorFCPST) - (PEDIDO_ITEM.ISOPvPedIte_ValorIPI / PEDIDO_ITEM.ISOPvPedIte_Quantidade))
							ELSE PEDIDO_ITEM.ISOPvPedIte_PrecoAjustado -- desativado 16/07/2020 o valor já está na unidade comercial * PEDIDO_ITEM.ISOPvPedIte_Quantidade -- desativado 09/07/2020 pois o preco ajustado já está sem o frete ((((PEDIDO_ITEM.ISOPvPedIte_PrecoAjustado * PEDIDO_ITEM.ISOPvPedIte_Quantidade) - (((PEDIDO_ITEM.ISOPvPedIte_ValorUnitario * PEDIDO_ITEM.ISOPvPedIte_Quantidade) / TOTAL_PEDIDO.ISOPvPed_ValorTotalPedido) * PEDIDO.ISOPvPed_ValorFrete)) / PEDIDO_ITEM.ISOPvPedIte_Quantidade) )
						END )  / (1 + (ISOPvEstabTbV_PercDespFinancei / 100.00) ),6)
		END
	END AS ISOPvPedIte_PrecoCMLIntegracaoBO,

	ROUND (
	CASE
		WHEN COALESCE(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0) = 0
			THEN 0
		ELSE
		CASE
			-- cliente TEM desoneração e o pedido é empenho
			WHEN MATRIZ_ICMS.ISOPvMatICMS_SubTribICMSDocFis = 1 AND COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) > 0
				THEN ROUND(((((PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho / (1 - (MATRIZ_ICMS.ISOPvMatICMS_AliquotaICMS/100)) / (1 + (PEDIDO_ITEM.ISOPvPedIte_PercentualIPI / 100))))) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao),6)
			-- cliente TEM desoneração e o pedido NÃO é empenho
			WHEN MATRIZ_ICMS.ISOPvMatICMS_SubTribICMSDocFis = 1 AND COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) = 0
			-- desativado 22/06/2020 para utilizar novo campo de preco ajustado do item --	THEN ROUND(((PEDIDO_ITEM.ISOPvPedIte_ValorTotalCalculoF - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade)) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao),6)
				THEN ROUND((PEDIDO_ITEM.ISOPvPedIte_PrecoAjustado / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao),6)
			-- desativado 28/05/2020 pois utilizando valor dos impostos os valores não fechavam ELSE ROUND(((CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0 THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho ELSE PEDIDO_ITEM.ISOPvPedIte_ValorUnitario END - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade) - (PEDIDO_ITEM.ISOPvPedIte_ValorIPI / PEDIDO_ITEM.ISOPvPedIte_Quantidade)) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao),6)
			-- cliente SEM desoneração
			ELSE ROUND((CASE
							WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0
								THEN COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) / (1 + ((PEDIDO_ITEM.ISOPvPedIte_PercSubsTributaria + PEDIDO_ITEM.ISOPvPedIte_PercentualFCPST)/100.0) ) / ((1+(PEDIDO_ITEM.ISOPvPedIte_PercentualIPI/100.0)) )
							--inativado pois não considerava o rateio do frete
							--ELSE (PEDIDO_ITEM.ISOPvPedIte_ValorUnitario - ((PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade) + PEDIDO_ITEM.ISOPVPedIte_ValorFCPST) - (PEDIDO_ITEM.ISOPvPedIte_ValorIPI / PEDIDO_ITEM.ISOPvPedIte_Quantidade))
							-- desativado 22/06/2020 para utilizar novo campo de preco ajustado do item --	ELSE ((((PEDIDO_ITEM.ISOPvPedIte_ValorUnitario * PEDIDO_ITEM.ISOPvPedIte_Quantidade) - (((PEDIDO_ITEM.ISOPvPedIte_ValorUnitario * PEDIDO_ITEM.ISOPvPedIte_Quantidade) / TOTAL_PEDIDO.ISOPvPed_ValorTotalPedido) * PEDIDO.ISOPvPed_ValorFrete)) / PEDIDO_ITEM.ISOPvPedIte_Quantidade) - ((PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade) + PEDIDO_ITEM.ISOPVPedIte_ValorFCPST) - (PEDIDO_ITEM.ISOPvPedIte_ValorIPI / PEDIDO_ITEM.ISOPvPedIte_Quantidade))
							ELSE PEDIDO_ITEM.ISOPvPedIte_PrecoAjustado ---  desativado 09/07/2020 pois o preco ajustado já está sem o frete ((PEDIDO_ITEM.ISOPvPedIte_PrecoAjustado) - ((((PEDIDO_ITEM.ISOPvPedIte_PrecoAjustado * PEDIDO_ITEM.ISOPvPedIte_Quantidade) / TOTAL_PEDIDO.ISOPvPed_ValorTotalPedido) * PEDIDO.ISOPvPed_ValorFrete) / PEDIDO_ITEM.ISOPvPedIte_Quantidade))
						END ) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,6)
		END
	END / (1 + (ISOPvEstabTbV_PercDespFinancei / 100.00) ), 6) AS ISOPvPedIte_PrecoUNESTIntegracaoBO,

	COALESCE(EMPENHO.ISOCttPedCon_NumeroEmp,'') AS ISOPvPedido_NumeroEmpenho,
	TOTAL_LINHAS_PEDIDO.ISOPvPedIte_TotalLinhas

	-- INICIO SIMULACAO DE PREÇOS
	--(1 + (PEDIDO_ITEM.ISOPvPedIte_PercentualIPI / 100)) IPI,
	--(1 - (MATRIZ_ICMS.ISOPvMatICMS_AliquotaICMS/100)) ICMS,
	--PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho EMPENHO,
	--PEDIDO_ITEM.ISOPvPedIte_Quantidade QUANTIDADE,
	--FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao FATOR,
	--ROUND(ROUND(ROUND((PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho  / (1 - (MATRIZ_ICMS.ISOPvMatICMS_AliquotaICMS/100))) / (1 + (PEDIDO_ITEM.ISOPvPedIte_PercentualIPI / 100)) * PEDIDO_ITEM.ISOPvPedIte_Quantidade,2) * (1 + (PEDIDO_ITEM.ISOPvPedIte_PercentualIPI/100)),2) * (1 - (MATRIZ_ICMS.ISOPvMatICMS_AliquotaICMS/100)),2) SIMULACAO_PROTHEUS,
	--CASE
	--	WHEN MATRIZ_ICMS.ISOPvMatICMS_SubTribICMSDocFis = 1 AND COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) > 0
	--		THEN ROUND(((((PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho / (1 - (MATRIZ_ICMS.ISOPvMatICMS_AliquotaICMS/100)) / (1 + (PEDIDO_ITEM.ISOPvPedIte_PercentualIPI / 100))))) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao),6)
	--	WHEN MATRIZ_ICMS.ISOPvMatICMS_SubTribICMSDocFis = 1 AND COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) = 0
	--		THEN ROUND(((PEDIDO_ITEM.ISOPvPedIte_ValorTotalCalculoF - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade)) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao),6)
	--	ELSE ROUND(((CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0 THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho ELSE PEDIDO_ITEM.ISOPvPedIte_ValorUnitario END - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade) - (PEDIDO_ITEM.ISOPvPedIte_ValorIPI / PEDIDO_ITEM.ISOPvPedIte_Quantidade)) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao),6)
	--END * PEDIDO_ITEM.ISOPvPedIte_Quantidade AS SIMULADO_ISO,
	--PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho *	PEDIDO_ITEM.ISOPvPedIte_Quantidade RESULTADO_ISO
	-- TÉRMINO SIMULACAO DE PREÇOS
FROM
	PEDIDO -- CABECALHO DO PEDIDO
	INNER JOIN PEDIDO_ITEM ON -- ITEM DO PEDIDO
		PEDIDO.ISOEmp_Codigo = PEDIDO_ITEM.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = PEDIDO_ITEM.ISOPvPed_Codigo
	INNER JOIN TOTAL_LINHAS_PEDIDO ON -- TOTAL DE LINHAS DO PEDIDO
		PEDIDO.ISOEmp_Codigo = TOTAL_LINHAS_PEDIDO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = TOTAL_LINHAS_PEDIDO.ISOPvPed_Codigo
	INNER JOIN ATENDENTE_PEDIDO ON  -- ATENDENTE QUE CRIOU O PEDIDO
		PEDIDO.ISOPvPed_CodigoAtendente = ATENDENTE_PEDIDO.ISOEnt_Codigo
	INNER JOIN FATOR_CONVERSAO_PRODUTO ON -- UNIDADES DE MEDIDA DO ITEM DO PEDIDO
		PEDIDO_ITEM.ISOEmp_Codigo = FATOR_CONVERSAO_PRODUTO.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPrd_Codigo = FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_PrdCodigo AND
		PEDIDO_ITEM.ISOPvPedIte_UnidadeOrigem = FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_UndOrigem AND
		PEDIDO_ITEM.ISOPvPedIte_UnidadeDestino = FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_UndDestino AND
		FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_Flag = 'A' AND
		FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_Armazem = ''
	INNER JOIN CLIENTE ON -- INFORMAÇÕES DO CLIENTE
		PEDIDO.ISOEmp_Codigo = CLIENTE.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_CliCodigo = CLIENTE.ISOEntCli_Codigo
    INNER JOIN LOCAL_FATURAMENTO ON
		PEDIDO.ISOEmp_Codigo = LOCAL_FATURAMENTO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_EstadoOrigem = LOCAL_FATURAMENTO.ISOPvCD_Origem AND
        PEDIDO.ISOPvPed_EstadoDestino = LOCAL_FATURAMENTO.ISOPvCD_Destino AND
        PEDIDO.ISOPvPedOri_Codigo = LOCAL_FATURAMENTO.ISOPvCDOri_Pedido
	INNER JOIN ESTABELECIMENTO_LX ON -- ESTABELECIMENTO DO PEDIDO
		PEDIDO.ISOEmp_Codigo = ESTABELECIMENTO_LX.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_EstadoOrigem = ESTABELECIMENTO_LX.ISOPvCD_Origem AND
        PEDIDO.ISOPvPed_EstadoDestino = ESTABELECIMENTO_LX.ISOPvCD_Destino
	INNER JOIN CUSTO_FINANCEIRO ON
		ESTABELECIMENTO_LX.ISOEmp_Codigo = CUSTO_FINANCEIRO.ISOEmp_Codigo AND
		ESTABELECIMENTO_LX.ISOPvCD_Estabelecimento = CUSTO_FINANCEIRO.ISOPvEstab_Codigo AND
		PEDIDO.ISOEmp_Codigo = CUSTO_FINANCEIRO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Pagamento = CUSTO_FINANCEIRO.ISOPvTV_Codigo

	LEFT OUTER JOIN EMPENHO ON -- EMPENHO DO PEDIDO
		PEDIDO.ISOEmp_Codigo = EMPENHO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = EMPENHO.ISOCttPedCon_PedidoCodigo

	LEFT OUTER JOIN TOTAL_PEDIDO_EMPENHO ON -- EMPENHO DO PEDIDO
		PEDIDO.ISOEmp_Codigo = TOTAL_PEDIDO_EMPENHO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = TOTAL_PEDIDO_EMPENHO.ISOPvPed_Codigo

	LEFT OUTER JOIN TOTAL_PEDIDO ON -- VALOR TOTAL DO PEDIDO
		PEDIDO.ISOEmp_Codigo = TOTAL_PEDIDO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = TOTAL_PEDIDO.ISOPvPed_Codigo

	LEFT OUTER JOIN TABELA_CLIENTE ON -- TABELA DO CLIENTE
		PEDIDO.ISOEmp_Codigo = TABELA_CLIENTE.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_CliCodigo = TABELA_CLIENTE.ISOEntCli_Codigo
		AND TABELA_CLIENTE.ISOEntClienteAttId = 99
	LEFT OUTER JOIN ORIGEM_PROTHEUS ON -- PESQUISA CÓDIGO PROTHEUS DO CLIENTE
		PEDIDO.ISOEmp_Codigo = ORIGEM_PROTHEUS.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_CliCodigo = ORIGEM_PROTHEUS.ISOEmpEnt_EntCodigo AND
		ORIGEM_PROTHEUS.ISOEmpOri_Codigo = 13
	LEFT OUTER JOIN ORIGEM_LX ON  -- PESQUISA CÓDIGO LX DO CLIENTE
		PEDIDO.ISOEmp_Codigo = ORIGEM_LX.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_CliCodigo = ORIGEM_LX.ISOEmpEnt_EntCodigo AND
		ORIGEM_LX.ISOEmpOri_Codigo = 2
	LEFT OUTER JOIN CONDICAO_PAGAMENTO ON
		PEDIDO.ISOEmp_Codigo = CONDICAO_PAGAMENTO.ISOEmp_Codigo AND
		PEDIDO.ISOPeCndPgt_Codigo = CONDICAO_PAGAMENTO.ISOPeCndPgt_Codigo
	LEFT OUTER JOIN ANALISE_CREDITO ON  -- PESQUISA DA TAREFA DE LIBERAÇÃO DE CRÉDITO
		PEDIDO.ISOEmp_Codigo = ANALISE_CREDITO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = ANALISE_CREDITO.ISOPvPed_Codigo
	LEFT OUTER JOIN TIPO_FRETE ON -- INFORMACOES DE FRETE DO PEDIDO
		PEDIDO.ISOEmp_Codigo = TIPO_FRETE.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = TIPO_FRETE.ISOPvPed_Codigo
	LEFT OUTER JOIN TRANSPORTADORA ON -- INFORMACOES DA TRANSPORTADORA DO PEDIDO
		PEDIDO.ISOEmp_Codigo = TRANSPORTADORA.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = TRANSPORTADORA.ISOPvPed_Codigo
	LEFT OUTER JOIN	LINHA_PEDIDO_CLIENTE  ON  -- Observação do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = LINHA_PEDIDO_CLIENTE.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = LINHA_PEDIDO_CLIENTE.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = LINHA_PEDIDO_CLIENTE.ISOPvPedIte_Codigo

	LEFT OUTER JOIN	LINHA_ORDEM_COMPRA ON  -- Observação do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = LINHA_ORDEM_COMPRA.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = LINHA_ORDEM_COMPRA.ISOPvPed_Codigo AND
	    PEDIDO_ITEM.ISOPvPedIte_Codigo = LINHA_ORDEM_COMPRA.ITEM_PEDIDO

	LEFT OUTER JOIN	OC_DO_CLIENTE ON  -- Observação do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = OC_DO_CLIENTE.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = OC_DO_CLIENTE.ISOPvPed_Codigo AND
	    PEDIDO_ITEM.ISOPvPedIte_Codigo = OC_DO_CLIENTE.ISOPvPedIte_Codigo

	LEFT OUTER JOIN	LOTE1 ON  -- lote 1 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = LOTE1.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = LOTE1.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = LOTE1.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	QTD1 ON  -- qtde 1 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = QTD1.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = QTD1.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = QTD1.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	LOTE2 ON  -- lote 2 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = LOTE2.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = LOTE2.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = LOTE2.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	QTD2 ON  -- qtde 2 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = QTD2.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = QTD2.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = QTD2.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	LOTE3 ON  -- lote 3 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = LOTE3.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = LOTE3.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = LOTE3.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	QTD3 ON  -- qtde 3 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = QTD3.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = QTD3.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = QTD3.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	LOTE4 ON  -- lote 4 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = LOTE4.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = LOTE4.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = LOTE4.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	QTD4 ON  -- qtde 4 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = QTD4.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = QTD4.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = QTD4.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	LOTE5 ON  -- lote 5 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = LOTE5.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = LOTE5.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = LOTE5.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	QTD5 ON  -- qtde 5 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = QTD5.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = QTD5.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = QTD5.ISOPvPedIte_Codigo
	LEFT OUTER JOIN NATUREZA_OPERACAO ON
		PEDIDO.ISOEmp_Codigo = NATUREZA_OPERACAO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPedTip_Codigo = NATUREZA_OPERACAO.ISOPvPedTip_Codigo
	LEFT OUTER JOIN MATRIZ_ICMS ON
		PEDIDO_ITEM.ISOEmp_Codigo = MATRIZ_ICMS.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = MATRIZ_ICMS.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = MATRIZ_ICMS.ISOPvPedIte_Codigo
WHERE
	PEDIDO.ISOEmp_Codigo = 11 AND
	PEDIDO_ITEM.ISOPvPedIteSit_Codigo = 1
	--PEDIDO.ISOPvPed_Codigo = 8742706 and

	AND PEDIDO.ISOPvPedSit_Codigo in (1, 30)     --- ABERTO /  PEDIDO LIBERADO DE CREDITO

	--PEDIDO.ISOPvPed_Codigo between 8740390 and 8740890 -- pedidos indaial
	--PEDIDO.ISOPvPed_Codigo between 8664441 AND 8739451 AND -- pedidos do simulador

	AND (
		-- ANALISE DE CREDITO / INATIVIDADE DO CLIENTE / TITULOS EM ABERTO
		PEDIDO.ISOPvPed_Codigo NOT IN (select isopvped_codigo from [MACRO_ANALISE_CREDITO] where ISOEmp_Codigo = 11 and SITUACAO <> '')
		--PEDIDO.ISOPvPed_Codigo NOT IN (select isopvped_codigo from [MACRO_ANALISE_CREDITO] where ISOEmp_Codigo = 11 and ISOPvPedSit_Codigo = 1)
		--PEDIDO.ISOPvPed_Codigo NOT IN (SELECT ISOPvPed_Codigo FROM GATILHO_C21_ANALISE_LIMITE_CREDITO WHERE ISOEmp_Codigo = 11 AND  ((LIMITE_CREDITO - TOTAL_CONTAS_RECEBER - PED_EM_ABERTO) < TOTAL_PEDIDO) OR (DATEDIFF(DD,DATA_ULTIMA_COMPRA,GETDATE()) > 60) OR (DATEDIFF(DD,DATA_TITULO,GETDATE()) > 1))
		--OR
		-- ANALISE PRAZO MEDIO
		--PEDIDO.ISOPvPed_Codigo NOT IN (SELECT ISOPvPed_Codigo FROM GATILHO_C22_ANALISE_PRAZO_MEDIO_CLIENTE WITH (NOLOCK) WHERE (1=1) AND PRAZO_MEDIO_CP > PRAZO_MEDIO_CLIENTE)
	)

/*
SELECT * FROM MACROISOPvPedido2

SELECT * FROM MACROISOPvPedido

select *
FROM MACRO_ANALISE_CREDITO WITH (NOLOCK) CROSS APPLY (SELECT ISOENTORG_CODIGO, ISOENTSEG_CODIGO FROM MACROISOUNIONORG_PES) AS DUMMY(COD_CLIENTE, SEGMENTO)
WHERE ISOEMP_CODIGO = 11
AND ISOPVPEDSIT_CODIGO = 1
AND (ISOPVPED_CLICODIGO = COD_CLIENTE AND SEGMENTO IN (1,2))

select * from isosdconexecucao
WHERE ISOEMP_CODIGO = 11
and ISOSDConExe_Codigo >= 395581965
and ISOSDConExe_Comando like '%credito%'

INSERT INTO ISOSDCON_PVPEDIDO
SELECT ISOEMP_CODIGO, 395582093, ISOPVPED_CODIGO,'A', CAST(CONVERT(CHAR , GETDATE(), 120) AS DATETIME), 977744
FROM MACRO_ANALISE_CREDITO WITH (NOLOCK) CROSS APPLY (SELECT ISOENTORG_CODIGO, ISOENTSEG_CODIGO FROM MACROISOUNIONORG_PES) AS DUMMY(COD_CLIENTE, SEGMENTO)
 WHERE (ISOEmp_Codigo = 11 AND ISOPvPed_DataAlteracao >= '2020-07-06 11:58:56.000' ) AND (   ISOEMP_CODIGO = 11
AND ISOPVPEDSIT_CODIGO = 1
AND (ISOPVPED_CLICODIGO = COD_CLIENTE AND SEGMENTO IN (1,2)))

*/;


-- dbo.MACROISOPvTransacaoCartao source

CREATE VIEW [dbo].[MACROISOPvTransacaoCartao]
as
SELECT  ISOPVTRANSACAOCARTAO.ISOEmp_Codigo AS ZPT110_ZPT_FILIAL,
		ISOPVTRANSACAOCARTAO.ISOPvPed_Codigo AS ZPT110_ZPT_NUM,
		ISOPVTRANSACAOCARTAO.ISOPvTransCart_Codigo AS ZPT110_ZPT_SEQ,
		--ISOPVTRANSACAOCARTAO.ISOPvTransCart_ControleCodigo AS ZPT110_ZPT_CODCTR, -- inativado 09/11/2020 zagoto, pois informação do controle não era informado pela Cielo, o que impedia a conciliação no processo financeiro, requerente Camila Financeiro
		ISOPVTRANSACAOCARTAO.ISOPvTransCart_CodigoExtra1 AS ZPT110_ZPT_CODCTR,
        ISOPVTRANSACAOCARTAO.ISOPvTransCart_Taxa AS ZPT110_ZPT_TAXA,
        ISOPVTRANSACAOCARTAO.ISOPvTransCart_Valor AS ZPT110_ZPT_VALOR,
        ISOPVTRANSACAOCARTAO.ISOPvTransCart_PDV AS ZPT110_ZPT_PDV,
        ISOPVTRANSACAOCARTAO.ISOPvTransCart_NSUTransacao AS ZPT110_ZPT_NSU,
        ISOPVTRANSACAOCARTAO.ISOPvTransCart_NSUHost AS ZPT110_ZPT_NSUHST,
        ISOPVTRANSACAOCARTAO.ISOPvTransCart_Bandeira AS ZPT110_ZPT_BANDEI,
        CONVERT(CHAR(8),ISOPVTRANSACAOCARTAO.ISOPvTransCart_Data,112) AS ZPT110_ZPT_DATA,
        ISOPVTRANSACAOCARTAO.ISOPvTransCart_Hora AS ZPT110_ZPT_HORA,
        '01027058000191' AS ZPT110_ZPT_CNPJC
FROM         ISOPVTRANSACAOCARTAO INNER JOIN
                      ISOPVPEDIDO ON ISOPVTRANSACAOCARTAO.ISOEmp_Codigo = ISOPVPEDIDO.ISOEmp_Codigo AND ISOPVTRANSACAOCARTAO.ISOPvPed_Codigo = ISOPVPEDIDO.ISOPvPed_Codigo INNER JOIN
					  ISOBRASPAGTRANSACAO ON ISOBRASPAGTRANSACAO.ISOBraspagTransacao_ISOEmp_Codigo = ISOPVTRANSACAOCARTAO.ISOEmp_Codigo AND ISOBRASPAGTRANSACAO.ISOBraspagTransacao_ISOPvPed_Codigo = ISOPVTRANSACAOCARTAO.ISOPvPed_Codigo AND ISOBRASPAGTRANSACAO.ISOBraspagTransacao_Codigo_Controle = ISOPVTRANSACAOCARTAO.ISOPvTransCart_ControleCodigo AND ISOBRASPAGTRANSACAO.ISOBraspagTransacao_Status = 'A'
WHERE     (ISOPVTRANSACAOCARTAO.ISOEmp_Codigo = 11)
AND (ISOPVPEDIDO.ISOPvPedSit_Codigo not in (6,7,9))   --,33

/*
insert into ISOPVTRANSACAOCARTAO
select EmpCod, 7779333 TvPedCod, CRCtrSeq, CRTpCod, CRTrCtrCod, CRTrTxa, CRTrVlr, CRTrPdvCod, CRTrNSU, CRTrNSUHst, CRTrBnd, CRTrDta, CRTrHra, CRTrCtrEx1, CRTrCtrEx2, CRTrCtrFla, dbo.dataiso2(), 1, CRTrCtrUsu
from dbcall.db_crm_cremer.dbo.CRPDTRN
where CRTrDta >= '2020-07-09 00:00:00.000'

select * from isopvtransacaocartao
where isoemp_codigo = 11 and isopvped_codigo = 7816833

select * from isobraspagtransacao
where ISOBraspagTransacao_ISOEmp_Codigo = 11 and ISOBraspagTransacao_ISOPvPed_Codigo = 7816833

SP_HELP isopvtransacaocartao

*/;


-- dbo.MACROISOPvTransacaoCartao_COMCARTAO source

CREATE VIEW [dbo].[MACROISOPvTransacaoCartao_COMCARTAO]
as
SELECT  ISOPVTRANSACAOCARTAO.ISOEmp_Codigo AS ZPT110_ZPT_FILIAL,
		ISOPVTRANSACAOCARTAO.ISOPvPed_Codigo AS ZPT110_ZPT_NUM,
		ISOPVTRANSACAOCARTAO.ISOPvTransCart_Codigo AS ZPT110_ZPT_SEQ,
		LEFT(COALESCE(NUMERO_CONTA,''),6)+CASE WHEN NUMERO_CONTA IS NOT NULL THEN '***' ELSE '' END AS ZPT110_ZPT_CODCTR,
		--ISOPVTRANSACAOCARTAO.ISOPvTransCart_ControleCodigo AS ZPT110_ZPT_CODCTR,
        ISOPVTRANSACAOCARTAO.ISOPvTransCart_Taxa AS ZPT110_ZPT_TAXA,
        ISOPVTRANSACAOCARTAO.ISOPvTransCart_Valor AS ZPT110_ZPT_VALOR,
        ISOPVTRANSACAOCARTAO.ISOPvTransCart_PDV AS ZPT110_ZPT_PDV,
        ISOPVTRANSACAOCARTAO.ISOPvTransCart_NSUTransacao AS ZPT110_ZPT_NSU,
        ISOPVTRANSACAOCARTAO.ISOPvTransCart_NSUHost AS ZPT110_ZPT_NSUHST,
        ISOPVTRANSACAOCARTAO.ISOPvTransCart_Bandeira AS ZPT110_ZPT_BANDEI,
        CONVERT(CHAR(8),ISOPVTRANSACAOCARTAO.ISOPvTransCart_Data,112) AS ZPT110_ZPT_DATA,
        ISOPVTRANSACAOCARTAO.ISOPvTransCart_Hora AS ZPT110_ZPT_HORA,
        '01027058000191' AS ZPT110_ZPT_CNPJC
FROM         ISOPVTRANSACAOCARTAO INNER JOIN
					ISOPVPEDIDO ON
						ISOPVTRANSACAOCARTAO.ISOEmp_Codigo = ISOPVPEDIDO.ISOEmp_Codigo AND
						ISOPVTRANSACAOCARTAO.ISOPvPed_Codigo = ISOPVPEDIDO.ISOPvPed_Codigo LEFT OUTER JOIN
					DBNAVITA.SCOPEWEB.DBO.MENSAGEM SCOPE ON
						CONVERT(VARCHAR(8), ISOPVTRANSACAOCARTAO.ISOPvTransCart_Data, 112) = SCOPE.data_mensagem AND
						ISOPVTRANSACAOCARTAO.ISOPvTransCart_NSUTransacao = SCOPE.nsu
WHERE     (ISOPVTRANSACAOCARTAO.ISOEmp_Codigo = 11)
--AND (ISOPVPEDIDO.ISOPvPedSit_Codigo in (1,30,32,16))
and ISOPVTRANSACAOCARTAO.ISOPvPed_Codigo = 7790999
/*
insert into ISOPVTRANSACAOCARTAO
select EmpCod, 7779333 TvPedCod, CRCtrSeq, CRTpCod, CRTrCtrCod, CRTrTxa, CRTrVlr, CRTrPdvCod, CRTrNSU, CRTrNSUHst, CRTrBnd, CRTrDta, CRTrHra, CRTrCtrEx1, CRTrCtrEx2, CRTrCtrFla, dbo.dataiso2(), 1, CRTrCtrUsu
from dbcall.db_crm_cremer.dbo.CRPDTRN
where CRTrDta >= '2020-07-09 00:00:00.000'

*/;


-- dbo.MACROISOUnionOrg_Pes source

CREATE VIEW [dbo].[MACROISOUnionOrg_Pes]
as
SELECT ISOENTORG_CODIGO, ISOENTSEG_CODIGO FROM ISOENTORGANIZACAO
UNION ALL
SELECT ISOENTPES_CODIGO, ISOENTSEG_CODIGO FROM ISOENTPESSOA;


-- dbo.MACRO_ANALISE_CREDITO source

CREATE VIEW [dbo].[MACRO_ANALISE_CREDITO]
AS
with
	prazo_medio_cp as (
		SELECT ISOEmp_Codigo, ISOPvEstab_Codigo, ISOPvTV_Codigo, sum(ISOPvEstTbVPar_QtdDias * ISOPvEstTbVPar_Percentagem / 100.0) prazo_medio_cp
			FROM ISOPVESTAB_TBLVENDAPARCELAS WITH (NOLOCK)
			WHERE ISOEmp_Codigo = 11
			AND ISOPvEstTbVPar_Flag = 'A'
			group by ISOEmp_Codigo, ISOPvEstab_Codigo, ISOPvTV_Codigo),
	pedidos as (
		select ISOPVPEDIDO.ISOEmp_Codigo, ISOPVPEDIDO.ISOPvPed_Codigo, ISOPVPEDIDO.ISOPvPed_CliCodigo, ISOPVPEDIDO.ISOPvPedSit_Codigo, ISOPVCD.ISOPvCD_Estabelecimento, ISOPVPEDIDO.ISOPvPed_Pagamento, ISOEMPENT_ORIGEM.ISOEmpEnt_Ori_Codigo, SUM(ISOPVPEDITEM.ISOPvPedIte_Quantidade * ISOPVPEDITEM.ISOPvPedIte_ValorUnitario) TOTAL_PEDIDO
			from ISOPVPEDIDO  WITH (NOLOCK)
					INNER JOIN ISOPVCD ON
						ISOPVPEDIDO.ISOEmp_Codigo = ISOPVCD.ISOEmp_Codigo AND
						ISOPVPEDIDO.ISOPvPed_EstadoOrigem = ISOPVCD.ISOPvCD_Origem AND
						ISOPVPEDIDO.ISOPvPed_EstadoDestino = ISOPVCD.ISOPvCD_Destino
					INNER JOIN ISOPVPEDITEM
						ON ISOPVPEDIDO.ISOEmp_Codigo = ISOPVPEDITEM.ISOEmp_Codigo
						AND ISOPVPEDIDO.ISOPvPed_Codigo = ISOPVPEDITEM.ISOPvPed_Codigo
						AND ISOPVPEDITEM.ISOPvPedIteSit_Codigo = 1
					LEFT OUTER JOIN ISOEMPENT_ORIGEM ON
						ISOPVPEDIDO.ISOEmp_Codigo = ISOEMPENT_ORIGEM.ISOEmp_Codigo AND
						ISOPVPEDIDO.ISOPvPed_CliCodigo = ISOEMPENT_ORIGEM.ISOEmpEnt_EntCodigo AND
						ISOEMPENT_ORIGEM.ISOEmpOri_Codigo = 13
			where ISOPVPEDIDO.ISOEmp_Codigo = 11
			--and ISOPVPEDIDO.ISOPvPed_Codigo not in (7826491)
			and ISOPVPEDIDO.ISOPvPedSit_Codigo in (1,28)
			--and ISOPVPEDIDO.ISOPvPed_DtaPedido >= getdate() - 1
			and ISOPVPEDIDO.ISOPvPedTip_Codigo NOT In ('SAM','SBO') -- Amostra e Bonificação
			and ISOPVPEDIDO.ISOPvPed_Pagamento NOT IN ('02','03') -- Condição antecipado
			and ISOPVPEDIDO.ISOPvPed_Pagamento IN (select ISOPvTV_Codigo from ISOPvTabelaVenda where isoemp_codigo = 11 and ISOPeCndPgt_Codigo not in (63,72) and ISOPvTV_Flag = 'A') --   63 - Antecipado, 72 - Cartão de Crédito
			--and ISOPVPEDIDO.ISOPvPedSit_Codigo NOT IN (8,9)


			group by ISOPVPEDIDO.ISOEmp_Codigo, ISOPVPEDIDO.ISOPvPed_Codigo, ISOPVPEDIDO.ISOPvPed_CliCodigo, ISOPVPEDIDO.ISOPvPedSit_Codigo, ISOPVCD.ISOPvCD_Estabelecimento, ISOPVPEDIDO.ISOPvPed_Pagamento, ISOEMPENT_ORIGEM.ISOEmpEnt_Ori_Codigo),
	clientes as (
		SELECT cod_cliente, loja, cod_cliente+loja COD_PROTHEUS, prazo_medio_cliente, limite_credito, total_contas_receber, ped_em_aberto, CASE WHEN data_ultima_compra = '1753-01-01 00:00:00.000' THEN DATEADD(DAY, DATEDIFF(DAY, 0, GETDATE()), 0) ELSE data_ultima_compra END data_ultima_compra, data_titulo
		FROM ANALISE_CREDITO  WITH (NOLOCK))
	--clientes as (SELECT ''cod_cliente, ''loja, '' COD_PROTHEUS, 1 prazo_medio_cliente, 1 limite_credito, 1 total_contas_receber, 1 ped_em_aberto, DATEADD(DAY, DATEDIFF(DAY, 0, GETDATE()), 0) data_ultima_compra, DATEADD(DAY, DATEDIFF(DAY, 0, GETDATE()), 0)data_titulo)

select
	pedidos.isoemp_codigo,
	pedidos.isopvped_codigo,
	pedidos.ISOPvPed_Pagamento,
	prazo_medio_cp.prazo_medio_cp,
	coalesce(clientes.prazo_medio_cliente,0) as prazo_medio_cliente,
	dbo.dataiso2() as ISOPvPed_DataAlteracao,
	coalesce(clientes.limite_credito,0) as limite_credito,
	coalesce(total_contas_receber, 0) as total_contas_receber,
	coalesce(ped_em_aberto, 0) as ped_em_aberto,
	coalesce(data_ultima_compra, dbo.dataiso2()) as data_ultima_compra,
	coalesce(data_titulo, dbo.dataiso2()) as data_titulo,
	pedidos.total_pedido,
	pedidos.ISOPvPed_CliCodigo,
	pedidos.ISOPvPedSit_Codigo,
	--CASE
	--	WHEN (clientes.LIMITE_CREDITO - clientes.TOTAL_CONTAS_RECEBER - clientes.PED_EM_ABERTO) < pedidos.TOTAL_PEDIDO THEN 'LIMITE DE CREDITO EXCEDIDO'
	--	WHEN (DATEDIFF(DD,clientes.DATA_ULTIMA_COMPRA,GETDATE()) > 60) THEN 'SEM COMPRA A MAIS DE 60 DIAS'
	--	WHEN (DATEDIFF(DD,clientes.DATA_TITULO,GETDATE()) > 1) THEN 'TITULOS EM ABERTO'
	--	WHEN (prazo_medio_cp.PRAZO_MEDIO_CP > clientes.PRAZO_MEDIO_CLIENTE) THEN 'PRAZO MEDIO SUPERIOR AO AUTORIZADO'
	--	ELSE ''
	--END

	CASE
		WHEN
			(COALESCE(clientes.COD_PROTHEUS,'') = '')
		THEN 'DADOS FINANCEIROS DO CLIENTE NÃO CADASTRADO NO PROTHEUS' + ', '
		WHEN (clientes.LIMITE_CREDITO - clientes.TOTAL_CONTAS_RECEBER - clientes.PED_EM_ABERTO) < pedidos.TOTAL_PEDIDO
		THEN 'LIMITE DE CREDITO EXCEDIDO' + ', '
		ELSE ''
	END +
	CASE
		WHEN (DATEDIFF(DD,CASE WHEN CLIENTES.DATA_ULTIMA_COMPRA = '1753-01-01 00:00:00.000' THEN DBO.DATAISO2() END,GETDATE()) > 60) THEN 'SEM COMPRA A MAIS DE 60 DIAS' + ', '
		ELSE ''
	END +
	CASE
		WHEN (DATEDIFF(DD,CASE WHEN CLIENTES.DATA_TITULO = '1753-01-01 00:00:00.000' THEN DBO.DATAISO2() END,GETDATE()) > 1) THEN 'TITULOS VENCIDOS' + ', '
		ELSE ''
	END +
	CASE
		WHEN (prazo_medio_cp.PRAZO_MEDIO_CP > clientes.PRAZO_MEDIO_CLIENTE) THEN 'PRAZO MEDIO SUPERIOR AO AUTORIZADO'
		ELSE ''
	END
	AS SITUACAO
	from pedidos
		LEFT OUTER JOIN prazo_medio_cp
			on prazo_medio_cp.isoemp_codigo = pedidos.isoemp_codigo
			and prazo_medio_cp.ISOPvEstab_Codigo = pedidos.ISOPvCD_Estabelecimento
			and prazo_medio_cp.ISOPvTV_Codigo = pedidos.ISOPvPed_Pagamento
			and pedidos.ISOEmp_Codigo = 11
		LEFT OUTER JOIN CLIENTES
			on clientes.COD_PROTHEUS = pedidos.ISOEmpEnt_Ori_Codigo
	WHERE
	CASE
		WHEN
			(COALESCE(clientes.COD_PROTHEUS,'') = '')
		THEN 'DADOS FINANCEIROS DO CLIENTE NÃO CADASTRADO NO PROTHEUS' + ', '
		WHEN (clientes.LIMITE_CREDITO - clientes.TOTAL_CONTAS_RECEBER - clientes.PED_EM_ABERTO) < pedidos.TOTAL_PEDIDO
		THEN 'LIMITE DE CREDITO EXCEDIDO' + ', '
		ELSE ''
	END +
	CASE
		WHEN (DATEDIFF(DD,CASE WHEN CLIENTES.DATA_ULTIMA_COMPRA = '1753-01-01 00:00:00.000' THEN DBO.DATAISO2() END,GETDATE()) > 60) THEN 'SEM COMPRA A MAIS DE 60 DIAS' + ', '
		ELSE ''
	END +
	CASE
		WHEN (DATEDIFF(DD,CASE WHEN CLIENTES.DATA_TITULO = '1753-01-01 00:00:00.000' THEN DBO.DATAISO2() END,GETDATE()) > 1) THEN 'TITULOS VENCIDOS' + ', '
		ELSE ''
	END +
	CASE
		WHEN (prazo_medio_cp.PRAZO_MEDIO_CP > clientes.PRAZO_MEDIO_CLIENTE) THEN 'PRAZO MEDIO SUPERIOR AO AUTORIZADO'
		ELSE ''
	END <> '';


-- dbo.MACRO_ANALISE_CREDITO_ITEM source

CREATE VIEW [dbo].[MACRO_ANALISE_CREDITO_ITEM]
AS
with
	prazo_medio_cp as (
		SELECT ISOEmp_Codigo, ISOPvEstab_Codigo, ISOPvTV_Codigo, sum(ISOPvEstTbVPar_QtdDias * ISOPvEstTbVPar_Percentagem / 100.0) prazo_medio_cp
			FROM ISOPVESTAB_TBLVENDAPARCELAS with (readpast)
			WHERE ISOEmp_Codigo = 11
			group by ISOEmp_Codigo, ISOPvEstab_Codigo, ISOPvTV_Codigo),
	pedidos as (
		select
			ISOPVPEDIDO.ISOEmp_Codigo,
			ISOPVPEDIDO.ISOPvPed_Codigo,
			ISOPVPEDIDO.ISOPvPed_CliCodigo,
			ISOPVPEDIDO.ISOPvPed_DtaPedido,
			ISOPVPEDIDO.ISOPvPed_DtaSolEntrega,
			ISOPVPEDIDO.ISOPvPed_DtaAberPedido+ISOPVPEDIDO.ISOPvPed_HoraPedido as ISOPvPed_DtaAberPedido,
			ISOPVPEDIDO.ISOPvPedSit_Codigo,
			ISOPVCD.ISOPvCD_Estabelecimento,
			ISOPVPEDIDO.ISOPvPed_Pagamento,
			ISOEMPENT_ORIGEM.ISOEmpEnt_Ori_Codigo,
			ISOPVPEDIDO.ISOPvPed_UsuarioAlteracao,
			ISOPVPEDIDO.ISOPvPed_DataAlteracao,
			ISOPVPEDIDO.ISOPvPedOri_Codigo,
			ISOPVPEDIDO.ISOPvPedTip_Codigo,
			SUM(ISOPVPEDITEM.ISOPvPedIte_PrecoAjustadoTotal) TOTAL_PEDIDO
			from ISOPVPEDIDO with (readpast)
					INNER JOIN ISOPVCD with (readpast) ON
						ISOPVPEDIDO.ISOEmp_Codigo = ISOPVCD.ISOEmp_Codigo AND
						ISOPVPEDIDO.ISOPvPed_EstadoOrigem = ISOPVCD.ISOPvCD_Origem AND
						ISOPVPEDIDO.ISOPvPed_EstadoDestino = ISOPVCD.ISOPvCD_Destino
					INNER JOIN ISOPVPEDITEM with (readpast)
						ON ISOPVPEDIDO.ISOEmp_Codigo = ISOPVPEDITEM.ISOEmp_Codigo
						AND ISOPVPEDIDO.ISOPvPed_Codigo = ISOPVPEDITEM.ISOPvPed_Codigo
					LEFT OUTER JOIN ISOEMPENT_ORIGEM with (readpast) ON
						ISOPVPEDIDO.ISOEmp_Codigo = ISOEMPENT_ORIGEM.ISOEmp_Codigo AND
						ISOPVPEDIDO.ISOPvPed_CliCodigo = ISOEMPENT_ORIGEM.ISOEmpEnt_EntCodigo AND
						ISOEMPENT_ORIGEM.ISOEmpOri_Codigo = 13
			where ISOPVPEDIDO.ISOEmp_Codigo = 11
			and ISOPVPEDIDO.ISOPvPedSit_Codigo IN (28,29)
			group by ISOPVPEDIDO.ISOEmp_Codigo, ISOPVPEDIDO.ISOPvPed_Codigo, ISOPVPEDIDO.ISOPvPed_CliCodigo, ISOPVPEDIDO.ISOPvPed_DtaPedido, ISOPVPEDIDO.ISOPvPed_DtaSolEntrega, ISOPVPEDIDO.ISOPvPed_DtaAberPedido, ISOPVPEDIDO.ISOPvPed_HoraPedido, ISOPVPEDIDO.ISOPvPedSit_Codigo, ISOPVCD.ISOPvCD_Estabelecimento, ISOPVPEDIDO.ISOPvPed_Pagamento, ISOEMPENT_ORIGEM.ISOEmpEnt_Ori_Codigo, ISOPVPEDIDO.ISOPvPed_UsuarioAlteracao, ISOPVPEDIDO.ISOPvPed_DataAlteracao, ISOPVPEDIDO.ISOPvPedOri_Codigo, ISOPVPEDIDO.ISOPvPedTip_Codigo),
	clientes as (
		SELECT cod_cliente, loja, prazo_medio_cliente, limite_credito, total_contas_receber, ped_em_aberto, data_ultima_compra, data_titulo
		FROM ANALISE_CREDITO with (readpast)),
	usuarios as (
		SELECT
			ISOENTIDADE.ISOEnt_Codigo,
			ISOENTIDADE.ISOEnt_Nome
		FROM ISOENTIDADE with (readpast)
			INNER JOIN ISOENTUSUARIO with (readpast)
			ON ISOENTIDADE.ISOEnt_Codigo = ISOENTUSUARIO.ISOEntUsu_Codigo
	),
	pedido_item as (
		select
			ISOPVPEDITEM.ISOEmp_Codigo,
			ISOPVPEDITEM.ISOPvPed_Codigo,
			ISOPVPEDITEM.ISOPvPedIte_Codigo,
			ISOPVPEDITEM.ISOPrd_Codigo,
			ISOPVPEDITEM.ISOPvPedIte_Quantidade,
			ISOPVPEDITEM.ISOPvPedIte_UnidadeOrigem,
			ISOPVPEDITEM.ISOPvPedIte_UnidadeDestino,
			ISOPVPEDITEM.ISOPvPedIte_ValorPISST,
			ISOPVPEDITEM.ISOPvPedIte_ValorCofinsST,
			ISOPVPEDITEM.ISOPVPedIte_ValorFCPST,
			ISOPVPEDITEM.ISOPvPedIte_ValorFCP,
			ISOPVPEDITEM.ISOPvPedIte_ValorIPI,
			ISOPVPEDITEM.ISOPvPedIte_VlrSubsTributaria,
			ISOPVPEDITEM.ISOPvPedIte_ValorICMS,
			ISOPVPEDITEM.ISOPvPedIte_ValorPIS,
			ISOPVPEDITEM.ISOPvPedIte_ValorCofins,
			ISOPVPEDITEM.ISOPvPedIte_PrecoAjustado,
			ISOPVPEDITEM.ISOPvPedIte_PrecoAjustadoTotal,
			ISOPVPEDITEM.ISOPvPedIte_ValorUnitario
		from
			ISOPVPEDIDO with (readpast)
				INNER JOIN ISOPVPEDITEM with (readpast)
				ON ISOPVPEDIDO.ISOEmp_Codigo = ISOPVPEDITEM.ISOEmp_Codigo
				AND ISOPVPEDIDO.ISOPvPed_Codigo = ISOPVPEDITEM.ISOPvPed_Codigo
		where ISOPVPEDIDO.ISOEmp_Codigo = 11
		and ISOPVPEDITEM.ISOPvPedIteSit_Codigo not in (9)
		AND ISOPVPEDIDO.ISOPvPedSit_Codigo IN (28,29)
	),
	unidade_medida as (
		select
			ISOEmp_Codigo,
			ISOPrdUndFatC_PrdCodigo,
			ISOPrdUndFatC_UndOrigem,
			ISOPrdUndFatC_UndDestino,
			ISOPrdUndFatC_Armazem,
			case
				when ISOPrdUndFatC_UndDestino = 'M' then 1 / ISOPrdUndFatC_FatorConversao
				else ISOPrdUndFatC_FatorConversao
			end ISOPrdUndFatC_FatorConversao,
			ISOPrdUndFatC_Flag
		from
			ISOPRDUNDFATORCONVERSAO with (readpast)
		where
			ISOEmp_Codigo = 11
			and ISOPrdUndFatC_Armazem = ''
			and ISOPrdUndFatC_Flag = 'A'
	)

select
	pedidos.isoemp_codigo,
	pedidos.isopvped_codigo,
	pedidos.ISOPvPed_Pagamento,
	pedidos.ISOPvCD_Estabelecimento,
	prazo_medio_cp.prazo_medio_cp,
	pedido_item.ISOPvPedIte_Codigo,
	clientes.cod_cliente,
	clientes.loja,
	coalesce(clientes.prazo_medio_cliente,0) as prazo_medio_cliente,
	pedidos.ISOPvPed_DataAlteracao,
	pedidos.ISOPvPed_DtaSolEntrega,
	pedidos.ISOPvPed_DtaPedido,
	pedidos.ISOPvPed_DtaAberPedido,
	clientes.limite_credito,
	total_contas_receber,
	ped_em_aberto,
	data_ultima_compra,
	data_titulo,
	pedidos.total_pedido,
	pedidos.ISOPvPed_CliCodigo,
	pedidos.ISOPvPedSit_Codigo,
	pedido_item.ISOPrd_Codigo,
	coalesce(USUARIOS.ISOENT_CODIGO,'') AS ISOPvPed_UsuarioAlteracao,
	coalesce(USUARIOS.ISOENT_NOME,'') AS ISOPvPed_NomeAlteracao,
	pedido_item.ISOPvPedIte_Quantidade,
	coalesce(pedido_item.ISOPvPedIte_PrecoAjustado,0) AS ISOPvPedIte_PrecoAjustado,
	coalesce(pedido_item.ISOPvPedIte_PrecoAjustadoTotal,0) AS ISOPvPedIte_PrecoAjustadoTotal,
	pedido_item.ISOPvPedIte_ValorUnitario,
	pedido_item.ISOPvPedIte_UnidadeOrigem,
	pedido_item.ISOPvPedIte_UnidadeDestino,
	unidade_medida.ISOPrdUndFatC_FatorConversao,
	coalesce(pedido_item.ISOPvPedIte_ValorPISST,0) as ISOPvPedIte_ValorPISST,
	coalesce(pedido_item.ISOPvPedIte_ValorCofinsST,0) as ISOPvPedIte_ValorCofinsST,
	coalesce(pedido_item.ISOPVPedIte_ValorFCPST,0) as ISOPVPedIte_ValorFCPST,
	coalesce(pedido_item.ISOPvPedIte_ValorFCP,0) as ISOPvPedIte_ValorFCP,
	coalesce(pedido_item.ISOPvPedIte_ValorIPI,0) as ISOPvPedIte_ValorIPI,
	coalesce(pedido_item.ISOPvPedIte_VlrSubsTributaria,0) as ISOPvPedIte_VlrSubsTributaria,
	coalesce(pedido_item.ISOPvPedIte_ValorICMS,0) as ISOPvPedIte_ValorICMS,
	coalesce(pedido_item.ISOPvPedIte_ValorPIS,0) as ISOPvPedIte_ValorPIS,
	coalesce(pedido_item.ISOPvPedIte_ValorCofins,0) as ISOPvPedIte_ValorCofins,
	pedidos.ISOPvPedOri_Codigo,
	pedidos.ISOPvPedTip_Codigo,
	--CASE
	--	WHEN (clientes.LIMITE_CREDITO - clientes.TOTAL_CONTAS_RECEBER - clientes.PED_EM_ABERTO) < pedidos.TOTAL_PEDIDO THEN 'LIMITE DE CREDITO EXCEDIDO'
	--	WHEN (DATEDIFF(DD,clientes.DATA_ULTIMA_COMPRA,GETDATE()) > 60) THEN 'SEM COMPRA A MAIS DE 60 DIAS'
	--	WHEN (DATEDIFF(DD,clientes.DATA_TITULO,GETDATE()) > 1) THEN 'TITULOS EM ABERTO'
	--	WHEN (prazo_medio_cp.PRAZO_MEDIO_CP > clientes.PRAZO_MEDIO_CLIENTE) THEN 'PRAZO MEDIO SUPERIOR AO AUTORIZADO'
	--	ELSE ''
	--END

	CASE
		WHEN (clientes.LIMITE_CREDITO - clientes.TOTAL_CONTAS_RECEBER - clientes.PED_EM_ABERTO) < pedidos.TOTAL_PEDIDO THEN 'LIMITE DE CREDITO EXCEDIDO' + ', '
		ELSE ''
	END +
	CASE
		WHEN (DATEDIFF(DD,clientes.DATA_ULTIMA_COMPRA,GETDATE()) > 60) THEN 'SEM COMPRA A MAIS DE 60 DIAS' + ', '
		ELSE ''
	END +
	CASE
		WHEN (DATEDIFF(DD,clientes.DATA_TITULO,GETDATE()) > 1) THEN 'TITULOS EM ABERTO' + ', '
		ELSE ''
	END +
	CASE
		WHEN (prazo_medio_cp.PRAZO_MEDIO_CP > clientes.PRAZO_MEDIO_CLIENTE) THEN 'PRAZO MEDIO SUPERIOR AO AUTORIZADO'
		ELSE ''
	END
	AS SITUACAO
	from prazo_medio_cp
		inner join pedidos
			on prazo_medio_cp.isoemp_codigo = pedidos.isoemp_codigo
			and prazo_medio_cp.ISOPvEstab_Codigo = pedidos.ISOPvCD_Estabelecimento
			and prazo_medio_cp.ISOPvTV_Codigo = pedidos.ISOPvPed_Pagamento
			and pedidos.ISOEmp_Codigo = 11
		INNER JOIN CLIENTES
			on clientes.cod_cliente + clientes.loja = pedidos.ISOEmpEnt_Ori_Codigo
		inner join pedido_item
			on pedidos.isoemp_codigo = pedido_item.isoemp_codigo
			and pedidos.isopvped_codigo = pedido_item.isopvped_codigo
		inner join unidade_medida
			on pedido_item.ISOEmp_Codigo = unidade_medida.ISOEmp_Codigo
			and pedido_item.ISOPrd_Codigo = unidade_medida.ISOPrdUndFatC_PrdCodigo
			and pedido_item.ISOPvPedIte_UnidadeOrigem = unidade_medida.ISOPrdUndFatC_UndOrigem
			and pedido_item.ISOPvPedIte_UnidadeDestino = unidade_medida.ISOPrdUndFatC_UndDestino
		LEFT OUTER JOIN USUARIOS
			ON PEDIDOS.ISOPvPed_UsuarioAlteracao = USUARIOS.ISOENT_CODIGO;


-- dbo.MATRIZ_ATIVA source

CREATE VIEW MATRIZ_ATIVA
AS
select
		ISOEmp_Codigo,
		ISOPvMatICMS_UFOrigem,
		ISOPvMatICMS_UFDestino,
		ISOPvMatICMS_AgrupFiscalCod,
		ISOPvMatICMS_CatFiscalCod,
		ISOPvMatICMS_DestinacaoCod,
		ISOPvMatICMS_EspecieCod,
		ISOPvMatICMS_PrdOrigemCod,
		ISOPvMatICMS_NatOperaCod,
		ISOPvMatICMS_InicioVigencia,
		ISOPvMatICMS_SubTribICMSDocFis,
		ISOPvMatICMS_AliquotaICMS
	from ISOPVMATRIZICMS
	WHERE ISOPVMATRIZICMS.ISOPvMatICMS_InicioVigencia = (select MAX(Y.ISOPvMatICMS_InicioVigencia) from ISOPVMATRIZICMS Y
														where ISOPVMATRIZICMS.ISOEmp_Codigo = Y.ISOEmp_Codigo AND
															ISOPVMATRIZICMS.ISOPvMatICMS_UFOrigem = Y.ISOPvMatICMS_UFOrigem AND
															ISOPVMATRIZICMS.ISOPvMatICMS_UFDestino = Y.ISOPvMatICMS_UFDestino AND
															ISOPVMATRIZICMS.ISOPvMatICMS_NatOperaCod = Y.ISOPvMatICMS_NatOperaCod AND
															ISOPVMATRIZICMS.ISOPvMatICMS_AgrupFiscalCod = Y.ISOPvMatICMS_AgrupFiscalCod AND
															ISOPVMATRIZICMS.ISOPvMatICMS_EspecieCod = Y.ISOPvMatICMS_EspecieCod AND
															ISOPVMATRIZICMS.ISOPvMatICMS_CatFiscalCod = Y.ISOPvMatICMS_CatFiscalCod AND
															ISOPVMATRIZICMS.ISOPvMatICMS_PrdOrigemCod = Y.ISOPvMatICMS_PrdOrigemCod AND
															ISOPVMATRIZICMS.ISOPvMatICMS_DestinacaoCod = Y.ISOPvMatICMS_DestinacaoCod) AND
			ISOPVMATRIZICMS.ISOPvMatICMS_UFOrigem IN ('SP','SC','MG') AND
			ISOPVMATRIZICMS.ISOPvMatICMS_UFDestino IN ('SP','SC','MG','AM','AP','RR');


-- dbo.MacroConsultaMatrizICMS source

CREATE VIEW [dbo].[MacroConsultaMatrizICMS]
as
select
	ISOPVPEDIDO.ISOEmp_Codigo,
	ISOPVPEDIDO.ISOPvPed_CliCodigo,
	ISOPVPEDIDO.ISOPvPed_Codigo,
	(select TOP 1 ISOPvCD_Origem from ISOPVCDORIGEM where ISOPVPEDIDO.ISOEmp_Codigo = ISOPVCDORIGEM.ISOEmp_Codigo
			and ISOPVPEDIDO.ISOPvPed_EstadoOrigem = ISOPVCDORIGEM.ISOPvCD_Origem
			and ISOPVPEDIDO.ISOPvPed_EstadoDestino = ISOPVCDORIGEM.ISOPvCD_Destino
			and ISOPVPEDIDO.ISOPvPedOri_Codigo = ISOPVCDORIGEM.ISOPvCDOri_Pedido) ISOPvPed_EstadoOrigem,
	case
		when ISOPvPed_CodEndEntrega = 0 then (SELECT TOP 1 ISOESTADO.ISOEst_Sigla FROM ISOESTADO WHERE ISOPVPEDIDO.ISOPvPed_EndEstado = ISOESTADO.ISOEst_Codigo AND ISOESTADO.ISOPais_Codigo = 1)
		else (SELECT TOP 1 ISOESTADO.ISOEst_Sigla FROM ISOENTENDERECO, ISOLOCALIDADE, ISOESTADO WHERE ISOENTENDERECO.ISOEnt_Codigo = ISOPVPEDIDO.ISOPvPed_CliCodigo AND ISOENTENDERECO.ISOEntEnd_Codigo = ISOPVPEDIDO.ISOPvPed_CodEndEntrega AND ISOENTENDERECO.ISOLoc_Codigo = ISOLOCALIDADE.ISOLoc_Codigo AND ISOLOCALIDADE.ISOPais_Codigo = 1 AND ISOLOCALIDADE.ISOEst_Codigo = ISOESTADO.ISOEst_Codigo AND ISOLOCALIDADE.ISOPais_Codigo = ISOESTADO.ISOPais_Codigo)
	end ISOPvPed_EstadoDestino,
	ISOPVPEDITEM.ISOPvPedIte_Codigo,
	ISOPVPEDITEM.ISOPrd_Codigo,
	ISOPRDDADOFISCAL.ISOPrdDadF_CodAgrupFiscal,
	ISOPRDDADOFISCAL.ISOPrdDadF_CodDestinacao,
	ISOPRDDADOFISCAL.ISOPrdDadF_CodOrigem,
	ISOPRDDADOFISCAL.ISOPrdDadF_EspecieCod,
	ISOENTCATEGORIAFISCAL.ISOEntCatF_CategFiscalCod,
	ISOPVPEDTIPO.ISOPvPedTip_NaturezaOperacaoCo,
	ISOPVMATRIZICMS.ISOPvMatICMS_SubTribICMSDocFis,
	ISOPVMATRIZICMS.ISOPvMatICMS_AliquotaICMS
from ISOPVPEDIDO, ISOPVPEDITEM, ISOPRDDADOFISCAL, ISOENTCATEGORIAFISCAL, ISOPVMATRIZICMS, ISOPVPEDTIPO
where ISOPVPEDIDO.ISOEmp_Codigo = ISOPVPEDITEM.ISOEmp_Codigo
and ISOPVPEDIDO.ISOPvPed_Codigo = ISOPVPEDITEM.ISOPvPed_Codigo
and ISOPVPEDITEM.ISOPrd_Codigo = ISOPRDDADOFISCAL.ISOPrdDadF_PrdCodigo
and ISOPVPEDIDO.ISOEmp_Codigo = ISOPVPEDTIPO.ISOEmp_Codigo
and ISOPVPEDIDO.ISOPvPedTip_Codigo = ISOPVPEDTIPO.ISOPvPedTip_Codigo
and ISOENTCATEGORIAFISCAL.ISOEnt_Codigo = ISOPVPEDIDO.ISOPvPed_CliCodigo
and ISOPRDDADOFISCAL.ISOPrdDadF_InicioVigencia = (select MAX(ISOPrdDadF_InicioVigencia) from ISOPRDDADOFISCAL X where x.ISOEmp_Codigo = ISOPRDDADOFISCAL.ISOEmp_Codigo and X.ISOPrdDadF_PrdCodigo = ISOPRDDADOFISCAL.ISOPrdDadF_PrdCodigo)
and ISOPVMATRIZICMS.ISOEmp_Codigo = ISOPVPEDIDO.ISOEmp_Codigo
and ISOPVMATRIZICMS.ISOPvMatICMS_UFOrigem = (select top 1 ISOPvCD_Origem from ISOPVCDORIGEM
												where ISOPVPEDIDO.ISOEmp_Codigo = ISOPVCDORIGEM.ISOEmp_Codigo
													and ISOPVPEDIDO.ISOPvPed_EstadoOrigem = ISOPVCDORIGEM.ISOPvCD_Origem
													and ISOPVPEDIDO.ISOPvPed_EstadoDestino = ISOPVCDORIGEM.ISOPvCD_Destino
													and ISOPVPEDIDO.ISOPvPedOri_Codigo = ISOPVCDORIGEM.ISOPvCDOri_Pedido)
and ISOPVMATRIZICMS.ISOPvMatICMS_UFDestino =case
												when ISOPvPed_CodEndEntrega = 0 then (SELECT ISOESTADO.ISOEst_Sigla FROM ISOESTADO WHERE ISOPVPEDIDO.ISOPvPed_EndEstado = ISOESTADO.ISOEst_Codigo AND ISOESTADO.ISOPais_Codigo = 1)
												else (SELECT ISOESTADO.ISOEst_Sigla FROM ISOENTENDERECO, ISOLOCALIDADE, ISOESTADO WHERE ISOENTENDERECO.ISOEnt_Codigo = ISOPVPEDIDO.ISOPvPed_CliCodigo AND ISOENTENDERECO.ISOEntEnd_Codigo = ISOPVPEDIDO.ISOPvPed_CodEndEntrega AND ISOENTENDERECO.ISOLoc_Codigo = ISOLOCALIDADE.ISOLoc_Codigo AND ISOLOCALIDADE.ISOPais_Codigo = 1 AND ISOLOCALIDADE.ISOEst_Codigo = ISOESTADO.ISOEst_Codigo AND ISOLOCALIDADE.ISOPais_Codigo = ISOESTADO.ISOPais_Codigo)
											end
and ISOPVMATRIZICMS.ISOPvMatICMS_AgrupFiscalCod = ISOPRDDADOFISCAL.ISOPrdDadF_CodAgrupFiscal
and ISOPVMATRIZICMS.ISOPvMatICMS_CatFiscalCod = ISOENTCATEGORIAFISCAL.ISOEntCatF_CategFiscalCod
and ISOPVMATRIZICMS.ISOPvMatICMS_DestinacaoCod = ISOPRDDADOFISCAL.ISOPrdDadF_CodDestinacao
and ISOPVMATRIZICMS.ISOPvMatICMS_EspecieCod = ISOPRDDADOFISCAL.ISOPrdDadF_EspecieCod
and ISOPVMATRIZICMS.ISOPvMatICMS_PrdOrigemCod = ISOPRDDADOFISCAL.ISOPrdDadF_CodOrigem
and ISOPVMATRIZICMS.ISOPvMatICMS_NatOperaCod = ISOPVPEDTIPO.ISOPvPedTip_NaturezaOperacaoCo
and ISOPVMATRIZICMS.ISOPvMatICMS_InicioVigencia = (select MAX(Y.ISOPvMatICMS_InicioVigencia) from ISOPVMATRIZICMS Y
													where ISOPVMATRIZICMS.ISOEmp_Codigo = Y.ISOEmp_Codigo AND
														ISOPVMATRIZICMS.ISOPvMatICMS_UFOrigem = Y.ISOPvMatICMS_UFOrigem AND
														ISOPVMATRIZICMS.ISOPvMatICMS_UFDestino = Y.ISOPvMatICMS_UFDestino AND
														ISOPVMATRIZICMS.ISOPvMatICMS_NatOperaCod = Y.ISOPvMatICMS_NatOperaCod AND
														ISOPVMATRIZICMS.ISOPvMatICMS_AgrupFiscalCod = Y.ISOPvMatICMS_AgrupFiscalCod AND
														ISOPVMATRIZICMS.ISOPvMatICMS_EspecieCod = Y.ISOPvMatICMS_EspecieCod AND
														ISOPVMATRIZICMS.ISOPvMatICMS_CatFiscalCod = Y.ISOPvMatICMS_CatFiscalCod AND
														ISOPVMATRIZICMS.ISOPvMatICMS_PrdOrigemCod = Y.ISOPvMatICMS_PrdOrigemCod AND
														ISOPVMATRIZICMS.ISOPvMatICMS_DestinacaoCod = Y.ISOPvMatICMS_DestinacaoCod)
and ISOPVPEDIDO.ISOEmp_Codigo = 11
--and ISOPVPEDIDO.ISOPvPed_CliCodigo = 7780287
--and ISOPVPEDIDO.ISOPvPedSit_Codigo in (1, 30);


-- dbo.MacroConsultaMatrizICMS2 source

CREATE VIEW MacroConsultaMatrizICMS2 AS
WITH
	MATRIZ_ICMS AS (
	select
		ISOEmp_Codigo,
		ISOPvMatICMS_UFOrigem,
		ISOPvMatICMS_UFDestino,
		ISOPvMatICMS_AgrupFiscalCod,
		ISOPvMatICMS_CatFiscalCod,
		ISOPvMatICMS_DestinacaoCod,
		ISOPvMatICMS_EspecieCod,
		ISOPvMatICMS_PrdOrigemCod,
		ISOPvMatICMS_NatOperaCod,
		ISOPvMatICMS_InicioVigencia,
		ISOPvMatICMS_SubTribICMSDocFis,
		ISOPvMatICMS_AliquotaICMS
	from ISOPVMATRIZICMS
	WHERE ISOPVMATRIZICMS.ISOPvMatICMS_InicioVigencia = (select MAX(Y.ISOPvMatICMS_InicioVigencia) from ISOPVMATRIZICMS Y
														where ISOPVMATRIZICMS.ISOEmp_Codigo = Y.ISOEmp_Codigo AND
															ISOPVMATRIZICMS.ISOPvMatICMS_UFOrigem = Y.ISOPvMatICMS_UFOrigem AND
															ISOPVMATRIZICMS.ISOPvMatICMS_UFDestino = Y.ISOPvMatICMS_UFDestino AND
															ISOPVMATRIZICMS.ISOPvMatICMS_NatOperaCod = Y.ISOPvMatICMS_NatOperaCod AND
															ISOPVMATRIZICMS.ISOPvMatICMS_AgrupFiscalCod = Y.ISOPvMatICMS_AgrupFiscalCod AND
															ISOPVMATRIZICMS.ISOPvMatICMS_EspecieCod = Y.ISOPvMatICMS_EspecieCod AND
															ISOPVMATRIZICMS.ISOPvMatICMS_CatFiscalCod = Y.ISOPvMatICMS_CatFiscalCod AND
															ISOPVMATRIZICMS.ISOPvMatICMS_PrdOrigemCod = Y.ISOPvMatICMS_PrdOrigemCod AND
															ISOPVMATRIZICMS.ISOPvMatICMS_DestinacaoCod = Y.ISOPvMatICMS_DestinacaoCod) --AND
			--ISOPVMATRIZICMS.ISOPvMatICMS_UFOrigem IN ('SP','SC','MG') AND
			--ISOPVMATRIZICMS.ISOPvMatICMS_UFDestino IN ('SP','SC','MG','AM','AP','RR')
	),
	PEDIDO_ITEM AS (
	SELECT
		ISOPVPEDIDO.ISOEmp_Codigo,
		ISOPVPEDIDO.ISOPvPed_Codigo,
		ISOPVPEDIDO.ISOPvPed_CodEndEntrega,
		ISOPVPEDIDO.ISOPvPed_CliCodigo,
		ISOPVPEDITEM.ISOPrd_Codigo,
		ISOPVPEDIDO.ISOPvPed_EndEstado,
		ISOPVPEDIDO.ISOPvPedTip_Codigo,
		ISOPVPEDIDO.ISOPvPed_EstadoOrigem,
		ISOPVPEDITEM.ISOPvPedIte_Codigo,
		case
			when ISOPvPed_CodEndEntrega = 0 then (SELECT TOP 1 ISOESTADO.ISOEst_Sigla FROM ISOESTADO WHERE ISOPVPEDIDO.ISOPvPed_EndEstado = ISOESTADO.ISOEst_Codigo AND ISOESTADO.ISOPais_Codigo = 1)
			else (SELECT TOP 1 ISOESTADO.ISOEst_Sigla FROM ISOENTENDERECO, ISOLOCALIDADE, ISOESTADO WHERE ISOENTENDERECO.ISOEnt_Codigo = ISOPVPEDIDO.ISOPvPed_CliCodigo AND ISOENTENDERECO.ISOEntEnd_Codigo = ISOPVPEDIDO.ISOPvPed_CodEndEntrega AND ISOENTENDERECO.ISOLoc_Codigo = ISOLOCALIDADE.ISOLoc_Codigo AND ISOLOCALIDADE.ISOPais_Codigo = 1 AND ISOLOCALIDADE.ISOEst_Codigo = ISOESTADO.ISOEst_Codigo AND ISOLOCALIDADE.ISOPais_Codigo = ISOESTADO.ISOPais_Codigo)
		end ISOPvPed_EstadoDestino
	FROM ISOPVPEDIDO INNER JOIN
		ISOPVPEDITEM ON
			ISOPVPEDIDO.ISOEmp_Codigo = ISOPVPEDITEM.ISOEmp_Codigo AND
			ISOPVPEDIDO.ISOPvPed_Codigo = ISOPVPEDITEM.ISOPvPed_Codigo AND
			ISOPVPEDIDO.ISOEmp_Codigo = 11 AND
			ISOPVPEDIDO.ISOPvPedSit_Codigo in (1, 30)
	),
	DADO_FISCAL_PRODUTO AS (
	SELECT
		ISOPRDDADOFISCAL.ISOEmp_Codigo,
		ISOPRDDADOFISCAL.ISOPrdDadF_PrdCodigo,
		ISOPRDDADOFISCAL.ISOPrdDadF_CodAgrupFiscal,
		ISOPRDDADOFISCAL.ISOPrdDadF_CodDestinacao,
		ISOPRDDADOFISCAL.ISOPrdDadF_CodOrigem,
		ISOPRDDADOFISCAL.ISOPrdDadF_EspecieCod
	FROM ISOPRDDADOFISCAL
	WHERE
		ISOPRDDADOFISCAL.ISOEmp_Codigo = 11 AND
		ISOPRDDADOFISCAL.ISOPrdDadF_InicioVigencia = (select MAX(ISOPrdDadF_InicioVigencia) from ISOPRDDADOFISCAL X where x.ISOEmp_Codigo = ISOPRDDADOFISCAL.ISOEmp_Codigo and X.ISOPrdDadF_PrdCodigo = ISOPRDDADOFISCAL.ISOPrdDadF_PrdCodigo)

	),
	TIPO_PEDIDO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPedTip_Codigo,
			ISOPvPedTip_NaturezaOperacaoCo
		FROM ISOPVPEDTIPO
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedTip_Flag = 'A'
	),
	CATEGORIA_FISCAL AS (
		SELECT
			ISOEntCatF_EmpCodigo,
			ISOEnt_Codigo,
			ISOEntCatF_CategFiscalCod
		FROM ISOENTCATEGORIAFISCAL
		WHERE
			ISOEntCatF_EmpCodigo = 11 AND
			ISOEntCatF_Flag = 'A'
	)
SELECT
	PEDIDO_ITEM.ISOEmp_Codigo,
	PEDIDO_ITEM.ISOPvPed_CliCodigo,
	PEDIDO_ITEM.ISOPvPed_Codigo,
	PEDIDO_ITEM.ISOPvPed_EstadoOrigem,
	PEDIDO_ITEM.ISOPvPedIte_Codigo,
	PEDIDO_ITEM.ISOPrd_Codigo,
	PEDIDO_ITEM.ISOPvPed_EstadoDestino,
	DADO_FISCAL_PRODUTO.ISOPrdDadF_CodAgrupFiscal,
	DADO_FISCAL_PRODUTO.ISOPrdDadF_CodDestinacao,
	DADO_FISCAL_PRODUTO.ISOPrdDadF_CodOrigem,
	DADO_FISCAL_PRODUTO.ISOPrdDadF_EspecieCod,
	CATEGORIA_FISCAL.ISOEntCatF_CategFiscalCod,
	TIPO_PEDIDO.ISOPvPedTip_NaturezaOperacaoCo,
	MATRIZ_ICMS.ISOPvMatICMS_SubTribICMSDocFis,
	MATRIZ_ICMS.ISOPvMatICMS_AliquotaICMS
FROM PEDIDO_ITEM
	INNER JOIN DADO_FISCAL_PRODUTO ON
		PEDIDO_ITEM.ISOEmp_Codigo = DADO_FISCAL_PRODUTO.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPrd_Codigo = DADO_FISCAL_PRODUTO.ISOPrdDadF_PrdCodigo
	INNER JOIN TIPO_PEDIDO ON
		PEDIDO_ITEM.ISOEmp_Codigo = TIPO_PEDIDO.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPedTip_Codigo = TIPO_PEDIDO.ISOPvPedTip_Codigo
	INNER JOIN CATEGORIA_FISCAL ON
		PEDIDO_ITEM.ISOEmp_Codigo = CATEGORIA_FISCAL.ISOEntCatF_EmpCodigo AND
		PEDIDO_ITEM.ISOPvPed_CliCodigo = CATEGORIA_FISCAL.ISOEnt_Codigo
	INNER JOIN MATRIZ_ICMS ON
		MATRIZ_ICMS.ISOEmp_Codigo = DADO_FISCAL_PRODUTO.ISOEmp_Codigo AND
		MATRIZ_ICMS.ISOPvMatICMS_UFOrigem = PEDIDO_ITEM.ISOPvPed_EstadoOrigem AND
		MATRIZ_ICMS.ISOPvMatICMS_UFDestino = case
												when ISOPvPed_CodEndEntrega = 0 then (SELECT ISOESTADO.ISOEst_Sigla FROM ISOESTADO WHERE PEDIDO_ITEM.ISOPvPed_EndEstado = ISOESTADO.ISOEst_Codigo AND ISOESTADO.ISOPais_Codigo = 1)
												else (SELECT ISOESTADO.ISOEst_Sigla FROM ISOENTENDERECO, ISOLOCALIDADE, ISOESTADO WHERE ISOENTENDERECO.ISOEnt_Codigo = PEDIDO_ITEM.ISOPvPed_CliCodigo AND ISOENTENDERECO.ISOEntEnd_Codigo = PEDIDO_ITEM.ISOPvPed_CodEndEntrega AND ISOENTENDERECO.ISOLoc_Codigo = ISOLOCALIDADE.ISOLoc_Codigo AND ISOLOCALIDADE.ISOPais_Codigo = 1 AND ISOLOCALIDADE.ISOEst_Codigo = ISOESTADO.ISOEst_Codigo AND ISOLOCALIDADE.ISOPais_Codigo = ISOESTADO.ISOPais_Codigo)
											end AND
		MATRIZ_ICMS.ISOPvMatICMS_AgrupFiscalCod = DADO_FISCAL_PRODUTO.ISOPrdDadF_CodAgrupFiscal AND
		MATRIZ_ICMS.ISOPvMatICMS_CatFiscalCod = CATEGORIA_FISCAL.ISOEntCatF_CategFiscalCod AND
		MATRIZ_ICMS.ISOPvMatICMS_DestinacaoCod = DADO_FISCAL_PRODUTO.ISOPrdDadF_CodDestinacao AND
		MATRIZ_ICMS.ISOPvMatICMS_EspecieCod = DADO_FISCAL_PRODUTO.ISOPrdDadF_EspecieCod AND
		MATRIZ_ICMS.ISOPvMatICMS_PrdOrigemCod = DADO_FISCAL_PRODUTO.ISOPrdDadF_CodOrigem AND
		MATRIZ_ICMS.ISOPvMatICMS_NatOperaCod = TIPO_PEDIDO.ISOPvPedTip_NaturezaOperacaoCo;


-- dbo.MacroConsultaMatrizICMS3 source

/*


select * from isopvpedido
	INNER JOIN ISOPVPEDITEM PEDIDO_ITEM ON
		ISOPVPEDIDO.ISOEmp_Codigo = PEDIDO_ITEM.ISOEmp_Codigo
		and ISOPVPEDIDO.ISOPvPed_Codigo = PEDIDO_ITEM.ISOPvPed_Codigo
	inner join MacroConsultaMatrizICMS3 MacroConsultaMatrizICMS on
		MacroConsultaMatrizICMS.ISOEmp_Codigo = PEDIDO_ITEM.ISOEmp_Codigo
		AND MacroConsultaMatrizICMS.ISOPvPed_Codigo = PEDIDO_ITEM.ISOPvPed_Codigo
		AND MacroConsultaMatrizICMS.ISOPvPedIte_Codigo = PEDIDO_ITEM.ISOPvPedIte_Codigo
where
	ISOPVPEDIDO.ISOEmp_Codigo = 11
	and ISOPVPEDIDO.ISOPvPed_Codigo = 7921606



*/



CREATE VIEW [dbo].[MacroConsultaMatrizICMS3]
as
select
	ISOPVPEDIDO.ISOEmp_Codigo,
	ISOPVPEDIDO.ISOPvPed_CliCodigo,
	ISOPVPEDIDO.ISOPvPed_Codigo,
	(select TOP 1 ISOPvCD_Origem from ISOPVCDORIGEM where ISOPVPEDIDO.ISOEmp_Codigo = ISOPVCDORIGEM.ISOEmp_Codigo
			and ISOPVPEDIDO.ISOPvPed_EstadoOrigem = ISOPVCDORIGEM.ISOPvCD_Origem
			and ISOPVPEDIDO.ISOPvPed_EstadoDestino = ISOPVCDORIGEM.ISOPvCD_Destino
			and ISOPVPEDIDO.ISOPvPedOri_Codigo = ISOPVCDORIGEM.ISOPvCDOri_Pedido) ISOPvPed_EstadoOrigem,
	case
		when ISOPvPed_CodEndEntrega = 0 then (SELECT TOP 1 ISOESTADO.ISOEst_Sigla FROM ISOESTADO WHERE ISOPVPEDIDO.ISOPvPed_EndEstado = ISOESTADO.ISOEst_Codigo AND ISOESTADO.ISOPais_Codigo = 1)
		else (SELECT TOP 1 ISOESTADO.ISOEst_Sigla FROM ISOENTENDERECO, ISOLOCALIDADE, ISOESTADO WHERE ISOENTENDERECO.ISOEnt_Codigo = ISOPVPEDIDO.ISOPvPed_CliCodigo AND ISOENTENDERECO.ISOEntEnd_Codigo = ISOPVPEDIDO.ISOPvPed_CodEndEntrega AND ISOENTENDERECO.ISOLoc_Codigo = ISOLOCALIDADE.ISOLoc_Codigo AND ISOLOCALIDADE.ISOPais_Codigo = 1 AND ISOLOCALIDADE.ISOEst_Codigo = ISOESTADO.ISOEst_Codigo AND ISOLOCALIDADE.ISOPais_Codigo = ISOESTADO.ISOPais_Codigo)
	end ISOPvPed_EstadoDestino,
	ISOPVPEDITEM.ISOPvPedIte_Codigo,
	ISOPVPEDITEM.ISOPrd_Codigo,
	ISOPRDDADOFISCAL.ISOPrdDadF_CodAgrupFiscal,
	ISOPRDDADOFISCAL.ISOPrdDadF_CodDestinacao,
	ISOPRDDADOFISCAL.ISOPrdDadF_CodOrigem,
	ISOPRDDADOFISCAL.ISOPrdDadF_EspecieCod,
	ISOENTCATEGORIAFISCAL.ISOEntCatF_CategFiscalCod,
	ISOPVPEDTIPO.ISOPvPedTip_NaturezaOperacaoCo,
	ISOPVMATRIZICMS.ISOPvMatICMS_SubTribICMSDocFis,
	ISOPVMATRIZICMS.ISOPvMatICMS_AliquotaICMS
from
	ISOPVPEDIDO
		INNER JOIN ISOPVPEDITEM ON
			ISOPVPEDIDO.ISOEmp_Codigo = ISOPVPEDITEM.ISOEmp_Codigo
			and ISOPVPEDIDO.ISOPvPed_Codigo = ISOPVPEDITEM.ISOPvPed_Codigo
			AND ISOPvPedSit_Codigo in (1, 30)
		INNER JOIN ISOPVPEDTIPO ON
			ISOPVPEDIDO.ISOEmp_Codigo = ISOPVPEDTIPO.ISOEmp_Codigo
			and ISOPVPEDIDO.ISOPvPedTip_Codigo = ISOPVPEDTIPO.ISOPvPedTip_Codigo
		INNER JOIN ISOPRDDADOFISCAL ON
			ISOPVPEDITEM.ISOEmp_Codigo = ISOPRDDADOFISCAL.ISOEmp_Codigo
			and ISOPVPEDITEM.ISOPrd_Codigo = ISOPRDDADOFISCAL.ISOPrdDadF_PrdCodigo
			and ISOPRDDADOFISCAL.ISOPrdDadF_InicioVigencia = (select MAX(ISOPrdDadF_InicioVigencia) from ISOPRDDADOFISCAL X where x.ISOEmp_Codigo = ISOPRDDADOFISCAL.ISOEmp_Codigo and X.ISOPrdDadF_PrdCodigo = ISOPRDDADOFISCAL.ISOPrdDadF_PrdCodigo)
		INNER JOIN ISOENTCATEGORIAFISCAL ON
			ISOENTCATEGORIAFISCAL.ISOEnt_Codigo = ISOPVPEDIDO.ISOPvPed_CliCodigo
		INNER JOIN ISOPVMATRIZICMS ON
			ISOPVMATRIZICMS.ISOEmp_Codigo = ISOPVPEDIDO.ISOEmp_Codigo
			and ISOPVMATRIZICMS.ISOPvMatICMS_UFOrigem = (select top 1 ISOPvCD_Origem from ISOPVCDORIGEM
															where ISOPVPEDIDO.ISOEmp_Codigo = ISOPVCDORIGEM.ISOEmp_Codigo
																and ISOPVPEDIDO.ISOPvPed_EstadoOrigem = ISOPVCDORIGEM.ISOPvCD_Origem
																and ISOPVPEDIDO.ISOPvPed_EstadoDestino = ISOPVCDORIGEM.ISOPvCD_Destino
																and ISOPVPEDIDO.ISOPvPedOri_Codigo = ISOPVCDORIGEM.ISOPvCDOri_Pedido)
			and ISOPVMATRIZICMS.ISOPvMatICMS_UFDestino =case
															when ISOPvPed_CodEndEntrega = 0 then (SELECT ISOESTADO.ISOEst_Sigla FROM ISOESTADO WHERE ISOPVPEDIDO.ISOPvPed_EndEstado = ISOESTADO.ISOEst_Codigo AND ISOESTADO.ISOPais_Codigo = 1)
															else (SELECT ISOESTADO.ISOEst_Sigla FROM ISOENTENDERECO, ISOLOCALIDADE, ISOESTADO WHERE ISOENTENDERECO.ISOEnt_Codigo = ISOPVPEDIDO.ISOPvPed_CliCodigo AND ISOENTENDERECO.ISOEntEnd_Codigo = ISOPVPEDIDO.ISOPvPed_CodEndEntrega AND ISOENTENDERECO.ISOLoc_Codigo = ISOLOCALIDADE.ISOLoc_Codigo AND ISOLOCALIDADE.ISOPais_Codigo = 1 AND ISOLOCALIDADE.ISOEst_Codigo = ISOESTADO.ISOEst_Codigo AND ISOLOCALIDADE.ISOPais_Codigo = ISOESTADO.ISOPais_Codigo)
														end
			and ISOPVMATRIZICMS.ISOPvMatICMS_AgrupFiscalCod = ISOPRDDADOFISCAL.ISOPrdDadF_CodAgrupFiscal
			and ISOPVMATRIZICMS.ISOPvMatICMS_CatFiscalCod = ISOENTCATEGORIAFISCAL.ISOEntCatF_CategFiscalCod
			and ISOPVMATRIZICMS.ISOPvMatICMS_DestinacaoCod = ISOPRDDADOFISCAL.ISOPrdDadF_CodDestinacao
			and ISOPVMATRIZICMS.ISOPvMatICMS_EspecieCod = ISOPRDDADOFISCAL.ISOPrdDadF_EspecieCod
			and ISOPVMATRIZICMS.ISOPvMatICMS_PrdOrigemCod = ISOPRDDADOFISCAL.ISOPrdDadF_CodOrigem
			and ISOPVMATRIZICMS.ISOPvMatICMS_NatOperaCod = ISOPVPEDTIPO.ISOPvPedTip_NaturezaOperacaoCo
			and ISOPVMATRIZICMS.ISOPvMatICMS_InicioVigencia = (select MAX(Y.ISOPvMatICMS_InicioVigencia) from ISOPVMATRIZICMS Y
																where ISOPVMATRIZICMS.ISOEmp_Codigo = Y.ISOEmp_Codigo AND
																	ISOPVMATRIZICMS.ISOPvMatICMS_UFOrigem = Y.ISOPvMatICMS_UFOrigem AND
																	ISOPVMATRIZICMS.ISOPvMatICMS_UFDestino = Y.ISOPvMatICMS_UFDestino AND
																	ISOPVMATRIZICMS.ISOPvMatICMS_NatOperaCod = Y.ISOPvMatICMS_NatOperaCod AND
																	ISOPVMATRIZICMS.ISOPvMatICMS_AgrupFiscalCod = Y.ISOPvMatICMS_AgrupFiscalCod AND
																	ISOPVMATRIZICMS.ISOPvMatICMS_EspecieCod = Y.ISOPvMatICMS_EspecieCod AND
																	ISOPVMATRIZICMS.ISOPvMatICMS_CatFiscalCod = Y.ISOPvMatICMS_CatFiscalCod AND
																	ISOPVMATRIZICMS.ISOPvMatICMS_PrdOrigemCod = Y.ISOPvMatICMS_PrdOrigemCod AND
																	ISOPVMATRIZICMS.ISOPvMatICMS_DestinacaoCod = Y.ISOPvMatICMS_DestinacaoCod)
where
ISOPVPEDIDO.ISOEmp_Codigo = 11
--and ISOPVPEDIDO.ISOPvPed_CliCodigo = 7921606
--and ISOPVPEDIDO.ISOPvPedSit_Codigo in (1, 30);


-- dbo.MacroConsultaMatrizICMS4 source

/*

select * from MacroConsultaMatrizICMS4

*/





CREATE VIEW [dbo].[MacroConsultaMatrizICMS4]
as
with
	pedido as (
		select
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPed_CliCodigo,
			ISOPvPed_EstadoOrigem,
			ISOPvPed_EstadoDestino,
			ISOPvPedOri_Codigo,
			ISOPvPedSit_Codigo,
			ISOPvPedTip_Codigo,
			ISOPvPed_CodEndEntrega,
			ISOPvPed_EndEstado
		from
			ISOPVPEDIDO
		where
			ISOEmp_Codigo = 11
			AND ISOPvPedSit_Codigo in (1, 30)
	),
	pedido_item as (
		select
			ISOPVPEDITEM.ISOEmp_Codigo,
			ISOPVPEDITEM.ISOPvPed_Codigo,
			ISOPVPEDITEM.ISOPrd_Codigo,
			ISOPVPEDITEM.ISOPvPedIte_Codigo
		from
			ISOPVPEDITEM
				INNER JOIN PEDIDO ON
					PEDIDO.ISOEmp_Codigo = ISOPVPEDITEM.ISOEmp_Codigo
					AND PEDIDO.ISOPvPed_Codigo = ISOPVPEDITEM.ISOPvPed_Codigo
	),
	categoria_fical as (
		select
			ISOEnt_Codigo,
			ISOEntCatF_CategFiscalCod
		from
			ISOENTCATEGORIAFISCAL
	),
	tipo_pedido as (
		select
			ISOEmp_Codigo,
			ISOPvPedTip_Codigo,
			ISOPvPedTip_NaturezaOperacaoCo
		from ISOPVPEDTIPO
		where
			ISOEmp_Codigo = 11),
	dado_fiscal_produto as (
		select
			ISOEmp_Codigo,
			ISOPrdDadF_PrdCodigo,
			ISOPrdDadF_CodAgrupFiscal,
			ISOPrdDadF_CodDestinacao,
			ISOPrdDadF_CodOrigem,
			ISOPrdDadF_EspecieCod,
			ISOPrdDadF_InicioVigencia
		from ISOPRDDADOFISCAL
		where
			ISOEmp_Codigo = 11
	),
	matriz_icms as (
		select
			ISOEmp_Codigo,
			ISOPvMatICMS_UFOrigem,
			ISOPvMatICMS_UFDestino,
			ISOPvMatICMS_AgrupFiscalCod,
			ISOPvMatICMS_CatFiscalCod,
			ISOPvMatICMS_DestinacaoCod,
			ISOPvMatICMS_EspecieCod,
			ISOPvMatICMS_PrdOrigemCod,
			ISOPvMatICMS_NatOperaCod,
			ISOPvMatICMS_SubTribICMSDocFis,
			ISOPvMatICMS_AliquotaICMS
		from ISOPVMATRIZICMS
		where
			ISOEmp_Codigo = 11
			and ISOPVMATRIZICMS.ISOPvMatICMS_InicioVigencia = (select MAX(Y.ISOPvMatICMS_InicioVigencia) from ISOPVMATRIZICMS Y
																			where ISOPVMATRIZICMS.ISOEmp_Codigo = Y.ISOEmp_Codigo AND
																				ISOPVMATRIZICMS.ISOPvMatICMS_UFOrigem = Y.ISOPvMatICMS_UFOrigem AND
																				ISOPVMATRIZICMS.ISOPvMatICMS_UFDestino = Y.ISOPvMatICMS_UFDestino AND
																				ISOPVMATRIZICMS.ISOPvMatICMS_NatOperaCod = Y.ISOPvMatICMS_NatOperaCod AND
																				ISOPVMATRIZICMS.ISOPvMatICMS_AgrupFiscalCod = Y.ISOPvMatICMS_AgrupFiscalCod AND
																				ISOPVMATRIZICMS.ISOPvMatICMS_EspecieCod = Y.ISOPvMatICMS_EspecieCod AND
																				ISOPVMATRIZICMS.ISOPvMatICMS_CatFiscalCod = Y.ISOPvMatICMS_CatFiscalCod AND
																				ISOPVMATRIZICMS.ISOPvMatICMS_PrdOrigemCod = Y.ISOPvMatICMS_PrdOrigemCod AND
																				ISOPVMATRIZICMS.ISOPvMatICMS_DestinacaoCod = Y.ISOPvMatICMS_DestinacaoCod)
	)

select
	PEDIDO.ISOEmp_Codigo,
	PEDIDO.ISOPvPed_CliCodigo,
	PEDIDO.ISOPvPed_Codigo,
	(select TOP 1 ISOPvCD_Origem from ISOPVCDORIGEM where PEDIDO.ISOEmp_Codigo = ISOPVCDORIGEM.ISOEmp_Codigo
			and PEDIDO.ISOPvPed_EstadoOrigem = ISOPVCDORIGEM.ISOPvCD_Origem
			and PEDIDO.ISOPvPed_EstadoDestino = ISOPVCDORIGEM.ISOPvCD_Destino
			and PEDIDO.ISOPvPedOri_Codigo = ISOPVCDORIGEM.ISOPvCDOri_Pedido) ISOPvPed_EstadoOrigem,
	case
		when ISOPvPed_CodEndEntrega = 0 then (SELECT TOP 1 ISOESTADO.ISOEst_Sigla FROM ISOESTADO WHERE PEDIDO.ISOPvPed_EndEstado = ISOESTADO.ISOEst_Codigo AND ISOESTADO.ISOPais_Codigo = 1)
		else (SELECT TOP 1 ISOESTADO.ISOEst_Sigla FROM ISOENTENDERECO, ISOLOCALIDADE, ISOESTADO WHERE ISOENTENDERECO.ISOEnt_Codigo = PEDIDO.ISOPvPed_CliCodigo AND ISOENTENDERECO.ISOEntEnd_Codigo = PEDIDO.ISOPvPed_CodEndEntrega AND ISOENTENDERECO.ISOLoc_Codigo = ISOLOCALIDADE.ISOLoc_Codigo AND ISOLOCALIDADE.ISOPais_Codigo = 1 AND ISOLOCALIDADE.ISOEst_Codigo = ISOESTADO.ISOEst_Codigo AND ISOLOCALIDADE.ISOPais_Codigo = ISOESTADO.ISOPais_Codigo)
	end ISOPvPed_EstadoDestino,
	PEDIDO_ITEM.ISOPvPedIte_Codigo,
	PEDIDO_ITEM.ISOPrd_Codigo,
	DADO_FISCAL_PRODUTO.ISOPrdDadF_CodAgrupFiscal,
	DADO_FISCAL_PRODUTO.ISOPrdDadF_CodDestinacao,
	DADO_FISCAL_PRODUTO.ISOPrdDadF_CodOrigem,
	DADO_FISCAL_PRODUTO.ISOPrdDadF_EspecieCod,
	CATEGORIA_FICAL.ISOEntCatF_CategFiscalCod,
	TIPO_PEDIDO.ISOPvPedTip_NaturezaOperacaoCo,
	MATRIZ_ICMS.ISOPvMatICMS_SubTribICMSDocFis,
	MATRIZ_ICMS.ISOPvMatICMS_AliquotaICMS
	FROM PEDIDO
		INNER JOIN PEDIDO_ITEM ON
			PEDIDO.ISOEmp_Codigo = PEDIDO_ITEM.ISOEmp_Codigo
			and PEDIDO.ISOPvPed_Codigo = PEDIDO_ITEM.ISOPvPed_Codigo
			AND PEDIDO.ISOPvPedSit_Codigo in (1, 30)
		INNER JOIN TIPO_PEDIDO ON
			PEDIDO.ISOEmp_Codigo = TIPO_PEDIDO.ISOEmp_Codigo
			and PEDIDO.ISOPvPedTip_Codigo = TIPO_PEDIDO.ISOPvPedTip_Codigo
		INNER JOIN DADO_FISCAL_PRODUTO ON
			PEDIDO_ITEM.ISOEmp_Codigo = DADO_FISCAL_PRODUTO.ISOEmp_Codigo
			and PEDIDO_ITEM.ISOPrd_Codigo = DADO_FISCAL_PRODUTO.ISOPrdDadF_PrdCodigo
			and DADO_FISCAL_PRODUTO.ISOPrdDadF_InicioVigencia = (select MAX(ISOPrdDadF_InicioVigencia) from ISOPRDDADOFISCAL X where x.ISOEmp_Codigo = DADO_FISCAL_PRODUTO.ISOEmp_Codigo and X.ISOPrdDadF_PrdCodigo = DADO_FISCAL_PRODUTO.ISOPrdDadF_PrdCodigo)
		INNER JOIN CATEGORIA_FICAL ON
			CATEGORIA_FICAL.ISOEnt_Codigo = PEDIDO.ISOPvPed_CliCodigo
		INNER JOIN MATRIZ_ICMS ON
			MATRIZ_ICMS.ISOEmp_Codigo = PEDIDO.ISOEmp_Codigo
			and MATRIZ_ICMS.ISOPvMatICMS_UFOrigem = (select top 1 ISOPvCD_Origem from ISOPVCDORIGEM
															where PEDIDO.ISOEmp_Codigo = ISOPVCDORIGEM.ISOEmp_Codigo
																and PEDIDO.ISOPvPed_EstadoOrigem = ISOPVCDORIGEM.ISOPvCD_Origem
																and PEDIDO.ISOPvPed_EstadoDestino = ISOPVCDORIGEM.ISOPvCD_Destino
																and PEDIDO.ISOPvPedOri_Codigo = ISOPVCDORIGEM.ISOPvCDOri_Pedido)
			and MATRIZ_ICMS.ISOPvMatICMS_UFDestino =case
															when ISOPvPed_CodEndEntrega = 0 then (SELECT ISOESTADO.ISOEst_Sigla FROM ISOESTADO WHERE PEDIDO.ISOPvPed_EndEstado = ISOESTADO.ISOEst_Codigo AND ISOESTADO.ISOPais_Codigo = 1)
															else (SELECT ISOESTADO.ISOEst_Sigla FROM ISOENTENDERECO, ISOLOCALIDADE, ISOESTADO WHERE ISOENTENDERECO.ISOEnt_Codigo = PEDIDO.ISOPvPed_CliCodigo AND ISOENTENDERECO.ISOEntEnd_Codigo = PEDIDO.ISOPvPed_CodEndEntrega AND ISOENTENDERECO.ISOLoc_Codigo = ISOLOCALIDADE.ISOLoc_Codigo AND ISOLOCALIDADE.ISOPais_Codigo = 1 AND ISOLOCALIDADE.ISOEst_Codigo = ISOESTADO.ISOEst_Codigo AND ISOLOCALIDADE.ISOPais_Codigo = ISOESTADO.ISOPais_Codigo)
														end
			and MATRIZ_ICMS.ISOPvMatICMS_AgrupFiscalCod = DADO_FISCAL_PRODUTO.ISOPrdDadF_CodAgrupFiscal
			and MATRIZ_ICMS.ISOPvMatICMS_CatFiscalCod = CATEGORIA_FICAL.ISOEntCatF_CategFiscalCod
			and MATRIZ_ICMS.ISOPvMatICMS_DestinacaoCod = DADO_FISCAL_PRODUTO.ISOPrdDadF_CodDestinacao
			and MATRIZ_ICMS.ISOPvMatICMS_EspecieCod = DADO_FISCAL_PRODUTO.ISOPrdDadF_EspecieCod
			and MATRIZ_ICMS.ISOPvMatICMS_PrdOrigemCod = DADO_FISCAL_PRODUTO.ISOPrdDadF_CodOrigem
			and MATRIZ_ICMS.ISOPvMatICMS_NatOperaCod = TIPO_PEDIDO.ISOPvPedTip_NaturezaOperacaoCo
where PEDIDO.ISOEmp_Codigo = 11;


-- dbo.MacroPedidoTeste source

CREATE VIEW MacroPedidoTeste
as
with
	PEDIDO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPed_CliCodigo,
			ISOPvPed_EstadoOrigem,
			ISOPvPed_EstadoDestino,
			ISOPvPed_CodigoAtendente,
			ISOPvPedSit_Codigo,
			ISOPvPedOri_Codigo,
			ISOPvPed_CodEndCobranca,
			ISOPvPed_ValorTotalPedido,
			ISOPeCndPgt_Codigo,
			ISOPvPed_ValorFrete,
			ISOPvPedTip_Codigo,
			ISOPvPed_Pagamento, -- Condição de pagamento
			ISOPVPed_OrdCompra,
			ISOPvPed_DtaSolEntrega,
			ISOPvPed_CodEndEntrega,
			ISOPvPed_DtaPedido,  -- Data do pedido
			ISOPvPed_HoraPedido -- Hora do pedido
		FROM ISOPVPEDIDO WITH (nOLOCK)
		WHERE
			ISOEmp_Codigo = 11
			--AND ISOPvPedSit_Codigo in (1, 30)
			--and ISOPvPedSit_Codigo = 999
			AND ISOPvPed_Codigo IN (7854884, 7854861)
			),
	PEDIDO_ITEM AS (
		SELECT
			ISOPVPEDITEM.ISOEmp_Codigo,
			ISOPVPEDITEM.ISOPvPed_Codigo,
			ISOPVPEDITEM.ISOPvPedIte_Codigo,
			ISOPVPEDITEM.ISOPrd_Codigo,
			ISOPVPEDITEM.ISOPvPedIte_Quantidade,
			ISOPVPEDITEM.ISOPvPedIte_DtaSolEntrega,
			ISOPVPEDITEM.ISOPvPedIte_UnidadeOrigem,
			ISOPVPEDITEM.ISOPvPedIte_UnidadeDestino,
			ISOPVPEDITEM.ISOPvPedIte_ValorUnitario,
			ISOPVPEDITEM.ISOPvPedIteSit_Codigo,
			ISOPVPEDITEM.ISOPvPedIte_AgendamentoData,
			ISOPVPEDITEM.ISOPvPedIte_AgendamentoHoraIni,
			ISOPVPEDITEM.ISOPvPedIte_AgendamentoHoraFin,
			ISOPVPEDITEM.ISOPvPedIte_ValorEmpenho,
			ISOPVPEDITEM.ISOPvPedIte_PrecoLista,
			ISOPVPEDITEM.ISOPvPedIte_ValorIPI,
			ISOPVPEDITEM.ISOPvPedIte_VlrSubsTributaria,
			ISOPVPEDITEM.ISOPvPedIte_ValorICMS,
			ISOPVPEDITEM.ISOPvPedIte_ValorPIS,
			ISOPVPEDITEM.ISOPvPedIte_ValorCofins,
			ISOPVPEDITEM.ISOPVPedIte_ValorFCPST,
			ISOPVPEDITEM.ISOPvPedIte_ValorFCP,
			ISOPVPEDITEM.ISOPvPedIte_ValorTotalCalculoF,
			ISOPVPEDITEM.ISOPvPedIte_DataEntregaItem,
			ISOPVPEDITEM.ISOPvPedIte_PercentualIPI,
			ISOPVPEDITEM.ISOPvPedIte_PercSubsTributaria,
			ISOPVPEDITEM.ISOPvPedIte_PercentualFCPST,
			ISOPVPEDITEM.ISOPvPedIte_PrecoAjustado,
			ISOPVPEDITEM.ISOPvPedIte_PrecoAjustadoTotal
		FROM ISOPVPEDITEM INNER JOIN ISOPVPEDIDO
			ON ISOPVPEDIDO.ISOEmp_Codigo = ISOPVPEDITEM.ISOEmp_Codigo
			AND ISOPVPEDIDO.ISOPvPed_Codigo = ISOPVPEDITEM.ISOPvPed_Codigo
		WHERE
			ISOPVPEDITEM.ISOEmp_Codigo = 11
			AND ISOPVPEDITEM.ISOPvPedIteSit_Codigo = 1
			and ISOPVPEDITEM.ISOPrd_Codigo = '266108'
			),
	TOTAL_LINHAS_PEDIDO AS (
		SELECT
			ISOPVPEDITEM.ISOEmp_Codigo,
			ISOPVPEDITEM.ISOPvPed_Codigo,
			COUNT(*) AS ISOPvPedIte_TotalLinhas
		FROM ISOPVPEDITEM INNER JOIN ISOPVPEDIDO
			ON ISOPVPEDIDO.ISOEmp_Codigo = ISOPVPEDITEM.ISOEmp_Codigo
			AND ISOPVPEDIDO.ISOPvPed_Codigo = ISOPVPEDITEM.ISOPvPed_Codigo
		WHERE
			ISOPVPEDITEM.ISOEmp_Codigo = 11
			AND ISOPVPEDITEM.ISOPvPedIteSit_Codigo = 1
		GROUP BY
			ISOPVPEDITEM.ISOEmp_Codigo,
			ISOPVPEDITEM.ISOPvPed_Codigo),
	TOTAL_PEDIDO_EMPENHO AS (
		SELECT
			ISOPVPEDITEM.ISOEmp_Codigo,
			ISOPVPEDITEM.ISOPvPed_Codigo,
			SUM(ISOPVPEDITEM.ISOPvPedIte_Quantidade * ISOPVPEDITEM.ISOPvPedIte_ValorEmpenho) AS ISOPvPed_ValorTotalPedido
		FROM         ISOPVPEDITEM INNER JOIN ISOPVPEDIDO
			ON ISOPVPEDIDO.ISOEmp_Codigo = ISOPVPEDITEM.ISOEmp_Codigo
			AND ISOPVPEDIDO.ISOPvPed_Codigo = ISOPVPEDITEM.ISOPvPed_Codigo
		WHERE     (ISOPVPEDITEM.ISOEmp_Codigo = 11) AND (ISOPVPEDITEM.ISOPvPedIteSit_Codigo = 1)
		GROUP BY ISOPVPEDITEM.ISOEmp_Codigo, ISOPVPEDITEM.ISOPvPed_Codigo),
	TOTAL_PEDIDO AS (
		SELECT
			ISOPVPEDITEM.ISOEmp_Codigo,
			ISOPVPEDITEM.ISOPvPed_Codigo,
			SUM(ISOPVPEDITEM.ISOPvPedIte_Quantidade * ISOPVPEDITEM.ISOPvPedIte_PrecoAjustado) AS ISOPvPed_ValorTotalPedido
		FROM         ISOPVPEDITEM INNER JOIN ISOPVPEDIDO
			ON ISOPVPEDIDO.ISOEmp_Codigo = ISOPVPEDITEM.ISOEmp_Codigo
			AND ISOPVPEDIDO.ISOPvPed_Codigo = ISOPVPEDITEM.ISOPvPed_Codigo
		WHERE     (ISOPVPEDITEM.ISOEmp_Codigo = 11) AND (ISOPVPEDITEM.ISOPvPedIteSit_Codigo = 1) --and ISOPvPed_Codigo >= 8741752
		GROUP BY ISOPVPEDITEM.ISOEmp_Codigo, ISOPVPEDITEM.ISOPvPed_Codigo),
	ATENDENTE_PEDIDO AS (
		SELECT
			ISOEnt_Codigo,
			ISOEnt_Nome
		FROM ISOENTIDADE INNER JOIN ISOENTUSUARIO
			ON ISOENTIDADE.ISOEnt_Codigo = ISOENTUSUARIO.ISOEntUsu_Codigo),
	FATOR_CONVERSAO_PRODUTO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPrdUndFatC_PrdCodigo,
			ISOPrdUndFatC_UndOrigem,
			ISOPrdUndFatC_UndDestino,
			-- criado regra de divisão quando a unidade de medida for "M"  --  22/07/2020 zagoto,edilon,cris
			case
				when ISOPrdUndFatC_UndDestino = 'M' then 1 / ISOPrdUndFatC_FatorConversao
				else ISOPrdUndFatC_FatorConversao
			end ISOPrdUndFatC_FatorConversao,
			ISOPrdUndFatC_Flag,
			ISOPrdUndFatC_Armazem
		FROM ISOPRDUNDFATORCONVERSAO WITH (NOLOCK)
		WHERE ISOEmp_Codigo = 11 and ISOPrdUndFatC_Flag = 'A' AND ISOPrdUndFatC_Armazem = ''), -- 02/12/2020 Zagoto - incluido critério de flag PERFORMANCE
	CLIENTE AS (
		SELECT	DISTINCT
			ISOENTCLIENTE.ISOEmp_Codigo,
			ISOENTCLIENTE.ISOEntCli_Codigo,
			ISOENTCLIENTE.ISOEntCli_Operacao
		FROM ISOENTCLIENTE INNER JOIN ISOPVPEDIDO
			ON ISOENTCLIENTE.ISOEmp_Codigo = ISOPVPEDIDO.ISOEmp_Codigo
				AND ISOENTCLIENTE.ISOEntCli_Codigo = ISOPVPEDIDO.ISOPvPed_CliCodigo
				AND ISOPVPEDIDO.ISOEmp_Codigo= 11),
	LOCAL_FATURAMENTO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvCD_Origem,
			ISOPvCD_Destino,
			ISOPvCDOri_Pedido,
			ISOPvCDOri_Armazem
		FROM ISOPVCDORIGEM WITH (nOLOCK)),
	EMPENHO AS (
		SELECT
			ISOCTPEDCONTRATO.ISOEmp_Codigo,
			ISOCTPEDCONTRATO.ISOCttPedCon_PedidoCodigo,
			ISOCTPEDCONTRATO.ISOCttPedCon_NumeroEmp
		FROM ISOCTPEDCONTRATO WITH (nOLOCK)
		INNER JOIN ISOPVPEDIDO
			ON ISOPVPEDIDO.ISOEmp_Codigo = ISOCTPEDCONTRATO.ISOEmp_Codigo
			AND ISOPVPEDIDO.ISOPvPed_Codigo = ISOCTPEDCONTRATO.ISOCttPedCon_PedidoCodigo
			AND ISOPVPEDIDO.ISOEmp_Codigo = 11),
	TABELA_CLIENTE AS (
		SELECT	DISTINCT
			ISOENTCLIENTEATTVALUES.ISOEmp_Codigo,
			ISOENTCLIENTEATTVALUES.ISOEntCli_Codigo,
			ISOENTCLIENTEATTVALUES.ISOEntClienteAttId,
			ISOENTCLIENTEATTVALUES.ISOEntClienteAttOtherValue
		FROM ISOENTCLIENTEATTVALUES INNER JOIN ISOPVPEDIDO
			ON ISOENTCLIENTEATTVALUES.ISOEmp_Codigo = ISOPVPEDIDO.ISOEmp_Codigo
				AND ISOENTCLIENTEATTVALUES.ISOEntCli_Codigo = ISOPVPEDIDO.ISOPvPed_CliCodigo
				AND ISOPVPEDIDO.ISOEmp_Codigo= 11
		WHERE
			ISOENTCLIENTEATTVALUES.ISOEmp_Codigo = 11 AND
			ISOENTCLIENTEATTVALUES.ISOEntClienteAttId = 99),
	ESTABELECIMENTO_LX AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvCD_Origem,
			ISOPvCD_Destino,
			ISOPvCD_Estabelecimento
		FROM ISOPVCD WITH (nOLOCK)),
	ORIGEM_PROTHEUS AS (
		SELECT
			ISOEmp_Codigo,
			ISOEmpEnt_EntCodigo,
			ISOEmpOri_Codigo,
			ISOEmpEnt_Ori_Codigo
		FROM ISOEMPENT_ORIGEM WITH (nOLOCK)
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOEmpOri_Codigo = 13),
	ORIGEM_LX AS (
		SELECT	DISTINCT
			ISOEMPENT_ORIGEM.ISOEmp_Codigo,
			ISOEMPENT_ORIGEM.ISOEmpEnt_EntCodigo,
			ISOEMPENT_ORIGEM.ISOEmpOri_Codigo,
			ISOEMPENT_ORIGEM.ISOEmpEnt_Ori_Codigo
		FROM ISOEMPENT_ORIGEM INNER JOIN ISOPVPEDIDO
			ON ISOEMPENT_ORIGEM.ISOEmp_Codigo = ISOPVPEDIDO.ISOEmp_Codigo
				AND ISOEMPENT_ORIGEM.ISOEmpEnt_EntCodigo = ISOPVPEDIDO.ISOPvPed_CliCodigo
				AND ISOPVPEDIDO.ISOEmp_Codigo= 11
		WHERE
			ISOEMPENT_ORIGEM.ISOEmp_Codigo = 11 AND
			ISOEMPENT_ORIGEM.ISOEmpOri_Codigo = 2),
	CONDICAO_PAGAMENTO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPeCndPgt_Codigo,
			ISOPeCntPgt_Forma
		FROM ISOPECNDPAGAMENTO WITH (nOLOCK)),
	CUSTO_FINANCEIRO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvTV_Codigo,
			ISOPvEstab_Codigo,
			ISOPvEstabTbV_PercDespFinancei
		FROM ISOPvEstab_TblVenda
		WHERE
			ISOEMP_CODIGO = 11
	),
	ANALISE_CREDITO AS (
		SELECT
			ISOWFTRF_PEDIDO.ISOEmp_Codigo,
			ISOWFTRF_PEDIDO.ISOPvPed_Codigo,
		    CASE WHEN ISOWFTrf_RspExe_RspCodigo IS NULL THEN '' ELSE CONVERT(VARCHAR(8), ISOWFTrf_DataSolucao, 112) END AS ISOWFTrf_DataLiberacaoCredito,  -- Data em que a tarefa de liberação de crédito foi executada
			CASE WHEN ISOWFTrf_RspExe_RspCodigo IS NULL THEN '' ELSE CONVERT(VARCHAR(8), ISOWFTrf_DataSolucao, 108) END AS ISOWFTrf_HoraLiberacaoCredito,
			CASE WHEN ISOWFTrf_RspExe_RspCodigo IS NULL THEN '' ELSE COALESCE(CAST(ISOWFTrf_RspExe_RspCodigo AS VARCHAR(10)),'')+'-'+COALESCE(USUARIO_CEDITO.ISOEnt_Nome,'') END AS ISOWFTrf_CodigoAtendente
		FROM ISOWFTRF_PEDIDO INNER JOIN ISOWFPROCEDIMENTO ON
			ISOWFTRF_PEDIDO.ISOEmp_Codigo = ISOWFPROCEDIMENTO.ISOEmp_Codigo AND
			ISOWFTRF_PEDIDO.ISOWFTrf_Ped_PrcCodigo = ISOWFPROCEDIMENTO.ISOWFPrc_Codigo AND
			ISOWFPROCEDIMENTO.ISOWFPrcPad_Codigo IN (SELECT ISOWFPrcPad_Codigo FROM ISOWFPrcPadrao where isoemp_codigo = 11 and ISOWFPrcPad_Descricao like 'BO%' and ISOWFPrcPad_Flag = 'A') AND -- PROCEDIMENTO ( PEDIDO - ANALISE DE CREDITO)
			ISOWFTRF_PEDIDO.ISOWFTrf_Ped_TrfCodigo = 1 --- CÓDIGO DA TAREFA QUE O ATENDENTE IRÁ CONFIRMAR O CRÉDITO DO CLIENTE ********
		INNER JOIN ISOWFTAREFA ON -- TAREFA DE LIBERAÇÃO DE CRÉDITO
			ISOWFTRF_PEDIDO.ISOEmp_Codigo = ISOWFTAREFA.ISOEmp_Codigo AND
			ISOWFTRF_PEDIDO.ISOWFTrf_Ped_PrcCodigo = ISOWFTAREFA.ISOWFPrc_Codigo AND
			ISOWFTRF_PEDIDO.ISOWFTrf_Ped_TrfCodigo = ISOWFTAREFA.ISOWFTrfPad_Codigo AND
			ISOWFTAREFA.ISOWFTrfPad_Codigo = 1 AND  -- TAREFA (ANALISAR PEDIDO RETIDO EM CREDITO)
			ISOWFTAREFA.ISOWFTrfPadSit_Codigo = 1  -- SITUACAO (PEDIDO APROVADO DE CREDITO)
		INNER JOIN ISOENTIDADE AS USUARIO_CEDITO ON -- USUÁRIO QUE LIBEROU O CRÉDITO DO CLIENTE
			ISOWFTAREFA.ISOWFTrf_RspExe_RspCodigo = USUARIO_CEDITO.ISOEnt_Codigo
		WHERE ISOWFTRF_PEDIDO.ISOEmp_Codigo = 11
		AND ISOWFTRF_PEDIDO.ISOPvPed_Codigo IN (SELECT ISOPVPED_CODIGO FROM ISOPVPEDIDO WHERE ISOEMP_CODIGO = 11)
		AND ISOWFTRF_PEDIDO.ISOWFTrf_Ped_PrcCodigo = (SELECT MAX(X.ISOWFTrf_Ped_PrcCodigo) FROM ISOWFTRF_PEDIDO X WHERE ISOWFTRF_PEDIDO.ISOEmp_Codigo = X.ISOEmp_Codigo AND ISOWFTRF_PEDIDO.ISOPvPed_Codigo = X.ISOPvPed_Codigo)),
	TIPO_FRETE AS (
		SELECT 	DISTINCT
			ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOEmp_Codigo,
			ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOPvPed_Codigo,
			COALESCE(ISOPvPedidoAttOptValue,'') AS ISOPvPedidoTipoFrete
		FROM ISOPVPEDIDOATTVALUES AS ISOPVPEDIDOATTVALUES_TIPO_FRETE
		INNER JOIN ISOPVPEDIDOATTLEVEL1 ON
			ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOEmp_Codigo = ISOPVPEDIDOATTLEVEL1.ISOEmp_Codigo AND
			ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOPvPedidoAttId = ISOPVPEDIDOATTLEVEL1.ISOPvPedidoAttId AND
			ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOPvPedidoAttOptId = ISOPVPEDIDOATTLEVEL1.ISOPvPedidoAttOptId AND
			ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOPvPedidoAttId = 104 -- CÓDIGO DA PERGUNTA TIPO DO FRETE
		WHERE
			ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOEmp_Codigo = 11
			AND ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOPvPed_Codigo IN (SELECT ISOPVPED_CODIGO FROM ISOPVPEDIDO WHERE ISOEMP_CODIGO = 11)
			),
	TRANSPORTADORA AS (
		SELECT 	DISTINCT
			ISOPVPEDIDOATTVALUES_TRANSP.ISOEmp_Codigo,
			ISOPVPEDIDOATTVALUES_TRANSP.ISOPvPed_Codigo,
			COALESCE(ISOPvTrp_CodigoExterno,'') AS ISOPvPedido_CodigoTRP
		FROM ISOPVPEDIDOATTVALUES AS ISOPVPEDIDOATTVALUES_TRANSP
		INNER JOIN ISOPVTRANSPORTADORA ON
			ISOPVTRANSPORTADORA.ISOPvTrp_Codigo = ISOPVPEDIDOATTVALUES_TRANSP.ISOPvPedidoAttOptId AND
			ISOPVPEDIDOATTVALUES_TRANSP.ISOPvPedidoAttId = 105 --AND -- CÓDIGO DA PERGUNTA TRANSPORTADORA
			--ISOPVTRANSPORTADORA.ISOPvTrp_Flag = 'A'
		WHERE ISOPVPEDIDOATTVALUES_TRANSP.ISOEmp_Codigo = 11
			AND ISOPVPEDIDOATTVALUES_TRANSP.ISOPvPed_Codigo IN (SELECT ISOPVPED_CODIGO FROM ISOPVPEDIDO WHERE ISOEMP_CODIGO = 11)
		),
	--OBSERVACAO_ITEM_PEDIDO AS (
	--	SELECT
	--		ISOEmp_Codigo,
	--		ISOPvPed_Codigo,
	--		ISOPvPedIte_Codigo,
	--		ISOPvPedItemAttValue
	--	FROM ISOPVPEDITEMATTVALUES WITH (nOLOCK)
	--	WHERE
	--		ISOEmp_Codigo = 11 AND
	--		ISOPvPedItemAttId = 2),
	OC_DO_CLIENTE AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (nOLOCK)
		WHERE
			ISOEmp_Codigo = 11
			AND ISOPVPEDITEMATTVALUES.ISOPvPed_Codigo IN (SELECT ISOPVPED_CODIGO FROM ISOPVPEDIDO WHERE ISOEMP_CODIGO = 11)
			AND ISOPvPedItemAttId = 1),
	LINHA_PEDIDO_CLIENTE AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (nOLOCK)
		WHERE
			ISOEmp_Codigo = 11
			AND ISOPVPEDITEMATTVALUES.ISOPvPed_Codigo IN (SELECT ISOPVPED_CODIGO FROM ISOPVPEDIDO WHERE ISOEMP_CODIGO = 11)
			AND ISOPvPedItemAttId = 2),
	LINHA_ORDEM_COMPRA AS (
		SELECT ISOPVPEDITEM.ISOEmp_Codigo, ISOPVPEDITEM.ISOPVPED_CODIGO, ITEM_PEDIDO, ITEM_CLIENTE
			FROM ISOPVPEDITEM LEFT OUTER JOIN (
			SELECT
				ISOEMP_CODIGO,
				ISOPVPED_CODIGO,
				CASE
					WHEN CHARINDEX('-',VALOR,1) > 1
					THEN SUBSTRING(VALOR,1,CHARINDEX('-',VALOR,1)-1)
					ELSE 0
				END AS ITEM_PEDIDO,
				SUBSTRING(VALOR,CHARINDEX('-',VALOR,1)+1,3) AS ITEM_CLIENTE
			FROM ISOPVPEDIDOATTVALUES CROSS APPLY DBO.SPLIT(ISOPVPEDIDOATTVALUELONG,CHAR(10))
			WHERE ISOEMP_CODIGO = 11
			AND ISOPVPEDIDOATTID = 106
			AND PATINDEX('%[A-Z]%', ISOPVPEDIDOATTVALUELONG) = 0
			AND ISOPVPED_CODIGO IN (SELECT ISOPVPED_CODIGO FROM ISOPVPEDIDO WHERE ISOEMP_CODIGO = 11)
			AND CHARINDEX('-',VALOR,1) > 1
			AND VALOR <> '') DADO_COMPLEMENTAR_PEDIDO
				ON ISOPVPEDITEM.ISOEmp_Codigo = DADO_COMPLEMENTAR_PEDIDO.ISOEmp_Codigo AND
					ISOPVPEDITEM.ISOPvPed_Codigo = DADO_COMPLEMENTAR_PEDIDO.ISOPvPed_Codigo AND
					ISOPVPEDITEM.ISOPvPedIte_Codigo = DADO_COMPLEMENTAR_PEDIDO.ITEM_PEDIDO
			WHERE ISOPVPEDITEM.ISOEmp_Codigo = 11
			AND ISOPVPEDITEM.ISOPVPED_CODIGO IN (SELECT ISOPVPED_CODIGO FROM ISOPVPEDIDO WHERE ISOEMP_CODIGO = 11)),
	LOTE1 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- lote 1 do item do pedido
		WHERE
			ISOEmp_Codigo = 11
			AND ISOPVPEDITEMATTVALUES.ISOPvPed_Codigo IN (SELECT ISOPVPED_CODIGO FROM ISOPVPEDIDO WHERE ISOEMP_CODIGO = 11)
			AND ISOPvPedItemAttId = 4),
	QTD1 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- qtde 1 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 5),
	LOTE2 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- lote 2 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 6),
	QTD2 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- qtde 2 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 7),
	LOTE3 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- lote 3 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 8),
	QTD3 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- qtde 3 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 9),
	LOTE4 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- lote 4 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 10),
	QTD4 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- qtde 4 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 11),
	LOTE5 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- lote 5 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 12),
	QTD5 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK)-- qtde 5 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 13),
	NATUREZA_OPERACAO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPedTip_Codigo,
			COALESCE(ISOPvPedTip_NaturezaOperacaoCo,'') AS ISOPvPedTip_NaturezaOperacaoCo
		FROM ISOPVPEDTIPO WITH (nOLOCK)
		WHERE
			ISOEmp_Codigo = 11)
	--MATRIZ_ICMS AS (
	--	SELECT
	--		ISOEmp_Codigo,
	--		ISOPvPed_CliCodigo,
	--		ISOPvPed_Codigo,
	--		ISOPvPedIte_Codigo,
	--		ISOPrd_Codigo,
	--		ISOPvMatICMS_SubTribICMSDocFis,
	--		ISOPvMatICMS_AliquotaICMS
	--	FROM MacroConsultaMatrizICMS WITH (NOLOCK)
	--	WHERE
	--		ISOEmp_Codigo = 11)
SELECT
	PEDIDO.ISOEmp_Codigo, -- Código da empresa
	PEDIDO.ISOPvPed_Codigo, -- Código CRM do Pedido
	PEDIDO.ISOPvPed_CliCodigo, -- Código CRM do cliente
	PEDIDO.ISOPvPed_DtaPedido,  -- Data do pedido
	PEDIDO.ISOPvPed_HoraPedido, -- Hora do pedido
	CASE CONDICAO_PAGAMENTO.ISOPeCntPgt_Forma
		WHEN 'Bol' THEN 'BOLETO'
		WHEN 'Car' THEN 'CARTAO'
		WHEN 'Che' THEN 'CHEQUE'
		WHEN 'Dep' THEN 'DEPOSITO'
		WHEN 'Din' THEN 'Dinheiro'
	END AS ISOPeCntPgt_Forma, -- Forma de pagamento
	PEDIDO.ISOPvPed_Pagamento, -- Condição de pagamento
	PEDIDO.ISOPvPed_DtaSolEntrega,
	PEDIDO.ISOPvPed_CodEndEntrega,
	PEDIDO.ISOPvPedOri_Codigo,
	PEDIDO.ISOPvPedTip_Codigo,
	PEDIDO.ISOPvPed_CodEndCobranca,

	CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0 THEN TOTAL_PEDIDO_EMPENHO.ISOPvPed_ValorTotalPedido ELSE PEDIDO.ISOPvPed_ValorTotalPedido END AS ISOPvPed_ValorTotalPedido,

	PEDIDO_ITEM.ISOPvPedIte_Codigo, -- Sequencial do item do pedido
	PEDIDO_ITEM.ISOPrd_Codigo, -- Código do produto
	CASE
		WHEN ISNULL(NULLIF(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0),0) = 0
		THEN 0
		ELSE PEDIDO_ITEM.ISOPvPedIte_Quantidade
	END ISOPvPedIte_Quantidade,
	PEDIDO_ITEM.ISOPvPedIte_DataEntregaItem AS ISOPvPedIte_DataPromessa,
	PEDIDO_ITEM.ISOPvPedIte_DtaSolEntrega,
	PEDIDO_ITEM.ISOPvPedIte_UnidadeOrigem,
	PEDIDO_ITEM.ISOPvPedIte_UnidadeDestino,
	ROUND(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,6) AS ISOPrdUndFatC_FatorConversao, -- Fator de conversão sem decimais
	ROUND(PEDIDO_ITEM.ISOPvPedIte_Quantidade * ROUND(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,6),0) AS ISOPvPedIte_Qtd_UM_estoque,
	CASE
		WHEN ISNULL(NULLIF(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0),0) = 0
		THEN 0
		--ELSE CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho >0 THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho ELSE ROUND(PEDIDO_ITEM.ISOPvPedIte_ValorUnitario,6) END
		ELSE CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho >0 THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho ELSE ROUND(PEDIDO_ITEM.ISOPvPedIte_PrecoAjustadoTotal / PEDIDO_ITEM.ISOPvPedIte_Quantidade,6) END
	END ISOPvPedIte_Vlr_Total_Unitario,

	CASE
		WHEN ISNULL(NULLIF(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0),0) = 0
		THEN 0
		--ELSE CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0 THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho ELSE ROUND(PEDIDO_ITEM.ISOPvPedIte_ValorUnitario,6) END / NULLIF(ROUND(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0),0)
		ELSE CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0 THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho ELSE ROUND(PEDIDO_ITEM.ISOPvPedIte_PrecoAjustadoTotal / PEDIDO_ITEM.ISOPvPedIte_Quantidade,6) END / NULLIF(ROUND(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,6),0)
	END ISOPvPedIte_Vlr_Total_Unitario_EST,

	PEDIDO_ITEM.ISOPvPedIteSit_Codigo,
	PEDIDO_ITEM.ISOPvPedIte_AgendamentoData,
	PEDIDO_ITEM.ISOPvPedIte_AgendamentoHoraIni,
	PEDIDO_ITEM.ISOPvPedIte_AgendamentoHoraFin,
	PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,
	-- DESATIVADO 21/08/2020 - EDILON - para pedidos de contrato o valor de frete deve ser mostrado
	--CASE
	--	WHEN COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) > 0
	--	THEN 0
	--	ELSE COALESCE(PEDIDO.ISOPvPed_ValorFrete,0)
	--END AS ISOPvPed_ValorFrete,
	COALESCE(PEDIDO.ISOPvPed_ValorFrete,0) AS ISOPvPed_ValorFrete,
	COALESCE(ORIGEM_PROTHEUS.ISOEmpEnt_Ori_Codigo,'') AS ISOEmpEnt_CliCod_ERP,
	ORIGEM_LX.ISOEmpEnt_Ori_Codigo AS ISOEmpEnt_Ori_LX,
	LOCAL_FATURAMENTO.ISOPvCDOri_Armazem AS ISOPvPedIte_Armazem,
	COALESCE(CLIENTE.ISOEntCli_Operacao,'') AS ISOEntCli_Operacao,
	ESTABELECIMENTO_LX.ISOPvCD_Estabelecimento AS ISOPvCD_Estabelecimento_LX,
	PEDIDO.ISOPvPed_CodigoAtendente AS ISOPvPed_CodigoAtendente, -- Código do atendente que criou o pedido
	ATENDENTE_PEDIDO.ISOEnt_Nome AS ISOEnt_NomeAtendente, -- Nome do atendente que criou o pedido

	/*
	'2020-05-13 00:00:00.000' AS ISOWFTrf_DataLiberacaoCredito, -- Data em que a tarefa de liberação de crédito foi executada
    '11:00:00' AS ISOWFTrf_HoraLiberacaoCredito,  -- Hora em que a tarefa de liberação de crédito foi executada
    975190 AS ISOWFTrf_CodigoAtendente, -- Responsável que executou a tarefa de liberação de crédito
	*/

	COALESCE(ANALISE_CREDITO.ISOWFTrf_DataLiberacaoCredito,'') AS ISOWFTrf_DataLiberacaoCredito, -- Data em que a tarefa de liberação de crédito foi executada
    COALESCE(ANALISE_CREDITO.ISOWFTrf_HoraLiberacaoCredito,'') AS ISOWFTrf_HoraLiberacaoCredito,  -- Hora em que a tarefa de liberação de crédito foi executada
    COALESCE(ANALISE_CREDITO.ISOWFTrf_CodigoAtendente,'') AS ISOWFTrf_CodigoAtendente, -- Responsável que executou a tarefa de liberação de crédito

	CASE
		WHEN PEDIDO.ISOPvPedOri_Codigo = 'EUR' THEN 3
		WHEN PEDIDO.ISOPvPedOri_Codigo = 'EU1' THEN 3
		WHEN PEDIDO.ISOPvPedOri_Codigo = 'USD' THEN 2
		WHEN PEDIDO.ISOPvPedOri_Codigo = 'US1' THEN 2
		ELSE 1
	END AS ISOMoe_Codigo,

	COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorIPI,0) AS ISOPvPedIte_ValorIPI,
	COALESCE(PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria,0) AS ISOPvPedIte_VlrSubsTrib,
	COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorICMS,0) AS ISOPvPedIte_ValorICMS,
	COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorPIS,0) AS ISOPvPedIte_ValorPIS,
	COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorCofins,0) AS ISOPvPedIte_ValorCofins,
	COALESCE(PEDIDO_ITEM.ISOPVPedIte_ValorFCPST,0) AS ISOPVPedIte_ValorFCPST,
	COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorFCP,0) AS ISOPvPedIte_ValorFCP,
	COALESCE(TRANSPORTADORA.ISOPvPedido_CodigoTRP,'') AS ISOPvPedido_CodigoTRP,
	COALESCE(TIPO_FRETE.ISOPvPedidoTipoFrete,'') AS ISOPvPedidoTipoFrete,
	COALESCE(TABELA_CLIENTE.ISOEntClienteAttOtherValue,'') AS ISOEmpEnt_Tabela_Preco,
	PEDIDO_ITEM.ISOPvPedIte_PrecoLista,
	COALESCE(PEDIDO.ISOPVPed_OrdCompra,'') AS ISOPVPed_OrdCompra,

	CASE
		WHEN LINHA_ORDEM_COMPRA.ITEM_CLIENTE <> ''
		THEN COALESCE(PEDIDO.ISOPVPed_OrdCompra,'')
		ELSE
			CASE
				WHEN COALESCE(RTRIM(LTRIM(SUBSTRING(OC_DO_CLIENTE.ISOPvPedItemAttValue,1,15))),'') <> ''
				THEN COALESCE(RTRIM(LTRIM(SUBSTRING(OC_DO_CLIENTE.ISOPvPedItemAttValue,1,15))),'')
				ELSE COALESCE(PEDIDO.ISOPVPed_OrdCompra,'')
			END
	END AS ISOPvPedIte_NrOrdemCompra,

	CASE
		WHEN ABS(COALESCE(LINHA_PEDIDO_CLIENTE.ISOPvPedItemAttValue,LINHA_ORDEM_COMPRA.ITEM_CLIENTE,'')) = 0 AND LINHA_ORDEM_COMPRA.ITEM_CLIENTE <> ''
		THEN PEDIDO_ITEM.ISOPvPedIte_Codigo
		ELSE ABS(COALESCE(LINHA_PEDIDO_CLIENTE.ISOPvPedItemAttValue,LINHA_ORDEM_COMPRA.ITEM_CLIENTE,''))
	END
		AS ISOPvPedIte_LinhaOrdemCompra,

	COALESCE(RTRIM(LTRIM(SUBSTRING(LOTE1.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_Lote1,
	COALESCE(RTRIM(LTRIM(SUBSTRING(QTD1.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_QtdeLote1,
	COALESCE(RTRIM(LTRIM(SUBSTRING(LOTE2.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_Lote2,
	COALESCE(RTRIM(LTRIM(SUBSTRING(QTD2.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_QtdeLote2,
	COALESCE(RTRIM(LTRIM(SUBSTRING(LOTE3.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_Lote3,
	COALESCE(RTRIM(LTRIM(SUBSTRING(QTD3.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_QtdeLote3,
	COALESCE(RTRIM(LTRIM(SUBSTRING(LOTE4.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_Lote4,
	COALESCE(RTRIM(LTRIM(SUBSTRING(QTD4.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_QtdeLote4,
	COALESCE(RTRIM(LTRIM(SUBSTRING(LOTE5.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_Lote5,
	COALESCE(RTRIM(LTRIM(SUBSTRING(QTD5.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_QtdeLote5,
	COALESCE(NATUREZA_OPERACAO.ISOPvPedTip_NaturezaOperacaoCo,'') AS ISOPvPed_Operacao,

	/*
	Inativado por devergência de valores com protheus 13/05/20 (Edilon,Leticia)
	(PEDIDO_ITEM.ISOPvPedIte_ValorTotalCalculoF - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade)) AS ISOPvPedIte_PrecoCMLIntegracaoBO,
	((PEDIDO_ITEM.ISOPvPedIte_ValorTotalCalculoF - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade)) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao) AS ISOPvPedIte_PrecoUNESTIntegracaoBO,
	*/

/*
	CASE
		WHEN MATRIZ_ICMS.ISOPvMatICMS_SubTribICMSDocFis = 1
		THEN ROUND((PEDIDO_ITEM.ISOPvPedIte_ValorUnitario - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade)),6)
		ELSE ROUND((CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0 THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho ELSE PEDIDO_ITEM.ISOPvPedIte_ValorUnitario END - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade) - (PEDIDO_ITEM.ISOPvPedIte_ValorIPI / PEDIDO_ITEM.ISOPvPedIte_Quantidade)),6)
	END AS ISOPvPedIte_PrecoCMLIntegracaoBO,

	CASE
		WHEN MATRIZ_ICMS.ISOPvMatICMS_SubTribICMSDocFis = 1
		THEN ROUND(((PEDIDO_ITEM.ISOPvPedIte_ValorTotalCalculoF - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade)) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao),6)
		ELSE ROUND(((CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0 THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho ELSE PEDIDO_ITEM.ISOPvPedIte_ValorUnitario END - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade) - (PEDIDO_ITEM.ISOPvPedIte_ValorIPI / PEDIDO_ITEM.ISOPvPedIte_Quantidade)) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao),6)
	END AS ISOPvPedIte_PrecoUNESTIntegracaoBO,
*/
	CASE
		WHEN COALESCE(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0) = 0
			THEN 0
		ELSE
		CASE
			-- cliente TEM desoneração e o pedido é empenho
			-- PERFORMANCE WHEN MATRIZ_ICMS.ISOPvMatICMS_SubTribICMSDocFis = 1 AND COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) > 0
			WHEN (SELECT ISOPvMatICMS_SubTribICMSDocFis FROM MacroConsultaMatrizICMS WHERE MacroConsultaMatrizICMS.ISOEmp_Codigo = PEDIDO_ITEM.ISOEmp_Codigo AND MacroConsultaMatrizICMS.ISOPvPed_Codigo = PEDIDO_ITEM.ISOPvPed_Codigo AND MacroConsultaMatrizICMS.ISOPvPedIte_Codigo = PEDIDO_ITEM.ISOPvPedIte_Codigo) = 1 AND COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) > 0
				-- PERFORMANCE THEN ROUND(((((PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho / (1 - (MATRIZ_ICMS.ISOPvMatICMS_AliquotaICMS/100)) / (1 + (PEDIDO_ITEM.ISOPvPedIte_PercentualIPI / 100)))))),6)
				THEN ROUND(((((PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho / (1 - ((SELECT ISOPvMatICMS_AliquotaICMS FROM MacroConsultaMatrizICMS WHERE MacroConsultaMatrizICMS.ISOEmp_Codigo = PEDIDO_ITEM.ISOEmp_Codigo AND MacroConsultaMatrizICMS.ISOPvPed_Codigo = PEDIDO_ITEM.ISOPvPed_Codigo AND MacroConsultaMatrizICMS.ISOPvPedIte_Codigo = PEDIDO_ITEM.ISOPvPedIte_Codigo)/100)) / (1 + (PEDIDO_ITEM.ISOPvPedIte_PercentualIPI / 100)))))),6)
			-- cliente TEM desoneração e o pedido NÃO é empenho
			-- PERFORMANCE WHEN MATRIZ_ICMS.ISOPvMatICMS_SubTribICMSDocFis = 1 AND COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) = 0
			WHEN (SELECT ISOPvMatICMS_SubTribICMSDocFis FROM MacroConsultaMatrizICMS WHERE MacroConsultaMatrizICMS.ISOEmp_Codigo = PEDIDO_ITEM.ISOEmp_Codigo AND MacroConsultaMatrizICMS.ISOPvPed_Codigo = PEDIDO_ITEM.ISOPvPed_Codigo AND MacroConsultaMatrizICMS.ISOPvPedIte_Codigo = PEDIDO_ITEM.ISOPvPedIte_Codigo) = 1 AND COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) = 0
				-- desativado 22/06/2020 para utilizar novo campo de preco ajustado do item --	THEN ROUND(((PEDIDO_ITEM.ISOPvPedIte_ValorTotalCalculoF - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade)) ),6)
				THEN ROUND(PEDIDO_ITEM.ISOPvPedIte_PrecoAjustado ,6)
			--ELSE ROUND((CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0 THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho ELSE PEDIDO_ITEM.ISOPvPedIte_ValorUnitario END - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade) - (PEDIDO_ITEM.ISOPvPedIte_ValorIPI / PEDIDO_ITEM.ISOPvPedIte_Quantidade)),6)
			-- cliente SEM desoneração
			ELSE ROUND((CASE
							WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0
								THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho / (1 + ((PEDIDO_ITEM.ISOPvPedIte_PercSubsTributaria + PEDIDO_ITEM.ISOPvPedIte_PercentualFCPST)/100.0) ) / ((1+(PEDIDO_ITEM.ISOPvPedIte_PercentualIPI/100.0)) )
							--inativado pois não considerava o rateio do frete
							--ELSE (PEDIDO_ITEM.ISOPvPedIte_ValorUnitario - ((PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade) + PEDIDO_ITEM.ISOPVPedIte_ValorFCPST) - (PEDIDO_ITEM.ISOPvPedIte_ValorIPI / PEDIDO_ITEM.ISOPvPedIte_Quantidade))
							-- desativado 22/06/2020 para utilizar novo campo de preco ajustado do item --	ELSE ((((PEDIDO_ITEM.ISOPvPedIte_ValorUnitario * PEDIDO_ITEM.ISOPvPedIte_Quantidade) - (((PEDIDO_ITEM.ISOPvPedIte_ValorUnitario * PEDIDO_ITEM.ISOPvPedIte_Quantidade) / TOTAL_PEDIDO.ISOPvPed_ValorTotalPedido) * PEDIDO.ISOPvPed_ValorFrete)) / PEDIDO_ITEM.ISOPvPedIte_Quantidade) - ((PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade) + PEDIDO_ITEM.ISOPVPedIte_ValorFCPST) - (PEDIDO_ITEM.ISOPvPedIte_ValorIPI / PEDIDO_ITEM.ISOPvPedIte_Quantidade))
							ELSE PEDIDO_ITEM.ISOPvPedIte_PrecoAjustado -- desativado 16/07/2020 o valor já está na unidade comercial * PEDIDO_ITEM.ISOPvPedIte_Quantidade -- desativado 09/07/2020 pois o preco ajustado já está sem o frete ((((PEDIDO_ITEM.ISOPvPedIte_PrecoAjustado * PEDIDO_ITEM.ISOPvPedIte_Quantidade) - (((PEDIDO_ITEM.ISOPvPedIte_ValorUnitario * PEDIDO_ITEM.ISOPvPedIte_Quantidade) / TOTAL_PEDIDO.ISOPvPed_ValorTotalPedido) * PEDIDO.ISOPvPed_ValorFrete)) / PEDIDO_ITEM.ISOPvPedIte_Quantidade) )
						END )  / (1 + (ISOPvEstabTbV_PercDespFinancei / 100.00) ),6)
		END
	END AS ISOPvPedIte_PrecoCMLIntegracaoBO,

	ROUND (
	CASE
		WHEN COALESCE(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0) = 0
			THEN 0
		ELSE
		CASE
			-- cliente TEM desoneração e o pedido é empenho
			-- PERFORMANCE WHEN MATRIZ_ICMS.ISOPvMatICMS_SubTribICMSDocFis = 1 AND COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) > 0
			WHEN (SELECT ISOPvMatICMS_SubTribICMSDocFis FROM MacroConsultaMatrizICMS WHERE MacroConsultaMatrizICMS.ISOEmp_Codigo = PEDIDO_ITEM.ISOEmp_Codigo AND MacroConsultaMatrizICMS.ISOPvPed_Codigo = PEDIDO_ITEM.ISOPvPed_Codigo AND MacroConsultaMatrizICMS.ISOPvPedIte_Codigo = PEDIDO_ITEM.ISOPvPedIte_Codigo) = 1 AND COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) > 0
				-- PERFORMANCE THEN ROUND(((((PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho / (1 - (MATRIZ_ICMS.ISOPvMatICMS_AliquotaICMS/100)) / (1 + (PEDIDO_ITEM.ISOPvPedIte_PercentualIPI / 100))))) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao),6)
				THEN ROUND(((((PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho / (1 - ((SELECT ISOPvMatICMS_AliquotaICMS FROM MacroConsultaMatrizICMS WHERE MacroConsultaMatrizICMS.ISOEmp_Codigo = PEDIDO_ITEM.ISOEmp_Codigo AND MacroConsultaMatrizICMS.ISOPvPed_Codigo = PEDIDO_ITEM.ISOPvPed_Codigo AND MacroConsultaMatrizICMS.ISOPvPedIte_Codigo = PEDIDO_ITEM.ISOPvPedIte_Codigo)/100)) / (1 + (PEDIDO_ITEM.ISOPvPedIte_PercentualIPI / 100))))) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao),6)
			-- cliente TEM desoneração e o pedido NÃO é empenho
			--PERFORMANCE WHEN MATRIZ_ICMS.ISOPvMatICMS_SubTribICMSDocFis = 1 AND COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) = 0
			WHEN (SELECT ISOPvMatICMS_SubTribICMSDocFis FROM MacroConsultaMatrizICMS WHERE MacroConsultaMatrizICMS.ISOEmp_Codigo = PEDIDO_ITEM.ISOEmp_Codigo AND MacroConsultaMatrizICMS.ISOPvPed_Codigo = PEDIDO_ITEM.ISOPvPed_Codigo AND MacroConsultaMatrizICMS.ISOPvPedIte_Codigo = PEDIDO_ITEM.ISOPvPedIte_Codigo) = 1 AND COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) = 0
			-- desativado 22/06/2020 para utilizar novo campo de preco ajustado do item --	THEN ROUND(((PEDIDO_ITEM.ISOPvPedIte_ValorTotalCalculoF - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade)) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao),6)
				THEN ROUND((PEDIDO_ITEM.ISOPvPedIte_PrecoAjustado / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao),6)
			-- desativado 28/05/2020 pois utilizando valor dos impostos os valores não fechavam ELSE ROUND(((CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0 THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho ELSE PEDIDO_ITEM.ISOPvPedIte_ValorUnitario END - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade) - (PEDIDO_ITEM.ISOPvPedIte_ValorIPI / PEDIDO_ITEM.ISOPvPedIte_Quantidade)) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao),6)
			-- cliente SEM desoneração
			ELSE ROUND((CASE
							WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0
								THEN COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) / (1 + ((PEDIDO_ITEM.ISOPvPedIte_PercSubsTributaria + PEDIDO_ITEM.ISOPvPedIte_PercentualFCPST)/100.0) ) / ((1+(PEDIDO_ITEM.ISOPvPedIte_PercentualIPI/100.0)) )
							--inativado pois não considerava o rateio do frete
							--ELSE (PEDIDO_ITEM.ISOPvPedIte_ValorUnitario - ((PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade) + PEDIDO_ITEM.ISOPVPedIte_ValorFCPST) - (PEDIDO_ITEM.ISOPvPedIte_ValorIPI / PEDIDO_ITEM.ISOPvPedIte_Quantidade))
							-- desativado 22/06/2020 para utilizar novo campo de preco ajustado do item --	ELSE ((((PEDIDO_ITEM.ISOPvPedIte_ValorUnitario * PEDIDO_ITEM.ISOPvPedIte_Quantidade) - (((PEDIDO_ITEM.ISOPvPedIte_ValorUnitario * PEDIDO_ITEM.ISOPvPedIte_Quantidade) / TOTAL_PEDIDO.ISOPvPed_ValorTotalPedido) * PEDIDO.ISOPvPed_ValorFrete)) / PEDIDO_ITEM.ISOPvPedIte_Quantidade) - ((PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade) + PEDIDO_ITEM.ISOPVPedIte_ValorFCPST) - (PEDIDO_ITEM.ISOPvPedIte_ValorIPI / PEDIDO_ITEM.ISOPvPedIte_Quantidade))
							ELSE PEDIDO_ITEM.ISOPvPedIte_PrecoAjustado ---  desativado 09/07/2020 pois o preco ajustado já está sem o frete ((PEDIDO_ITEM.ISOPvPedIte_PrecoAjustado) - ((((PEDIDO_ITEM.ISOPvPedIte_PrecoAjustado * PEDIDO_ITEM.ISOPvPedIte_Quantidade) / TOTAL_PEDIDO.ISOPvPed_ValorTotalPedido) * PEDIDO.ISOPvPed_ValorFrete) / PEDIDO_ITEM.ISOPvPedIte_Quantidade))
						END ) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,6)
		END
	END / (1 + (ISOPvEstabTbV_PercDespFinancei / 100.00) ), 6) AS ISOPvPedIte_PrecoUNESTIntegracaoBO,

	COALESCE(EMPENHO.ISOCttPedCon_NumeroEmp,'') AS ISOPvPedido_NumeroEmpenho,
	TOTAL_LINHAS_PEDIDO.ISOPvPedIte_TotalLinhas

	-- INICIO SIMULACAO DE PREÇOS
	--(1 + (PEDIDO_ITEM.ISOPvPedIte_PercentualIPI / 100)) IPI,
	--(1 - (MATRIZ_ICMS.ISOPvMatICMS_AliquotaICMS/100)) ICMS,
	--PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho EMPENHO,
	--PEDIDO_ITEM.ISOPvPedIte_Quantidade QUANTIDADE,
	--FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao FATOR,
	--ROUND(ROUND(ROUND((PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho  / (1 - (MATRIZ_ICMS.ISOPvMatICMS_AliquotaICMS/100))) / (1 + (PEDIDO_ITEM.ISOPvPedIte_PercentualIPI / 100)) * PEDIDO_ITEM.ISOPvPedIte_Quantidade,2) * (1 + (PEDIDO_ITEM.ISOPvPedIte_PercentualIPI/100)),2) * (1 - (MATRIZ_ICMS.ISOPvMatICMS_AliquotaICMS/100)),2) SIMULACAO_PROTHEUS,
	--CASE
	--	WHEN MATRIZ_ICMS.ISOPvMatICMS_SubTribICMSDocFis = 1 AND COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) > 0
	--		THEN ROUND(((((PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho / (1 - (MATRIZ_ICMS.ISOPvMatICMS_AliquotaICMS/100)) / (1 + (PEDIDO_ITEM.ISOPvPedIte_PercentualIPI / 100))))) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao),6)
	--	WHEN MATRIZ_ICMS.ISOPvMatICMS_SubTribICMSDocFis = 1 AND COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) = 0
	--		THEN ROUND(((PEDIDO_ITEM.ISOPvPedIte_ValorTotalCalculoF - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade)) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao),6)
	--	ELSE ROUND(((CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0 THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho ELSE PEDIDO_ITEM.ISOPvPedIte_ValorUnitario END - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade) - (PEDIDO_ITEM.ISOPvPedIte_ValorIPI / PEDIDO_ITEM.ISOPvPedIte_Quantidade)) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao),6)
	--END * PEDIDO_ITEM.ISOPvPedIte_Quantidade AS SIMULADO_ISO,
	--PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho *	PEDIDO_ITEM.ISOPvPedIte_Quantidade RESULTADO_ISO
	-- TÉRMINO SIMULACAO DE PREÇOS
FROM
	PEDIDO -- CABECALHO DO PEDIDO
	INNER JOIN PEDIDO_ITEM ON -- ITEM DO PEDIDO
		PEDIDO.ISOEmp_Codigo = PEDIDO_ITEM.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = PEDIDO_ITEM.ISOPvPed_Codigo
	INNER JOIN TOTAL_LINHAS_PEDIDO ON -- TOTAL DE LINHAS DO PEDIDO
		PEDIDO.ISOEmp_Codigo = TOTAL_LINHAS_PEDIDO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = TOTAL_LINHAS_PEDIDO.ISOPvPed_Codigo
	INNER JOIN ATENDENTE_PEDIDO ON  -- ATENDENTE QUE CRIOU O PEDIDO
		PEDIDO.ISOPvPed_CodigoAtendente = ATENDENTE_PEDIDO.ISOEnt_Codigo
	INNER JOIN FATOR_CONVERSAO_PRODUTO ON -- UNIDADES DE MEDIDA DO ITEM DO PEDIDO
		PEDIDO_ITEM.ISOEmp_Codigo = FATOR_CONVERSAO_PRODUTO.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPrd_Codigo = FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_PrdCodigo AND
		PEDIDO_ITEM.ISOPvPedIte_UnidadeOrigem = FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_UndOrigem AND
		PEDIDO_ITEM.ISOPvPedIte_UnidadeDestino = FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_UndDestino AND
		FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_Flag = 'A' AND
		FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_Armazem = ''
	INNER JOIN CLIENTE ON -- INFORMAÇÕES DO CLIENTE
		PEDIDO.ISOEmp_Codigo = CLIENTE.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_CliCodigo = CLIENTE.ISOEntCli_Codigo
    INNER JOIN LOCAL_FATURAMENTO ON
		PEDIDO.ISOEmp_Codigo = LOCAL_FATURAMENTO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_EstadoOrigem = LOCAL_FATURAMENTO.ISOPvCD_Origem AND
        PEDIDO.ISOPvPed_EstadoDestino = LOCAL_FATURAMENTO.ISOPvCD_Destino AND
        PEDIDO.ISOPvPedOri_Codigo = LOCAL_FATURAMENTO.ISOPvCDOri_Pedido
	INNER JOIN ESTABELECIMENTO_LX ON -- ESTABELECIMENTO DO PEDIDO
		PEDIDO.ISOEmp_Codigo = ESTABELECIMENTO_LX.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_EstadoOrigem = ESTABELECIMENTO_LX.ISOPvCD_Origem AND
        PEDIDO.ISOPvPed_EstadoDestino = ESTABELECIMENTO_LX.ISOPvCD_Destino
	INNER JOIN CUSTO_FINANCEIRO ON
		ESTABELECIMENTO_LX.ISOEmp_Codigo = CUSTO_FINANCEIRO.ISOEmp_Codigo AND
		ESTABELECIMENTO_LX.ISOPvCD_Estabelecimento = CUSTO_FINANCEIRO.ISOPvEstab_Codigo AND
		PEDIDO.ISOEmp_Codigo = CUSTO_FINANCEIRO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Pagamento = CUSTO_FINANCEIRO.ISOPvTV_Codigo

	LEFT OUTER JOIN EMPENHO ON -- EMPENHO DO PEDIDO
		PEDIDO.ISOEmp_Codigo = EMPENHO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = EMPENHO.ISOCttPedCon_PedidoCodigo

	LEFT OUTER JOIN TOTAL_PEDIDO_EMPENHO ON -- EMPENHO DO PEDIDO
		PEDIDO.ISOEmp_Codigo = TOTAL_PEDIDO_EMPENHO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = TOTAL_PEDIDO_EMPENHO.ISOPvPed_Codigo

	LEFT OUTER JOIN TOTAL_PEDIDO ON -- VALOR TOTAL DO PEDIDO
		PEDIDO.ISOEmp_Codigo = TOTAL_PEDIDO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = TOTAL_PEDIDO.ISOPvPed_Codigo

	LEFT OUTER JOIN TABELA_CLIENTE ON -- TABELA DO CLIENTE
		PEDIDO.ISOEmp_Codigo = TABELA_CLIENTE.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_CliCodigo = TABELA_CLIENTE.ISOEntCli_Codigo
		AND TABELA_CLIENTE.ISOEntClienteAttId = 99
	LEFT OUTER JOIN ORIGEM_PROTHEUS ON -- PESQUISA CÓDIGO PROTHEUS DO CLIENTE
		PEDIDO.ISOEmp_Codigo = ORIGEM_PROTHEUS.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_CliCodigo = ORIGEM_PROTHEUS.ISOEmpEnt_EntCodigo AND
		ORIGEM_PROTHEUS.ISOEmpOri_Codigo = 13
	LEFT OUTER JOIN ORIGEM_LX ON  -- PESQUISA CÓDIGO LX DO CLIENTE
		PEDIDO.ISOEmp_Codigo = ORIGEM_LX.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_CliCodigo = ORIGEM_LX.ISOEmpEnt_EntCodigo AND
		ORIGEM_LX.ISOEmpOri_Codigo = 2
	LEFT OUTER JOIN CONDICAO_PAGAMENTO ON
		PEDIDO.ISOEmp_Codigo = CONDICAO_PAGAMENTO.ISOEmp_Codigo AND
		PEDIDO.ISOPeCndPgt_Codigo = CONDICAO_PAGAMENTO.ISOPeCndPgt_Codigo
	LEFT OUTER JOIN ANALISE_CREDITO ON  -- PESQUISA DA TAREFA DE LIBERAÇÃO DE CRÉDITO
		PEDIDO.ISOEmp_Codigo = ANALISE_CREDITO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = ANALISE_CREDITO.ISOPvPed_Codigo
	LEFT OUTER JOIN TIPO_FRETE ON -- INFORMACOES DE FRETE DO PEDIDO
		PEDIDO.ISOEmp_Codigo = TIPO_FRETE.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = TIPO_FRETE.ISOPvPed_Codigo
	LEFT OUTER JOIN TRANSPORTADORA ON -- INFORMACOES DA TRANSPORTADORA DO PEDIDO
		PEDIDO.ISOEmp_Codigo = TRANSPORTADORA.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = TRANSPORTADORA.ISOPvPed_Codigo
	LEFT OUTER JOIN	LINHA_PEDIDO_CLIENTE  ON  -- Observação do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = LINHA_PEDIDO_CLIENTE.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = LINHA_PEDIDO_CLIENTE.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = LINHA_PEDIDO_CLIENTE.ISOPvPedIte_Codigo

	LEFT OUTER JOIN	LINHA_ORDEM_COMPRA ON  -- Observação do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = LINHA_ORDEM_COMPRA.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = LINHA_ORDEM_COMPRA.ISOPvPed_Codigo AND
	    PEDIDO_ITEM.ISOPvPedIte_Codigo = LINHA_ORDEM_COMPRA.ITEM_PEDIDO

	LEFT OUTER JOIN	OC_DO_CLIENTE ON  -- Observação do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = OC_DO_CLIENTE.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = OC_DO_CLIENTE.ISOPvPed_Codigo AND
	    PEDIDO_ITEM.ISOPvPedIte_Codigo = OC_DO_CLIENTE.ISOPvPedIte_Codigo

	LEFT OUTER JOIN	LOTE1 ON  -- lote 1 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = LOTE1.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = LOTE1.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = LOTE1.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	QTD1 ON  -- qtde 1 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = QTD1.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = QTD1.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = QTD1.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	LOTE2 ON  -- lote 2 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = LOTE2.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = LOTE2.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = LOTE2.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	QTD2 ON  -- qtde 2 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = QTD2.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = QTD2.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = QTD2.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	LOTE3 ON  -- lote 3 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = LOTE3.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = LOTE3.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = LOTE3.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	QTD3 ON  -- qtde 3 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = QTD3.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = QTD3.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = QTD3.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	LOTE4 ON  -- lote 4 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = LOTE4.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = LOTE4.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = LOTE4.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	QTD4 ON  -- qtde 4 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = QTD4.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = QTD4.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = QTD4.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	LOTE5 ON  -- lote 5 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = LOTE5.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = LOTE5.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = LOTE5.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	QTD5 ON  -- qtde 5 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = QTD5.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = QTD5.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = QTD5.ISOPvPedIte_Codigo
	LEFT OUTER JOIN NATUREZA_OPERACAO ON
		PEDIDO.ISOEmp_Codigo = NATUREZA_OPERACAO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPedTip_Codigo = NATUREZA_OPERACAO.ISOPvPedTip_Codigo
	--LEFT OUTER JOIN MATRIZ_ICMS ON
	--	PEDIDO_ITEM.ISOEmp_Codigo = MATRIZ_ICMS.ISOEmp_Codigo AND
	--	PEDIDO_ITEM.ISOPvPed_Codigo = MATRIZ_ICMS.ISOPvPed_Codigo AND
	--	PEDIDO_ITEM.ISOPvPedIte_Codigo = MATRIZ_ICMS.ISOPvPedIte_Codigo
WHERE
	PEDIDO.ISOEmp_Codigo = 11 --AND
	--PEDIDO_ITEM.ISOPvPedIteSit_Codigo = 1
	--PEDIDO.ISOPvPed_Codigo = 8742706 and

	--AND PEDIDO.ISOPvPedSit_Codigo in (1, 30)     --- ABERTO /  PEDIDO LIBERADO DE CREDITO

	--PEDIDO.ISOPvPed_Codigo between 8740390 and 8740890 -- pedidos indaial
	--PEDIDO.ISOPvPed_Codigo between 8664441 AND 8739451 AND -- pedidos do simulador


	AND (
		-- ANALISE DE CREDITO / INATIVIDADE DO CLIENTE / TITULOS EM ABERTO
		PEDIDO.ISOPvPed_Codigo NOT IN (select isopvped_codigo from [MACRO_ANALISE_CREDITO] where ISOEmp_Codigo = 11)-- and SITUACAO <> '')
		--PEDIDO.ISOPvPed_Codigo NOT IN (select isopvped_codigo from [MACRO_ANALISE_CREDITO] where ISOEmp_Codigo = 11 and ISOPvPedSit_Codigo = 1)
		--PEDIDO.ISOPvPed_Codigo NOT IN (SELECT ISOPvPed_Codigo FROM GATILHO_C21_ANALISE_LIMITE_CREDITO WHERE ISOEmp_Codigo = 11 AND  ((LIMITE_CREDITO - TOTAL_CONTAS_RECEBER - PED_EM_ABERTO) < TOTAL_PEDIDO) OR (DATEDIFF(DD,DATA_ULTIMA_COMPRA,GETDATE()) > 60) OR (DATEDIFF(DD,DATA_TITULO,GETDATE()) > 1))
		--OR
		-- ANALISE PRAZO MEDIO
		--PEDIDO.ISOPvPed_Codigo NOT IN (SELECT ISOPvPed_Codigo FROM GATILHO_C22_ANALISE_PRAZO_MEDIO_CLIENTE WITH (NOLOCK) WHERE (1=1) AND PRAZO_MEDIO_CP > PRAZO_MEDIO_CLIENTE)
	);


-- dbo.MacroSimulaNota source

CREATE VIEW [dbo].[MacroSimulaNota]
as
SELECT   ISOPVPEDIDO.ISOEmp_Codigo, ISOPVPEDIDO.ISOPvPed_Codigo, ISOPVPEDITEM.ISOPvPedIte_Codigo, ISOPVPEDIDO.ISOPvPed_CliCodigo, ISOPVPEDIDO.ISOPvPed_DtaPedido, ISOPVPEDITEM.ISOPrd_Codigo, ISOPVPEDITEM.ISOPvPedIte_ValorUnitario,
                      ISOPVPEDITEM.ISOPvPedIte_Quantidade, ISOPVPEDITEM.ISOPvPedIte_UnidadeOrigem, ISOPVPEDITEM.ISOPvPedIte_UnidadeDestino, ISOPVPEDITEM.ISOPvPedIte_ArmProgData, ISOPVPEDTIPO.ISOPvPedTip_TipoPedido,
                      ISOPVPEDITEM.ISOPvPedIte_TotDescNegociacao, ISOPVPEDITEM.ISOPvPedIte_TotalDescontoCP,
                      ISOESTADO.ISOEst_Sigla, (ISOPVPEDITEM.ISOPvPedIte_PrecoLista - ISOPVPEDITEM.ISOPvPedIte_TotDescNegociacao - ISOPVPEDITEM.ISOPvPedIte_TotalDescontoCP) AS ISOPvPedIte_PrecoLista
FROM         ISOESTADO INNER JOIN
                      ISOPVPEDIDO INNER JOIN
                      ISOPVPEDITEM ON ISOPVPEDIDO.ISOEmp_Codigo = ISOPVPEDITEM.ISOEmp_Codigo AND ISOPVPEDIDO.ISOPvPed_Codigo = ISOPVPEDITEM.ISOPvPed_Codigo ON
                      ISOESTADO.ISOEst_Codigo = ISOPVPEDIDO.ISOPvPed_EndEstado INNER JOIN
                      ISOPVPEDTIPO ON ISOPVPEDIDO.ISOEmp_Codigo = ISOPVPEDTIPO.ISOEmp_Codigo AND ISOPVPEDIDO.ISOPvPedTip_Codigo = ISOPVPEDTIPO.ISOPvPedTip_Codigo
WHERE     (ISOPVPEDIDO.ISOEmp_Codigo = 11)
--AND (ISOPVPEDIDO.ISOPvPedSit_Codigo = 8)
and ISOPVPEDIDO.ISOPvPed_Codigo in (8740253,	8740254,	8740257,	8740261,	8740263,	8740266,	8740253,	8740272,	8740274,	8740276,	8740277,	8740278,	8740279,	8740280,	8740281,	8740282,	8740283,	8740285,	8740286,	8740287,	8740288,	8740283,	8740291,	8740294,	8740295,	8740301,	8740302,	8740303,	8740304,	8740305,	8740306,	8740307,	8740301,	8740309,	8740310,	8740304,	8740312,	8740313,	8740314,	8740315,	8740316,	8740317,	8740318,	8740319,	8740320,	8740277,	8740321,	8740323,	8740324,	8740324,	8740252,	8740255,	8740256,	8740258,	8740259,	8740260,	8740262,	8740264,	8740265,	8740267,	8740268,	8740270,	8740271,	8740273,	8740284,	8740289,	8740292,	8740293,	8740296,	8740297,	8740299,	8740298,	8740300,	8740330,	8740331,	8740332,	8740310,	8740333,	8740334,	8740335,	8740336,	8740337,	8740338,	8740339,	8740340,	8740341,	8740342,	8740343,	8740345,	8740346,	8740347,	8740348,	8740349,	8740350,	8740351,	8740352,	8740353,	8740354,	8740355,	8740356);


-- dbo.OrdemCampanha source

CREATE VIEW OrdemCampanha
as
SELECT     TOP (100) PERCENT ISOMKATECAMPANHA.ISOEmp_Codigo, ISOMKATECMPCONTATO.ISOMkAteCmp_Codigo, ISOMKATECMPCONTATO.ISOMkAteCmpCnt_Sequencia,
                      ISOMKATECMPCONTATO.ISOMkAteCmpCnt_EntCodigo,
					  ROW_NUMBER() OVER (PARTITION BY ISOMKATECAMPANHA.ISOEmp_Codigo, ISOMKATECMPCONTATO.ISOMkAteCmp_Codigo
					  ORDER BY ISOMKATECAMPANHA.ISOEmp_Codigo, ISOMKATECMPCONTATO.ISOMkAteCmp_Codigo,
                      case
						when datediff(dd, dataultimopedido, getdate()) >= 60 then 2
						when datediff(dd, dataultimopedido, getdate()) < 60 then 1
						when datediff(dd, dataultimopedido, getdate()) IS NULL then 3
						when datediff(dd, dataultimopedido, getdate()) = '1753-01-01 00:00:00.000' then 3
					  end,
					  case
						when dateadd(dd, medianadiascompra, dataultimopedido) is null or dateadd(dd, medianadiascompra, dataultimopedido) = '1753-01-01 00:00:00.000' then '2050-12-31 00:00:00.000'
						else dateadd(dd, medianadiascompra, dataultimopedido)
					  end, dataultimopedido desc, MediaVenda DESC) AS Nova_Sequencia,
                      ISOMKATECMPCONTATO.ISOMKAteCmpCnt_FilaPrioridade,
                      medianadiascompra, dataultimopedido,
                      dateadd(dd, medianadiascompra, dataultimopedido) proxima_ligacao, MediaVenda,
                      case
						when datediff(dd, dataultimopedido, getdate()) >= 60 then 2
						when datediff(dd, dataultimopedido, getdate()) < 60 then 1
						when datediff(dd, dataultimopedido, getdate()) IS NULL then 3
						when datediff(dd, dataultimopedido, getdate()) = '1753-01-01 00:00:00.000' then 3
					  end as Regra_Ordenacao
FROM         ISOMKATECAMPANHA INNER JOIN
                      ISOMKATECMPCONTATO ON ISOMKATECAMPANHA.ISOEmp_Codigo = ISOMKATECMPCONTATO.ISOEmp_Codigo AND
                      ISOMKATECAMPANHA.ISOMkAteCmp_Codigo = ISOMKATECMPCONTATO.ISOMkAteCmp_Codigo INNER JOIN
                      ISOCLIENTE ON ISOMKATECMPCONTATO.ISOEmp_Codigo = ISOCLIENTE.ISOEmp_Codigo AND ISOMKATECMPCONTATO.ISOMkAteCmpCnt_EntCodigo = ISOCLIENTE.ISOEnt_Codigo INNER JOIN
                      ParametrosCliente ON ISOMKATECMPCONTATO.ISOEmp_Codigo = ParametrosCliente.EmpCod AND ISOMKATECMPCONTATO.ISOMkAteCmpCnt_EntCodigo = ParametrosCliente.CliCod
WHERE     (ISOMKATECAMPANHA.ISOEmp_Codigo = 11) AND (ISOMKATECAMPANHA.ISOMkAteCmp_Flag = 'A') AND (ISOCLIENTE.ISOEntSeg_Codigo = 9)
--and clicod in (378210,787856,792531,850476,1053953)
--and ISOMKATECMPCONTATO.ISOMkAteCmp_Codigo = 129
--and ISOMKATECMPCONTATO.ISOMkAteCmp_Codigo = 138  -- clientes prospects
--and clicod in (817371,1073942)
ORDER BY ISOEmp_Codigo, ISOMkAteCmp_Codigo,
                      case
						when datediff(dd, dataultimopedido, getdate()) >= 60 then 2
						when datediff(dd, dataultimopedido, getdate()) < 60 then 1
						when datediff(dd, dataultimopedido, getdate()) IS NULL then 3
						when datediff(dd, dataultimopedido, getdate()) = '1753-01-01 00:00:00.000' then 3
					  end,
case when dateadd(dd, medianadiascompra, dataultimopedido) is null or dateadd(dd, medianadiascompra, dataultimopedido) = '1753-01-01 00:00:00.000' then '2050-12-31 00:00:00.000'
	else dateadd(dd, medianadiascompra, dataultimopedido)
end, dataultimopedido desc , MediaVenda desc;


-- dbo.PrecoVenda_PrecoPartida_Consumo source

CREATE VIEW [dbo].[PrecoVenda_PrecoPartida_Consumo]
as
select
isopvpedido.isopvped_codigo,
--pedWin.peddpintco,  -- removido chamado I2009-2938
0 peddpintco,
isopvpeditem.ISOPrd_Codigo,
isopvpeditem.ISOPvPedIte_Codigo,
isopvpedido.ISOPvPed_CliCodigo,
isopvpeditem.ISOPvPedIte_Quantidade,
isopvpeditem.ISOPvPedIte_UnidadeDestino,
isopvpedido.ISOPvPed_DtaAberPedido,
round((ISOPvPedIte_ValorUnitario - ((ISOPvPedIte_ValorIPI + ISOPvPedIte_VlrSubsTributaria) / isopvpeditem.ISOPvPedIte_Quantidade) ),2) Valor_Merc_Pedido,
ISOPvPedIte_PercentualICMS,
round((case when isnull(ISOPvPedIte_MatNegPrecoNovo,0) = 0 then ISOPvPedIte_ValorOriginal else ISOPvPedIte_MatNegPrecoNovo end * (1-(ISOPvMatICMS_AliquotaICMS/100))/(1-(ISOPvPedIte_PercentualICMS/100))),2) Valor_Merc_Partida,
isnull(ISOPvPedIte_MatNegPrecoNovo,0)ISOPvPedIte_MatNegPrecoNovo,
ISOPvMatICMS_AliquotaICMS,
ISOPvPedIte_ValorUnitario,
ISOPvPedIte_ValorOriginal,
ISOPvPedIte_PercentualIPI,
ISOPvPedIte_PercSubsTributaria,
ISOPvPedIte_ValorIPI,
ISOPvPedIte_VlrSubsTributaria,
ISOPvPedIte_ValorICMS,
ISOPvPedIte_ValorPIS,
ISOPvPedIte_ValorCofins,
ISOPvMatICMS_AgrupFiscalCod
from isopvpeditem
	inner join isoprddadofiscal on isopvpeditem.isoemp_codigo = isoprddadofiscal.isoemp_codigo and isopvpeditem.ISOPrd_Codigo = isoprddadofiscal.ISOPrdDadF_PrdCodigo
	inner join isopvmatrizicms on isopvpeditem.isoemp_codigo = isopvmatrizicms.isoemp_codigo and isopvmatrizicms.ISOPvMatICMS_AgrupFiscalCod = isoprddadofiscal.ISOPrdDadF_CodAgrupFiscal
	inner join isopvpedido on isopvpeditem.isoemp_codigo = isopvpedido.isoemp_codigo and isopvpeditem.isopvped_codigo = isopvpedido.isopvped_codigo
	inner join isoentorganizacao on isopvpedido.ISOPvPed_CliCodigo = isoentorganizacao.ISOEntOrg_Codigo
	-- removido chamado I2009-2938
	--inner join db_crm_cremer.dbo.deparape pedWin on pedWin.empcod = isopvpedido.isoemp_codigo and pedWin.peddpextco = isopvpedido.isopvped_codigo
where isopvpeditem.isoemp_codigo = 11
--and isopvpeditem.isopvped_codigo = 7701037
--and isopvpeditem.ISOPvPedIte_Codigo = 8
and isoprddadofiscal.ISOPrdDadF_InicioVigencia = (select max(x.ISOPrdDadF_InicioVigencia) from isoprddadofiscal x where isoprddadofiscal.isoemp_codigo = x.isoemp_codigo and isoprddadofiscal.ISOPrdDadF_PrdCodigo = x.ISOPrdDadF_PrdCodigo)
and isopvmatrizicms.ISOPvMatICMS_InicioVigencia = (select max(x.ISOPvMatICMS_InicioVigencia) from isopvmatrizicms x where isopvmatrizicms.ISOEmp_Codigo = x.ISOEmp_Codigo and isopvmatrizicms.ISOPvMatICMS_UFOrigem = x.ISOPvMatICMS_UFOrigem and isopvmatrizicms.ISOPvMatICMS_UFDestino = x.ISOPvMatICMS_UFDestino and isopvmatrizicms.ISOPvMatICMS_NatOperaCod = x.ISOPvMatICMS_NatOperaCod and isopvmatrizicms.ISOPvMatICMS_AgrupFiscalCod = x.ISOPvMatICMS_AgrupFiscalCod and isopvmatrizicms.ISOPvMatICMS_EspecieCod = x.ISOPvMatICMS_EspecieCod and isopvmatrizicms.ISOPvMatICMS_CatFiscalCod = x.ISOPvMatICMS_CatFiscalCod and isopvmatrizicms.ISOPvMatICMS_PrdOrigemCod = x.ISOPvMatICMS_PrdOrigemCod and isopvmatrizicms.ISOPvMatICMS_DestinacaoCod= x.ISOPvMatICMS_DestinacaoCod)
and isopvmatrizicms.ISOPvMatICMS_UFOrigem = 'SP'
and isopvmatrizicms.ISOPvMatICMS_UFDestino = 'SP'
and isopvmatrizicms.ISOPvMatICMS_CatFiscalCod = 'C08NS'
and isopvmatrizicms.ISOPvMatICMS_NatOperaCod = '01'
and isopvmatrizicms.ISOPvMatICMS_EspecieCod = ''
and isopvmatrizicms.ISOPvMatICMS_DestinacaoCod = 'S'
and isopvmatrizicms.ISOPvMatICMS_PrdOrigemCod = isoprddadofiscal.ISOPrdDadF_CodOrigem
and isoentorganizacao.ISOEntSeg_Codigo = 2
--and isopvpedido.ISOPvPed_DtaAberPedido between '2021-04-08 00:00:00.000' and '2021-04-21 00:00:00.000'
and isopvpedido.ISOPvPedSit_Codigo not in (8,9)
and isopvpeditem.ISOPvPedIteSit_Codigo not in (9);


-- dbo.RP_009_ISOMkAteCmpContatoDC source

--CREATE VIEW [dbo].[RP_009_ISOMkAteCmpContatoDC] AS
CREATE VIEW [dbo].[RP_009_ISOMkAteCmpContatoDC] AS
SELECT
       T01.ISOMkAteCmp_Codigo             AS DM_009_CampanhaCodigo,
       T02.ISOMkAteCmp_Descricao          AS DM_009_CampanhaDescricao,
	   T01.ISOMkAteCmpCnt_EntCodigo       AS DM_009_ContatoCodigo,
	   T03.ISOEnt_Nome                    AS DM_009_NomeEntidade,
	   T04.ISOEntPes_PrimeiroNome         AS DM_009_Nome,
	   T04.ISOEntPes_SobreNome            AS DM_009_Sobrenome,
	   T04.ISOEntPes_CPF                  AS DM_009_CPF,
	   T05.ISOEntOrg_RazaoSocial          AS DM_009_RazaoSocial,
	   T05.ISOEntOrg_NomeFantasia         AS DM_009_NomeFantasia,
	   T05.ISOEntOrg_CNPJ                 AS DM_009_CNPJ,
	   T07.ISOEntCliSit_Codigo            AS DM_009_SituacaoCliente,
	   CASE
	       WHEN T08.ISOEntSeg_Codigo is not null THEN T08.ISOEntSeg_Descricao
		   ELSE T08_2.ISOEntSeg_Descricao
       END AS DM_009_Segmento,
	   T09.ISOEntRamAtv_Descricao         AS DM_009_RamoAtividade,
	   T11.ISOEndTip_Descricao            AS DM_009_EndTipo,
	   T10.ISOEntEnd_Logradouro           AS DM_009_EndLogradouro,
	   T10.ISOEntEnd_Numero               AS DM_009_EndNumero,
	   T10.ISOEntEnd_Complemento          AS DM_009_EndComplemento,
	   T10.ISOEntEnd_Bairro               AS DM_009_EndBairro,
	   T12.ISOLoc_Descricao               AS DM_009_EndCidade,
	   T13.ISOEst_Descricao               AS DM_009_EndEstado,
	   T13.ISOEst_Sigla                   AS DM_009_EndUF,
	   T14.ISOPais_Descricao              AS DM_009_EndPais,
	   T15.ISOEntTel_DDI                  AS DM_009_TelDDI,
	   T15.ISOEntTel_DDD                  AS DM_009_TelDDD,
	   T15.ISOEntTel_Telefone             AS DM_009_TelTelefone,
	   T17.ISOEntEctTip_Descricao         AS DM_009_EctTipo,
	   T16.ISOEntEct_econtact             AS DM_009_EctEcontact,
	   T18.ISOMkCntSit_Descricao          AS DM_009_MkCntSituacao,
	   T19_2.ISOEnt_Codigo                AS DM_009_RelacionadoComCod,
	   T19_2.ISOEnt_Nome                  AS DM_009_RelacionadoCom,
	   T20_2.ISOEnt_Codigo                AS DM_009_RelacionadoEmCod,
	   T20_2.ISOEnt_Nome                  AS DM_009_RelacionadoEm,
	   T21.ISOMKAteCmpCntDet_DataAlteraca        AS DM_009_DataUltimoContato,
       Year(T21.ISOMKAteCmpCntDet_DataAlteraca)  AS DM_009_AnoUltimoContato,
       Month(T21.ISOMKAteCmpCntDet_DataAlteraca) AS DM_009_MesUltimoContato,
	   T21.ISOMkAteCmpCntDet_DataInicialR        AS DM_009_DataIniReagContato,
	   Year(T21.ISOMkAteCmpCntDet_DataInicialR)  AS DM_009_AnoIniReagContato,
       Month(T21.ISOMkAteCmpCntDet_DataInicialR) AS DM_009_MesIniReagContato,
	   T21.ISOMkAteCmpCntDet_DataFinalRea        AS DM_009_DataFinalReagContato,
	   Year(T21.ISOMkAteCmpCntDet_DataFinalRea)  AS DM_009_AnoFinalReagContato,
       Month(T21.ISOMkAteCmpCntDet_DataFinalRea) AS DM_009_MesFinalReagContato,
	   T21.ISOMkAteCmpCntDet_Descritivo          AS DM_009_MkDetDescritivo,
	   T22.ISOMkFin_Descricao             AS DM_009_MkFinalidade,
	   T23.ISOMkFinCla_Descricao          AS DM_009_MkFinClassificacao,
           T23A.ISOMkFinRsl_Descricao          AS DM_009_MkFinResultado,
	   T24.ISOEnt_Nome                    AS DM_009_MkAgenteUltContato,
	   T25.ISOEntCla_Descricao            AS DM_009_CliClassificacao,
	   T26.ISOEntClaEsp_Descricao         AS DM_009_CliClaEspecialidade,
	   T27.ISOEntClaP_Descricao           AS DM_009_CliClassificacaoP,
	   T28.ISOEntClaPEsp_Descricao        AS DM_009_CliClassificacaoPEsp,
	   T30.ISOMkAteCmpCntFormDefName      AS DM_009_ISOMkCntAttFormulario,
	   T29.ISOMkAteCmpCntAttName          AS DM_009_ISOMkCntAttPergunta,
	   CASE
	       WHEN T29.ISOMkAteCmpCntAttType = 4 THEN T32.ISOMkAteCmpCntAttOptValue
	       When T29.ISOMkAteCmpCntAttType = 5 Then T31.ISOMkAteCmpCntAttValueLong
		   ELSE T31.ISOMkAteCmpCntAttValue
       END
	                                      AS DM_009_ISOMkCntAttResposta,
	   T34.ISOEntCNAE_Descricao           AS DM_009_ISOEntCnaeDescricao,

	   T35.ISOEntRsp_Codigo               AS DM_009_CodigoResponsavel,
	   T36.ISOEnt_Nome                    AS DM_009_NomeResponsavel,
	   T37.ISOEntNivRsp_Descricao         AS DM_009_NivelRespCli,
	   T38.ISOEmpEnt_Ori_Codigo           AS DM_009_CodExtContatoCmp,

	    1                                 AS MT_009_Quantidade,
       'V.002'                            AS MT_009_VersaoVW
  FROM ISOMKATECMPCONTATO T01
       INNER JOIN ISOMKATECAMPANHA T02
	      ON T01.ISOEmp_Codigo            = T02.ISOEmp_Codigo
		 AND T01.ISOMkAteCmp_Codigo       = T02.ISOMkAteCmp_Codigo
	   INNER JOIN ISOENTIDADE T03
	      ON T01.ISOMkAteCmpCnt_EntCodigo = T03.ISOEnt_Codigo
	    LEFT JOIN ISOENTPESSOA T04
	      ON T04.ISOEntPes_Codigo         = T01.ISOMkAteCmpCnt_EntCodigo
		LEFT JOIN ISOENTORGANIZACAO T05
		  ON T05.ISOEntOrg_Codigo         = T01.ISOMkAteCmpCnt_EntCodigo
	   LEFT JOIN ISOENTCLIENTE T06
	      ON T06.ISOEmp_Codigo            = T01.ISOEmp_Codigo
	     AND T06.ISOEntCli_Codigo         = T01.ISOMkAteCmpCnt_EntCodigo
	   LEFT JOIN ISOENTCLISITUACAO T07
	      ON T07.ISOEmp_Codigo            = T06.ISOEmp_Codigo
		 AND T07.ISOEntCliSit_Codigo      = T06.ISOEntCliSit_Codigo
		LEFT JOIN ISOENTSEGMENTO T08
		  ON T08.ISOEntSeg_Codigo         = T04.ISOEntSeg_Codigo
		LEFT JOIN ISOENTSEGMENTO T08_2
		  ON T08_2.ISOEntSeg_Codigo         = T05.ISOEntSeg_Codigo
		LEFT JOIN ISOENTRAMOATIVIDADE T09
		  ON T09.ISOEntRamAtv_Codigo      = T05.ISOEntRamAtv_Codigo
		LEFT JOIN ISOENTENDERECO T10
		  ON T10.ISOEnt_Codigo            = T01.ISOMkAteCmpCnt_EntCodigo
		 AND T10.ISOEntEnd_Flag           = 'A'
		 AND T10.ISOEntEnd_Principal      = 'S'
		LEFT JOIN ISOENDTIPO T11
		  ON T11.ISOEndTip_Codigo         = T10.ISOEndTip_Codigo
		LEFT JOIN ISOLOCALIDADE T12
		  ON T12.ISOLoc_Codigo            = T10.ISOLoc_Codigo
		LEFT JOIN ISOESTADO T13
		  ON T13.ISOEst_Codigo            = T12.ISOEst_Codigo
	    LEFT JOIN ISOPAIS T14
		  ON T14.ISOPais_Codigo           = T12.ISOPais_Codigo
		LEFT JOIN ISOENTTELEFONE T15
		  ON T15.ISOEnt_Codigo            = T01.ISOMkAteCmpCnt_EntCodigo
		 AND T15.ISOEntTel_Flag           = 'A'
		 AND T15.ISOEntTel_Principal      = 'S'
		LEFT JOIN ISOENTECONTACT T16
		  ON T16.ISOEnt_Codigo            = T01.ISOMkAteCmpCnt_EntCodigo
		 AND T16.ISOEntEml_Flag           = 'A'
		 AND T16.ISOEntEctTip_Principal   = 'S'
		LEFT JOIN ISOENTECTTIPO T17
		  ON T17.ISOEntEctTip_Codigo      = T16.ISOEntEctTip_Codigo
	   INNER JOIN ISOMKCNTSITUACAO T18
	      ON T18.ISOEmp_Codigo            = T01.ISOEmp_Codigo
		 AND T18.ISOMkCntSit_Codigo       = T01.ISOMkCntSit_Codigo
		LEFT JOIN ISOENT_RELACAO T19
		  ON T19.ISOEntRle_Codigo         = T01.ISOMkAteCmpCnt_EntCodigo
		 AND T19.ISOEnt_Rlc_Principal     = 'S'
		 AND T19.ISOEnt_Rlc_Flag          = 'A'
		LEFT JOIN ISOENTIDADE T19_2
		  ON T19_2.ISOEnt_Codigo          = T19.ISOEntRlc_Codigo
		LEFT JOIN ISOENT_RELACAO T20
		  ON T20.ISOEntRlc_Codigo         = T01.ISOMkAteCmpCnt_EntCodigo
		 AND T20.ISOEnt_Rlc_Principal     = 'S'
		 AND T20.ISOEnt_Rlc_Flag          = 'A'
		 LEFT JOIN ISOENTIDADE T20_2
		  ON T20_2.ISOEnt_Codigo          = T20.ISOEntRle_Codigo
		LEFT JOIN ISOMKATECMPCNTDETALHE T21
          ON T21.ISOEmp_Codigo               = T01.ISOEmp_Codigo
         AND T21.ISOMkAteCmp_Codigo          = T01.ISOMkAteCmp_Codigo
         AND T21.ISOMkAteCmpCnt_Sequencia    = T01.ISOMkAteCmpCnt_Sequencia
         AND T21.ISOMkAteCmpCntDet_Sequencia = (Select MAX(TA1.ISOMKAteCmpCntDet_Sequencia)
                                                  From ISOMKATECMPCNTDETALHE TA1
                                                 Where TA1.ISOEmp_Codigo            = T21.ISOEmp_Codigo
                                                   And TA1.ISOMkAteCmp_Codigo       = T21.ISOMkAteCmp_Codigo
                                                   And TA1.ISOMkAteCmpCnt_Sequencia = T21.ISOMkAteCmpCnt_Sequencia)
        LEFT JOIN ISOMKFINALIDADE T22
	      ON T22.ISOEmp_Codigo            = T02.ISOEmp_Codigo
		 AND T22.ISOMkFin_Codigo          = T02.ISOMkFin_Codigo
                LEFT JOIN ISOMKFINResultado T23A
		  ON T23A.ISOEmp_Codigo            = T02.ISOEmp_Codigo
		 AND T23A.ISOMkFin_Codigo          = T02.ISOMkFin_Codigo
		 AND T23A.ISOMkFinRsl_Codigo       = T21.ISOMkFinRsl_Codigo
		LEFT JOIN ISOMKFINCLASSIFICACAO T23
		  ON T23.ISOEmp_Codigo            = T02.ISOEmp_Codigo
		 AND T23.ISOMkFin_Codigo          = T02.ISOMkFin_Codigo
		 AND T23.ISOMkFinCla_Codigo       = T21.ISOMkFinCla_Codigo
		LEFT JOIN ISOENTIDADE T24
		  ON T24.ISOEnt_Codigo            = T21.ISOMkAteCmpCntDet_CodigoAgente
		LEFT JOIN ISOENTCLASSIFICACAO T25
		  ON T25.ISOEmp_Codigo            = T06.ISOEmp_Codigo
		 AND T25.ISOEntCla_Codigo         = T06.ISOEntCla_Codigo
		LEFT JOIN ISOENTCLAESPECIALIDADE T26
		  ON T26.ISOEmp_Codigo            = T06.ISOEmp_Codigo
		 AND T26.ISOEntCla_Codigo         = T06.ISOEntCla_Codigo
		 AND T26.ISOEntClaEsp_Codigo      = T06.ISOEntClaEsp_Codigo
		LEFT JOIN ISOENTCLASSIFICACAOPAPEL T27
		  ON T27.ISOEmp_Codigo            = T06.ISOEmp_Codigo
		 AND T27.ISOEntClaP_Codigo        = T06.ISOEntClaP_Codigo
		LEFT JOIN ISOENTCLAPESPECIALIDADE T28
		  ON T28.ISOEmp_Codigo            = T06.ISOEmp_Codigo
		 AND T28.ISOEntClaP_Codigo        = T06.ISOEntClaP_Codigo
		 AND T28.ISOEntClaPEsp_Codigo     = T06.ISOEntClaEsp_Codigo
		LEFT JOIN ISOMKATECMPCNTATT T29
		  ON T29.ISOEmp_Codigo            = T02.ISOEmp_Codigo
		 AND T29.ISOMkFin_Codigo          = T02.ISOMkFin_Codigo
		 AND T29.ISOMkAteCmpCntAtt_Flag   = 'A'
	    LEFT JOIN ISOMKATECMPCNTFORMDEF T30
		  ON T30.ISOEmp_Codigo            = T29.ISOEmp_Codigo
		 AND T30.ISOMkFin_Codigo          = T29.ISOMkFin_Codigo
		 AND T30.ISOMKAteCmpCntFormDefId  = T29.ISOMKAteCmpCntFormDefId
		LEFT JOIN ISOMKATECMPCNTATTVALUES T31
		  ON T31.ISOEmp_Codigo            = T01.ISOEmp_Codigo
		 AND T31.ISOMkAteCmp_Codigo       = T01.ISOMkAteCmp_Codigo
		 AND T31.ISOMkAteCmpCnt_Sequencia = T01.ISOMkAteCmpCnt_Sequencia
		 AND T31.ISOMKAteCmpCntFormDefId  = T29.ISOMKAteCmpCntFormDefId
		 AND T31.ISOMkAteCmpCntAttId      = T29.ISOMkAteCmpCntAttId
		 AND T31.ISOMkAteCmpCntAttValue_Flag = 'A'
		LEFT JOIN ISOMKATECMPCNTATTLEVEL1 T32
		  ON T32.ISOEmp_Codigo            = T29.ISOEmp_Codigo
		 AND T32.ISOMkFin_Codigo          = T29.ISOMkFin_Codigo
		 AND T32.ISOMKAteCmpCntFormDefId  = T29.ISOMKAteCmpCntFormDefId
		 AND T32.ISOMkAteCmpCntAttId      = T29.ISOMkAteCmpCntAttId
		 AND T32.ISOMkAteCmpCntAttOptId   = T31.ISOMkAteCmpCntAttOptId
		LEFT JOIN ISOENTORG_CNAE T33
		  ON T33.ISOEntOrg_Codigo         = T01.ISOMkAteCmpCnt_EntCodigo
		 AND T33.ISOEntOrg_CNAE_Flag      = 'A'
		LEFT JOIN ISOENTCNAE T34
		  ON T34.ISOEntCNAE_Codigo        = T33.ISOEntCNAE_Codigo
		LEFT JOIN ISOEntRsp_Clientes T35
		  ON T35.ISOEmp_Codigo            = T01.ISOEmp_Codigo
		 AND T35.ISOEntCli_Codigo         = T01.ISOMkAteCmpCnt_EntCodigo
		 AND T35.ISOEntRsp_Cli_Flag       = 'A'
		LEFT JOIN ISOEntidade T36
		  ON T36.ISOEnt_Codigo            = T35.ISOEntRsp_Codigo
		LEFT JOIN ISOENTNIVRESPONSABILIDADE T37
		  ON T37.ISOEmp_Codigo            = T35.ISOEmp_Codigo
		 AND T37.ISOEntNivRsp_Codigo      = T35.ISOEntNivRsp_Codigo
        LEFT JOIN ISOEmpEnt_Origem      T38
                 ON T38.ISOEmp_Codigo            = T01.ISOEmp_Codigo
                AND T38.ISOEmpEnt_EntCodigo      = T01.ISOMkAteCmpCnt_EntCodigo;


-- dbo.TVCdOri source

CREATE VIEW [dbo].[TVCdOri] as
Select T1.ISOEmp_Codigo       as EmpCod,
       T1.ISOPVCd_Destino     as TvCdCod,
       T1.ISOPVCd_Origem      as TvCdUfCod,
       T1.ISOPVCdOri_Pedido   as TvPedOriPe,
       T1.ISOPVCdOri_Armazem  as TVCDArmaz
  From ISOPVCdOrigem T1 with (nolock);


-- dbo.TvCd source

CREATE VIEW [dbo].[TvCd] as
Select T1.ISOEmp_Codigo                  as EmpCod,
       T1.ISOPVCd_Destino                as TvCdCod,
       T1.ISOPVCd_Estabelecimento        as TvCdEst,
       T1.ISOPVCd_Origem                 as TvCdUFCod
  From ISOPVCd T1 with (nolock);


-- dbo.TvDtPed source

CREATE VIEW [dbo].[TvDtPed] as
Select T1.ISOEmp_Codigo        as EmpCod,
       T1.ISOPVPed_Codigo      as TvPedCod,
       T1.ISOPVPedAgrDt_Codigo as TvDtCod
  From ISOPVPedAgrupamentoDatas T1 with (nolock);


-- dbo.TvPed source

CREATE VIEW [dbo].[TvPed]
AS
SELECT    T1.ISOPvPed_CliCodigo AS CliCod, T1.ISOEmp_Codigo AS EmpCod, T1.ISOPvPed_EndCidade AS TvPedCodCid, T6.ISOLoc_Descricao AS TvPed1ECid,
                      T1.ISOPvPed_EndEstado AS TvPedCodUF, T7.ISOEst_Sigla AS TvPed1EUF, CASE WHEN t8.isoentend_principal = 'S' THEN 0 ELSE COALESCE (t8.isoentend_codigo,
                      0) END AS TvPed3EEnt, T1.ISOPvPed_CodigoCD AS TvPedCDOri, T1.ISOPvPed_Codigo AS TvPedCod, T1.ISOPvPed_CodigoExterno AS TvPedCodEx,
                      T1.ISOPvPed_DtaAberPedido AS TvPedDtaAb, T1.ISOPvPed_DtaSolEntrega AS TvPedDtaSO, T1.ISOPvPedOri_Codigo AS TvPedOriPe,
                      T1.ISOPvPed_EstadoOrigem AS TvPedUFOri, T1.ISOPvPedSit_Codigo AS TvSitCod
FROM         dbo.ISOPVPEDIDO AS T1 WITH (nolock) INNER JOIN
                      dbo.ISOLOCALIDADE AS T6 WITH (nolock) ON T6.ISOLoc_Codigo = T1.ISOPvPed_EndCidade INNER JOIN
                      dbo.ISOESTADO AS T7 WITH (nolock) ON T7.ISOPais_Codigo = T6.ISOPais_Codigo AND T7.ISOEst_Codigo = T6.ISOEst_Codigo LEFT OUTER JOIN
                      dbo.ISOENTENDERECO AS T8 WITH (nolock) ON T1.ISOPvPed_CliCodigo = T8.ISOEnt_Codigo AND T1.ISOPvPed_CodEndEntrega = T8.ISOEntEnd_Codigo;


-- dbo.TvPedIt source

CREATE VIEW [dbo].[TvPedIt] as
Select T1.ISOEmp_Codigo                  as EmpCod,
       T1.ISOPVPed_Codigo                as TvPedCod,
       T1.ISOPVPedIte_DataEntregaItem    as TvItDtaEnt,
       T1.ISOPVPedIte_PercentualICMS     as TvItPcTicm,
       T1.ISOPvPedIteSit_Codigo          as TvItSitCod,
       T1.ISOPvPedIte_ValorTotalCalculoF as TvItTotFre,
       T1.ISOPVPedIte_UnidadeDestino     as TvPedItDst,
       T1.ISOPVPedIte_Quantidade         as TvPedItQtd,
       T1.ISOPvPedIte_DtaSolEntrega      as TvPedItSol,
       T1.ISOPvPedIte_ValorUnitario      as TvPedItUni,
       T1.ISOPrd_Codigo                  as TvProCod,
       T1.ISOPVPedIte_AgdCodigo          as TvDtCod
  From ISOPVPedItem T1 with (nolock)
  Where T1.ISOEmp_Codigo = 11
	and T1.ISOPvPedIteSit_Codigo not in (8,9,12);


-- dbo.UltimaTransacao source

CREATE VIEW [dbo].[UltimaTransacao]
as
select d.isoempent_ori_codigo as CodExterno, b.ISOPrd_Codigo, a.ISOPvPed_DtaAberPedido, b.ISOPvPedIte_Quantidade, b.ISOPvPedIte_ValorUnitario
from ISOPVPEDIDO a, ISOPVPEDITEM b, cremer.PARAM_ISO c, isoempent_origem d
where a.ISOEmp_Codigo = b.ISOEmp_Codigo
AND a.ISOPvPed_Codigo = b.ISOPvPed_Codigo
and a.ISOEmp_Codigo = c.ISOEmp_Codigo
and a.isoemp_codigo = d.isoemp_codigo
and a.ISOPvPed_CliCodigo = d.isoempent_entcodigo
and a.ISOEmp_Codigo = 11
and a.ISOPvPedSit_Codigo not in (8,9)
and b.ISOPvPedIteSit_Codigo not in (8,9)
and a.ISOPvPed_DtaAberPedido >= c.dt_doze_ant
and d.isoempori_codigo = 2
and a.ISOPvPed_Codigo >= 0
and a.ISOPvPed_Codigo = (select max(x.ISOPvPed_Codigo)
from ISOPVPEDIDO x, ISOPVPEDITEM y, cremer.PARAM_ISO z
where x.ISOEmp_Codigo = y.ISOEmp_Codigo
AND x.ISOPvPed_Codigo = y.ISOPvPed_Codigo
and x.ISOEmp_Codigo = z.ISOEmp_Codigo
and a.ISOEmp_Codigo = x.ISOEmp_Codigo
and a.ISOPvPed_CliCodigo = x.ISOPvPed_CliCodigo
and b.ISOEmp_Codigo = y.ISOEmp_Codigo
and b.ISOPrd_Codigo = y.ISOPrd_Codigo
and x.ISOEmp_Codigo = 11
and x.ISOPvPedSit_Codigo not in (8,9)
and y.ISOPvPedIteSit_Codigo not in (8,9)
and x.ISOPvPed_DtaAberPedido >= c.dt_doze_ant
and x.ISOPvPed_Codigo >= 0);


-- dbo.VW04A_ISOEnt_DComplementa source

CREATE   view VW04A_ISOEnt_DComplementa as
Select
	   C.ISOEntPes_Codigo          As Entidade
      ,K.ISOEntPessoaFormDefId     As CodFormulario
      ,K.ISOEntPessoaFormDefName   As Formulario
      ,I.ISOEntPessoaAttId         As CodDado_Complementar
      ,J.ISOEntPessoaAttName       As Dado_Complementar
      ,I.ISOEntPessoaAttOptId      As CodOpcao_Dado_Complementar
      ,L.ISOEntPessoaAttOptValue   As Opcao_Dado_Complementar
      ,I.ISOEntPessoaAttValue      As Valor_Dado_Complementar
      ,I.ISOEntPessoaAttOtherValue As OutroValor_Dado_Complementar
      ,I.ISOEntPessoaAttValueLong  As Obs_Dado_Complementar
      ,J.ISOEntPessoaAttCategory   As Category_Dado_Complementar
      ,'F'                         As Tipo_Entidade
From
 	ISOENTPESSOA C (Nolock)
  Left Join ISOEntPessoaAttValues I (Nolock)
    On I.ISOEntPes_Codigo = C.ISOEntPes_Codigo
  Left Join ISOEntPessoaAtt J (Nolock)
	On I.ISOEntPessoaAttId = J.ISOEntPessoaAttId
  Left Join ISOEntPessoaFormDef K (Nolock)
	On J.ISOEntPessoaFormDefId = K.ISOEntPessoaFormDefId
  Left Join ISOEntPessoaAttLevel1 L (Nolock)
	On I.ISOEntPessoaAttId = L.ISOEntPessoaAttId and I.ISOEntPessoaAttOptId = L.ISOEntPessoaAttOptId
Union
Select
       C.ISOEntOrg_Codigo               As Entidade
      ,K.ISOEntOrganizacaoFormDefId		As CodFormulario
      ,K.ISOEntOrganizacaoFormDefName   As Formulario
      ,I.ISOEntOrganizacaoAttId         As CodDado_Complementar
      ,J.ISOEntOrganizacaoAttName		As Dado_Complementar
      ,I.ISOEntOrganizacaoAttOptId		As CodOpcao_Dado_Complementar
      ,L.ISOEntOrganizacaoAttOptValue   As Opcao_Dado_Complementar
      ,I.ISOEntOrganizacaoAttValue		As Valor_Dado_Complementar
      ,I.ISOEntOrganizacaoAttOtherValue	As OutroValor_Dado_Complementar
      ,I.ISOEntOrganizacaoAttValueLong  As Obs_Dado_Complementar
      ,J.ISOEntOrganizacaoAttCategory   As Category_Dado_Complementar
      ,'J'                              As Tipo_Entidade
From
 	ISOEntOrganizacao C (Nolock)
  Left Join ISOEntOrganizacaoAttValues I (Nolock)
    On I.ISOEntOrg_Codigo = C.ISOEntOrg_Codigo
  Left Join ISOEntOrganizacaoAtt J (Nolock)
	On I.ISOEntOrganizacaoAttId = J.ISOEntOrganizacaoAttId
  Left Join ISOEntOrganizacaoFormDef K (Nolock)
	On J.ISOEntOrganizacaoFormDefId = K.ISOEntOrganizacaoFormDefId
  Left Join ISOEntOrganizacaoAttLevel1 L (Nolock)
	On I.ISOEntOrganizacaoAttId = L.ISOEntOrganizacaoAttId and I.ISOEntOrganizacaoAttOptId = L.ISOEntOrganizacaoAttOptId

-------------------------------------------------------------------------------------------------------------------------------------------;


-- dbo.VW04B_ISOEnt_DComplementar source

CREATE VIEW VW04B_ISOEnt_DComplementar
AS
SELECT
	A.ISOEntRlc_Codigo			As EntidadeCodigo,
	A.ISOEntRle_Codigo			As EntCod,
	B.ISOEnt_Nome				AS EntidadeNome,
	A.ISOEntRlcTip_Codigo		As EntidadeTipoCod,
	C.ISOEntRlcTip_Descricao	As EntidadeTipoDsc,
	A.ISOEntRlcTipNiv_Codigo	As EntidadeTipNivCod,
	D.ISOEntRlcTipNiv_Descricao As EntidadeTipNivDsc,
	A.ISOEnt_Rlc_Principal		As EntidadePrincipal,
	'C'							As EntidadeTipo,
	A.ISOEnt_Rlc_Flag			As EntRlcFlag,
	B.ISOEnt_Flag               As EntidadeFlag,
	E.ISOEntEct_econtact        As EntidadeEContact
FROM ISOENT_RELACAO A WITH (NOLOCK)
	   LEFT JOIN ISOENTIDADE B WITH (NOLOCK)
		 ON A.ISOEntRlc_Codigo       = B.ISOEnt_Codigo
	   LEFT JOIN ISOEntRlcTipo C WITH (NOLOCK)
	     ON A.ISOEntRlcTip_Codigo    = C.ISOEntRlcTip_Codigo
	   LEFT JOIN ISOEntRlcTipNivel D WITH (NOLOCK)
	     ON A.ISOEntRlcTip_Codigo    = D.ISOEntRlcTip_Codigo
        And A.ISOEntRlcTipNiv_Codigo = D.ISOEntRlcTipNiv_Codigo
	   Left Join ISOENTECONTACT E (nolock)
	     On E.ISOEnt_Codigo          = A.ISOEntRlc_Codigo
		And E.ISOEntEctTip_Principal = 'S'
union
SELECT
	A.ISOEntRle_Codigo			As EntidadeCodigo,
	A.ISOEntRlc_Codigo			As EntCod,
	B.ISOEnt_Nome				AS EntidadeNome,
	A.ISOEntRlcTip_Codigo		As EntidadeTipoCod,
	C.ISOEntRlcTip_Descricao	As EntidadeTipoDsc,
	A.ISOEntRlcTipNiv_Codigo	As EntidadeTipNivCod,
	D.ISOEntRlcTipNiv_Descricao As EntidadeTipNivDsc,
	A.ISOEnt_Rlc_Principal		As EntidadePrincipal,
	'E'							As EntidadeTipo,
	A.ISOEnt_Rlc_Flag			As EntRlcFlag,
	B.ISOEnt_Flag               As EntidadeFlag,
	E.ISOEntEct_econtact        As EntidadeEContact
FROM ISOENT_RELACAO A WITH (NOLOCK)
	   LEFT JOIN ISOENTIDADE B WITH (NOLOCK)
		 ON A.ISOEntRle_Codigo       = B.ISOEnt_Codigo
       LEFT JOIN ISOEntRlcTipo C WITH (NOLOCK)
         ON A.ISOEntRlcTip_Codigo    = C.ISOEntRlcTip_Codigo
	   LEFT JOIN ISOEntRlcTipNivel D WITH (NOLOCK)
		 ON A.ISOEntRlcTip_Codigo    = D.ISOEntRlcTip_Codigo
	    And A.ISOEntRlcTipNiv_Codigo = D.ISOEntRlcTipNiv_Codigo
	   Left Join ISOENTECONTACT E (nolock)
	     On E.ISOEnt_Codigo          = A.ISOEntRle_Codigo
		And E.ISOEntEctTip_Principal = 'S'

-----------------------------------------;


-- dbo.VW04_ISOEnt_DComplementar source

--------------------------------------------------------------------------------------------------

CREATE VIEW VW04_ISOEnt_DComplementar as
Select
	AA.ISOEmp_Codigo						 As VW04_Empresa,
	A.ISOEnt_codigo	                         As VW04_Codigo,
	A.ISOEnt_Nome					         As VW04_Nome_RazaoSocial,
	C.ISOEntPes_PrimeiroNome 		         As VW04_PrimeVW04_iroNome,
	C.ISOEntPes_SobreNome 			         As VW04_SobreNome,
    Case
           When C.ISOEntPes_Codigo is null  Then 'Organização'
           When V.ISOEntOrg_Codigo is null  Then 'Pessoa'
           Else                                  'Não definido'
    End						                 As VW04_Tipo,
    T09.ISOEntRsp_Codigo                     As VW04_Cod_Responsavel,
    T10.ISOEnt_Nome                          As VW04_Nome_Responsavel,
	B.ISOProf_Descricao                      As VW04_Profissao,
	C.ISOEntPes_Sexo			             As VW04_Sexo,
	C.ISOEntpes_CPF				             As VW04_CPF,
	C.ISOEntPes_RG							 As VW04_RG,
	C.ISOEntPes_RG_Orgao					 As VW04_Org_Emissao_RG,
	C.ISOEntPes_RG_Data						 As VW04_Data_Emissao_RG,
	T03.ISONivEsc_Descricao                  As VW04_Niv_Escolaridade,
	T04.ISOEstCiv_Descricao					 As VW04_Est_Civil,
	Case
           When C.ISOEntPes_Codigo is null  Then V.ISOEntOrg_DataCadastro
           When V.ISOEntOrg_Codigo is null  Then C.ISOEntPes_DataCadastro
           Else                                  NULL
    End										 As VW04_Data_Cadastro,
	C.ISOEntPes_Observacao					 As VW04_Pes_Observacao,
	K.ISOEntClaP_Papel						 As VW04_Papel_Pessoa,
	K.ISOEntClaP_Descricao					 As VW04_ClassificacaoPapel,
	T05.ISOEntClaPEsp_Descricao				 As VW04_Especialidade_ClaPapel,
	C.ISOEntPes_DataNascimento		         As VW04_Nascimento,
	C.ISOEntPes_Flag			             As VW04_Pes_Ativo,
	V.ISOEntOrg_NomeFantasia		         As VW04_NomeFantasia,
	V.ISOEntOrg_CNPJ				         As VW04_CNPJ,
	V.ISOEntOrg_InscEstadual	  	         As VW04_InscEstadual,
	V.ISOEntOrg_Flag			             As VW04_Org_Ativo,
	X.ISOEntRamAtv_Descricao		         As VW04_RamoAtividade,
	Y.ISOEntSeg_Descricao			         As VW04_Segmento,
	D.ISOEntTel_ddi				             As VW04_DDI,
	D.ISOEntTel_ddd				             As VW04_DDD,
	D.ISOEntTel_Principal				     As VW04_TelefonePrincipal,
	T06.ISOTelTip_Descricao					 As VW04_TelefoneTipo,
	D.ISOEntTel_telefone			         As VW04_Telefone,
	D.ISOEntTel_ramal				         As VW04_Ramal,
	E.ISOEntEnd_Titulo				         As VW04_Titulo,
	E.ISOEntEnd_Logradouro			         As VW04_Logradouro,
	E.ISOEntEnd_Complemento		             As VW04_Complemento,
	E.ISOEntEnd_Numero				         As VW04_Numero,
	E.ISOEntEnd_Bairro				         As VW04_Bairro,
	E.ISOEntEnd_CEP				             As VW04_CEP,
	F.isoloc_descricao				         As VW04_Cidade,
	G.isoest_Sigla					         As VW04_Estado,
	T07.ISOEntEctTip_Descricao				 As VW04_TipoEcontact,
	H.ISOEntEct_econtact			         As VW04_Email,
	Z.CodFormulario				             As VW04_CodFormulario,
	Z.Formulario					         As VW04_Formulario,
	Z.CodDado_Complementar			         As VW04_CodDadoComplementar,
	Z.Dado_Complementar			             As VW04_DadoComplementar,
	Z.CodOpcao_Dado_Complementar	         As VW04_CodOpcaoDadoComplementar,
	Z.Opcao_Dado_Complementar		         As VW04_OpcaoDadoComplementar,
	Z.Valor_Dado_Complementar	 	         As VW04_ValorDadoComplementar,
	Z.OutroValor_Dado_Complementar	         As VW04_OutroValorDadoCompl,
    Z.Category_Dado_Complementar             As VW04_Category_Dado_Compl,
    Z.Obs_Dado_Complementar                  As VW04_Obs_Dado_Complementar,
	N.ISOMkAteCmp_Codigo			         As VW04_CodigoCampanha,
	N.ISOMkAteCmp_Descricao		             As VW04_DescricaoCampanha,
	N.ISOMkAteCmp_DataInicio		         As VW04_DataInicioCampanha,
	O.ISOMkFin_Descricao			         As VW04_FinalidadeCampanha,
	P.ISOMkDiv_Descricao			         As VW04_DivulgacaoCampanha,
	Q.ISOMkCntSit_Descricao		             As VW04_SituacaoContatoCampanha,
	(Select top 1 ISOMkAteCmpCntDet_DataHora
		From ISOMKATECMPCNTDETALHE
		where ISOEmp_Codigo = M.ISOEmp_Codigo
		and ISOMkAteCmp_Codigo = M.ISOMkAteCmp_Codigo
		and ISOMkAteCmpCnt_Sequencia = M.ISOMkAteCmpCnt_Sequencia
		order by ISOMkAteCmpCntDet_DataHora) As VW04_PrimeiroContatoCampanha,

	(Select top 1 ISOMkAteCmpCntDet_DataHora
		From ISOMKATECMPCNTDETALHE
		where ISOEmp_Codigo = M.ISOEmp_Codigo
		and ISOMkAteCmp_Codigo = M.ISOMkAteCmp_Codigo
		and ISOMkAteCmpCnt_Sequencia = M.ISOMkAteCmpCnt_Sequencia
		and ISOMkFinRsl_Codigo > 0
		order by ISOMkAteCmpCntDet_DataHora Desc ) As VW04_DataConclusaoContatoCamp,

	R.ISOMkAteCmpCntDet_DataHora			 As VW04_DataDetCampanha,
	R.ISOMkAteCmpCntDet_DataInicialR         As VW04_DataInicioReagendaDetCamp,
	R.ISOMkAteCmpCntDet_DataFinalRea		 As VW04_DataFinalReagendaDetCamp,
	R.ISOMkAteCmpCntDet_CodigoRespon         As VW04_CodRespDetCampanha,
	T08.ISOEnt_Nome							 As VW04_ResponsavelDetCampanha,
	R.ISOMKAteCmpCntDet_Contato              As VW04_RelacCodContatoDetCamp,
    R.ISOMKAteCmpCntDet_Sequencia            As VW04_SequenciaDetalheCamp,
	I.ISOEnt_Nome                            As VW04_RelacDscContatoDetCamp,
	R.ISOMkAteCmpCntDet_Descritivo	         As VW04_DescritivoDetalheCamp,
    R.ISOMkAteCmpCntDet_DataAlteraca         As VW04_DetalheDataAlteracao,
    Month(R.ISOMkAteCmpCntDet_DataAlteraca)  As VW04_MesDetalheDataAlteracao,
    Year(R.ISOMkAteCmpCntDet_DataAlteraca)   As VW04_AnoDetalheDataAlteracao,
    Case
		When Month(R.ISOMkAteCmpCntDet_DataAlteraca) = 01 Then 'Jan'
		When Month(R.ISOMkAteCmpCntDet_DataAlteraca) = 02 Then 'Fev'
		When Month(R.ISOMkAteCmpCntDet_DataAlteraca) = 03 Then 'Mar'
		When Month(R.ISOMkAteCmpCntDet_DataAlteraca) = 04 Then 'Abr'
		When Month(R.ISOMkAteCmpCntDet_DataAlteraca) = 05 Then 'Mai'
		When Month(R.ISOMkAteCmpCntDet_DataAlteraca) = 06 Then 'Jun'
		When Month(R.ISOMkAteCmpCntDet_DataAlteraca) = 07 Then 'Jul'
		When Month(R.ISOMkAteCmpCntDet_DataAlteraca) = 08 Then 'Ago'
		When Month(R.ISOMkAteCmpCntDet_DataAlteraca) = 09 Then 'Set'
		When Month(R.ISOMkAteCmpCntDet_DataAlteraca) = 10 Then 'Out'
		When Month(R.ISOMkAteCmpCntDet_DataAlteraca) = 11 Then 'Nov'
		When Month(R.ISOMkAteCmpCntDet_DataAlteraca) = 12 Then 'Dez'
    End                                      As VW04_MesTxtDetalheDataAlteraca,
    R.ISOMkAteCmpCntDet_UsuarioAlter         As VW04_DetalheUsuarioAlteracao,
	S.ISOMkFinCla_Descricao                  As VW04_ClassificacaoFinalidadeCm,
	T.ISOMkFinRsl_Descricao		             As VW04_DescricaoResultadoFinalid,
	U.ISOEnt_Nome					         As VW04_AgenteCampanha,
    Z.Tipo_Entidade                          As VW04_TipoEntidade,
    ECo.EntidadeCodigo		                 As VW04_ContatoCodigo,
    ECo.EntidadeNome			             As VW04_ContatoNome,
    ECo.EntidadePrincipal		             As VW04_ContatoPrincipal,
    ECo.EntidadeTipoCod		                 As VW04_ContatoTipoCod,
    ECo.EntidadeTipoDsc	                     As VW04_ContatoTipoDsc,
    ECo.EntidadeTipNivCod	                 As VW04_ContatotipoNivelCod,
    ECo.EntidadeTipNivDsc                    As VW04_ContatoTipoNivelDsc,
	ECo.EntidadeTipo			             As VW04_ContatoTipo,
	Eco.EntidadeEContact                     As VW04_ContatoEcontact,
	K.ISOEntClaP_Codigo                      As VW04_CliClaPapelCodigo,
	K.ISOEntClaP_Descricao                   As VW04_CliClaPapelDescricao,
	L.ISOEntCliSit_Codigo	                 As VW04_CliSituacaoCodigo,
	L.ISOEntCliSit_Descricao                 As VW04_CliSituacaoDescricao,
	J.ISOReg_Codigo                          As VW04_RegiaoCodigo,
	W.ISOReg_Descricao                       As VW04_Regiao,
	T01.ISOEmpEnt_Ori_Codigo                 As VW04_EntidadeCodigoExterno,
	T02.ISOEmpOri_Codigo                     As VW04_CodigoOrigem,
	T02.ISOEmpOri_Descricao                  As VW04_DescricaoOrigem,
	A.ISOEnt_Flag    As VW04_Ativo,
	A.ISOEnt_UsuarioAlteracao                As VW04_ISOEntUsuAlt_Codigo,
	AB.ISOEnt_Nome                           AS VW04_ISOEntUsuAlt_Nome,

	T12.ISOTelTip_Descricao					 As VW04_ContatoTelefoneTipo,
	T11.ISOEntTel_DDD				         As VW04_ContatoDDD,
	T11.ISOEntTel_telefone			         As VW04_ContatoTelefone,

	E.ISOEntEnd_Titulo				         As VW04_ContatoTitulo,
	E.ISOEntEnd_Logradouro			         As VW04_ContatoLogradouro,
	E.ISOEntEnd_Complemento		             As VW04_ContatoComplemento,
	E.ISOEntEnd_Numero				         As VW04_ContatoNumero,
	E.ISOEntEnd_Bairro				         As VW04_ContatoBairro,
	E.ISOEntEnd_CEP				             As VW04_ContatoCEP,
	F.isoloc_descricao				         As VW04_ContatoCidade,
	G.isoest_Sigla					         As VW04_ContatoEstado,
    J.ISOEntCli_UsuarioCadastro              as VW04_CodUsuCadastro,
    RTrim(T16.ISOEnt_Nome)                   as VW04_NomeUsuCadastro
   From ISOENTIDADE A
        Left Join ISOEmp_Entidade AA
          On AA.ISOEnt_codigo           = A.ISOEnt_Codigo
		Left Join ISOEntidade AB
		  On AB.ISOEnt_Codigo           = A.ISOEnt_UsuarioAlteracao
        Left Join ISOENTPESSOA C
          On A.ISOEnt_Codigo            = C.isoentpes_Codigo
        Left join ISOENTORGANIZACAO V
          On A.ISOEnt_Codigo            = V.ISOEntOrg_Codigo
        Left Join ISOProfissao B
          On B.ISOProf_Codigo           = C.ISOProf_Codigo
        Left Join ISOEntTelefone D
          On A.ISOEnt_Codigo            = D.ISOEnt_Codigo
         And D.ISOEntTel_Flag           = 'A'
         And D.ISOEntTel_Principal      = 'S'
        Left Join ISOEntEndereco E
          On A.ISOEnt_Codigo            = E.ISOEnt_Codigo
         And E.ISOEntEnd_Flag           = 'A'
         And E.ISOEntEnd_Principal      = 'S'
        Left Join ISOLocalidade F
          On E.ISOLoc_Codigo            = F.ISOLoc_Codigo
        Left Join ISOEstado G
          On F.ISOPais_Codigo           = G.ISOPais_Codigo
         And F.ISOEst_Codigo            = G.ISOEst_Codigo
        Left Join ISOEntEcontact H
          On A.ISOEnt_Codigo            = H.ISOEnt_Codigo
         And H.ISOEntEml_Flag           = 'A'
         And H.ISOEntEctTip_Principal   = 'S'
        Left Join ISOMKAteCmpContato M
          On A.ISOEnt_Codigo            = M.ISOMkAteCmpCnt_EntCodigo
         And M.ISOEmp_Codigo            = AA.ISOEmp_Codigo
        Left Join ISOMKAteCampanha N
          On M.ISOMkAteCmp_Codigo       = N.ISOMkAteCmp_Codigo
         And M.ISOEmp_Codigo            = N.ISOEmp_Codigo
        Left Join ISOMKFinalidade O
          On N.ISOMkFin_Codigo          = O.ISOMkFin_Codigo
         And M.ISOEmp_Codigo            = O.ISOEmp_Codigo
        Left Join ISOMKDivulgacao P
          On N.ISOMkDiv_Codigo          = P.ISOMkDiv_Codigo
         And M.ISOEmp_Codigo            = P.ISOEmp_Codigo
        Left Join ISOMkCntSituacao Q
          On M.ISOMkCntSit_Codigo       = Q.ISOMkCntSit_Codigo
         And M.ISOEmp_Codigo            = Q.ISOEmp_Codigo
        Left Join ISOMkAteCmpCntDetalhe R
          On M.ISOEmp_Codigo            = R.ISOEmp_Codigo
         And M.ISOMkAteCmp_Codigo       = R.ISOMkAteCmp_Codigo
         And M.ISOMkAteCmpCnt_Sequencia = R.ISOMkAteCmpCnt_Sequencia
        Left Join ISOMkFinClassificacao S
          On M.ISOEmp_Codigo            = S.ISOEmp_Codigo
         And N.ISOMkFin_Codigo          = S.ISOMkFin_Codigo
         And R.ISOMkFinCla_Codigo       = S.ISOMkFinCla_Codigo
        Left Join ISOMkFinResultado T
          On M.ISOEmp_Codigo            = T.ISOEmp_Codigo
         And N.ISOMkFin_Codigo          = T.ISOMkFin_Codigo
         And R.ISOMkFinRsl_Codigo       = T.ISOMkFinRsl_Codigo
        Left Join ISOEntidade U
          On U.ISOEnt_Codigo            = R.ISOMkAteCmpCntDet_CodigoAgente
        Left Join VW04A_ISOEnt_DComplementa Z
	      On A.ISOEnt_Codigo            = Z.Entidade
 Left Join ISOEntRamoAtividade X
	      On V.ISOEntRamAtv_Codigo      = X.ISOEntRamAtv_Codigo
        Left Join ISOEntSegmento Y
	      On V.ISOEntSeg_Codigo         = Y.ISOEntSeg_Codigo
	      Or C.ISOEntSeg_Codigo         = Y.ISOEntSeg_Codigo
        Left Join ISOEntidade I
	      On I.ISOEnt_Codigo            = R.ISOMKAteCmpCntDet_Contato
        Left Join VW04B_ISOEnt_DComplementar ECo
	      On A.ISOEnt_Codigo            = ECo.EntCod
		 AND Eco.EntidadeFlag = 'A' AND Eco.EntRlcFlag = 'A'
        Left Join ISOEntCliente J
	      On J.ISOEntCli_Codigo         = A.ISOEnt_Codigo
	     And J.ISOEmp_Codigo            = AA.ISOEmp_Codigo
        Left join ISOENtClassificacaoPapel K
          On K.ISOEmp_Codigo            = J.ISOEmp_Codigo
         And K.ISOEntClaP_Codigo        = J.ISOEntClaP_Codigo
        Left join ISOEntCliSituacao L
          On L.ISOEmp_Codigo            = J.ISOEmp_Codigo
         And L.ISOEntCliSit_Codigo      = J.ISOEntCliSit_Codigo
        Left join ISOREGIAO W
          On J.ISOReg_Codigo            = W.ISOReg_Codigo
         And AA.ISOEmp_Codigo           = W.ISOEmp_Codigo
        Left join ISOEMPENT_ORIGEM T01
          On T01.ISOEmp_Codigo          = AA.ISOEmp_Codigo
         And T01.ISOEmpEnt_EntCodigo    = AA.ISOEnt_Codigo
        Left Join ISOEMPORIGEM T02
          On T02.ISOEmp_Codigo          = T01.ISOEmp_Codigo
         And T02.ISOEmpOri_Codigo       = T01.ISOEmpOri_Codigo
        Left Join ISONIVESCOLARIDADE T03
        on T03.ISONivEsc_Codigo       = C.ISONivEsc_Codigo
		Left Join ISOESTCIVIL T04
		  on T04.ISOEstCiv_Codigo       = C.ISOEstCiv_Codigo
		Left Join ISOENTCLAPESPECIALIDADE T05
		  on T05.ISOEmp_Codigo          = K.ISOEmp_Codigo
		 And T05.ISOEntClaP_Codigo      = K.ISOEntClaP_Codigo
		 And T05.ISOEntClaPEsp_Codigo   = J.ISOEntClaPEsp_Codigo
		Left Join ISOTELTIPO T06
		  on T06.ISOTelTip_Codigo		= D.ISOTelTip_Codigo
		Left Join ISOENTECTTIPO T07
		  on T07.ISOEntEctTip_Codigo    = H.ISOEntEctTip_Codigo
		Left Join ISOENTIDADE T08
		  on T08.ISOEnt_Codigo          = R.ISOMkAteCmpCntDet_CodigoRespon
        Left Join ISOEntRsp_Clientes T09
          On T09.ISOEntCli_Codigo       = A.ISOEnt_Codigo
         And T09.ISOEmp_Codigo          = AA.ISOEmp_Codigo
        Left Join ISOEntidade T10
          On T10.ISOEnt_Codigo          = T09.ISOEntRsp_Codigo

		Left Join ISOEntTelefone T11
          On T11.ISOEnt_Codigo            = Eco.EntidadeCodigo
         And T11.ISOEntTel_Flag           = 'A'
         And T11.ISOEntTel_Principal      = 'S'
		Left Join ISOTELTIPO T12
		  on T12.ISOTelTip_Codigo		  = T11.ISOTelTip_Codigo

		Left Join ISOEntEndereco T13
          On T13.ISOEnt_Codigo            = Eco.EntidadeCodigo
         And T13.ISOEntEnd_Flag           = 'A'
         And T13.ISOEntEnd_Principal      = 'S'
		Left Join ISOLocalidade T14
          On T14.ISOLoc_Codigo            = T13.ISOLoc_Codigo
        Left Join ISOEstado T15
          On T15.ISOPais_Codigo           = T14.ISOPais_Codigo
         And T15.ISOEst_Codigo            = T14.ISOEst_Codigo
        Left Join ISOEnTidade T16
          On T16.ISOEnt_Codigo            = J.ISOEntCli_UsuarioCadastro

-------------------------------------------------------------------------------------------------------------------------------------------;


-- dbo.VW12_ContatoAgenda source

CREATE VIEW [dbo].[VW12_ContatoAgenda] As
/*
   Autor....: Edison T. Washimi
   Data.....: 20/04/2010
   Cliente..: Equatorial
   Descriï¿½ï¿½o: Lista os contatos das campanhas, seus dados complementares e agenda
*/

/*
   Alteraï¿½ï¿½o---: Leandro Wasko
   Data........: 14/08/2015
   SAC.........: 13901
*/

Select T01.ISOEmp_Codigo                     as VW12_CodEmpresa,            -- Cï¿½digo da Empresa
       T01.ISOMkAteCmp_Codigo                as VW12_CodCampanha,           -- Cï¿½digo da Campanha
       RTrim(T01.ISOMkAteCmp_Descricao)      as VW12_DscCampanha,           -- Descriï¿½ï¿½o da Campanha
	   T02.ISOMkAteCmpCnt_EntCodigo          as VW12_CodContatoCmp,         -- Cï¿½digo do contato da Campanha
       RTrim(T02B.ISOEnt_Nome)               as VW12_NomeContatoCmp,        -- Nome do Contato da Campanha
       T03.ISOMkFinCla_Codigo                as VW12_CodFinalidade,         -- Cï¿½digo da Finalidade
       RTrim(T03A.ISOMKFinCla_Descricao)     as VW12_DscFinalidade,         -- Descriï¿½ï¿½o da Finalidade
       T03.ISOMkFinRsl_Codigo                as VW12_CodResultado,          -- Cï¿½digo do Resultado
       RTrim(T03B.ISOMkFinRsl_Descricao)     as VW12_DscResultado,          -- Descriï¿½ï¿½o do Resultado
       T03.ISOMkAteCmpCntDet_DataAlteraca    as VW12_DtaAlteracaoDetCmp,    -- Data de alteraï¿½ï¿½o do detalhe do contato da campanha
       T03.ISOMkAteCmpCntDet_UsuarioAlter    as VW12_CodUsuAltDetCmp,       -- Cï¿½digo do usuï¿½rio de alteraï¿½ï¿½o do detalhe do contato da campanha
       RTrim(T03C.ISOEnt_Nome)               as VW12_NomeUsuAltDetCmp,      -- Nome do usuï¿½rio de alteraï¿½ï¿½o do detalhe do contato da campanha
       T03.ISOMkAteCmpCntDet_CodigoRespon    as VW12_CodRspDetCmp,          -- Cï¿½digo do Responsï¿½vel do detalhe do contato da campanha
       RTrim(T03D.ISOEnt_Nome)               as VW12_NomeRspDetCmp,         -- Nome do Responsï¿½vel do detalhe do contato da campanha
       T04.ISOMkAteCmpCntAttOptID            as VW12_OptIdDCCntCmp,         -- Resposta Combobox do Dado Complementar do contato da Campanha
       T04A.ISOMKAteCmpCntAttOptValue        as VW12_DscOptIdDCCntCmp,      -- Descriï¿½ï¿½o da opï¿½ï¿½o do dado Complementar do Contato da Campanha
       T04.ISOMkAteCmpCntAttValue            as VW12_RspDCCntCmp,           -- Resposta do dado complementar do Contato da Campanha
       T04.ISOMkAteCmpCntAttOtherValue       as VW12_RspOutrVlrDCCntCmp,    -- Resposta outros valores
       T04.ISOMkAteCmpCntAttValueLong        as VW12_RspLongaDCCntCmp,      -- Resposta Longa do Dado Complementar do Contato da Campanha
       T04B.ISOMKAteCmpCntAttId              as VW12_CodPergDCCntCmp,       -- Cï¿½digo da Pergunta do Dado Complementar
       T04B.ISOMKAteCmpCntAttName            as VW12_DscPergDCCntCmp,       -- Descriï¿½ï¿½o da Pergunta do Dado Complementar
       T03.ISOMkAteCmpCntDet_AgeCodigo       as VW12_CodAgenda,             -- Cï¿½digo da Agenda
	   RTrim(T06.ISOAge_Assunto)             as VW12_DscAssuntoAge,         -- Assunto do Agendamento
       RTrim(T06.ISOAge_Observacao)          as VW12_ObsAgendamento,        -- Observaï¿½ï¿½o do Agendamento
       T06.ISOAge_DataInicio                 as VW12_DtaIniAge,             -- Data Inicial do Agendamento
       T06.ISOAge_DataFinal                  as VW12_DtaFimAge,             -- Data Final do Agendamento
       T06.ISOAgeSit_Codigo                  as VW12_CodSitAge,             -- Cï¿½digo da Situaï¿½ï¿½o do Agendamento
       T06A.ISOAgeSit_Descricao              as VW12_DscSitAge,             -- Descriï¿½ï¿½o da Situaï¿½ï¿½o do Agendamento
       T06.ISOAgeEntAge_Codigo               as VW12_CodRspAge,             -- Cï¿½digo do Responsï¿½vel para quem foi agendado
       T06B.ISOEnt_Nome                      as VW12_NomeRspAge,            -- Nome do Responsï¿½vel para quem foi agendado
       T06.ISOAgeEntRsp_Codigo               as VW12_CodRspAgendou,  -- Cï¿½digo do Responsavel que agendou
       T06C.ISOEnt_Nome                      as VW12_NomeRspAgendou,        -- Nome do Responsavel que agendou
       T06.ISOAgeEnt_Codigo                  as VW12_CodCliAge,             -- Cï¿½digo Entidade relacioanda com o agendamento
       T06D.ISOEnt_Nome                      as VW12_NomeCliAge,            -- Nome Entidade relacioanda com o agendamento
       T06E.ISOEntEct_EContact               as VW12_EctCliAge              -- e-mail da Entidade relacioanda com o agendamento

  From ISOMKAteCampanha T01
       Inner Join ISOMKAteCmpContato T02
          On T02.ISOEmp_Codigo            = T01.ISOEmp_Codigo
         And T02.ISOMKAteCmp_Codigo       = T01.ISOMKAteCmp_Codigo
       Inner Join ISOEntidade T02B
          On T02B.ISOEnt_Codigo           = T02.ISOMkAteCmpCnt_EntCodigo
       Inner Join ISOMKAteCmpCntDetalhe T03
          On T03.ISOEmp_Codigo            = T02.ISOEmp_Codigo
         And T03.ISOMKAteCmp_Codigo       = T02.ISOMKAteCmp_Codigo
         And T03.ISOMKAteCmpCnt_Sequencia = T02.ISOMKAteCmpCnt_Sequencia
        Left Join ISOMkFinClassificacao T03A
          On T03A.ISOEmp_Codigo           = T03.ISOEmp_Codigo
         And T03A.ISOMKFin_Codigo         = T01.ISOMKFin_Codigo
         And T03A.ISOMkFinCla_Codigo      = T03.ISOMkFinCla_Codigo
        Left Join ISOMkFinResultado T03B
          On T03B.ISOEmp_Codigo           = T03.ISOEmp_Codigo
         And T03B.ISOMKFin_Codigo         = T01.ISOMKFin_Codigo
         And T03B.ISOMkFinRsl_Codigo      = T03.ISOMkFinRsl_Codigo
       Inner Join ISOEntidade T03C
          On T03C.ISOEnt_Codigo           = T03.ISOMkAteCmpCntDet_UsuarioAlter
        Left Join ISOEntidade T03D
          On T03D.ISOEnt_Codigo           = T03.ISOMkAteCmpCntDet_CodigoRespon
       Inner Join ISOMKAteCmpCntAttValues T04
          On T04.ISOEmp_Codigo            = T03.ISOEmp_Codigo
         And T04.ISOMKAteCmp_Codigo       = T01.ISOMKAteCmp_Codigo
         And T04.ISOMKAteCmpCnt_Sequencia = T02.ISOMKAteCmpCnt_Sequencia
        Left Join ISOMKAteCmpCntAttLevel1 T04A
          On T04A.ISOEmp_Codigo           = T04.ISOEmp_Codigo
         And T04A.ISOMKAteCmpCntAttId     = T04.ISOMKAteCmpCntAttId
         And T04A.ISOMKAteCmpCntAttOptId  = T04.ISOMKAteCmpCntAttOptId
        Left Join ISOMKAteCmpCntAtt T04B
          On T04B.ISOEmp_Codigo           = T04A.ISOEmp_Codigo
         And T04B.ISOMKAteCmpCntAttId     = T04A.ISOMKAteCmpCntAttId
		Left Join ISOAgenda T06
          On T06.ISOEmp_Codigo            = T03.ISOEmp_Codigo
         And T06.ISOAge_Codigo            = T03.ISOMkAteCmpCntDet_AgeCodigo
        Left JOin ISOAgeSituacao T06A
          On T06A.ISOEmp_Codigo           = T06.ISOEmp_Codigo
         And T06A.ISOAgeSit_Codigo        = T06.ISOAgeSit_Codigo
        Left Join ISOEntidade T06B
          On T06B.ISOEnt_Codigo           = T06.ISOAgeEntAge_Codigo
        Left Join ISOEntidade T06C
          On T06C.ISOEnt_Codigo           = T06.ISOAgeEntRsp_Codigo
        Left Join ISOEntidade T06D
          On T06D.ISOEnt_Codigo           = T06.ISOAgeEnt_Codigo
        Left Join ISOEntEContact T06E
          On T06E.ISOEnt_Codigo           = T06.ISOAgeEnt_Codigo
         And T06E.ISOEntEctTip_Principal  = 'S'
        Left Join ISOEntEctTipo T06F
          On T06E.ISOEntEctTip_Codigo     = T06E.ISOEntEctTip_Codigo;


-- dbo.VW20_PESQUISA source

CREATE VIEW [dbo].[VW20_PESQUISA] AS
SELECT
		B.ISOPqPes_Codigo as VW20_CodPesquisa,
		B.ISOPqPes_Descricao as VW20_DscPesquisa,
		C.ISOPqCntSit_Codigo as VW20_CodSitContato,
		C.ISOPqCntSit_Descricao as VW20_DscSitContato,
		A.ISOPqAte_Prioridade as VW20_CodPrioridade,
		Case
			when A.ISOPqAte_Prioridade = 1 then 'Alta'
			when A.ISOPqAte_Prioridade = 2 then 'M?dia'
			when A.ISOPqAte_Prioridade = 3 then 'Baixa'
		End as VW20_DscPrioridade,
		E.ISOEnt_Codigo as VW20_CodCliente,
		E.ISOEnt_Nome as VW20_NomeCliente,
		F.ISOEntEct_Econtact as VW20_EmailPrincCliente,
		G.ISOEntTel_DDD as VW20_DDDPrincCliente,
		G.ISOEntTel_Telefone as VW20_TelefonePrincCliente,
		I.ISOPqAtendimentoAttCategory as VW20_CategoriaPerguntaDC,
		I.ISOPqAtendimentoAttId as VW20_CodPerguntaDC,
		I.ISOPqAtendimentoAttName as VW20_DescPerguntaDC,
		H.ISOPqAtendimentoAttValue as VW20_RespostaPergDC,
		H.ISOPqAtendimentoAttOtherValue as VW20_RespostaPergOutroValorDC,
		H.ISOPqAtendimentoAttValueLong as VW20_RespostaLongaPergDC,
		H.ISOPqAtendimentoAttOptId as VW20_CodOpcaoRespostaDC,
		J.ISOPqAtendimentoAttOptValue as VW20_DescOpcaoRespostaDC,
		H.ISOPqAtendimentoAttUsuarioAlte as VW20_CodUsuarioAltRespostaDC,
		K.ISOEnt_Nome as VW20_NomeUsuarioAltRespostaDC,
		L.ISOReg_Codigo as VW20_CodRegiao,
		L.ISOReg_Descricao as VW20_DescRegiao,
		N.ISOEntRlcTip_Codigo as VW20_CodTipoRelacionamento,
		N.ISOEntRlcTip_Descricao as VW20_DescTipoRelacionamento,
		O.ISOEntRlcTipNiv_Codigo as VW20_CodNivelRelacionamento,
		O.ISOEntRlcTipNiv_Descricao as VW20_DescNivelRelacionamento,
		M.ISOEntRlc_Codigo as VW20_CodEntidadeRelacionada,
		P.ISOEnt_Nome as VW20_NomeEntidadeRelacionada,
		R.ISOLoc_Codigo as VW20_CodLocalidade,
		R.ISOLoc_Descricao as VW20_DescLocalidade,
		S.ISOEst_Codigo as VW20_CodEstado,
		S.ISOEst_Sigla as VW20_SiglaEstado,
		S.ISOEst_Descricao as VW20_DescEstado
FROM
	ISOPqAtendimento A with (NOLOCK)
	inner join isopqpesquisa B with (NOLOCK)
		on
			A.ISOEmp_Codigo = B.ISOEmp_Codigo and
			A.ISOPqPes_Codigo = B.ISOPqPes_Codigo
	left join ISOPqCntSituacao C with (NOLOCK)
		on
			A.ISOEmp_codigo = C.ISOEmp_Codigo and
			A.ISOPqCntSit_Codigo = C.ISOPqCntSit_Codigo
	inner join ISOEntCliente D with (NOLOCK)
		on
			A.ISOEmp_Codigo = D.ISOEmp_Codigo and
			A.ISOEntCli_Codigo = D.ISOEntCli_Codigo
	inner join ISOEntidade E with (NOLOCK)
		on
			D.ISOEntCli_Codigo = E.ISOEnt_Codigo
	left join ISOEntEContact F with (NOLOCK)
		on
			F.ISOEnt_Codigo = E.ISOEnt_Codigo and
			F.ISOEntEml_Flag = 'A' and
			F.ISOEntEctTip_Principal = 'S'
	left join ISOEntTelefone G with (NOLOCK)
		on
			G.ISOEnt_Codigo = E.ISOEnt_Codigo and
			G.ISOEntTel_Flag = 'A' and
			G.ISOEntTel_Principal = 'S'
	left join ISOPqAtendimentoAttValues H with (NOLOCK)
		on
			A.ISOEmp_Codigo = H.ISOEmp_Codigo and
			A.ISOPqAte_Codigo = H.ISOPqAte_Codigo
	inner join ISOPqAtendimentoAtt I with(NOLOCK)
		on
			H.ISOPqAtendimentoAttId = I.ISOPqAtendimentoAttId
	left join ISOPqAtendimentoAttLevel1 J with (NOLOCK)
		on
			H.ISOPqAtendimentoAttId = J.ISOPqAtendimentoAttId and
			H.ISOPqAtendimentoAttOptId = J.ISOPqAtendimentoAttOptId
	left join ISOEntidade K with (NOLOCK)
		on
			H.ISOPqAtendimentoAttUsuarioAlte = K.ISOEnt_Codigo
	left join ISORegiao L with (NOLOCK)
		on
			D.ISOEmp_Codigo = L.ISOEmp_Codigo and
			D.ISOReg_Codigo = L.ISOReg_Codigo
	left join ISOEnt_Relacao M with (NOLOCK)
		on
			M.ISOEntRle_Codigo = A.ISOEntCli_Codigo and
			M.ISOEnt_Rlc_Flag = 'A'
	left join ISOEntRlcTipo N with (NOLOCK)
		on
			N.ISOEntRlcTip_Codigo = M.ISOEntRlcTip_Codigo
	left join ISOEntRlcTipNivel O with (NOLOCK)
		on
			M.ISOEntRlcTip_Codigo = O.ISOEntRlcTip_Codigo and
			M.ISOEntRlcTipNiv_Codigo = O.ISOEntRlcTipNiv_Codigo
	left join ISOEntidade P with (NOLOCK)
		on
			M.ISOEntRlc_Codigo = P.ISOEnt_Codigo
	left join ISOEntEndereco Q with (NOLOCK)
		on
			Q.ISOEnt_Codigo = D.ISOEntCli_Codigo
	inner join ISOLocalidade R with (NOLOCK)
		on
			Q.ISOLoc_Codigo = R.ISOLoc_Codigo
	inner join ISOEstado S with (NOLOCK)
		on
			R.ISOEst_Codigo = S.ISOEst_Codigo;


-- dbo.VW21_AgendamentoOperador source

CREATE VIEW [dbo].[VW21_AgendamentoOperador] as
--Select ROW_NUMBER() over (order by T01.ISOEmp_Codigo)
--                                           as VW21_OrdemRegistro,
Select T01.ISOEmp_Codigo                   as VW21_CodEmpresa,
       T01.ISOMKAteCmp_Codigo              as VW21_CodCampanha,
       T02.ISOMKCmp_Descricao              as VW21_Fonte,
       T03.ISOMKAteCmpCnt_EntCodigo        as VW21_CodContato,
       T04.ISOEnt_Nome                     as VW21_NomeContato,
       T05.ISOMkAteCmpCntDet_CodigoAgente  as VW21_CodOperador,
       T06.ISOEnt_Nome                     as VW21_NomeOperador,
       T01.ISOMkFin_Codigo                 as VW21_CodFinalidade,
       T07.ISOMkFin_Descricao              as VW21_DscFinalidade,
       T05.ISOMkFinCla_Codigo              as VW21_CodClassificacao,
       T08.ISOMkFinCla_Descricao           as VW21_DscClassificacao,
       T05.ISOMkAteCmpCntDet_DataInicialR  as VW21_DtHoraVisita,
       T05.ISOMKAteCmpCntDet_DataHora      as VW21_DtHoraContato,
       T05.ISOMkAteCmpCntDet_CodigoRespon  as VW21_CodConsultor,
       T09.ISOEnt_Nome                     as VW21_NomeConsultor,
       T10.ISOMkAteCmpCntAttValue          as VW21_NrFuncionarios,
       T11.ISOMkAteCmpCntAttOptId          as VW21_OpcProduto,
       T12.ISOMkAteCmpCntAttOptValue       as VW21_Produto

  From ISOMKATECAMPANHA T01
       Inner Join ISOMKCAMPANHA T02
          On T02.ISOEmp_Codigo            = T01.ISOEmp_Codigo
         And T02.ISOMkCmp_Codigo          = T01.ISOMkCmp_Codigo
       Inner Join ISOMKATECMPCONTATO T03
          On T03.ISOEmp_Codigo            = T01.ISOEmp_Codigo
         And T03.ISOMkAteCmp_Codigo       = T01.ISOMkAteCmp_Codigo
       Inner Join ISOENTIDADE T04
          On T04.ISOEnt_Codigo            = T03.ISOMkAteCmpCnt_EntCodigo
       Inner Join ISOMKATECMPCNTDETALHE T05
          On T05.ISOEmp_Codigo            = T03.ISOEmp_Codigo
         And T05.ISOMkAteCmp_Codigo       = T01.ISOMkAteCmp_Codigo
         And T05.ISOMkAteCmpCnt_Sequencia = T03.ISOMkAteCmpCnt_Sequencia
         And T05.ISOMkAteCmpCntDet_DataInicialR = (Select Min(T05A.ISOMkAteCmpCntDet_DataInicialR)
                                                    From ISOMKATECMPCNTDETALHE T05A
                                                   Where T05A.ISOEmp_Codigo = T05.ISOEmp_Codigo
                                                     And T05A.ISOMkAteCmp_Codigo = T05.ISOMkAteCmp_Codigo
                                                     And T05A.ISOMkAteCmpCnt_Sequencia = T05.ISOMkAteCmpCnt_Sequencia)
       Inner Join ISOEntidade T06
          On T06.ISOEnt_Codigo            = T05.ISOMkAteCmpCntDet_CodigoAgente
       Inner Join ISOMKFINALIDADE T07
          On T07.ISOEmp_Codigo            = T01.ISOEmp_Codigo
         And T07.ISOMkFin_Codigo          = T01.ISOMkFin_Codigo
       Inner Join ISOMKFINCLASSIFICACAO T08
          On T08.ISOEmp_Codigo            = T05.ISOEmp_Codigo
         And T08.ISOMkFin_Codigo          = T07.ISOMkFin_Codigo
         And T08.ISOMkFinCla_Codigo       = T05.ISOMkFinCla_Codigo
        Left Join ISOENTIDADE T09
          On T09.ISOEnt_Codigo            = T05.ISOMkAteCmpCntDet_CodigoRespon
        Left Join ISOMKATECMPCNTATTVALUES T10
          On T10.ISOEmp_Codigo            = T01.ISOEmp_Codigo
         And T10.ISOMkAteCmp_Codigo       = T01.ISOMkAteCmp_Codigo
         And T10.ISOMkAteCmpCnt_Sequencia = T03.ISOMkAteCmpCnt_Sequencia
         And T10.ISOMKAteCmpCntFormDefId  = 2
         And T10.ISOMkAteCmpCntAttId      = 2
        Left Join ISOMKATECMPCNTATTVALUES T11
          On T11.ISOEmp_Codigo            = T01.ISOEmp_Codigo
         And T11.ISOMkAteCmp_Codigo       = T01.ISOMkAteCmp_Codigo
         And T11.ISOMkAteCmpCnt_Sequencia = T03.ISOMkAteCmpCnt_Sequencia
         And T11.ISOMKAteCmpCntFormDefId  = 2
         And T11.ISOMkAteCmpCntAttId      = 68
        Left Join ISOMKATECMPCNTATTLEVEL1 T12
        On T12.ISOEmp_Codigo            = T11.ISOEmp_Codigo
         And T12.ISOMkFin_Codigo          = T01.ISOMkFin_Codigo
         And T12.ISOMKAteCmpCntFormDefId  = 2
         And T12.ISOMkAteCmpCntAttOptId   = T11.ISOMkAteCmpCntAttOptId

-- Where T08.ISOMkFinCla_Codigo = 5 and T07.ISOMkFin_Codigo = 1;


-- dbo.VW41_OmniBox_B source

CREATE VIEW VW41_OmniBox_B as --WITH SCHEMABINDING as
Select T1.EntCodigo                                             as VW41_EntCodigo,
       T1.EntNome                                               as VW41_EntNome,
       T1.EntFlag                                               as VW41_EntFlag,
       Cast(RTRIM(T1.EntNome) + ';' + RTRIM(T1.Tel_Concatenado) as VarChar(1024)) as VW41_Tel_Concatenado, -- DDD e Telefone concatenado
       Cast(RTRIM(T1.EntNome) + ';' + RTRIM(T1.End_Concatenado) as VarChar(4096)) as VW41_End_Concatenado, -- Titulo, Logradouro, número, bairro, Cidade (Descrição), Estado (Descrição e sigla
       Cast(RTRIM(T1.EntNome) + ';' + RTRIM(T1.Ect_Concatenado) as VarChar(1024)) as VW41_Ect_Concatenado, -- e-contact
       Cast(RTRIM(T1.EntNome) + ';' + RTRIM(T1.Pes_Concatenado) as VarChar(1024)) as VW41_Pes_Concatenado, -- CPF, RG e Profissão
       Cast(RTRIM(T1.EntNome) + ';' + RTRIM(T1.Org_Concatenado) as VarChar(1024)) as VW41_Org_Concatenado, -- Nome Fantasia, CNPJ e Ramo de atividade
       Cast(RTRIM(T1.EntNome) + ';' + RTRIM(T1.Ori_Concatenado) as VarChar(1024)) as VW41_Ori_Concatenado, -- Códigos nas Origens da informação
--       T1.Pes_CPF                                               as VW41_PesCPF,
--       T1.Org_CNPJ                                              as VW41_OrgCNPJ,
       -- Concatenação geral das informações
       Cast(RTRIM(T1.EntNome) + ';' +
            RTRIM(T1.Tel_Concatenado) + ';' +
            RTRIM(T1.End_Concatenado) + ';' +
            RTRIM(T1.Ect_Concatenado) + ';' +
            RTRIM(T1.Pes_Concatenado) + ';' +
            RTRIM(T1.Org_Concatenado) + ';' +
            RTRIM(T1.Ori_Concatenado) as VarChar(8000))                           as VW41_Full_Concatenado
  From (
Select T1.EntCodigo, T1.EntNome, T1.EntFlag,
       Case
	       When Tel_Concatenado Is Null Then '' Else Tel_Concatenado
       End   as Tel_Concatenado,
       Case
	       When End_Concatenado Is Null Then '' Else End_Concatenado
       End   as End_Concatenado,
       Case
	       When Ect_Concatenado Is Null Then '' Else Ect_Concatenado
       End   as Ect_Concatenado,
       Case
	       When Pes_Concatenado Is Null Then '' Else Pes_Concatenado
       End   as Pes_Concatenado,
       Pes_CPF,
       Case
	       When Org_Concatenado Is Null Then '' Else Org_Concatenado
       End   as Org_Concatenado,
       Org_CNPJ,
       Case
	       When Ori_Concatenado Is Null Then '' Else Ori_Concatenado
       End   as Ori_Concatenado
  From
(Select Distinct
        T01.ISOEnt_Codigo   as EntCodigo,
        T01.ISOEnt_Nome     as EntNome,
        T01.ISOEnt_Flag     as EntFlag,
        T02.Tel_Concatenado as Tel_Concatenado,
        T03.End_Concatenado as End_Concatenado,
        T04.Ect_Concatenado as Ect_Concatenado,
        T05.Pes_Concatenado as Pes_Concatenado,
        T05.EntPesCPF       as Pes_CPF,
        T06.Org_Concatenado as Org_Concatenado,
        T06.EntOrgCNPJ      as Org_CNPJ,
        T07.Ori_Concatenado as Ori_Concatenado
   From ISOEntidade T01
        Left Join
 			(SELECT ISOEnt_Codigo as EntTelefone, COALESCE(
                    (SELECT RTRIM(ISOEntTel_DDD) + ';' + CAST(ISOEntTel_Telefone AS VARCHAR(9)) AS [text()]
                       FROM ISOEntTelefone AS TI1
                      WHERE TI1.ISOEnt_Codigo  = T02.ISOEnt_COdigo
                        FOR XML PATH(''), TYPE).value('.[1]', 'VARCHAR(MAX)'), '') As Tel_Concatenado
               FROM ISOEntTelefone AS T02) T02
          On T02.EntTelefone = T01.ISOEnt_Codigo
        Left Join
            (SELECT ISOEnt_Codigo as EntEndereco, COALESCE(
					(SELECT Case
					            When TA1.ISOLoc_Descricao Is Not Null And TA2.ISOEst_Descricao IS Null Then
                                     RTRIM(ISOEntEnd_Bairro) + ';' + RTRIM(ISOEntEnd_Titulo) + ';' + RTRIM(ISOEntEnd_Logradouro) + ';' + RTRIM(ISOEntEnd_Numero) + ';' + RTRIM(TA1.ISOLoc_Descricao)
					            When TA1.ISOLoc_Descricao Is Null And TA2.ISOEst_Descricao IS Not Null Then
                                     RTRIM(ISOEntEnd_Bairro) + ';' + RTRIM(ISOEntEnd_Titulo) + ';' + RTRIM(ISOEntEnd_Logradouro) + ';' + RTRIM(ISOEntEnd_Numero) + ';' + RTRIM(TA2.ISOEst_Descricao) + ';' + TA2.ISOEst_Sigla
					            When TA1.ISOLoc_Descricao Is Null And TA2.ISOEst_Descricao IS Null Then
                                     RTRIM(ISOEntEnd_Bairro) + ';' + RTRIM(ISOEntEnd_Titulo) + ';' + RTRIM(ISOEntEnd_Logradouro) + ';' + RTRIM(ISOEntEnd_Numero)
                                Else
                                     RTRIM(ISOEntEnd_Bairro) + ';' + RTRIM(ISOEntEnd_Titulo) + ';' + RTRIM(ISOEntEnd_Logradouro) + ';' + RTRIM(ISOEntEnd_Numero) + ';' + RTRIM(TA1.ISOLoc_Descricao) + ';' + RTRIM(TA2.ISOEst_Descricao) + ';' + TA2.ISOEst_Sigla
                            End  AS [text()]
					 FROM ISOEntEndereco AS TI2
						  Left Join ISOLocalidade TA1
							On TA1.ISOLoc_Codigo  = TI2.ISOLoc_Codigo
                          Left Join ISOEstado TA2
                            On TA2.ISOEst_Codigo  = TA1.ISOEst_Codigo
                           And TA2.ISOPais_codigo = TA1.ISOPais_Codigo
					 WHERE TI2.ISOEnt_Codigo  = T03.ISOEnt_COdigo
					 FOR XML PATH(''), TYPE).value('.[1]', 'VARCHAR(MAX)'), '') As End_Concatenado
			FROM ISOEntEndereco AS T03) T03
		  On T03.EntEndereco = T01.ISOEnt_Codigo
       Left Join
			(SELECT ISOEnt_Codigo as EntContato, COALESCE(
					(SELECT RTRIM(ISOEntEct_Econtact) + ';' AS [text()]
					 FROM ISOEntEcontact AS TI1
					 WHERE TI1.ISOEnt_Codigo  = T04.ISOEnt_COdigo
					 FOR XML PATH(''), TYPE).value('.[1]', 'VARCHAR(MAX)'), '') As Ect_Concatenado
			FROM ISOEntEcontact AS T04) T04
         On T04.EntContato = T01.ISOEnt_Codigo
       Left Join
			(SELECT ISOEntPes_Codigo as EntPessoa, ISOEntPes_CPF As EntPesCPF, COALESCE(
					(SELECT Case
					            When TA1.ISOProf_Codigo Is not Null And ISOEntPes_RG Is Not Null And ISOEntPes_CPF IS Not Null Then
					                 RTRIM(ISOEntPes_RG) + ';' + RTRIM(Cast(ISOEntPes_CPF as char(11))) + ';' + RTRIM(TA1.ISOProf_Descricao)
					            When TA1.ISOProf_Codigo Is not Null And ISOEntPes_RG Is Not Null And ISOEntPes_CPF IS Null Then
					                 RTRIM(ISOEntPes_RG) + ';' + RTRIM(TA1.ISOProf_Descricao)
					            When TA1.ISOProf_Codigo Is not Null And ISOEntPes_RG Is Null And ISOEntPes_CPF IS Not Null Then
					                 RTRIM(Cast(ISOEntPes_CPF as char(11))) + ';' + RTRIM(TA1.ISOProf_Descricao)
					            When TA1.ISOProf_Codigo Is Null And ISOEntPes_RG Is Not Null And ISOEntPes_CPF IS Not Null Then
                                     RTRIM(ISOEntPes_RG) + ';' + RTRIM(Cast(ISOEntPes_CPF as char(11)))
                                When TA1.ISOProf_Codigo Is not Null And ISOEntPes_RG Is Null And ISOEntPes_CPF IS Null Then
					                 RTRIM(TA1.ISOProf_Descricao)
                                When TA1.ISOProf_Codigo Is Null And ISOEntPes_RG Is Null And ISOEntPes_CPF IS Not Null Then
					                 RTRIM(Cast(ISOEntPes_CPF as Char(11)))
                                When TA1.ISOProf_Codigo Is Null And ISOEntPes_RG Is Not Null And ISOEntPes_CPF IS Null Then
					                 RTRIM(ISOEntPes_RG)
					        End  AS [text()]
					 FROM ISOEntPessoa AS TI1
					      Left Join ISOProfissao TA1
					        On TA1.ISOProf_Codigo = TI1.ISOProf_Codigo
					 WHERE TI1.ISOEntPes_Codigo  = T05.ISOEntPes_COdigo
					 FOR XML PATH(''), TYPE).value('.[1]', 'VARCHAR(MAX)'), '') As Pes_Concatenado
			FROM ISOEntPessoa AS T05) T05
         On T05.EntPessoa = T01.ISOEnt_Codigo
       Left Join
			(SELECT ISOEntOrg_Codigo as EntOrganizacao, ISOEntOrg_CNPJ as EntOrgCNPJ, COALESCE(
					(SELECT Case
					            When ISOEntOrg_CNPJ Is Not Null And TA1.ISOEntRamAtv_Codigo Is Not Null Then
					                 RTRIM(ISOEntOrg_NomeFantasia) + ';' + RTRIM(Cast(ISOEntOrg_CNPJ as char(14))) + ';' + RTRIM(TA1.ISOEntRamAtv_Descricao)
					            When ISOEntOrg_CNPJ Is Not Null And TA1.ISOEntRamAtv_Codigo Is Null Then
					                 RTRIM(ISOEntOrg_NomeFantasia) + ';' + RTRIM(Cast(ISOEntOrg_CNPJ as char(14)))
					            When ISOEntOrg_CNPJ Is Null And TA1.ISOEntRamAtv_Codigo Is Not Null Then
                                     RTRIM(ISOEntOrg_NomeFantasia) + ';' + RTRIM(TA1.ISOEntRamAtv_Descricao)
                                When ISOEntOrg_CNPJ Is Null And TA1.ISOEntRamAtv_Codigo Is Null Then
                                     RTRIM(ISOEntOrg_NomeFantasia)
					        End AS [text()]
					 FROM ISOEntOrganizacao AS TI1
					      Left Join ISOEntRamoAtividade TA1
					        On TA1.ISOEntRamAtv_Codigo = TI1.ISOEntRamAtv_Codigo
					 WHERE TI1.ISOEntOrg_Codigo  = T06.ISOEntOrg_Codigo
					 FOR XML PATH(''), TYPE).value('.[1]', 'VARCHAR(MAX)'), '') As Org_Concatenado
			FROM ISOEntOrganizacao AS T06) T06
         On T06.EntOrganizacao = T01.ISOEnt_Codigo
       Left Join
			(SELECT ISOEmpEnt_EntCodigo as EntOrigem, COALESCE(
					(SELECT RTRIM(ISOEmpEnt_Ori_Codigo) + ';' AS [text()]
					 FROM ISOEmpEnt_Origem AS TI1
					 WHERE TI1.ISOEmpEnt_EntCodigo  = T07.ISOEmpEnt_EntCodigo
					 FOR XML PATH(''), TYPE).value('.[1]', 'VARCHAR(MAX)'), '') As Ori_Concatenado
			FROM ISOEmpEnt_Origem AS T07) T07
         On T07.EntOrigem = T01.ISOEnt_Codigo) T1) T1;


-- dbo.VW63B_DadoComplementar source

-------------------------------------------------------------------------------------------------------------------------------------------


CREATE VIEW [dbo].[VW63B_DadoComplementar] as
--ALTER View [dbo].[VW63_DadoComplementar] as

select distinct VW63_ID from [VW63_DadoComplementar];


-- dbo.VW63_DadoComplementar source

CREATE VIEW [dbo].[VW63_DadoComplementar] as

--SELECT     DISTINCT 11 AS VW63_Empresa, 'PRODUTO' AS VW63_ID,
--SUBSTRING(LTRIM(RTRIM(ISOPRODUTO.ISOPrd_Codigo)) + ' - (' + LTRIM(RTRIM(ISOPRODUTO.ISOPrd_Flag)) + ') - ' + LTRIM(RTRIM(ISOPRODUTO.ISOPrd_Descricao)), 1, 100) AS VW63_Codigo,
--ISOCLIENTE.ISOENT_CODIGO AS VW63_CodCliente
--FROM ISOCLIENTE
--LEFT JOIN ISOPRODUTO ON ISOPRODUTO.ISOEmp_Codigo = 11
--	AND LEN(ISOPRODUTO.ISOPrd_Codigo) <= 6

SELECT  11 AS VW63_Empresa, 'PRODUTO' AS VW63_ID,
SUBSTRING(LTRIM(RTRIM(ISOPRODUTO.ISOPrd_Codigo)) + ' - (' + LTRIM(RTRIM(ISOPRODUTO.ISOPrd_Flag)) + ') - ' + LTRIM(RTRIM(ISOPRODUTO.ISOPrd_Descricao)), 1, 100) AS VW63_Codigo,
0 AS VW63_CodCliente
FROM ISOPRODUTO
WHERE ISOPRODUTO.ISOEmp_Codigo = 11
	AND ISOPRODUTO.ISOPrd_Vendavel = 'S'
	AND LEN(ISOPRODUTO.ISOPrd_Codigo) = 6

UNION ALL

SELECT 11 AS VW63_Empresa,
	'CIDADE' AS VW63_ID,
	SUBSTRING( LTRIM(RTRIM(ISOLoc_Descricao)), 1, 100) AS VW63_Codigo,
	0 as VW63_CodCliente
FROM ISOLOCALIDADE

UNION ALL

SELECT 11 AS VW63_Empresa,
	'NOTAFISCAL' AS VW63_ID,
	SUBSTRING( LTRIM(RTRIM(ISOEntCliNF_Numero)), 1, 100) AS VW63_Codigo,
	ISOEntCli_Codigo as VW63_CodCliente
FROM ISOENTCLINOTAFISCAL WITH (NOLOCK)

UNION ALL

SELECT 11 AS VW63_Empresa,
	'LOTE' AS VW63_ID,
	'LOTE NAO INFORMADO' AS VW63_Codigo,
	0 as VW63_CodCliente

UNION ALL

SELECT 11 AS VW63_Empresa,
	'LOTE' AS VW63_ID,
	'VALIDAR LOTE' AS VW63_Codigo,
	0 as VW63_CodCliente

UNION ALL

-- Inativado para utilizar a tabela TB63_DadoComplementar por questões de performance
-- zagoto 17/07/2018
--SELECT 11 AS VW63_Empresa,
--		'LOTE' AS VW63_ID,
--		SUBSTRING(LTRIM(RTRIM(ISOENTCLINFITEM.ISOEntCliNF_Numero)) + '-' -- nota fiscal
--		+ CASE WHEN LTRIM(RTRIM(ISOENTCLINFITEM.ISOEntCliNFItem_NrSerie)) = '' THEN 'SEM LOTE' ELSE LTRIM(RTRIM(ISOENTCLINFITEM.ISOEntCliNFItem_NrSerie)) END + '-' -- lote
--		+ LTRIM(RTRIM(ISOENTCLINFITEM.ISOPrd_Codigo)), 1, 100) AS VW63_Codigo, -- produto
--		ISOEntCli_Codigo AS VW63_CodCliente
--FROM         ISOENTCLINFITEM WITH (NOLOCK) INNER JOIN
--                      ISOENTCLINOTAFISCAL WITH (NOLOCK) ON ISOENTCLINFITEM.ISOEmp_Codigo = ISOENTCLINOTAFISCAL.ISOEmp_Codigo AND
--                      ISOENTCLINFITEM.ISOEntCliNF_RefFiscal = ISOENTCLINOTAFISCAL.ISOEntCliNF_RefFiscal AND ISOENTCLINFITEM.ISOEntCliNF_Serie = ISOENTCLINOTAFISCAL.ISOEntCliNF_Serie AND
--                      ISOENTCLINFITEM.ISOEntCliNF_Numero = ISOENTCLINOTAFISCAL.ISOEntCliNF_Numero
--WHERE ISOEntCliNF_Data >= GETDATE()-120

SELECT     VW63_Empresa, VW63_ID, VW63_Codigo, VW63_CodCliente
FROM         TB63_DadoComplementar
WHERE VW63_Empresa = 11 AND VW63_ID = 'LOTE'


UNION ALL
SELECT 11 AS VW63_Empresa,
	'LOTE_SEM_CLIENTE' AS VW63_ID,
	'VALIDAR LOTE' AS VW63_Codigo,
	0 as VW63_CodCliente

UNION ALL

SELECT     VW63_Empresa, VW63_ID, VW63_Codigo, VW63_CodCliente
FROM         TB63_DadoComplementar
WHERE VW63_Empresa = 11 AND VW63_ID = 'LOTE_SEM_CLIENTE'

-- Inativado para utilizar a tabela TB63_DadoComplementar por questões de performance
-- zagoto 17/07/2018
--SELECT 11 AS VW63_Empresa,
--		'LOTE_SEM_CLIENTE' AS VW63_ID,
--		SUBSTRING(CASE WHEN LTRIM(RTRIM(ISOENTCLINFITEM.ISOEntCliNFItem_NrSerie)) = '' THEN 'SEM LOTE' ELSE LTRIM(RTRIM(ISOENTCLINFITEM.ISOEntCliNFItem_NrSerie)) END + '-' + LTRIM(RTRIM(ISOENTCLINFITEM.ISOPrd_Codigo)), 1, 100) AS VW63_Codigo,
--		0 AS VW63_CodCliente
--FROM         ISOENTCLINFITEM WITH (NOLOCK) INNER JOIN
--                      ISOENTCLINOTAFISCAL WITH (NOLOCK) ON ISOENTCLINFITEM.ISOEmp_Codigo = ISOENTCLINOTAFISCAL.ISOEmp_Codigo AND
--                      ISOENTCLINFITEM.ISOEntCliNF_RefFiscal = ISOENTCLINOTAFISCAL.ISOEntCliNF_RefFiscal AND ISOENTCLINFITEM.ISOEntCliNF_Serie = ISOENTCLINOTAFISCAL.ISOEntCliNF_Serie AND
--                      ISOENTCLINFITEM.ISOEntCliNF_Numero = ISOENTCLINOTAFISCAL.ISOEntCliNF_Numero
--WHERE ISOEntCliNF_Data >= GETDATE()-90;


-- dbo.VW64_BuscaPedido source

CREATE VIEW [dbo].[VW64_BuscaPedido] AS
	SELECT
	T1.[ISOEmp_Codigo]				AS VW64_EmpCodigo,
	T1.[ISOPvPed_CodigoAtendente]	AS VW64_CodigoAtendente,
	T1.[ISOPvPed_Flag]				AS VW64_Flag,
	T1.[ISOPvPed_Alcada]			AS VW64_Alcada,
	T1.[ISOPvPed_DtaPedido]			AS VW64_DataPedido,
	T1.[ISOPvPed_CodVendedorCD]		AS VW64_CodVendedorCD,
	T3.[ISOEnt_Nome]				AS VW64_NomeVendedorCD,
	T2.[ISOEnt_Nome]				AS VW64_NomeAtendente,
	T1.[ISOPvPed_CodigoExterno]		AS VW64_CodigoExterno,
	T6.[ISOPvPedSit_Descricao]		AS VW64_SitDescricao,
	T5.[ISOEnt_Nome]				AS VW64_CliNome,
	T1.[ISOPvPed_Codigo]			AS VW64_PedCodigo,
	T1.[ISOPvPed_CliCodigo]			AS VW64_CliCodigo,
	T4.[ISOEntCli_CodigoExt]		AS VW64_CliCodigoExt,
	T1.[ISOPvPed_HoraPedido]		AS VW64_HoraPedido,
	T1.[ISOPvPed_DtaSolEntrega]		AS VW64_DataSolEntrega,
	T1.[ISOPvPedSit_Codigo]			AS VW64_SitCodigo,
	T6.[ISOPvPedSit_Situacao]		AS VW64_SitSituacao,
	T1.[ISOPeCndPgt_Codigo]			AS VW64_CndPgtCodigo,
	T7.[ISOPeCndPgt_Descricao]		AS VW64_CndPgtDescricao,
	T1.[ISOPvPed_Pagamento]			AS VW64_Pagamento,
	T1.[ISOPvPed_Observacao]		AS VW64_Observacao,
	T1.[ISOPvPed_CodEndEntrega]		AS VW64_CodEndEntrega,
	T1.[ISOPvPed_EstadoDestino]		AS VW64_EstadoDestino,
	T1.[ISOPvPed_EstadoOrigem]		AS VW64_EstadoOrigem,
	T1.[ISOPvPed_PercDesconto]		AS VW64_PercDesconto,
	T1.[ISOPvPed_VlrDesconto]		AS VW64_VlrDesconto,
	T1.[ISOPvPed_ValorFrete]		AS VW64_ValorFrete,
	T1.[ISOPvPed_ValorTotalPedido]	AS VW64_ValorTotalPedido
	FROM [ISOPVPEDIDO] T1 WITH (NOLOCK)
	INNER JOIN [ISOENTIDADE] T2 WITH (NOLOCK)
		ON T2.[ISOEnt_Codigo] = T1.[ISOPvPed_CodigoAtendente]
	LEFT JOIN [ISOENTIDADE] T3 WITH (NOLOCK)
		ON T3.[ISOEnt_Codigo] = T1.[ISOPvPed_CodVendedorCD]
	INNER JOIN [ISOENTCLIENTE] T4 WITH (NOLOCK)
		ON T4.[ISOEmp_Codigo] = T1.[ISOEmp_Codigo]
		AND T4.[ISOEntCli_Codigo] = T1.[ISOPvPed_CliCodigo]
	INNER JOIN [ISOENTIDADE] T5 WITH (NOLOCK)
		ON T5.[ISOEnt_Codigo] = T1.[ISOPvPed_CliCodigo]
	INNER JOIN [ISOPVPEDSITUACAO] T6 WITH (NOLOCK)
		ON T6.[ISOEmp_Codigo] = T1.[ISOEmp_Codigo]
		AND T6.[ISOPvPedSit_Codigo] = T1.[ISOPvPedSit_Codigo]
	INNER JOIN [ISOPECNDPAGAMENTO] T7 WITH (NOLOCK)
		ON T7.[ISOEmp_Codigo] = T1.[ISOEmp_Codigo]
		AND T7.[ISOPeCndPgt_Codigo] = T1.[ISOPeCndPgt_Codigo];


-- dbo.VW67_MapaVendas source

CREATE VIEW [dbo].[VW67_MapaVendas] AS
SELECT T01.ISOEmp_Codigo AS VW67_ISOEmp_Codigo,
	T01.ISOPvPed_Codigo AS VW67_ISOPvPed_Codigo,
	T01.ISOPvPed_DtaPedido  AS VW67_ISOPvPed_DtaPedido,
	YEAR(T01.ISOPvPed_DtaPedido)  AS VW67_ISOPvPed_DtaPedido_Ano,
	MONTH(T01.ISOPvPed_DtaPedido) AS VW67_ISOPvPed_DtaPedido_Mes,
	T01.ISOPvPedSit_Codigo AS VW67_ISOPvPed_SitCodigo,
	T04.ISOPvPedSit_Descricao AS VW67_ISOPvPed_SitDescricao,
	T04.ISOPvPedSit_Situacao AS VW67_ISOPvPed_SitSituacao,
	T01.ISOPvPed_CliCodigo AS VW67_ISOPvPed_CliCodigo,
	T03.ISOEnt_Nome AS VW67_ISOPvPed_CliNome,
	T07.ISOEntCli_Flag AS VW67_ISOPvPed_CliFlag,
	T07.ISOEntCliSit_Codigo AS VW67_ISOPvPed_CliSitCodigo,
	T08.ISOEntCliSit_Descricao AS VW67_ISOPvPed_CliSitDescricao,
	T02.ISOPvPedIte_Codigo AS VW67_ISOPvPedIte_Codigo,
	T02.ISOPrd_Codigo AS VW67_ISOPvPedIte_PrdCodigo,
	T05.ISOPrd_Descricao AS VW67_ISOPvPedIte_PrdDescricao,
	T05.ISOPrd_Flag AS VW67_ISOPvPedIte_PrdFlag,
	T05.ISOPrd_Unidade AS VW67_ISOPvPedIte_PrdUndOri,
	T02.ISOPvPedIte_UnidadeDestino AS VW67_ISOPvPedIte_PrdUndDest,
	T02.ISOPvPedIteSit_Codigo AS VW67_ISOPvPedIte_SitCodigo,
	T06.ISOPvPedIteSit_Descricao AS VW67_ISOPvPedIte_SitDescricao,
	T06.ISOPvPedIteSit_Situacao AS VW67_ISOPvPedIte_SitSituacao,
	Cast(T02.ISOPvPedIte_Quantidade AS decimal(18,0)) AS VW67_ISOPvPedIte_Quantidade,
	Cast(T02.ISOPvPedIte_ValorUnitario AS decimal(18,2)) AS VW67_ISOPvPedIte_ValorUnitario,
	Cast(T02.ISOPvPedIte_ValorUnitario * T02.ISOPvPedIte_Quantidade AS decimal(18,2)) AS VW67_ISOPvPedIte_ValorTotal
FROM ISOPVPEDIDO T01
	INNER JOIN ISOPVPEDITEM T02
		ON T02.ISOEmp_Codigo = T01.ISOEmp_Codigo AND T02.ISOPvPed_Codigo = T01.ISOPvPed_Codigo
	INNER JOIN ISOENTIDADE T03
		ON T03.ISOEnt_Codigo = T01.ISOPvPed_CliCodigo
	INNER JOIN ISOPVPEDSITUACAO T04
		ON T04.ISOEmp_Codigo = T01.ISOEmp_Codigo AND T04.ISOPvPedSit_Codigo = T01.ISOPvPedSit_Codigo
	INNER JOIN ISOPRODUTO T05
		ON T05.ISOEmp_Codigo = T02.ISOEmp_Codigo AND T05.ISOPrd_Codigo = T02.ISOPrd_Codigo
	INNER JOIN ISOPVPEDITESITUACAO T06
		ON T06.ISOEmp_Codigo = T02.ISOEmp_Codigo AND T06.ISOPvPedIteSit_Codigo = T02.ISOPvPedIteSit_Codigo
	INNER JOIN ISOENTCLIENTE T07
		ON T07.ISOEmp_Codigo = T01.ISOEmp_Codigo AND T07.ISOEntCli_Codigo = T01.ISOPvPed_CliCodigo
	INNER JOIN ISOENTCLISITUACAO T08
		ON T08.ISOEmp_Codigo = T02.ISOEmp_Codigo AND T08.ISOEntCliSit_Codigo = T07.ISOEntCliSit_Codigo
WHERE T01.ISOPvPed_Flag = 'A' -- Podem existir cï¿½digos de pedidos reservados utilizados pelo sistema e que nï¿½o devem aparecer na view, pois tratam-se de pedidos temporï¿½rios;


-- dbo.VW78_NFSGraficoEvolucao source

CREATE VIEW [dbo].[VW78_NFSGraficoEvolucao] AS
SELECT
	 ISOEmp_Codigo										as VW78_ISOEmp_Codigo,
	 Isoentcli_codigo									as VW78_Cliente,
	 ISOEntCliNFS_Status								as VW78_Status,
	 CONVERT(NVARCHAR(7),ISOEntCliNFS_DataEmissao,120)	as VW78_Mes,
		cast(sum(ISOEntCliNFS_ValorTotal) AS NUMERIC(15,2)) 						as VW78_Total
FROM ISOENTCLINFS
GROUP BY ISOEmp_Codigo, Isoentcli_codigo, ISOEntCliNFS_Status , CONVERT(NVARCHAR(7),ISOEntCliNFS_DataEmissao,120)


UNION

SELECT
	 ISOEmp_Codigo										as VW78_ISOEmp_Codigo,
	 Isoentcli_codigo									as VW78_Cliente,
	 ISOEntCliNF_Status  								as VW78_Status,
	 CONVERT(NVARCHAR(7),ISOEntCliNF_Data,120)	as VW78_Mes,
		cast((select sum(ISOEntCliNFItem_Quantidade*ISOEntCliNFItem_Valor) from ISOENTCLINFITEM T2 where
	t2.ISOEmp_Codigo = t1.ISOEmp_Codigo and	t2.ISOEntCliNF_RefFiscal = t1.ISOEntCliNF_RefFiscal and	t2.ISOEntCliNF_Serie = t1.ISOEntCliNF_Serie and t2.ISOEntCliNF_Numero = t1.ISOEntCliNF_Numero) AS NUMERIC(15,2)) 						as VW78_Total
FROM ISOENTCLINOTAFISCAL T1
GROUP BY t1.ISOEmp_Codigo, Isoentcli_codigo, ISOEntCliNF_Status , CONVERT(NVARCHAR(7),ISOEntCliNF_Data,120), t1.ISOEntCliNF_RefFiscal, t1.ISOEntCliNF_Serie , t1.ISOEntCliNF_Numero;


-- dbo.VW79_DuplicatasClientes source

CREATE VIEW [dbo].[VW79_DuplicatasClientes] as
SELECT  T1.ISOEmp_Codigo						AS VW79_EMPCOD,
	T1.ISOEntCliDup_Numero						AS VW79_DUPNUM,
	convert(varchar(9),T1.ISOEntCliDup_Numero)	AS VW79_DUPNUMSTR,
	T1.ISOEntCliDup_Sequencia					AS VW79_DUPSEQ,
	T1.ISOEntCli_Codigo							AS VW79_CODCLI,
	T1.ISOEntCliDupSit_Codigo					AS VW79_SITCOD,
	T2.ISOEntCliDupSit_Descricao				AS VW79_SITDSC,
	T1.ISOEntCliDup_Valor						AS VW79_VALDUP,
	T1.ISOEntCliDup_Flag						AS VW79_FLAG,
	T3.ISOEntCliNFItem_Dup_Numero				AS VW79_DUPNFS,
	T3.ISOEntCliNFItem_Dup_Serie				AS VW79_DUPNFSSER,
	T3.ISOEntCliNFItem_Dup_RefFiscal			AS VW79_DUPNFSREF,
	T3.ISOEntCliNFItem_Dup_Valor				AS VW79_DUPVALITEM,
	T3.ISOEntCliNFItem_Dup_DataVencim			AS VW79_DTAVENC,
	T3.ISOEntCliNFItem_Dup_DataPagame			AS VW79_DTAPGTO,
	T3.ISOEntCliNFItem_Dup_DataFatura			AS VW79_DTAFAT,
	T1.ISOEntCliDup_Tipo						AS VW79_DUPTIPO,
	T1.ISOEntCliDup_Estabelecimento				AS VW79_DUPESTAB,
	T1.ISOEntCliDup_Desdobramento				AS VW79_DUPDESDOBRAMENTO,
	T1.ISOEntCliDup_OriTipo						AS VW79_ORITIPO,
	T1.ISOEntCliDup_OriEstabeleciment			AS VW79_ORIESTAB,
	T1.ISOEntCliDup_OriDesdobramento			AS VW79_ORIDESDOBRAMENTO,
	T1.ISOEntCliDup_OriSequencia				AS VW79_ORISEQ,
	T1.ISOEntCliDup_OriNumero					AS VW79_ORINUMERO,
	T1.ISOEntCliDup_Baixado						AS VW79_DUPBAIXADO,
	T1.ISOEntCliDup_Saldo						AS VW79_DUPSALDO,
	T1.ISOEntCliDup_Parcela						AS VW79_DUPPARCELA
 FROM	ISOEntCliDuplicatas T1
		INNER JOIN ISOENTCLINOTAFISCAL T4 ON
		T1.ISOEmp_Codigo = T4.ISOEmp_Codigo AND
		T1.ISOEntCli_Codigo = T4.ISOEntCli_Codigo
		INNER JOIN ISOENTCLINOTAFISCALITEM_DUP T3 ON
		T3.ISOEntCliNFItem_Dup_Numero = T4.ISOEntCliNF_Numero AND
		T3.ISOEntCliNFItem_Dup_Serie = T4.ISOEntCliNF_Serie AND
		T3.ISOEntCliNFItem_Dup_RefFiscal = T4.ISOEntCliNF_RefFiscal AND
		T1.ISOEmp_Codigo = T3.ISOEmp_Codigo AND
		T1.ISOEntCliDup_Numero = T3.ISOEntCliDup_Numero AND
		T1.ISOEntCliDup_Sequencia = T3.ISOEntCliDup_Sequencia
		INNER JOIN ISOENTCLIDUPSITUACAO T2 ON
		T2.ISOEmp_Codigo = T1.ISOEmp_Codigo AND
		T2.ISOEntCliDupSit_Codigo = T1.ISOEntCliDupSit_Codigo;


-- dbo.VW87_Pendencias source

CREATE VIEW VW87_Pendencias As -- Para criar a view
SELECT
	   T01.ISOEmp_Codigo               As VW87_Empresa,
	   T01.ISOPnd_Sequencia            As VW87_Sequencia,
	   T01.ISOPnd_CliCodigo            As VW87_Cliente_Codigo,
	   T03.ISOEnt_Nome                 As VW87_Cliente_Nome,
	   T02.ISOEntCli_CodigoExt         As VW87_Cliente_CodigoExterno,
	   T02.ISOEntClaP_Codigo           As VW87_Cliente_ClassificCod,
	   T10.ISOEst_Codigo               As VW87_Cliente_EstadoCod,
	   T10.ISOEst_Descricao            As VW87_Cliente_EstadoDsc,
	   T10.ISOEst_Sigla                As VW87_Cliente_EstadoUF,
	   T05.ISOPrd_Codigo               As VW87_Produto_Codigo,
	   T06.ISOPrd_Descricao            As VW87_Produto_Descricao,
	   0                               As VW87_Produto_Estoque,
	   T05.ISOPvPedIte_UnidadeOrigem   As VW87_Item_UndOrigem,
	   T05.ISOPvPedIte_UnidadeDestino  As VW87_Item_UndDestino,
	   T17.ISOPvCDOri_Armazem          As VW87_Item_Armazem,
	   T01.ISOPnd_ItemVlrUnit          As VW87_Item_ValorUnitario,
	   null                            As VW87_Item_RegiaoPrecoLista,
	   T01.ISOPnd_QtdeImportada        AS VW87_Item_QtdeDigitadaImport,
	   T01.ISOPnd_QtdeOriginal         As VW87_Item_QtdeOriginal,
	   T01.ISOPnd_QtdeAtendida         As VW87_Item_QtdeAtendida,
	   T01.ISOPnd_QtdeAtual            As VW87_Item_QtdeAtual,
	   Case
		   When T15.ISOPvPedIteSit_Codigo > 0 Then 'S'
		   Else                                    'N'
       End                             As VW87_Pnd_Atendida,
	   Case
           When T15.ISOPvPedIteSit_Codigo > 0 Then 'Atendida'
		   Else                                    'Não atendida'
       End                             As VW87_Pnd_AtendidaDsc,
	   T01.ISOPnd_PedidoOrigem         As VW87_PedidoOri_Codigo,
	   T01.ISOPnd_PedidoItemOrigem     As VW87_PedItemOri_Codigo,
	   T01.ISOPnd_PedidoGerado         As VW87_Pedido_Codigo,
	   T04.ISOPvPedTip_Codigo          As VW87_Pedido_TipoCodigo,
	   T07.ISOPvPedTip_Descricao       As VW87_Pedido_TipoDescricao,
	   T04.ISOPvPed_CodVendedorCD      As VW87_Pedido_ResponsavelCod,
	   T11.ISOEnt_Nome                 As VW87_Pedido_ResponsavelNome,
	   T04.ISOPvPedSit_Codigo          As VW87_Pedido_SituacaoCod,
	   T14.ISOPvPedSit_Descricao       As VW87_Pedido_SituacaoDsc,
	   T14.ISOPvPedSit_Situacao        As VW87_Pedido_SituacaoInterna,
	   T04.ISOPvPedOri_Codigo          As VW87_Pedido_OrigemCod,
	   T16.ISOPvPedOri_Descricao       As VW87_Pedido_OrigemDsc,
	   T01.ISOPnd_PedidoItemGerado     As VW87_PedItem_Codigo,
	   T05.ISOPvPedIte_DataEntregaItem As VW87_PedItem_DataEntrega,
	   T05.ISOPvPedIteSit_Codigo       As VW87_PedItem_SituacaoCod,
	   T12.ISOPvPedIteSit_Descricao    As VW87_PedItem_SituacaoDsc,
	   T12.ISOPvPedIteSit_Situacao     As VW87_PedItem_SituacaoInterna,
	   T05.ISOPvPedIteMoc_Codigo       As VW87_PedItem_SituacaoMotCod,
	   T13.ISOPvPedIteSM_Descricao     As VW87_PedItem_SituacaoMotDsc,
	   T05.ISOPvPedIte_Quantidade      As VW87_PedItem_Quantidade,
	   round(T05.ISOPvPedIte_ValorUnitario, 2) As VW87_PedItem_ValorUnitario,
	   round((T05.ISOPvPedIte_ValorUnitario * T05.ISOPvPedIte_Quantidade), 2) As VW87_PedItem_ValorTotal,
	   Case
	       When T12.ISOPvPedIteSit_Situacao = 17 Then 'A' -- 'Ativa'
	       When T12.ISOPvPedIteSit_Situacao = 18 Then 'G' -- 'Agrupada'
		   When T12.ISOPvPedIteSit_Situacao = 9  Then 'I' -- 'Canceladas'
		   When T12.ISOPvPedIteSit_Situacao = 12 Then 'S' -- 'Suspensa'
		   Else                                       ''
	   End As VW87_Pnd_Situacao,
	   Case
		   When T12.ISOPvPedIteSit_Situacao = 17 Then 'Ativa'
		   When T12.ISOPvPedIteSit_Situacao = 18 Then 'Agrupada'
		   When T12.ISOPvPedIteSit_Situacao = 9  Then 'Canceladas'
		   When T12.ISOPvPedIteSit_Situacao = 12 Then 'Suspensa'
		   Else                                       ''
       End                             As VW87_Pnd_SituacaoDsc,
	   T05.ISOPvPedIteMoc_Codigo       As VW87_Pnd_Cancel_Mot_Codigo, -- usar o motivo do item do pedido
	   T05.ISOPvPedIteMoc_Data         As VW87_Pnd_Cancel_Data,
	   T05.ISOPvPedIte_Observacao      As VW87_Pnd_Observacao,
	   Case
		   When T12.ISOPvPedIteSit_Situacao = 12 Then 'S' -- 'Suspensa'
		   Else                                       'N'
	   End As VW87_Pnd_Suspensa,

	   T01.ISOPnd_NaoAgrupar           AS VW87_Pnd_NaoAgrupar,
	   T01.ISOPnd_DataOrigem           AS VW87_Pnd_Data_Origem,
	   T01.ISOPnd_DataAgrupamento      AS VW87_Pnd_Data_Agrupamento,
	   T01.ISOPnd_Flag                 AS VW87_Pnd_Flag,
	   T01.ISOPnd_DataAlteracao        AS VW87_Pnd_DataAlteracao,
	   T01.ISOPnd_UsuarioAlteracao     AS VW87_Pnd_UsuarioAlteracao,
	   T01.ISOPnd_DataCadastro         AS VW87_Pnd_DataCadastro,
	   T01.ISOPnd_UsuarioCadastro      AS VW87_Pnd_UsuarioCadastro
   FROM ISOPVPENDENCIA T01
	    Inner Join ISOENTCLIENTE T02
		   On T01.ISOEmp_Codigo            = T02.ISOEmp_Codigo
          And T01.ISOPnd_CliCodigo         = T02.ISOEntCli_Codigo
	    Inner Join ISOENTIDADE T03
		   On T01.ISOPnd_CliCodigo         = T03.ISOEnt_Codigo
	    Inner Join ISOPVPEDIDO T04
		   On T01.ISOEmp_Codigo            = T04.ISOEmp_Codigo
          And T01.ISOPnd_PedidoGerado      = T04.ISOPvPed_Codigo
        Inner Join ISOPVPEDITEM T05
		   On T01.ISOEmp_Codigo            = T05.ISOEmp_Codigo
          And T01.ISOPnd_PedidoGerado      = T05.ISOPvPed_Codigo
          And T01.ISOPnd_PedidoItemGerado  = T05.ISOPvPedIte_Codigo
	    Inner Join ISOPRODUTO T06
		   On T01.ISOEmp_Codigo            = T06.ISOEmp_Codigo
          And T01.ISOPnd_PrdCodigo         = T06.ISOPrd_Codigo
	     Left Join ISOPVPEDTIPO T07
		   On T01.ISOEmp_Codigo            = T07.ISOEmp_Codigo
          And T04.ISOPvPedTip_Codigo       = T07.ISOPvPedTip_Codigo
         Left Join ISOENTENDERECO T08
		   On T01.ISOPnd_CliCodigo         = T08.ISOEnt_Codigo
          And ISOEntEnd_Flag               = 'A'
          And ISOEntEnd_Principal          = 'S'
         Left Join ISOLOCALIDADE T09
		   On T08.ISOLoc_Codigo            = T09.ISOLoc_Codigo
	     Left Join ISOESTADO T10
		   On T09.ISOEst_Codigo            = T10.ISOEst_Codigo
	     Left Join ISOENTIDADE T11
		   On T04.ISOPvPed_CodVendedorCD   = T11.ISOEnt_Codigo
	     Left Join ISOPVPEDITESITUACAO T12
		   On T05.ISOEmp_Codigo            = T12.ISOEmp_Codigo
          And T05.ISOPvPedIteSit_Codigo    = T12.ISOPvPedIteSit_Codigo
         Left Join ISOPVPEDITESITMOTIVO T13
		   On T05.ISOEmp_Codigo            = T13.ISOEmp_Codigo
          And T05.ISOPvPedIteMoc_Codigo    = T13.ISOPvPedIteSM_Codigo
          And T05.ISOPvPedIteSit_Codigo    = T13.ISOPvPedIteSit_Codigo
         Left Join ISOPVPEDSITUACAO T14
		   On T04.ISOEmp_Codigo            = T12.ISOEmp_Codigo
          And T04.ISOPvPedSit_Codigo       = T14.ISOPvPedSit_Codigo
	     Left Join ISOPVPEDITESITUACAO T15 -- Atendida ou não atendida
		   On T05.ISOEmp_Codigo            = T15.ISOEmp_Codigo
          And T05.ISOPvPedIteSit_Codigo    = T15.ISOPvPedIteSit_Codigo
          And (T12.ISOPvPedIteSit_Situacao = 1 OR T12.ISOPvPedIteSit_Situacao = 6 OR T12.ISOPvPedIteSit_Situacao = 7
				 OR T12.ISOPvPedIteSit_Situacao = 8 OR T12.ISOPvPedIteSit_Situacao = 17)
          And (T14.ISOPvPedSit_Situacao    = 1 OR T14.ISOPvPedSit_Situacao = 6 OR T14.ISOPvPedSit_Situacao = 7 )
	     Left Join ISOPVPEDORIGEM T16
		   On T04.ISOEmp_Codigo            = T16.ISOEmp_Codigo
          And T04.ISOPvPedOri_Codigo       = T16.ISOPvPedOri_Codigo
	     Left Join ISOPvCDOrigem T17
		   On T04.ISOEmp_Codigo            = T17.ISOEmp_Codigo
          And T04.ISOPvPedOri_Codigo       = T17.ISOPvCDOri_Pedido
		  And T04.ISOPvPed_EstadoOrigem    = T17.ISOPvCD_Origem
		  And T04.ISOPvPed_EstadoDestino   = T17.ISOPvCD_Destino

-------------------------------------------------------------------------------------------------------------------------------------------;


-- dbo.VW93A_ClienteValidaDCObrig source

CREATE VIEW [dbo].[VW93A_ClienteValidaDCObrig] as
Select T01.ISOEmp_Codigo                     as VW93A_Empresa,
	   T01.ISOEntCli_Codigo                  as VW93A_CodCliente,
       T02.ISOEntClienteAttId                as VW93A_CodDadoCompl,
       RTRIM(T02.ISOEntClienteAttName)       as VW93A_DescDadoCompl,
       T02.ISOEntClienteFormDefId            as VW93A_CodFormulario,
       RTRIM(T03.ISOEntClienteFormDefName)   as VW93A_DescFormulario,
       T02.ISOEntClienteAttObrigatorio       as VW93A_DCCliObrig
  From ISOENTCliente T01, ISOEntClienteAtt T02, ISOENTClienteFORMDEF T03
 Where T03.ISOEntClienteFormDefId = T02.ISOEntClienteFormDefId
 AND T03.ISOEntClienteFormDef_Flag = 'A' AND T02.ISOEntClienteAttFlag = 'A';


-- dbo.VW93B_ClienteValidaDCObrig source

CREATE VIEW [dbo].[VW93B_ClienteValidaDCObrig] as

Select T01.ISOEmp_Codigo                      as VW93B_Empresa,
	   T01.ISOEntCli_Codigo                      as VW93B_CodCliente,
       T02.ISOEntClienteAttId                as VW93B_CodDadoCompl,
       RTrim(T02.ISOEntClienteAttName)       as VW93B_DescDadoCompl,
       T02.ISOEntClienteAttObrigatorio        as VW93B_DCPesObrig
  From ISOENTClienteATT T02
        left Join ISOENTClienteATTVALUES T01
          On T02.ISOEntClienteAttId   = T01.ISOEntClienteAttId
 Where T02.ISOEntClienteAttType = 0
   And RTrim(T01.ISOEntClienteAttValue) <> ''

Union
-- Buscando Dado Complementar Numérico
Select T01.ISOEmp_Codigo                      as VW93B_Empresa,
		T01.ISOEntCli_Codigo                      as VW93B_CodCliente,
       T02.ISOEntClienteAttId                as VW93B_CodDadoCompl,
       RTrim(T02.ISOEntClienteAttName)       as VW93B_DescDadoCompl,
       T02.ISOEntClienteAttObrigatorio        as VW93B_DCPesObrig
  From ISOENTClienteATT T02
        left Join ISOENTClienteATTVALUES T01
          On T02.ISOEntClienteAttId   = T01.ISOEntClienteAttId
 Where T02.ISOEntClienteAttType = 1
   And RTrim(T01.ISOEntClienteAttValue) <> '' --ISOUdf_TiraLetras(T01.ISOEntClienteAttValue) > 0

Union
-- Buscando Dado Complementar de data ou data/hora
Select T01.ISOEmp_Codigo                      as VW93B_Empresa,
		T01.ISOEntCli_Codigo                      as VW93B_CodCliente,
       T02.ISOEntClienteAttId                as VW93B_CodDadoCompl,
       RTrim(T02.ISOEntClienteAttName)       as VW93B_DescDadoCompl,
       T02.ISOEntClienteAttObrigatorio        as VW93B_DCPesObrig
  From ISOENTClienteATT T02
        left Join ISOENTClienteATTVALUES T01
          On T02.ISOEntClienteAttId   = T01.ISOEntClienteAttId
 Where T02.ISOEntClienteAttType in (2, 3)
   And Substring(LTrim(T01.ISOEntClienteAttValue), 1, 1) <> '/'

Union
-- Buscando Dado Complementar de Combobox
Select T01.ISOEmp_Codigo                      as VW93B_Empresa,
		T01.ISOEntCli_Codigo                      as VW93B_CodCliente,
       T02.ISOEntClienteAttId                as VW93B_CodDadoCompl,
       RTrim(T02.ISOEntClienteAttName)       as VW93B_DescDadoCompl,
       T02.ISOEntClienteAttObrigatorio        as VW93B_DCPesObrig
  From ISOENTClienteATT T02
        left Join ISOENTClienteATTVALUES T01
          On T02.ISOEntClienteAttId   = T01.ISOEntClienteAttId
 Where T02.ISOEntClienteAttType = 4
   And T01.ISOEntClienteAttOptId Is Not Null

Union
-- Buscando Dado Complementar de texto longo
Select T01.ISOEmp_Codigo                      as VW93B_Empresa,
		T01.ISOEntCli_Codigo                      as VW93B_CodCliente,
       T02.ISOEntClienteAttId                as VW93B_CodDadoCompl,
       RTrim(T02.ISOEntClienteAttName)       as VW93B_DescDadoCompl,
       T02.ISOEntClienteAttObrigatorio        as VW93B_DCPesObrig
  From ISOENTClienteATT T02
        left Join ISOENTClienteATTVALUES T01
          On T02.ISOEntClienteAttId   = T01.ISOEntClienteAttId
 Where T02.ISOEntClienteAttType = 5
   And RTrim(T01.ISOEntClienteAttValueLong) <> ''

Union
-- Buscando Dado Complementar de arquivo
Select T01.ISOEmp_Codigo                      as VW93B_Empresa,
		T01.ISOEntCli_Codigo                      as VW76B_CodCliente,
       T02.ISOEntClienteAttId                as VW76B_CodDadoCompl,
       RTrim(T02.ISOEntClienteAttName)       as VW76B_DescDadoCompl,
       T02.ISOEntClienteAttObrigatorio        as VW76B_DCPesObrig
  From ISOENTClienteATT T02
        left Join ISOENTClienteATTVALUES T01
          On T02.ISOEntClienteAttId   = T01.ISOEntClienteAttId
 Where T02.ISOEntClienteAttType = 6
   and RTrim(T01.ISOEntClienteAttArquivo) <> '0x'
   And T01.ISOEntClienteAttArquivo is not null;


-- dbo.VW96_Integr_Pedido_VlrST source

CREATE VIEW VW96_Integr_Pedido_VlrST as
/*
Autor      : Edison T Washimi
Atendimento: 30737
Data       : 07/11/2019
Descrição  : Busca e soma os valores de ST dos itens do Pedido, que não sejam cancelados ou cotação
Observação : A view foi criada para a DRM. A View deve ser criada na base de integração. Antes de criá-la,
             verificar se o nome da base do isoCRM está correta (onde está MRR, abaixo).
*/
Select T01.ISOEmp_Codigo                         as VW96_CodEmpresa,
       T01.ISOPVPed_Codigo                       as VW96_CodPedidoISO,
       Sum(T01.ISOPvPedIte_VlrSubsTributaria)    as VW96_VlrTotalST
  From ISOPVPedItem T01
       Inner Join ISOPVPEDITESITUACAO T02
          On T02.ISOEmp_Codigo         = T01.ISOEmp_Codigo
         And T02.ISOPvPedIteSit_Codigo = T01.ISOPvPedIteSit_Codigo
         And T02.ISOPvPedIteSit_Situacao Not In (8, 9)
 Group By T01.ISOEmp_Codigo, T01.ISOPVPed_Codigo

 -------------------------------------------------------------------------------------------------------------------;


-- dbo.VWFlowISOPedido source

--Segue o DE PARA das peguntas do cliente e pedido, entre produção e homologação:

--Perguntas Pedido
--Pergunta                            Homologação   Produção
--Cliente exige Caixa fechada?              111      110
--Cliente aceita faturamento parcial?       112      111
--Cliente exige lote único?                 113      112
--Cliente exige vencimento próximo?         114      113
--Cód Cliente+Loja remessa (Venda a Ordem)  115      114

--Perguntas Cliente
--Pergunta                            Homologação  Produção
--Cliente exige caixa fechada?           2106       2105
--Cliente aceita faturamento parcial?    2107       2106
--Cliente Protheus Remessa (venda ordem) 2108       2107
--Loja Protheus Remessa (venda ordem)    2109       2108
--Prioridade de Faturamento              2112       2109
--Dias de alocação futura                2113       2110


--  SELECT * FROM VWFlowISOPedido

CREATE VIEW [dbo].[VWFlowISOPedido]
as
with
	PEDIDO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPed_CliCodigo,
			ISOPvPed_EstadoOrigem,
			ISOPvPed_EstadoDestino,
			ISOPvPed_CodigoAtendente,
			ISOPvPedSit_Codigo,
			ISOPvPedOri_Codigo,
			ISOPvPed_CodEndCobranca,
			ISOPvPed_ValorTotalPedido,
			ISOPeCndPgt_Codigo,
			ISOPvPed_ValorFrete,
			ISOPvPedTip_Codigo,
			ISOPvPed_Pagamento, -- Condição de pagamento
			ISOPVPed_OrdCompra,
			ISOPvPed_DtaSolEntrega,
			ISOPvPed_CodEndEntrega,
			ISOPvPed_DtaPedido,  -- Data do pedido
			ISOPvPed_HoraPedido -- Hora do pedido
		FROM ISOPVPEDIDO WITH (nOLOCK)
		WHERE
			ISOEmp_Codigo = 11
			AND ISOPvPedSit_Codigo in (1, 30, 35)
			--AND ISOPvPed_Codigo NOT IN (8016552,8016564)
			--and ISOPvPedSit_Codigo = 999
			--AND ISOPvPed_Codigo IN (7968666)
			--and ISOPvPed_Codigo NOT IN (select isopvped_codigo from [MACRO_ANALISE_CREDITO] where ISOEmp_Codigo = 11)
			),
	PEDIDO_ITEM AS (
		SELECT
			ISOPVPEDITEM.ISOEmp_Codigo,
			ISOPVPEDITEM.ISOPvPed_Codigo,
			ISOPVPEDITEM.ISOPvPedIte_Codigo,
			ISOPVPEDITEM.ISOPrd_Codigo,
			ISOPVPEDITEM.ISOPvPedIte_Quantidade,
			ISOPVPEDITEM.ISOPvPedIte_DtaSolEntrega,
			ISOPVPEDITEM.ISOPvPedIte_UnidadeOrigem,
			ISOPVPEDITEM.ISOPvPedIte_UnidadeDestino,
			ISOPVPEDITEM.ISOPvPedIte_ValorUnitario,
			ISOPVPEDITEM.ISOPvPedIteSit_Codigo,
			ISOPVPEDITEM.ISOPvPedIte_AgendamentoData,
			ISOPVPEDITEM.ISOPvPedIte_AgendamentoHoraIni,
			ISOPVPEDITEM.ISOPvPedIte_AgendamentoHoraFin,
			ISOPVPEDITEM.ISOPvPedIte_ValorEmpenho,
			ISOPVPEDITEM.ISOPvPedIte_PrecoLista,
			ISOPVPEDITEM.ISOPvPedIte_ValorIPI,
			ISOPVPEDITEM.ISOPvPedIte_VlrSubsTributaria,
			ISOPVPEDITEM.ISOPvPedIte_ValorICMS,
			ISOPVPEDITEM.ISOPvPedIte_ValorPIS,
			ISOPVPEDITEM.ISOPvPedIte_ValorCofins,
			ISOPVPEDITEM.ISOPVPedIte_ValorFCPST,
			ISOPVPEDITEM.ISOPvPedIte_ValorFCP,
			ISOPVPEDITEM.ISOPvPedIte_ValorTotalCalculoF,
			ISOPVPEDITEM.ISOPvPedIte_DataEntregaItem,
			ISOPVPEDITEM.ISOPvPedIte_PercentualIPI,
			ISOPVPEDITEM.ISOPvPedIte_PercSubsTributaria,
			ISOPVPEDITEM.ISOPvPedIte_PercentualFCPST,
			ISOPVPEDITEM.ISOPvPedIte_PrecoAjustado,
			ISOPVPEDITEM.ISOPvPedIte_PrecoAjustadoTotal
		FROM ISOPVPEDITEM INNER JOIN PEDIDO
			ON PEDIDO.ISOEmp_Codigo = ISOPVPEDITEM.ISOEmp_Codigo
			AND PEDIDO.ISOPvPed_Codigo = ISOPVPEDITEM.ISOPvPed_Codigo
		WHERE
			ISOPVPEDITEM.ISOEmp_Codigo = 11
			AND ISOPVPEDITEM.ISOPvPedIteSit_Codigo = 1),
	TOTAL_LINHAS_PEDIDO AS (
		SELECT
			ISOPVPEDITEM.ISOEmp_Codigo,
			ISOPVPEDITEM.ISOPvPed_Codigo,
			COUNT(*) AS ISOPvPedIte_TotalLinhas
		FROM ISOPVPEDITEM INNER JOIN PEDIDO
			ON PEDIDO.ISOEmp_Codigo = ISOPVPEDITEM.ISOEmp_Codigo
			AND PEDIDO.ISOPvPed_Codigo = ISOPVPEDITEM.ISOPvPed_Codigo
		WHERE
			ISOPVPEDITEM.ISOEmp_Codigo = 11
			AND ISOPVPEDITEM.ISOPvPedIteSit_Codigo = 1
		GROUP BY
			ISOPVPEDITEM.ISOEmp_Codigo,
			ISOPVPEDITEM.ISOPvPed_Codigo),
	TOTAL_PEDIDO_EMPENHO AS (
		SELECT
			ISOPVPEDITEM.ISOEmp_Codigo,
			ISOPVPEDITEM.ISOPvPed_Codigo,
			SUM(ISOPVPEDITEM.ISOPvPedIte_Quantidade * ISOPVPEDITEM.ISOPvPedIte_ValorEmpenho) AS ISOPvPed_ValorTotalPedido
		FROM         ISOPVPEDITEM INNER JOIN PEDIDO
			ON PEDIDO.ISOEmp_Codigo = ISOPVPEDITEM.ISOEmp_Codigo
			AND PEDIDO.ISOPvPed_Codigo = ISOPVPEDITEM.ISOPvPed_Codigo
		WHERE     (ISOPVPEDITEM.ISOEmp_Codigo = 11) AND (ISOPVPEDITEM.ISOPvPedIteSit_Codigo = 1)
		GROUP BY ISOPVPEDITEM.ISOEmp_Codigo, ISOPVPEDITEM.ISOPvPed_Codigo),
	TOTAL_PEDIDO AS (
		SELECT
			ISOPVPEDITEM.ISOEmp_Codigo,
			ISOPVPEDITEM.ISOPvPed_Codigo,
			SUM(ISOPVPEDITEM.ISOPvPedIte_Quantidade * ISOPVPEDITEM.ISOPvPedIte_PrecoAjustado) AS ISOPvPed_ValorTotalPedido
		FROM         ISOPVPEDITEM INNER JOIN PEDIDO
			ON PEDIDO.ISOEmp_Codigo = ISOPVPEDITEM.ISOEmp_Codigo
			AND PEDIDO.ISOPvPed_Codigo = ISOPVPEDITEM.ISOPvPed_Codigo
		WHERE     (ISOPVPEDITEM.ISOEmp_Codigo = 11) AND (ISOPVPEDITEM.ISOPvPedIteSit_Codigo = 1) --and ISOPvPed_Codigo >= 8741752
		GROUP BY ISOPVPEDITEM.ISOEmp_Codigo, ISOPVPEDITEM.ISOPvPed_Codigo),
	ATENDENTE_PEDIDO AS (
		SELECT
			ISOEnt_Codigo,
			ISOEnt_Nome
		FROM ISOENTIDADE INNER JOIN ISOENTUSUARIO
			ON ISOENTIDADE.ISOEnt_Codigo = ISOENTUSUARIO.ISOEntUsu_Codigo),
	FATOR_CONVERSAO_PRODUTO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPrdUndFatC_PrdCodigo,
			ISOPrdUndFatC_UndOrigem,
			ISOPrdUndFatC_UndDestino,
			-- criado regra de divisão quando a unidade de medida for "M"  --  31/08/2021 zagoto,edilon,cris
			-- fizemos isso para voltar o numero inteiro que está na view do EAN
			-- Exemplo: produto 198988 - fator_conv = 50   (veio do ISO 0,02703 e precisa ir para o Protheus 50)
			case
				when ISOPrdUndFatC_UndDestino in ('M','M2','MT') then round(1 / ISOPrdUndFatC_FatorConversao ,0)
				else ISOPrdUndFatC_FatorConversao
			end ISOPrdUndFatC_FatorConversao_Conv,
			ISOPrdUndFatC_FatorConversao,
			ISOPrdUndFatC_Flag,
			ISOPrdUndFatC_Armazem
		FROM ISOPRDUNDFATORCONVERSAO WITH (NOLOCK)
		WHERE ISOEmp_Codigo = 11 and ISOPrdUndFatC_Flag = 'A' AND ISOPrdUndFatC_Armazem = ''), -- 02/12/2020 Zagoto - incluido critério de flag PERFORMANCE
	FATOR_CONVERSAO_CX AS (
		SELECT
			ISOEmp_Codigo,
			ISOPrdUndFatC_PrdCodigo,
			ISOPrdUndFatC_UndOrigem,
			ISOPrdUndFatC_UndDestino,
			-- criado regra de divisão quando a unidade de medida for "M"  --  22/07/2020 zagoto,edilon,cris
			--case
			--	when ISOPrdUndFatC_UndDestino = 'M' then 1 / ISOPrdUndFatC_FatorConversao
			--	else ISOPrdUndFatC_FatorConversao
			--end ISOPrdUndFatC_FatorConversaoCX,
			ISOPrdUndFatC_FatorConversao as ISOPrdUndFatC_FatorConversaoCX,
			ISOPrdUndFatC_Flag,
			ISOPrdUndFatC_Armazem
		FROM ISOPRDUNDFATORCONVERSAO WITH (NOLOCK)
		WHERE ISOEmp_Codigo = 11 and ISOPrdUndFatC_Flag = 'A' AND ISOPrdUndFatC_Armazem = '' AND ISOPrdUndFatC_UndDestino = 'CX'), -- 02/12/2020 Zagoto - incluido critério de flag PERFORMANCE
	CLIENTE AS (
		SELECT	DISTINCT
			ISOENTCLIENTE.ISOEmp_Codigo,
			ISOENTCLIENTE.ISOEntCli_Codigo,
			ISOENTCLIENTE.ISOEntCli_Operacao,
			PEDIDO.ISOPvPed_Codigo
		FROM ISOENTCLIENTE INNER JOIN PEDIDO
			ON ISOENTCLIENTE.ISOEmp_Codigo = PEDIDO.ISOEmp_Codigo
				AND ISOENTCLIENTE.ISOEntCli_Codigo = PEDIDO.ISOPvPed_CliCodigo
				AND PEDIDO.ISOEmp_Codigo= 11),
	LOCAL_FATURAMENTO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvCD_Origem,
			ISOPvCD_Destino,
			ISOPvCDOri_Pedido,
			ISOPvCDOri_Armazem
		FROM ISOPVCDORIGEM WITH (NOLOCK)),
	ARMAZEMPROTHEUS as (
		SELECT
			ISOEmp_Codigo,
			ISOEmpPrm_Codigo,
			ISOEmpPrm_GrpUsuDet_Descricao,
			ISOEmpPrm_GrpUsuDet_Valor,
			ISOEmpPrm_GrpUsuDet_Flag
		FROM ISOEMPPRM_GRPUSUDETALHE WITH (NOLOCK)
		WHERE
			ISOEmp_Codigo = 11
			AND ISOEmpPrm_Codigo = 'DE_PARA_ARMAZEM_PROTHEUS'
			AND ISOEmpPrm_GrpUsu_Codigo = 1),
	EMPENHO AS (
		SELECT
			ISOCTPEDCONTRATO.ISOEmp_Codigo,
			ISOCTPEDCONTRATO.ISOCttPedCon_PedidoCodigo,
			ISOCTPEDCONTRATO.ISOCttPedCon_NumeroEmp
		FROM ISOCTPEDCONTRATO WITH (nOLOCK)
		INNER JOIN PEDIDO
			ON PEDIDO.ISOEmp_Codigo = ISOCTPEDCONTRATO.ISOEmp_Codigo
			AND PEDIDO.ISOPvPed_Codigo = ISOCTPEDCONTRATO.ISOCttPedCon_PedidoCodigo
			AND PEDIDO.ISOEmp_Codigo = 11),
	TABELA_CLIENTE AS (
		SELECT	DISTINCT
			ISOENTCLIENTEATTVALUES.ISOEmp_Codigo,
			ISOENTCLIENTEATTVALUES.ISOEntCli_Codigo,
			ISOENTCLIENTEATTVALUES.ISOEntClienteAttId,
			ISOENTCLIENTEATTVALUES.ISOEntClienteAttOtherValue,
			PEDIDO.ISOPvPed_Codigo
		FROM ISOENTCLIENTEATTVALUES INNER JOIN PEDIDO
			ON ISOENTCLIENTEATTVALUES.ISOEmp_Codigo = PEDIDO.ISOEmp_Codigo
				AND ISOENTCLIENTEATTVALUES.ISOEntCli_Codigo = PEDIDO.ISOPvPed_CliCodigo
				AND PEDIDO.ISOEmp_Codigo= 11
		WHERE
			ISOENTCLIENTEATTVALUES.ISOEmp_Codigo = 11 AND
			ISOENTCLIENTEATTVALUES.ISOEntClienteAttId = 99),
	ESTABELECIMENTO_LX AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvCD_Origem,
			ISOPvCD_Destino,
			ISOPvCD_Estabelecimento
		FROM ISOPVCD WITH (NOLOCK)
		WHERE
			ISOEmp_Codigo = 11),
	ORIGEM_PROTHEUS AS (
		SELECT
			ISOEMPENT_ORIGEM.ISOEmp_Codigo,
			ISOEMPENT_ORIGEM.ISOEmpEnt_EntCodigo,
			ISOEMPENT_ORIGEM.ISOEmpOri_Codigo,
			ISOEMPENT_ORIGEM.ISOEmpEnt_Ori_Codigo,
			PEDIDO.ISOPvPed_Codigo
		FROM ISOEMPENT_ORIGEM WITH (nOLOCK)
		INNER JOIN PEDIDO
			ON PEDIDO.ISOEmp_Codigo = ISOEMPENT_ORIGEM.ISOEmp_Codigo
				AND PEDIDO.ISOPvPed_CliCodigo = ISOEMPENT_ORIGEM.ISOEmpEnt_EntCodigo
				AND PEDIDO.ISOEmp_Codigo= 11
		WHERE
			ISOEMPENT_ORIGEM.ISOEmp_Codigo = 11 AND
			ISOEMPENT_ORIGEM.ISOEmpOri_Codigo = 13),
	ORIGEM_LX AS (
		SELECT	DISTINCT
			ISOEMPENT_ORIGEM.ISOEmp_Codigo,
			ISOEMPENT_ORIGEM.ISOEmpEnt_EntCodigo,
			ISOEMPENT_ORIGEM.ISOEmpOri_Codigo,
			ISOEMPENT_ORIGEM.ISOEmpEnt_Ori_Codigo,
			PEDIDO.ISOPvPed_Codigo
		FROM ISOEMPENT_ORIGEM INNER JOIN PEDIDO
			ON PEDIDO.ISOEmp_Codigo = ISOEMPENT_ORIGEM.ISOEmp_Codigo
				AND PEDIDO.ISOPvPed_CliCodigo = ISOEMPENT_ORIGEM.ISOEmpEnt_EntCodigo
				AND PEDIDO.ISOEmp_Codigo= 11
		WHERE
			ISOEMPENT_ORIGEM.ISOEmp_Codigo = 11 AND
			ISOEMPENT_ORIGEM.ISOEmpOri_Codigo = 2),
	CONDICAO_PAGAMENTO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPeCndPgt_Codigo,
			ISOPeCntPgt_Forma
		FROM ISOPECNDPAGAMENTO WITH (NOLOCK)
		WHERE
			ISOEmp_Codigo = 11),
	CUSTO_FINANCEIRO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvTV_Codigo,
			ISOPvEstab_Codigo,
			ISOPvEstabTbV_PercDespFinancei
		FROM ISOPvEstab_TblVenda
		WHERE
			ISOEmp_Codigo = 11),
	ANALISE_CREDITO AS (
		SELECT
			ISOWFTRF_PEDIDO.ISOEmp_Codigo,
			ISOWFTRF_PEDIDO.ISOPvPed_Codigo,
		    CASE WHEN ISOWFTrf_RspExe_RspCodigo IS NULL THEN '' ELSE CONVERT(VARCHAR(8), ISOWFTrf_DataSolucao, 112) END AS ISOWFTrf_DataLiberacaoCredito,  -- Data em que a tarefa de liberação de crédito foi executada
			CASE WHEN ISOWFTrf_RspExe_RspCodigo IS NULL THEN '' ELSE CONVERT(VARCHAR(8), ISOWFTrf_DataSolucao, 108) END AS ISOWFTrf_HoraLiberacaoCredito,
			CASE WHEN ISOWFTrf_RspExe_RspCodigo IS NULL THEN '' ELSE COALESCE(CAST(ISOWFTrf_RspExe_RspCodigo AS VARCHAR(10)),'')+'-'+COALESCE(USUARIO_CEDITO.ISOEnt_Nome,'') END AS ISOWFTrf_CodigoAtendente
		FROM ISOWFTRF_PEDIDO INNER JOIN ISOWFPROCEDIMENTO ON
			ISOWFTRF_PEDIDO.ISOEmp_Codigo = ISOWFPROCEDIMENTO.ISOEmp_Codigo AND
			ISOWFTRF_PEDIDO.ISOWFTrf_Ped_PrcCodigo = ISOWFPROCEDIMENTO.ISOWFPrc_Codigo AND
			ISOWFPROCEDIMENTO.ISOWFPrcPad_Codigo IN (SELECT ISOWFPrcPad_Codigo FROM ISOWFPrcPadrao where isoemp_codigo = 11 and ISOWFPrcPad_Descricao like 'BO%' and ISOWFPrcPad_Flag = 'A') AND -- PROCEDIMENTO ( PEDIDO - ANALISE DE CREDITO)
			ISOWFTRF_PEDIDO.ISOWFTrf_Ped_TrfCodigo = 1 --- CÓDIGO DA TAREFA QUE O ATENDENTE IRÁ CONFIRMAR O CRÉDITO DO CLIENTE ********
		INNER JOIN ISOWFTAREFA ON -- TAREFA DE LIBERAÇÃO DE CRÉDITO
			ISOWFTRF_PEDIDO.ISOEmp_Codigo = ISOWFTAREFA.ISOEmp_Codigo AND
			ISOWFTRF_PEDIDO.ISOWFTrf_Ped_PrcCodigo = ISOWFTAREFA.ISOWFPrc_Codigo AND
			ISOWFTRF_PEDIDO.ISOWFTrf_Ped_TrfCodigo = ISOWFTAREFA.ISOWFTrfPad_Codigo AND
			ISOWFTAREFA.ISOWFTrfPad_Codigo = 1 AND  -- TAREFA (ANALISAR PEDIDO RETIDO EM CREDITO)
			ISOWFTAREFA.ISOWFTrfPadSit_Codigo = 1  -- SITUACAO (PEDIDO APROVADO DE CREDITO)
		INNER JOIN ISOENTIDADE AS USUARIO_CEDITO ON -- USUÁRIO QUE LIBEROU O CRÉDITO DO CLIENTE
			ISOWFTAREFA.ISOWFTrf_RspExe_RspCodigo = USUARIO_CEDITO.ISOEnt_Codigo
		WHERE ISOWFTRF_PEDIDO.ISOEmp_Codigo = 11
		AND ISOWFTRF_PEDIDO.ISOPvPed_Codigo IN (SELECT ISOPVPED_CODIGO FROM PEDIDO WHERE ISOEMP_CODIGO = 11)
		AND ISOWFTRF_PEDIDO.ISOWFTrf_Ped_PrcCodigo = (SELECT MAX(X.ISOWFTrf_Ped_PrcCodigo) FROM ISOWFTRF_PEDIDO X WHERE ISOWFTRF_PEDIDO.ISOEmp_Codigo = X.ISOEmp_Codigo AND ISOWFTRF_PEDIDO.ISOPvPed_Codigo = X.ISOPvPed_Codigo)),
	TIPO_FRETE AS (
		SELECT 	DISTINCT
			ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOEmp_Codigo,
			ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOPvPed_Codigo,
			COALESCE(ISOPVPEDIDOATTLEVEL1.ISOPvPedidoAttOptId,10) AS ISOPvPedidoTipoFrete
		FROM ISOPVPEDIDOATTVALUES AS ISOPVPEDIDOATTVALUES_TIPO_FRETE
		INNER JOIN ISOPVPEDIDOATTLEVEL1 ON
			ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOEmp_Codigo = ISOPVPEDIDOATTLEVEL1.ISOEmp_Codigo AND
			ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOPvPedidoAttId = ISOPVPEDIDOATTLEVEL1.ISOPvPedidoAttId AND
			ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOPvPedidoAttOptId = ISOPVPEDIDOATTLEVEL1.ISOPvPedidoAttOptId AND
			ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOPvPedidoAttId = 104 -- CÓDIGO DA PERGUNTA TIPO DO FRETE
		WHERE
			ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOEmp_Codigo = 11
			AND ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOPvPed_Codigo IN (SELECT ISOPVPED_CODIGO FROM PEDIDO WHERE ISOEMP_CODIGO = 11)),
	TRANSPORTADORA AS (
		SELECT 	DISTINCT
			ISOPVPEDIDOATTVALUES_TRANSP.ISOEmp_Codigo,
			ISOPVPEDIDOATTVALUES_TRANSP.ISOPvPed_Codigo,
			COALESCE(ISOPvTrp_CodigoExterno,'') AS ISOPvPedido_CodigoTRP
		FROM ISOPVPEDIDOATTVALUES AS ISOPVPEDIDOATTVALUES_TRANSP
		INNER JOIN ISOPVTRANSPORTADORA ON
			ISOPVTRANSPORTADORA.ISOPvTrp_Codigo = ISOPVPEDIDOATTVALUES_TRANSP.ISOPvPedidoAttOptId AND
			ISOPVPEDIDOATTVALUES_TRANSP.ISOPvPedidoAttId = 105 --AND -- CÓDIGO DA PERGUNTA TRANSPORTADORA
			--ISOPVTRANSPORTADORA.ISOPvTrp_Flag = 'A'
		WHERE ISOPVPEDIDOATTVALUES_TRANSP.ISOEmp_Codigo = 11
			AND ISOPVPEDIDOATTVALUES_TRANSP.ISOPvPed_Codigo IN (SELECT ISOPVPED_CODIGO FROM PEDIDO WHERE ISOEMP_CODIGO = 11)),
	--OBSERVACAO_ITEM_PEDIDO AS (
	--	SELECT
	--		ISOEmp_Codigo,
	--		ISOPvPed_Codigo,
	--		ISOPvPedIte_Codigo,
	--		ISOPvPedItemAttValue
	--	FROM ISOPVPEDITEMATTVALUES WITH (nOLOCK)
	--	WHERE
	--		ISOEmp_Codigo = 11 AND
	--		ISOPvPedItemAttId = 2),
	OC_DO_CLIENTE AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (nOLOCK)
		WHERE
			ISOEmp_Codigo = 11
			AND ISOPVPEDITEMATTVALUES.ISOPvPed_Codigo IN (SELECT ISOPVPED_CODIGO FROM PEDIDO WHERE ISOEMP_CODIGO = 11)
			AND ISOPvPedItemAttId = 1),
	LINHA_PEDIDO_CLIENTE AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (nOLOCK)
		WHERE
			ISOEmp_Codigo = 11
			AND ISOPVPEDITEMATTVALUES.ISOPvPed_Codigo IN (SELECT ISOPVPED_CODIGO FROM PEDIDO WHERE ISOEMP_CODIGO = 11)
			AND ISOPvPedItemAttId = 2),
	LINHA_ORDEM_COMPRA AS (
		SELECT ISOPVPEDITEM.ISOEmp_Codigo, ISOPVPEDITEM.ISOPVPED_CODIGO, ITEM_PEDIDO, ITEM_CLIENTE
			FROM ISOPVPEDITEM LEFT OUTER JOIN (
			SELECT
				ISOEMP_CODIGO,
				ISOPVPED_CODIGO,
				CASE
					WHEN CHARINDEX('-',VALOR,1) > 1
					THEN SUBSTRING(VALOR,1,CHARINDEX('-',VALOR,1)-1)
					ELSE 0
				END AS ITEM_PEDIDO,
				SUBSTRING(VALOR,CHARINDEX('-',VALOR,1)+1,3) AS ITEM_CLIENTE
			-- incluido função para remover caracteres inválidos, como espaço e TAB
			FROM ISOPVPEDIDOATTVALUES CROSS APPLY DBO.SPLIT(REPLACE(REPLACE(LTRIM(RTRIM(ISOPVPEDIDOATTVALUELONG)),CHAR(32),''),CHAR(9),''),CHAR(10))
			--FROM ISOPVPEDIDOATTVALUES CROSS APPLY DBO.SPLIT(ISOPVPEDIDOATTVALUELONG,CHAR(10))
			WHERE ISOEMP_CODIGO = 11
			AND ISOPVPEDIDOATTID = 106
			AND PATINDEX('%[A-Z]%', ISOPVPEDIDOATTVALUELONG) = 0
			AND ISOPVPED_CODIGO IN (SELECT ISOPVPED_CODIGO FROM PEDIDO WHERE ISOEMP_CODIGO = 11)
			AND CHARINDEX('-',VALOR,1) > 1
			AND VALOR <> '') DADO_COMPLEMENTAR_PEDIDO
				ON ISOPVPEDITEM.ISOEmp_Codigo = DADO_COMPLEMENTAR_PEDIDO.ISOEmp_Codigo AND
					ISOPVPEDITEM.ISOPvPed_Codigo = DADO_COMPLEMENTAR_PEDIDO.ISOPvPed_Codigo AND
					ISOPVPEDITEM.ISOPvPedIte_Codigo = DADO_COMPLEMENTAR_PEDIDO.ITEM_PEDIDO
			WHERE ISOPVPEDITEM.ISOEmp_Codigo = 11
			AND ISOPVPEDITEM.ISOPVPED_CODIGO IN (SELECT ISOPVPED_CODIGO FROM PEDIDO WHERE ISOEMP_CODIGO = 11)),
	LOTE1 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- lote 1 do item do pedido
		WHERE
			ISOEmp_Codigo = 11
			AND ISOPVPEDITEMATTVALUES.ISOPvPed_Codigo IN (SELECT ISOPVPED_CODIGO FROM PEDIDO WHERE ISOEMP_CODIGO = 11)
			AND ISOPvPedItemAttId = 4),
	QTD1 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- qtde 1 do item do pedido
		WHERE
			ISOEmp_Codigo = 11
			AND ISOPVPEDITEMATTVALUES.ISOPvPed_Codigo IN (SELECT ISOPVPED_CODIGO FROM PEDIDO WHERE ISOEMP_CODIGO = 11)
			AND ISOPvPedItemAttId = 5),
	LOTE2 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- lote 2 do item do pedido
		WHERE
			ISOEmp_Codigo = 11
			AND ISOPVPEDITEMATTVALUES.ISOPvPed_Codigo IN (SELECT ISOPVPED_CODIGO FROM PEDIDO WHERE ISOEMP_CODIGO = 11)
			AND ISOPvPedItemAttId = 6),
	QTD2 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- qtde 2 do item do pedido
		WHERE
			ISOEmp_Codigo = 11
			AND ISOPVPEDITEMATTVALUES.ISOPvPed_Codigo IN (SELECT ISOPVPED_CODIGO FROM PEDIDO WHERE ISOEMP_CODIGO = 11)
			AND ISOPvPedItemAttId = 7),
	LOTE3 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- lote 3 do item do pedido
		WHERE
			ISOEmp_Codigo = 11
			AND ISOPVPEDITEMATTVALUES.ISOPvPed_Codigo IN (SELECT ISOPVPED_CODIGO FROM PEDIDO WHERE ISOEMP_CODIGO = 11)
			AND ISOPvPedItemAttId = 8),
	QTD3 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- qtde 3 do item do pedido
		WHERE
			ISOEmp_Codigo = 11
			AND ISOPVPEDITEMATTVALUES.ISOPvPed_Codigo IN (SELECT ISOPVPED_CODIGO FROM PEDIDO WHERE ISOEMP_CODIGO = 11)
			AND ISOPvPedItemAttId = 9),
	LOTE4 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- lote 4 do item do pedido
		WHERE
			ISOEmp_Codigo = 11
			AND ISOPVPEDITEMATTVALUES.ISOPvPed_Codigo IN (SELECT ISOPVPED_CODIGO FROM PEDIDO WHERE ISOEMP_CODIGO = 11)
			AND ISOPvPedItemAttId = 10),
	QTD4 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- qtde 4 do item do pedido
		WHERE
			ISOEmp_Codigo = 11
			AND ISOPVPEDITEMATTVALUES.ISOPvPed_Codigo IN (SELECT ISOPVPED_CODIGO FROM PEDIDO WHERE ISOEMP_CODIGO = 11)
			AND ISOPvPedItemAttId = 11),
	LOTE5 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- lote 5 do item do pedido
		WHERE
			ISOEmp_Codigo = 11
			AND ISOPVPEDITEMATTVALUES.ISOPvPed_Codigo IN (SELECT ISOPVPED_CODIGO FROM PEDIDO WHERE ISOEMP_CODIGO = 11)
			AND ISOPvPedItemAttId = 12),
	QTD5 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK)-- qtde 5 do item do pedido
		WHERE
			ISOEmp_Codigo = 11
			AND ISOPVPEDITEMATTVALUES.ISOPvPed_Codigo IN (SELECT ISOPVPED_CODIGO FROM PEDIDO WHERE ISOEMP_CODIGO = 11)
			AND ISOPvPedItemAttId = 13),
	CLIENTEJUR AS (
		SELECT
		    ISOEntOrg_EmpCodigo,
		    ISOEntOrg_codigo,
		    --ISOEntSeg_Codigo AS CLIJURSEGMENTO,
			ISOEmpPrm_GrpUsuDet_Valor AS CLIJURSEGMENTO,
		    PEDIDO.ISOPvPed_Codigo
		FROM ISOENTORGANIZACAO
			INNER JOIN ISOEMPPRM_GRPUSUDETALHE
			ON ISOEMPPRM_GRPUSUDETALHE.ISOEmp_Codigo = 11
				AND ISOEMPPRM_GRPUSUDETALHE.ISOEmpPrm_Codigo = 'BUCLIENTE'
				AND ISOEMPPRM_GRPUSUDETALHE.ISOEmpPrm_GrpUsu_Codigo = 1
				AND ISOEmpPrm_GrpUsuDet_Descricao = ISOENTORGANIZACAO.ISOEntSeg_Codigo
			INNER JOIN PEDIDO
			ON  ISOENTORGANIZACAO.ISOEntOrg_EmpCodigo = PEDIDO.ISOEmp_Codigo
				AND ISOENTORGANIZACAO.ISOEntOrg_codigo = PEDIDO.ISOPvPed_CliCodigo
				AND PEDIDO.ISOEmp_Codigo= 11),
	CLIENTEFIS AS (
		SELECT
		    ISOEntPes_EmpCodigo,
		    ISOEntPes_Codigo,
		    --ISOEntSeg_Codigo AS CLIFISSEGMENTO,
			ISOEmpPrm_GrpUsuDet_Valor AS CLIFISSEGMENTO,
		    PEDIDO.ISOPvPed_Codigo
		FROM ISOENTPESSOA
			INNER JOIN ISOEMPPRM_GRPUSUDETALHE
			ON ISOEMPPRM_GRPUSUDETALHE.ISOEmp_Codigo = 11
				AND ISOEMPPRM_GRPUSUDETALHE.ISOEmpPrm_Codigo = 'BUCLIENTE'
				AND ISOEMPPRM_GRPUSUDETALHE.ISOEmpPrm_GrpUsu_Codigo = 1
				AND ISOEmpPrm_GrpUsuDet_Descricao = ISOENTPESSOA.ISOEntSeg_Codigo
			INNER JOIN PEDIDO
			ON  ISOENTPESSOA.ISOEntPes_EmpCodigo = PEDIDO.ISOEmp_Codigo
				AND ISOENTPESSOA.ISOEntPes_Codigo = PEDIDO.ISOPvPed_CliCodigo
				AND PEDIDO.ISOEmp_Codigo= 11),
	CLISUFRAMA AS (
		SELECT	DISTINCT
			ISOENTCLIENTEATTVALUES.ISOEmp_Codigo,
			ISOENTCLIENTEATTVALUES.ISOEntCli_Codigo,
			ISOENTCLIENTEATTVALUES.ISOEntClienteAttId,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOENTCLIENTEATTVALUES.ISOENTCLIENTEATTVALUE,1,9))),'') AS ISOPvPedido_CLISUFRAMA,
			PEDIDO.ISOPvPed_Codigo
		FROM ISOENTCLIENTEATTVALUES INNER JOIN PEDIDO
			ON ISOENTCLIENTEATTVALUES.ISOEmp_Codigo = PEDIDO.ISOEmp_Codigo
				AND ISOENTCLIENTEATTVALUES.ISOEntCli_Codigo = PEDIDO.ISOPvPed_CliCodigo
				AND PEDIDO.ISOEmp_Codigo= 11
		WHERE
			ISOENTCLIENTEATTVALUES.ISOEmp_Codigo = 11 AND
			ISOENTCLIENTEATTVALUES.ISOEntClienteAttId = 8),
	CLICXFEC AS (
		SELECT	DISTINCT
			ISOENTCLIENTEATTVALUES.ISOEmp_Codigo,
			ISOENTCLIENTEATTVALUES.ISOEntCli_Codigo,
			ISOENTCLIENTEATTVALUES.ISOEntClienteAttId,
			ISOENTCLIENTEATTVALUES.ISOEntClienteAttOptId AS ISOPvPedido_CLICXFEC,
			PEDIDO.ISOPvPed_Codigo
		FROM ISOENTCLIENTEATTVALUES INNER JOIN PEDIDO
			ON ISOENTCLIENTEATTVALUES.ISOEmp_Codigo = PEDIDO.ISOEmp_Codigo
				AND ISOENTCLIENTEATTVALUES.ISOEntCli_Codigo = PEDIDO.ISOPvPed_CliCodigo
				AND PEDIDO.ISOEmp_Codigo= 11
		WHERE
			ISOENTCLIENTEATTVALUES.ISOEmp_Codigo = 11 AND
			ISOENTCLIENTEATTVALUES.ISOEntClienteAttId = 2105),
	PEDCXFEC AS (
		SELECT
			ISOPVPEDIDOATTVALUES_PEDCXFEC.ISOEmp_Codigo,
			ISOPVPEDIDOATTVALUES_PEDCXFEC.ISOPvPed_Codigo,
			ISOPvPedidoAttOptId AS ISOPvPedido_PEDCXFEC
		FROM ISOPVPEDIDOATTVALUES AS ISOPVPEDIDOATTVALUES_PEDCXFEC
		WHERE ISOPVPEDIDOATTVALUES_PEDCXFEC.ISOEmp_Codigo = 11
			AND ISOPVPEDIDOATTVALUES_PEDCXFEC.ISOPvPed_Codigo IN (SELECT ISOPVPED_CODIGO FROM PEDIDO WHERE ISOEMP_CODIGO = 11)
			and ISOPVPEDIDOATTVALUES_PEDCXFEC.ISOPvPedidoAttId =  110),	--HML 111  PRD 110
	CLIFATPARC AS (
		SELECT	DISTINCT
			ISOENTCLIENTEATTVALUES.ISOEmp_Codigo,
			ISOENTCLIENTEATTVALUES.ISOEntCli_Codigo,
			ISOENTCLIENTEATTVALUES.ISOEntClienteAttId,
			ISOENTCLIENTEATTVALUES.ISOEntClienteAttOptId AS ISOPvPedido_CLIFATPARC,
			PEDIDO.ISOPvPed_Codigo
		FROM ISOENTCLIENTEATTVALUES INNER JOIN PEDIDO
			ON ISOENTCLIENTEATTVALUES.ISOEmp_Codigo = PEDIDO.ISOEmp_Codigo
				AND ISOENTCLIENTEATTVALUES.ISOEntCli_Codigo = PEDIDO.ISOPvPed_CliCodigo
				AND PEDIDO.ISOEmp_Codigo= 11
		WHERE
			ISOENTCLIENTEATTVALUES.ISOEmp_Codigo = 11 AND
			ISOENTCLIENTEATTVALUES.ISOEntClienteAttId = 2106),
	PEDFATPARC AS (
		SELECT
			ISOPVPEDIDOATTVALUES_PEDFATPARC.ISOEmp_Codigo,
			ISOPVPEDIDOATTVALUES_PEDFATPARC.ISOPvPed_Codigo,
			ISOPvPedidoAttOptId AS ISOPvPedido_PEDFATPARC
		FROM ISOPVPEDIDOATTVALUES AS ISOPVPEDIDOATTVALUES_PEDFATPARC
		WHERE ISOPVPEDIDOATTVALUES_PEDFATPARC.ISOEmp_Codigo = 11
			AND ISOPVPEDIDOATTVALUES_PEDFATPARC.ISOPvPed_Codigo IN (SELECT ISOPVPED_CODIGO FROM PEDIDO WHERE ISOEMP_CODIGO = 11)
			and ISOPVPEDIDOATTVALUES_PEDFATPARC.ISOPvPedidoAttId = 111),
	CLILOTUNI AS (
		SELECT	DISTINCT
			ISOENTCLIENTEATTVALUES.ISOEmp_Codigo,
			ISOENTCLIENTEATTVALUES.ISOEntCli_Codigo,
			ISOENTCLIENTEATTVALUES.ISOEntClienteAttId,
			ISOENTCLIENTEATTVALUES.ISOEntClienteAttOptId AS ISOPvPedido_CLILOTUNI,
			PEDIDO.ISOPvPed_Codigo
		FROM ISOENTCLIENTEATTVALUES INNER JOIN PEDIDO
			ON ISOENTCLIENTEATTVALUES.ISOEmp_Codigo = PEDIDO.ISOEmp_Codigo
				AND ISOENTCLIENTEATTVALUES.ISOEntCli_Codigo = PEDIDO.ISOPvPed_CliCodigo
				AND PEDIDO.ISOEmp_Codigo= 11
		WHERE
			ISOENTCLIENTEATTVALUES.ISOEmp_Codigo = 11 AND
			ISOENTCLIENTEATTVALUES.ISOEntClienteAttId = 2111),
	PEDLOTUNI AS (
		SELECT
			ISOPVPEDIDOATTVALUES_PEDLOTUNI.ISOEmp_Codigo,
			ISOPVPEDIDOATTVALUES_PEDLOTUNI.ISOPvPed_Codigo,
			ISOPvPedidoAttOptId AS ISOPvPedido_PEDLOTUNI
		FROM ISOPVPEDIDOATTVALUES AS ISOPVPEDIDOATTVALUES_PEDLOTUNI
		WHERE ISOPVPEDIDOATTVALUES_PEDLOTUNI.ISOEmp_Codigo = 11
			AND ISOPVPEDIDOATTVALUES_PEDLOTUNI.ISOPvPed_Codigo IN (SELECT ISOPVPED_CODIGO FROM PEDIDO WHERE ISOEMP_CODIGO = 11)
			and ISOPVPEDIDOATTVALUES_PEDLOTUNI.ISOPvPedidoAttId = 112),
	CLIVCTPRX AS (
		SELECT	DISTINCT
			ISOENTCLIENTEATTVALUES.ISOEmp_Codigo,
			ISOENTCLIENTEATTVALUES.ISOEntCli_Codigo,
			ISOENTCLIENTEATTVALUES.ISOEntClienteAttOptId AS ISOPvPedido_CLIVCTPRX,
			PEDIDO.ISOPvPed_Codigo
		FROM ISOENTCLIENTEATTVALUES INNER JOIN PEDIDO
			ON ISOENTCLIENTEATTVALUES.ISOEmp_Codigo = PEDIDO.ISOEmp_Codigo
				AND ISOENTCLIENTEATTVALUES.ISOEntCli_Codigo = PEDIDO.ISOPvPed_CliCodigo
				AND PEDIDO.ISOEmp_Codigo= 11
		WHERE
			ISOENTCLIENTEATTVALUES.ISOEmp_Codigo = 11 AND
			ISOENTCLIENTEATTVALUES.ISOEntClienteAttId = 2112),
	CLIMESVCTPRX AS (
		SELECT	DISTINCT
			ISOENTCLIENTEATTVALUES.ISOEmp_Codigo,
			ISOENTCLIENTEATTVALUES.ISOEntCli_Codigo,
			CAST((CASE WHEN ISOENTCLIENTEATTVALUES.ISOEntClienteAttValue = ' ' THEN '0.00' ELSE ISOENTCLIENTEATTVALUES.ISOEntClienteAttValue END) AS DECIMAL(10)) AS ISOPvPedido_CLIVCTPRX,
			PEDIDO.ISOPvPed_Codigo
		FROM ISOENTCLIENTEATTVALUES INNER JOIN PEDIDO
			ON ISOENTCLIENTEATTVALUES.ISOEmp_Codigo = PEDIDO.ISOEmp_Codigo
				AND ISOENTCLIENTEATTVALUES.ISOEntCli_Codigo = PEDIDO.ISOPvPed_CliCodigo
				AND PEDIDO.ISOEmp_Codigo= 11
		WHERE
			ISOENTCLIENTEATTVALUES.ISOEmp_Codigo = 11 AND
			ISOENTCLIENTEATTVALUES.ISOEntClienteAttId = 2113),
	PEDVCTPRX AS (
		SELECT
			ISOPVPEDIDOATTVALUES_PEDVCTPRX.ISOEmp_Codigo,
			ISOPVPEDIDOATTVALUES_PEDVCTPRX.ISOPvPed_Codigo,
			ISOPvPedidoAttOptId AS ISOPvPedido_PEDVCTPRX
		FROM ISOPVPEDIDOATTVALUES AS ISOPVPEDIDOATTVALUES_PEDVCTPRX
		WHERE ISOPVPEDIDOATTVALUES_PEDVCTPRX.ISOEmp_Codigo = 11
			AND ISOPVPEDIDOATTVALUES_PEDVCTPRX.ISOPvPed_Codigo IN (SELECT ISOPVPED_CODIGO FROM PEDIDO WHERE ISOEMP_CODIGO = 11)
			and ISOPVPEDIDOATTVALUES_PEDVCTPRX.ISOPvPedidoAttId  = 113),
	CLISIMPREMCOD AS (
		SELECT	DISTINCT
			ISOENTCLIENTEATTVALUES.ISOEmp_Codigo,
			ISOENTCLIENTEATTVALUES.ISOEntCli_Codigo,
			ISOENTCLIENTEATTVALUES.ISOEntClienteAttId,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOENTCLIENTEATTVALUES.ISOEntClienteAttValue,1,6))),'') AS ISOPvPedido_CLISIMPREMCOD,
			PEDIDO.ISOPvPed_Codigo
		FROM ISOENTCLIENTEATTVALUES INNER JOIN PEDIDO
			ON ISOENTCLIENTEATTVALUES.ISOEmp_Codigo = PEDIDO.ISOEmp_Codigo
				AND ISOENTCLIENTEATTVALUES.ISOEntCli_Codigo = PEDIDO.ISOPvPed_CliCodigo
				AND PEDIDO.ISOEmp_Codigo= 11
		WHERE
			ISOENTCLIENTEATTVALUES.ISOEmp_Codigo = 11 AND
			ISOENTCLIENTEATTVALUES.ISOEntClienteAttId = 2107),
	PEDSIMPREMCOD AS (
		SELECT
			ISOPVPEDIDOATTVALUES_PEDSIMPREMCOD.ISOEmp_Codigo,
			ISOPVPEDIDOATTVALUES_PEDSIMPREMCOD.ISOPvPed_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedidoAttValue,1,6))),'') AS IsoPvPedido_PEDSIMPREMCOD,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedidoAttValue,7,4))),'') AS IsoPvPedido_PEDSIMPREMLOJ
		FROM ISOPVPEDIDOATTVALUES AS ISOPVPEDIDOATTVALUES_PEDSIMPREMCOD
		WHERE ISOPVPEDIDOATTVALUES_PEDSIMPREMCOD.ISOEmp_Codigo = 11
			AND ISOPVPEDIDOATTVALUES_PEDSIMPREMCOD.ISOPvPed_Codigo IN (SELECT ISOPVPED_CODIGO FROM PEDIDO WHERE ISOEMP_CODIGO = 11)
			and ISOPVPEDIDOATTVALUES_PEDSIMPREMCOD.ISOPvPedidoAttId = 114),
	CLISIMPREMLOJ AS (
		SELECT	DISTINCT
			ISOENTCLIENTEATTVALUES.ISOEmp_Codigo,
			ISOENTCLIENTEATTVALUES.ISOEntCli_Codigo,
			ISOENTCLIENTEATTVALUES.ISOEntClienteAttId,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOENTCLIENTEATTVALUES.ISOEntClienteAttValue,1,4))),'') AS ISOPvPedido_CLISIMPREMLOJ,
			PEDIDO.ISOPvPed_Codigo
		FROM ISOENTCLIENTEATTVALUES INNER JOIN PEDIDO
			ON ISOENTCLIENTEATTVALUES.ISOEmp_Codigo = PEDIDO.ISOEmp_Codigo
				AND ISOENTCLIENTEATTVALUES.ISOEntCli_Codigo = PEDIDO.ISOPvPed_CliCodigo
				AND PEDIDO.ISOEmp_Codigo= 11
		WHERE
			ISOENTCLIENTEATTVALUES.ISOEmp_Codigo = 11 AND
			ISOENTCLIENTEATTVALUES.ISOEntClienteAttId = 2108),
	CLIPRIORIDADE AS (
		SELECT	DISTINCT
			ISOENTCLIENTEATTVALUES.ISOEmp_Codigo,
			ISOENTCLIENTEATTVALUES.ISOEntCli_Codigo,
			ISOENTCLIENTEATTVALUES.ISOEntClienteAttId,
			CAST(ISOENTCLIENTEATTVALUES.ISOEntClienteAttValue AS DECIMAL(10)) AS ISOPvPedido_CLIPRIORIDADE,
			PEDIDO.ISOPvPed_Codigo
		FROM ISOENTCLIENTEATTVALUES INNER JOIN PEDIDO
			ON ISOENTCLIENTEATTVALUES.ISOEmp_Codigo = PEDIDO.ISOEmp_Codigo
				AND ISOENTCLIENTEATTVALUES.ISOEntCli_Codigo = PEDIDO.ISOPvPed_CliCodigo
				AND PEDIDO.ISOEmp_Codigo= 11
		WHERE
			ISOENTCLIENTEATTVALUES.ISOEmp_Codigo = 11 AND
			ISOENTCLIENTEATTVALUES.ISOEntClienteAttId = 2109 AND
			ISOENTCLIENTEATTVALUES.ISOEntClienteAttValue <> ' '),
	CLIDIASALOCFUT AS (			---- 8888
		SELECT	DISTINCT
			ISOENTCLIENTEATTVALUES.ISOEmp_Codigo,
			ISOENTCLIENTEATTVALUES.ISOEntCli_Codigo,
			ISOENTCLIENTEATTVALUES.ISOEntClienteAttId,
			CAST(ISOENTCLIENTEATTVALUES.ISOEntClienteAttValue AS DECIMAL(10)) AS ISOPvPedido_CLIDIASALOCFUT,
			PEDIDO.ISOPvPed_Codigo
		FROM ISOENTCLIENTEATTVALUES INNER JOIN PEDIDO
			ON ISOENTCLIENTEATTVALUES.ISOEmp_Codigo = PEDIDO.ISOEmp_Codigo
				AND ISOENTCLIENTEATTVALUES.ISOEntCli_Codigo = PEDIDO.ISOPvPed_CliCodigo
				AND PEDIDO.ISOEmp_Codigo= 11
		WHERE
			ISOENTCLIENTEATTVALUES.ISOEmp_Codigo = 11 AND
			ISOENTCLIENTEATTVALUES.ISOEntClienteAttId = 2110),

	NATUREZA_OPERACAO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPedTip_Codigo,
			COALESCE(ISOPvPedTip_NaturezaOperacaoCo,'') AS ISOPvPedTip_NaturezaOperacaoCo
		FROM ISOPVPEDTIPO WITH (nOLOCK)
		WHERE
			ISOEmp_Codigo = 11)
	/*OBSERVACOES AS
		SELECT
			ISOPVPEDOBSERVACAO.ISOEmp_Codigo,
			ISOPVPEDOBSERVACAO.ISOPvPed_Codigo,
			ISOPVPEDOBSERVACAO.ISOPvPedObs_Sequencia,
			ISOPVPEDOBSERVACAO.ISOPvPedObs_Descricao,
			ISOPVPEDOBSERVACAO.ISOPvPedObs_Pick,
			ISOPVPEDOBSERVACAO.ISOPvPedObs_NF
		FROM ISOPVPEDOBSERVACAO INNER JOIN ISOPVPEDIDO ON
			ISOPVPEDOBSERVACAO.ISOEmp_Codigo = ISOPVPEDIDO.ISOEmp_Codigo AND
			ISOPVPEDOBSERVACAO.ISOPvPed_Codigo = ISOPVPEDIDO.ISOPvPed_Codigo
		WHERE ISOPVPEDOBSERVACAO.ISOEmp_Codigo = 11
		    AND ISOPVPEDIDO.ISOPvPedSit_Codigo in (1, 30, 35)
*/
	--MATRIZ_ICMS AS (
	--	SELECT
	--		ISOEmp_Codigo,
	--		ISOPvPed_CliCodigo,
	--		ISOPvPed_Codigo,
	--		ISOPvPedIte_Codigo,
	--		ISOPrd_Codigo,
	--		ISOPvMatICMS_SubTribICMSDocFis,
	--		ISOPvMatICMS_AliquotaICMS
	--	FROM MacroConsultaMatrizICMS WITH (NOLOCK)
	--	WHERE
	--		ISOEmp_Codigo = 11)
SELECT
	PEDIDO.ISOEmp_Codigo, -- Código da empresa
	PEDIDO.ISOPvPed_Codigo, -- Código CRM do Pedido
	PEDIDO.ISOPvPed_CliCodigo, -- Código CRM do cliente
	PEDIDO.ISOPvPed_DtaPedido,  -- Data do pedido
	PEDIDO.ISOPvPed_HoraPedido, -- Hora do pedido
	CASE CONDICAO_PAGAMENTO.ISOPeCntPgt_Forma
		WHEN 'Bol' THEN 'BOLETO'
		WHEN 'Car' THEN 'CARTAO'
		WHEN 'Che' THEN 'CHEQUE'
		WHEN 'Dep' THEN 'DEPOSITO'
		WHEN 'Din' THEN 'Dinheiro'
	END AS ISOPeCntPgt_Forma, -- Forma de pagamento
	PEDIDO.ISOPvPed_Pagamento, -- Condição de pagamento
--	PEDIDO.ISOPvPed_DtaSolEntrega,

	CASE
		WHEN PEDIDO.ISOPvPed_DtaSolEntrega = '1753-01-01 00:00:00.000' THEN DATEADD(DAY, DATEDIFF(DAY, 0, GETDATE()), 0)
		ELSE PEDIDO.ISOPvPed_DtaSolEntrega
	END AS ISOPvPed_DtaPrevFat, --PEDIDO.ISOPvPed_DtaSolEntrega,

	PEDIDO.ISOPvPed_CodEndEntrega,

	PEDIDO.ISOPvPedOri_Codigo,
	CASE WHEN PEDIDO.ISOPvPedOri_Codigo  = 'LIC' THEN 'S' ELSE 'N' END AS IsoPVPed_LICITA,
	CASE WHEN PEDIDO.ISOPvPedOri_Codigo  > ' ' THEN 'S' ELSE 'N' END AS IsoPVPed_PORTAL,
	CASE WHEN PEDIDO.ISOPvPedOri_Codigo  > ' ' THEN PEDIDO.ISOPvPedOri_Codigo ELSE '   ' END AS IsoPVPed_IDPORT,

	PEDIDO.ISOPvPedTip_Codigo,
	PEDIDO.ISOPvPed_CodEndCobranca,

	CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0 THEN TOTAL_PEDIDO_EMPENHO.ISOPvPed_ValorTotalPedido ELSE PEDIDO.ISOPvPed_ValorTotalPedido END AS ISOPvPed_ValorTotalPedido,

	PEDIDO_ITEM.ISOPvPedIte_Codigo, -- Sequencial do item do pedido
	PEDIDO_ITEM.ISOPrd_Codigo, -- Código do produto
	PEDIDO_ITEM.ISOPvPedIte_DataEntregaItem AS ISOPvPedIte_DataPromessa,

	CASE
		WHEN PEDIDO_ITEM.ISOPvPedIte_DtaSolEntrega = '1753-01-01 00:00:00.000' THEN DATEADD(DAY, DATEDIFF(DAY, 0, GETDATE()), 0)
		ELSE PEDIDO_ITEM.ISOPvPedIte_DtaSolEntrega
	END AS ISOPvPedIte_DtaSolEntrega,  --PEDIDO_ITEM.ISOPvPedIte_DtaSolEntrega,

	PEDIDO_ITEM.ISOPvPedIte_UnidadeOrigem,

	--07/07/2021----------- enviar '   ' quando UMComercial = UMEstoque-------------------------------
	--PEDIDO_ITEM.ISOPvPedIte_UnidadeDestino AS Item_QTD_UnidadeDestino,
	CASE
		WHEN PEDIDO_ITEM.ISOPvPedIte_UnidadeDestino = PEDIDO_ITEM.ISOPvPedIte_UnidadeOrigem
		THEN '   '
		ELSE PEDIDO_ITEM.ISOPvPedIte_UnidadeDestino
	END AS Item_QTD_UnidadeDestino,

	--07/07/2021----------- enviar 0 quando UMComercial = UMEstoque-------------------------------
	--CASE
	--	WHEN ISNULL(NULLIF(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0),0) = 0
	--	THEN 0
	--	ELSE PEDIDO_ITEM.ISOPvPedIte_Quantidade
	--END AS Item_Quantidade,
	CASE
		WHEN PEDIDO_ITEM.ISOPvPedIte_UnidadeDestino = PEDIDO_ITEM.ISOPvPedIte_UnidadeOrigem
		THEN 0
		ELSE
		CASE
		  WHEN ISNULL(NULLIF(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0),0) = 0
		  THEN 0
		  ELSE PEDIDO_ITEM.ISOPvPedIte_Quantidade
		END
	END AS Item_Quantidade,
	-----------------------------------------------------------------------------------------------

	ROUND(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao_Conv,6) AS ISOPrdUndFatC_FatorConversao, -- Fator de conversão sem decimais
	ROUND(FATOR_CONVERSAO_CX.ISOPrdUndFatC_FatorConversaoCX,6) AS ISOPrdUndFatC_FatorConversaoCX, -- Fator de conversão sem decimais
	FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao as FatorISO,
	-- criado regra de divisão quando a unidade de medida for "M" -- 02/09/2021 zagoto
	--ROUND(PEDIDO_ITEM.ISOPvPedIte_Quantidade * ROUND(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,6),0) AS ISOPvPedIte_Qtd_UM_estoque,
	--case
	--	when FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_UndDestino = 'M' then round(PEDIDO_ITEM.ISOPvPedIte_Quantidade / ISOPrdUndFatC_FatorConversao ,0)
	--	else ROUND(PEDIDO_ITEM.ISOPvPedIte_Quantidade * ROUND(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,6),0)
	--end AS ISOPvPedIte_Qtd_UM_estoque,

	ROUND(PEDIDO_ITEM.ISOPvPedIte_Quantidade * ROUND(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,6),0) AS ISOPvPedIte_Qtd_UM_estoque,

	CASE
		WHEN ISNULL(NULLIF(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0),0) = 0
		THEN 0
		--ELSE CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho >0 THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho ELSE ROUND(PEDIDO_ITEM.ISOPvPedIte_ValorUnitario,6) END
		ELSE
		    CASE
		        WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho >0
		        THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho
		        ELSE ROUND(PEDIDO_ITEM.ISOPvPedIte_PrecoAjustadoTotal / PEDIDO_ITEM.ISOPvPedIte_Quantidade,6)
		    END
	END ISOPvPedIte_Vlr_Total_Unitario,

	CASE
		WHEN ISNULL(NULLIF(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0),0) = 0 THEN 0
		WHEN PEDIDO_ITEM.ISOPvPedIte_Quantidade = 0 THEN 0
		WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho >0
	THEN round((PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho -
				  (PEDIDO_ITEM.ISOPvPedIte_ValorIPI		     / PEDIDO_ITEM.ISOPvPedIte_Quantidade) -
				  (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade) -
				  (PEDIDO_ITEM.ISOPvPedIte_ValorICMS	     / PEDIDO_ITEM.ISOPvPedIte_Quantidade) -
				  (PEDIDO_ITEM.ISOPvPedIte_ValorPIS		     / PEDIDO_ITEM.ISOPvPedIte_Quantidade) -
				  (PEDIDO_ITEM.ISOPvPedIte_ValorCofins	     / PEDIDO_ITEM.ISOPvPedIte_Quantidade) -
				  (PEDIDO_ITEM.ISOPVPedIte_ValorFCPST	     / PEDIDO_ITEM.ISOPvPedIte_Quantidade) -
				  (PEDIDO_ITEM.ISOPvPedIte_ValorFCP		     / PEDIDO_ITEM.ISOPvPedIte_Quantidade))
				  /  FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,6)
	 ELSE
	 round((ROUND(PEDIDO_ITEM.ISOPvPedIte_PrecoAjustadoTotal / PEDIDO_ITEM.ISOPvPedIte_Quantidade,6) -
				  (PEDIDO_ITEM.ISOPvPedIte_ValorIPI		     / PEDIDO_ITEM.ISOPvPedIte_Quantidade) -
				  (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade) -
				  (PEDIDO_ITEM.ISOPvPedIte_ValorICMS	     / PEDIDO_ITEM.ISOPvPedIte_Quantidade) -
				  (PEDIDO_ITEM.ISOPvPedIte_ValorPIS		     / PEDIDO_ITEM.ISOPvPedIte_Quantidade) -
				  (PEDIDO_ITEM.ISOPvPedIte_ValorCofins	     / PEDIDO_ITEM.ISOPvPedIte_Quantidade) -
				  (PEDIDO_ITEM.ISOPVPedIte_ValorFCPST	     / PEDIDO_ITEM.ISOPvPedIte_Quantidade) -
				  (PEDIDO_ITEM.ISOPvPedIte_ValorFCP		     / PEDIDO_ITEM.ISOPvPedIte_Quantidade))
				  /  FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,6)
	END as Vlr_unit_LIQUIDO,
	/*
	CASE
		WHEN ISNULL(NULLIF(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0),0) = 0 THEN 0
		WHEN PEDIDO_ITEM.ISOPvPedIte_Quantidade = 0 THEN 0
		ELSE
			ROUND((ISOPvPedIte_Vlr_Total_Unitario -
				  (PEDIDO_ITEM.ISOPvPedIte_ValorIPI		     / PEDIDO_ITEM.ISOPvPedIte_Quantidade) -
				  (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade) -
				  (PEDIDO_ITEM.ISOPvPedIte_ValorICMS	     / PEDIDO_ITEM.ISOPvPedIte_Quantidade) -
				  (PEDIDO_ITEM.ISOPvPedIte_ValorPIS		     / PEDIDO_ITEM.ISOPvPedIte_Quantidade) -
				  (PEDIDO_ITEM.ISOPvPedIte_ValorCofins	     / PEDIDO_ITEM.ISOPvPedIte_Quantidade) -
				  (PEDIDO_ITEM.ISOPVPedIte_ValorFCPST	     / PEDIDO_ITEM.ISOPvPedIte_Quantidade) -
				  (PEDIDO_ITEM.ISOPvPedIte_ValorFCP		     / PEDIDO_ITEM.ISOPvPedIte_Quantidade),6)
				  /  FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,6)
	END AS Vlr_unit_LIQUIDO,
	*/


	--ZZ3_VALMON -- 27/10/2021 - Cris
	CASE
		WHEN ISNULL(NULLIF(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0),0) = 0
		THEN 0
		--ELSE CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0 THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho ELSE ROUND(PEDIDO_ITEM.ISOPvPedIte_ValorUnitario,6) END / NULLIF(ROUND(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0),0)
		ELSE
			CASE
				WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0
				THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho
				ELSE ROUND(PEDIDO_ITEM.ISOPvPedIte_PrecoAjustadoTotal / PEDIDO_ITEM.ISOPvPedIte_Quantidade,6)
					 --ROUND(PEDIDO_ITEM.ISOPvPedIte_PrecoAjustadoTotal / PEDIDO_ITEM.ISOPvPedIte_Quantidade,2)  --23/11/2021 voltamos p/ 6 decimais pq entendemos que as casas decimais EVITAVAM a diferenca de valores no Protheus APESAR de estar calculando valor total DIFERENTE do ISO
					 --PEDIDO_ITEM.ISOPvPedIte_PrecoAjustado  --retirado em 28/10/21 solic Edilon
					 --ROUND(PEDIDO_ITEM.ISOPvPedIte_PrecoAjustadoTotal / PEDIDO_ITEM.ISOPvPedIte_Quantidade,6)  --27/10/2021 alterado por Cris por solicitação do Edilon para gravar 2 casas decimais
			END / NULLIF(ROUND(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,6),0)
	END ISOPvPedIte_Vlr_Total_Unitario_EST,

	PEDIDO_ITEM.ISOPvPedIteSit_Codigo,
	PEDIDO_ITEM.ISOPvPedIte_AgendamentoData,
	PEDIDO_ITEM.ISOPvPedIte_AgendamentoHoraIni,
	PEDIDO_ITEM.ISOPvPedIte_AgendamentoHoraFin,
	PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,
	-- DESATIVADO 21/08/2020 - EDILON - para pedidos de contrato o valor de frete deve ser mostrado
	--CASE
	--	WHEN COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) > 0
	--	THEN 0
	--	ELSE COALESCE(PEDIDO.ISOPvPed_ValorFrete,0)
	--END AS ISOPvPed_ValorFrete,
	COALESCE(PEDIDO.ISOPvPed_ValorFrete,0) AS ISOPvPed_ValorFrete,
	COALESCE(ORIGEM_PROTHEUS.ISOEmpEnt_Ori_Codigo,'') AS ISOEmpEnt_CliCod_ERP,
	ORIGEM_LX.ISOEmpEnt_Ori_Codigo AS ISOEmpEnt_Ori_LX,

	--LOCAL_FATURAMENTO.ISOPvCDOri_Armazem AS ISOPvPedIte_Armazem,  --(Cris-24/06/21 De-PARA de Armazens)
	ARMAZEMPROTHEUS.ISOEmpPrm_GrpUsuDet_Valor AS ISOPvPedIte_Armazem,

	COALESCE(CLIENTE.ISOEntCli_Operacao,'') AS ISOEntCli_Operacao,
	ESTABELECIMENTO_LX.ISOPvCD_Estabelecimento AS ISOPvCD_Estabelecimento_LX,
	PEDIDO.ISOPvPed_CodigoAtendente AS ISOPvPed_CodigoAtendente, -- Código do atendente que criou o pedido
	ATENDENTE_PEDIDO.ISOEnt_Nome AS ISOEnt_NomeAtendente, -- Nome do atendente que criou o pedido

	/*
	'2020-05-13 00:00:00.000' AS ISOWFTrf_DataLiberacaoCredito, -- Data em que a tarefa de liberação de crédito foi executada
    '11:00:00' AS ISOWFTrf_HoraLiberacaoCredito,  -- Hora em que a tarefa de liberação de crédito foi executada
    975190 AS ISOWFTrf_CodigoAtendente, -- Responsável que executou a tarefa de liberação de crédito
	*/

	COALESCE(ANALISE_CREDITO.ISOWFTrf_DataLiberacaoCredito,'') AS ISOWFTrf_DataLiberacaoCredito, -- Data em que a tarefa de liberação de crédito foi executada
    COALESCE(ANALISE_CREDITO.ISOWFTrf_HoraLiberacaoCredito,'') AS ISOWFTrf_HoraLiberacaoCredito,  -- Hora em que a tarefa de liberação de crédito foi executada
    COALESCE(ANALISE_CREDITO.ISOWFTrf_CodigoAtendente,'') AS ISOWFTrf_CodigoAtendente, -- Responsável que executou a tarefa de liberação de crédito

	CASE
		WHEN PEDIDO.ISOPvPedOri_Codigo = 'EUR' THEN 3
		WHEN PEDIDO.ISOPvPedOri_Codigo = 'EU1' THEN 3
		WHEN PEDIDO.ISOPvPedOri_Codigo = 'USD' THEN 2
		WHEN PEDIDO.ISOPvPedOri_Codigo = 'US1' THEN 2
		ELSE 1
	END AS ISOMoe_Codigo,

	COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorIPI,0) AS ISOPvPedIte_ValorIPI_UMCML,
	COALESCE(PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria,0) AS ISOPvPedIte_VlrSubsTrib_UMCML,
	COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorICMS,0) AS ISOPvPedIte_ValorICMS_UMCML,
	COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorPIS,0) AS ISOPvPedIte_ValorPIS_UMCML,
	COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorCofins,0) AS ISOPvPedIte_ValorCofins_UMCML,
	COALESCE(PEDIDO_ITEM.ISOPVPedIte_ValorFCPST,0) AS ISOPVPedIte_ValorFCPST_UMCML,
	COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorFCP,0) AS ISOPvPedIte_ValorFCP_UMCML,

	-------------- inicio alteração impostos na unidade de medida do ESTOQUE --------------------
	CASE
		WHEN ISNULL(NULLIF(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0),0) = 0
		THEN 0
		ELSE
		CASE
			WHEN PEDIDO_ITEM.ISOPvPedIte_Quantidade > 0
			THEN round((PEDIDO_ITEM.ISOPvPedIte_ValorIPI / PEDIDO_ITEM.ISOPvPedIte_Quantidade) /  FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,6)
			ELSE 0
		END
	END ISOPvPedIte_ValorIPI,

	CASE
		WHEN ISNULL(NULLIF(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0),0) = 0
		THEN 0
		ELSE
		CASE
			WHEN PEDIDO_ITEM.ISOPvPedIte_Quantidade > 0
			THEN round((PEDIDO_ITEM.ISOPvPedIte_ValorICMS / PEDIDO_ITEM.ISOPvPedIte_Quantidade) /  FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,6)
			ELSE 0
		END
	END ISOPvPedIte_ValorICMS,

	CASE
		WHEN ISNULL(NULLIF(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0),0) = 0
		THEN 0
		ELSE
		CASE
			WHEN PEDIDO_ITEM.ISOPvPedIte_Quantidade > 0
			THEN round((PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade) /  FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,6)
			ELSE 0
		END
	END ISOPvPedIte_VlrSubsTrib,

   	CASE
		WHEN ISNULL(NULLIF(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0),0) = 0
		THEN 0
		ELSE
		CASE
			WHEN PEDIDO_ITEM.ISOPvPedIte_Quantidade > 0
			THEN round((PEDIDO_ITEM.ISOPvPedIte_ValorPIS / PEDIDO_ITEM.ISOPvPedIte_Quantidade) /  FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,6)
			ELSE 0
		END
	END  ISOPvPedIte_ValorPIS,

	CASE
		WHEN ISNULL(NULLIF(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0),0) = 0
		THEN 0
		ELSE
		CASE
			WHEN PEDIDO_ITEM.ISOPvPedIte_Quantidade > 0
			THEN round((PEDIDO_ITEM.ISOPvPedIte_ValorCofins / PEDIDO_ITEM.ISOPvPedIte_Quantidade) /  FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,6)
			ELSE 0
		END
	END ISOPvPedIte_ValorCofins,

	CASE
		WHEN ISNULL(NULLIF(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0),0) = 0
		THEN 0
		ELSE
		CASE
			WHEN PEDIDO_ITEM.ISOPvPedIte_Quantidade > 0
			THEN round((PEDIDO_ITEM.ISOPVPedIte_ValorFCPST / PEDIDO_ITEM.ISOPvPedIte_Quantidade) /  FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,6)
			ELSE 0
		END
	END ISOPVPedIte_ValorFCPST,

	CASE
		WHEN ISNULL(NULLIF(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0),0) = 0
		THEN 0
		ELSE
		CASE
			WHEN PEDIDO_ITEM.ISOPvPedIte_Quantidade > 0
			THEN round((PEDIDO_ITEM.ISOPvPedIte_ValorFCP / PEDIDO_ITEM.ISOPvPedIte_Quantidade) /  FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,6)
			ELSE 0
		END
	END ISOPvPedIte_ValorFCP,
	-------------- fim alteração impostos na unidade de medida do ESTOQUE --------------------


	COALESCE(TRANSPORTADORA.ISOPvPedido_CodigoTRP,'') AS ISOPvPedido_CodigoTRP,

	CASE
		TIPO_FRETE.ISOPvPedidoTipoFrete
		WHEN 10 THEN 'C'  -- Tipo de frete CIF
		WHEN 20 THEN 'F'  -- Tipo de frete FOB
		ELSE 'C'  -- Tipo de frete CIF
	END
	AS ISOPvPedidoTipoFrete,

	-- Inativado para considerar o cod. da resposta, considerando 10 - C (CIF) ou 20 - F (FOB) - 13/07/21 zagoto
	--COALESCE(TIPO_FRETE.ISOPvPedidoTipoFrete,'') AS ISOPvPedidoTipoFrete,

	COALESCE(TABELA_CLIENTE.ISOEntClienteAttOtherValue,'') AS ISOEmpEnt_Tabela_Preco,
	PEDIDO_ITEM.ISOPvPedIte_PrecoLista,
	COALESCE(PEDIDO.ISOPVPed_OrdCompra,'') AS ISOPVPed_OrdCompra,

	CASE
		WHEN LINHA_ORDEM_COMPRA.ITEM_CLIENTE <> ''
		THEN COALESCE(PEDIDO.ISOPVPed_OrdCompra,'')
		ELSE
			CASE
				WHEN COALESCE(RTRIM(LTRIM(SUBSTRING(OC_DO_CLIENTE.ISOPvPedItemAttValue,1,15))),'') <> ''
				THEN COALESCE(RTRIM(LTRIM(SUBSTRING(OC_DO_CLIENTE.ISOPvPedItemAttValue,1,15))),'')
				ELSE COALESCE(PEDIDO.ISOPVPed_OrdCompra,'')
			END
	END AS ISOPvPedIte_NrOrdemCompra,

	CASE
		WHEN ABS(COALESCE(LINHA_PEDIDO_CLIENTE.ISOPvPedItemAttValue,LINHA_ORDEM_COMPRA.ITEM_CLIENTE,'')) = 0 AND LINHA_ORDEM_COMPRA.ITEM_CLIENTE <> ''
		THEN PEDIDO_ITEM.ISOPvPedIte_Codigo
		ELSE ABS(COALESCE(LINHA_PEDIDO_CLIENTE.ISOPvPedItemAttValue,LINHA_ORDEM_COMPRA.ITEM_CLIENTE,''))
	END
		AS ISOPvPedIte_LinhaOrdemCompra,

	COALESCE(RTRIM(LTRIM(SUBSTRING(LOTE1.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_Lote1,
	CONVERT(FLOAT,REPLACE(COALESCE(RTRIM(LTRIM(SUBSTRING(ISNULL(QTD1.ISOPvPedItemAttValue,'0'),1,15))),''),',','.')) AS ISOPvPedIte_QtdeLote1,
	COALESCE(RTRIM(LTRIM(SUBSTRING(LOTE2.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_Lote2,
	CONVERT(FLOAT,REPLACE(COALESCE(RTRIM(LTRIM(SUBSTRING(ISNULL(QTD2.ISOPvPedItemAttValue,'0'),1,15))),''),',','.')) AS ISOPvPedIte_QtdeLote2,
	COALESCE(RTRIM(LTRIM(SUBSTRING(LOTE3.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_Lote3,
	CONVERT(FLOAT,REPLACE(COALESCE(RTRIM(LTRIM(SUBSTRING(ISNULL(QTD3.ISOPvPedItemAttValue,'0'),1,15))),''),',','.')) AS ISOPvPedIte_QtdeLote3,
	COALESCE(RTRIM(LTRIM(SUBSTRING(LOTE4.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_Lote4,
	CONVERT(FLOAT,REPLACE(COALESCE(RTRIM(LTRIM(SUBSTRING(ISNULL(QTD4.ISOPvPedItemAttValue,'0'),1,15))),''),',','.')) AS ISOPvPedIte_QtdeLote4,
	COALESCE(RTRIM(LTRIM(SUBSTRING(LOTE5.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_Lote5,
	CONVERT(FLOAT,REPLACE(COALESCE(RTRIM(LTRIM(SUBSTRING(ISNULL(QTD5.ISOPvPedItemAttValue,'0'),1,15))),''),',','.')) AS ISOPvPedIte_QtdeLote5,

	COALESCE(NATUREZA_OPERACAO.ISOPvPedTip_NaturezaOperacaoCo,'') AS ISOPvPed_Operacao,

	ISNULL(CLIFISSEGMENTO, CLIJURSEGMENTO) as CLIENTE_BU,

    CASE
		WHEN ISOPvPedido_PEDCXFEC = 2 THEN 'S'
		WHEN ISOPvPedido_PEDCXFEC = 3 THEN 'N'
		WHEN ESTABELECIMENTO_LX.ISOPvCD_Estabelecimento = 30 THEN 'N'   --incluido em 05/01/2022 Akorel tem q faturar fracionado I2201-606
		WHEN ISOPvPedido_CLICXFEC = 2 THEN 'S'
		WHEN ISOPvPedido_CLICXFEC = 3 THEN 'N'
		ELSE 'S'   --'N'  alterado em 03/01/2022 conforme chamado I2112-2264
	END AS ISOPvPed_CliCXFec,

    CASE
		WHEN COALESCE(PEDIDO.ISOPvPed_ValorFrete,0) > 0 THEN 'N'
		WHEN CONDICAO_PAGAMENTO.ISOPeCntPgt_Forma <> 'Bol' THEN 'N'
		WHEN ISOPvPedido_PEDFATPARC = 2 THEN 'S'
		WHEN ISOPvPedido_PEDFATPARC = 3 THEN 'N'
		WHEN ISOPvPedido_CLIFATPARC = 2 THEN 'S'
		WHEN ISOPvPedido_CLIFATPARC = 3 THEN 'N'
		ELSE 'S'
    END AS ISOPvPed_CliFatParc,

    CASE
		WHEN ISOPvPedido_PEDLOTUNI = 2 THEN 'S'
		WHEN ISOPvPedido_PEDLOTUNI = 3 THEN 'N'
		WHEN ISOPvPedido_CLILOTUNI = 2 THEN 'S'
		ELSE 'N'
	END AS ISOPvPed_CliLotUni,

    CASE
		WHEN ISOPvPedido_PEDVCTPRX = 3 THEN 'N'
		WHEN ISOPvPedido_PEDVCTPRX = 2 AND CLIMESVCTPRX.ISOPvPedido_CLIVCTPRX > 0 THEN 'S'
		WHEN ISOPvPedido_PEDVCTPRX = 2 AND CLIMESVCTPRX.ISOPvPedido_CLIVCTPRX = 0 THEN 'N'
		WHEN CLIVCTPRX.ISOPvPedido_CLIVCTPRX = 2 AND CLIMESVCTPRX.ISOPvPedido_CLIVCTPRX > 0 THEN 'S'
		ELSE 'N'
	END AS ISOPvPed_CliVctPrx,

    CASE
		WHEN ISOPvPedido_PEDVCTPRX = 2 AND CLIMESVCTPRX.ISOPvPedido_CLIVCTPRX > 0 THEN CLIMESVCTPRX.ISOPvPedido_CLIVCTPRX
		WHEN ISOPvPedido_PEDVCTPRX = 2 AND CLIMESVCTPRX.ISOPvPedido_CLIVCTPRX = 0 THEN 0
		WHEN ISOPvPedido_PEDVCTPRX = 3 AND CLIMESVCTPRX.ISOPvPedido_CLIVCTPRX > 0 THEN 0
		WHEN CLIVCTPRX.ISOPvPedido_CLIVCTPRX = 2 AND CLIMESVCTPRX.ISOPvPedido_CLIVCTPRX > 0 THEN CLIMESVCTPRX.ISOPvPedido_CLIVCTPRX
		ELSE 0
	END AS IsoPvPed_CliMesVctPrx,

    COALESCE(IsoPvPedido_PEDSIMPREMCOD,ISOPvPedido_CLISIMPREMCOD) AS ISOPvPed_CliTG,
    COALESCE(IsoPvPedido_PEDSIMPREMLOJ,ISOPvPedido_CLISIMPREMLOJ) AS ISOPvPed_LOJTG,

	CASE
		WHEN ISNULL(ISOPvPedido_CLIPRIORIDADE, 0) = 0 THEN '9'
		ELSE CAST(ISOPvPedido_CLIPRIORIDADE as CHAR)
	END AS ISOPVPed_CLIPRIORIDADE,
	CASE
		WHEN ISNULL(ISOPvPedido_CLIDIASALOCFUT, 0) = 0 THEN 1
		WHEN ISOPvPedido_CLIDIASALOCFUT = 0  THEN 1
		ELSE ISOPvPedido_CLIDIASALOCFUT
	END AS ISOPvPed_CLIDIASALOCFUT,

	--07/07/2021-- enviar 0 quando UMComercial = UMEstoque
	CASE
		WHEN PEDIDO_ITEM.ISOPvPedIte_UnidadeDestino = PEDIDO_ITEM.ISOPvPedIte_UnidadeOrigem
		THEN 0
		ELSE
		CASE
		WHEN COALESCE(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0) = 0
			THEN 0
		ELSE
		   CASE
			   -- cliente TEM desoneração e o pedido é empenho
			   WHEN ICMS_FAST.SubTribICMSDocFis = 1 AND COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) > 0
				   THEN ROUND(((((PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho / (1 - (ICMS_FAST.AliquotaICMS/100)) / (1 + (PEDIDO_ITEM.ISOPvPedIte_PercentualIPI / 100)))))),6)
			   -- cliente TEM desoneração e o pedido NÃO é empenho
			   WHEN ICMS_FAST.SubTribICMSDocFis = 1 AND COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) = 0
				   THEN ROUND(PEDIDO_ITEM.ISOPvPedIte_PrecoAjustado ,6)
			   -- cliente SEM desoneração
		   	   ELSE ROUND((CASE
							WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0
								THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho / (1 + ((PEDIDO_ITEM.ISOPvPedIte_PercSubsTributaria + PEDIDO_ITEM.ISOPvPedIte_PercentualFCPST)/100.0) ) / ((1+(PEDIDO_ITEM.ISOPvPedIte_PercentualIPI/100.0)) )
		  					ELSE PEDIDO_ITEM.ISOPvPedIte_PrecoAjustado -- desativado 16/07/2020 o valor já está na unidade comercial * PEDIDO_ITEM.ISOPvPedIte_Quantidade -- desativado 09/07/2020 pois o preco ajustado já está sem o frete ((((PEDIDO_ITEM.ISOPvPedIte_PrecoAjustado * PEDIDO_ITEM.ISOPvPedIte_Quantidade) - (((PEDIDO_ITEM.ISOPvPedIte_ValorUnitario * PEDIDO_ITEM.ISOPvPedIte_Quantidade) / TOTAL_PEDIDO.ISOPvPed_ValorTotalPedido) * PEDIDO.ISOPvPed_ValorFrete)) / PEDIDO_ITEM.ISOPvPedIte_Quantidade) )
		   				END )  / (1 + (ISOPvEstabTbV_PercDespFinancei / 100.00) ),6)
		   END
		END
	END AS ISOPvPedIte_PrecoCMLIntegracaoBO,
	-- performance1

	-- performance2
	ROUND (
	CASE
		WHEN COALESCE(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0) = 0
			THEN 0
		ELSE
		CASE
			-- cliente TEM desoneração e o pedido é empenho
			WHEN ICMS_FAST.SubTribICMSDocFis = 1 AND COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) > 0
				THEN ROUND(((((PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho / (1 - (ICMS_FAST.AliquotaICMS/100)) / (1 + (PEDIDO_ITEM.ISOPvPedIte_PercentualIPI / 100))))) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao),6)
			-- cliente TEM desoneração e o pedido NÃO é empenho
			WHEN ICMS_FAST.SubTribICMSDocFis = 1 AND COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) = 0
				THEN ROUND((PEDIDO_ITEM.ISOPvPedIte_PrecoAjustado / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao),6)
			-- cliente SEM desoneração
			ELSE ROUND((CASE
							WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0
								--Removido PEDIDO_ITEM.ISOPvPedIte_PercentualFCPST da fórmula pois não se aplica quando pedido de Empenho -- Zagoto/Edilon 26/08/21
								--THEN COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) / (1 + ((PEDIDO_ITEM.ISOPvPedIte_PercSubsTributaria + PEDIDO_ITEM.ISOPvPedIte_PercentualFCPST)/100.0) ) / ((1+(PEDIDO_ITEM.ISOPvPedIte_PercentualIPI/100.0)) )
								THEN COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) / (1 + ((PEDIDO_ITEM.ISOPvPedIte_PercSubsTributaria)/100.0) ) / ((1+(PEDIDO_ITEM.ISOPvPedIte_PercentualIPI/100.0)) )
							ELSE PEDIDO_ITEM.ISOPvPedIte_PrecoAjustado ---  desativado 09/07/2020 pois o preco ajustado já está sem o frete ((PEDIDO_ITEM.ISOPvPedIte_PrecoAjustado) - ((((PEDIDO_ITEM.ISOPvPedIte_PrecoAjustado * PEDIDO_ITEM.ISOPvPedIte_Quantidade) / TOTAL_PEDIDO.ISOPvPed_ValorTotalPedido) * PEDIDO.ISOPvPed_ValorFrete) / PEDIDO_ITEM.ISOPvPedIte_Quantidade))
						END ) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,6)
		END
	END / (1 + (ISOPvEstabTbV_PercDespFinancei / 100.00) ), 6) AS ISOPvPedIte_PrecoUNESTIntegracaoBO,
	-- performance2


	COALESCE(EMPENHO.ISOCttPedCon_NumeroEmp,'') AS ISOPvPedido_NumeroEmpenho,
	TOTAL_LINHAS_PEDIDO.ISOPvPedIte_TotalLinhas,

--	STUFF( (SELECT ' ' + ISOPvPedObs_Descricao
--		FROM ISOPVPEDOBSERVACAO OBSNF
--	    WHERE OBSNF.isoemp_codigo = pedido.isoemp_codigo
--		  and OBSNF.isopvped_codigo = pedido.isopvped_codigo
--		  and OBSNF.ISOPvPedObs_NF = 'S'
--		FOR XML PATH('')),1, 1, '') as CONCAT_OBS,

	CASE
		WHEN COALESCE(ISOPvPedido_CLISUFRAMA,'') > ' '
		THEN
			STUFF( (SELECT ' ' + ISOPvPedObs_Descricao
				FROM ISOPVPEDOBSERVACAO OBSNF
				WHERE OBSNF.isoemp_codigo = pedido.isoemp_codigo
				and OBSNF.isopvped_codigo = pedido.isopvped_codigo
				and OBSNF.ISOPvPedObs_NF = 'S'
			FOR XML PATH('')),1, 1, '') +
			'  SUFRAMA: ' + COALESCE(ISOPvPedido_CLISUFRAMA,'')
		ELSE
			STUFF( (SELECT ' ' + ISOPvPedObs_Descricao
				FROM ISOPVPEDOBSERVACAO OBSNF
				WHERE OBSNF.isoemp_codigo = pedido.isoemp_codigo
				and OBSNF.isopvped_codigo = pedido.isopvped_codigo
				and OBSNF.ISOPvPedObs_NF = 'S'
			FOR XML PATH('')),1, 1, '')
	END AS OBSERVACAO_NF,

	STUFF( (SELECT ' ' + ISOPvPedObs_Descricao
		FROM ISOPVPEDOBSERVACAO OBSPICK
	    WHERE OBSPICK.isoemp_codigo = pedido.isoemp_codigo
		  and OBSPICK.isopvped_codigo = pedido.isopvped_codigo
		  and OBSPICK.ISOPvPedObs_Pick = 'S'
		FOR XML PATH('')),1, 1, '') as OBSERVACAO_TRACKING

	-- INICIO SIMULACAO DE PREÇOS
	--(1 + (PEDIDO_ITEM.ISOPvPedIte_PercentualIPI / 100)) IPI,
	--(1 - (MATRIZ_ICMS.ISOPvMatICMS_AliquotaICMS/100)) ICMS,
	--PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho EMPENHO,
	--PEDIDO_ITEM.ISOPvPedIte_Quantidade QUANTIDADE,
	--FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao FATOR,
	--ROUND(ROUND(ROUND((PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho  / (1 - (MATRIZ_ICMS.ISOPvMatICMS_AliquotaICMS/100))) / (1 + (PEDIDO_ITEM.ISOPvPedIte_PercentualIPI / 100)) * PEDIDO_ITEM.ISOPvPedIte_Quantidade,2) * (1 + (PEDIDO_ITEM.ISOPvPedIte_PercentualIPI/100)),2) * (1 - (MATRIZ_ICMS.ISOPvMatICMS_AliquotaICMS/100)),2) SIMULACAO_PROTHEUS,
	--CASE
	--	WHEN MATRIZ_ICMS.ISOPvMatICMS_SubTribICMSDocFis = 1 AND COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) > 0
	--		THEN ROUND(((((PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho / (1 - (MATRIZ_ICMS.ISOPvMatICMS_AliquotaICMS/100)) / (1 + (PEDIDO_ITEM.ISOPvPedIte_PercentualIPI / 100))))) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao),6)
	--	WHEN MATRIZ_ICMS.ISOPvMatICMS_SubTribICMSDocFis = 1 AND COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) = 0
	--		THEN ROUND(((PEDIDO_ITEM.ISOPvPedIte_ValorTotalCalculoF - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade)) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao),6)
	--	ELSE ROUND(((CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0 THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho ELSE PEDIDO_ITEM.ISOPvPedIte_ValorUnitario END - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade) - (PEDIDO_ITEM.ISOPvPedIte_ValorIPI / PEDIDO_ITEM.ISOPvPedIte_Quantidade)) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao),6)
	--END * PEDIDO_ITEM.ISOPvPedIte_Quantidade AS SIMULADO_ISO,
	--PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho *	PEDIDO_ITEM.ISOPvPedIte_Quantidade RESULTADO_ISO
	-- TÉRMINO SIMULACAO DE PREÇOS
FROM
	PEDIDO -- CABECALHO DO PEDIDO
	INNER JOIN PEDIDO_ITEM ON -- ITEM DO PEDIDO
		PEDIDO.ISOEmp_Codigo = PEDIDO_ITEM.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = PEDIDO_ITEM.ISOPvPed_Codigo
	INNER JOIN TOTAL_LINHAS_PEDIDO ON -- TOTAL DE LINHAS DO PEDIDO
		PEDIDO.ISOEmp_Codigo = TOTAL_LINHAS_PEDIDO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = TOTAL_LINHAS_PEDIDO.ISOPvPed_Codigo
	INNER JOIN ATENDENTE_PEDIDO ON  -- ATENDENTE QUE CRIOU O PEDIDO
		PEDIDO.ISOPvPed_CodigoAtendente = ATENDENTE_PEDIDO.ISOEnt_Codigo
	INNER JOIN FATOR_CONVERSAO_PRODUTO ON -- UNIDADES DE MEDIDA DO ITEM DO PEDIDO
		PEDIDO_ITEM.ISOEmp_Codigo = FATOR_CONVERSAO_PRODUTO.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPrd_Codigo = FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_PrdCodigo AND
		PEDIDO_ITEM.ISOPvPedIte_UnidadeOrigem = FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_UndOrigem AND
		PEDIDO_ITEM.ISOPvPedIte_UnidadeDestino = FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_UndDestino AND
		FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_Flag = 'A' AND
		FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_Armazem = ''
	LEFT OUTER JOIN FATOR_CONVERSAO_CX ON -- UNIDADES DE MEDIDA DO ITEM DO PEDIDO
		PEDIDO_ITEM.ISOEmp_Codigo = FATOR_CONVERSAO_CX.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPrd_Codigo = FATOR_CONVERSAO_CX.ISOPrdUndFatC_PrdCodigo AND
		PEDIDO_ITEM.ISOPvPedIte_UnidadeOrigem = FATOR_CONVERSAO_CX.ISOPrdUndFatC_UndOrigem AND
		FATOR_CONVERSAO_CX.ISOPrdUndFatC_Flag = 'A' AND
		FATOR_CONVERSAO_CX.ISOPrdUndFatC_Armazem = ''
	INNER JOIN CLIENTE ON -- INFORMAÇÕES DO CLIENTE
		PEDIDO.ISOEmp_Codigo = CLIENTE.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_CliCodigo = CLIENTE.ISOEntCli_Codigo AND
		PEDIDO.ISOPvPed_Codigo = CLIENTE.ISOPvPed_Codigo
    INNER JOIN LOCAL_FATURAMENTO ON
		PEDIDO.ISOEmp_Codigo = LOCAL_FATURAMENTO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_EstadoOrigem = LOCAL_FATURAMENTO.ISOPvCD_Origem AND
        PEDIDO.ISOPvPed_EstadoDestino = LOCAL_FATURAMENTO.ISOPvCD_Destino AND
        PEDIDO.ISOPvPedOri_Codigo = LOCAL_FATURAMENTO.ISOPvCDOri_Pedido
    LEFT OUTER JOIN ARMAZEMPROTHEUS ON   --DE-PARA de Armazens no ISO
		PEDIDO.ISOEmp_Codigo  = ARMAZEMPROTHEUS.ISOEmp_Codigo AND
		ARMAZEMPROTHEUS.ISOEmpPrm_GrpUsuDet_Flag = 'A' AND
		ARMAZEMPROTHEUS.ISOEmpPrm_GrpUsuDet_Descricao = LOCAL_FATURAMENTO.ISOPvCDOri_Armazem
	INNER JOIN ESTABELECIMENTO_LX ON -- ESTABELECIMENTO DO PEDIDO
		PEDIDO.ISOEmp_Codigo = ESTABELECIMENTO_LX.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_EstadoOrigem = ESTABELECIMENTO_LX.ISOPvCD_Origem AND
        PEDIDO.ISOPvPed_EstadoDestino = ESTABELECIMENTO_LX.ISOPvCD_Destino
	INNER JOIN CUSTO_FINANCEIRO ON
		ESTABELECIMENTO_LX.ISOEmp_Codigo = CUSTO_FINANCEIRO.ISOEmp_Codigo AND
		ESTABELECIMENTO_LX.ISOPvCD_Estabelecimento = CUSTO_FINANCEIRO.ISOPvEstab_Codigo AND
		PEDIDO.ISOEmp_Codigo = CUSTO_FINANCEIRO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Pagamento = CUSTO_FINANCEIRO.ISOPvTV_Codigo

	LEFT OUTER JOIN EMPENHO ON -- EMPENHO DO PEDIDO
		PEDIDO.ISOEmp_Codigo = EMPENHO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = EMPENHO.ISOCttPedCon_PedidoCodigo

	LEFT OUTER JOIN TOTAL_PEDIDO_EMPENHO ON -- EMPENHO DO PEDIDO
		PEDIDO.ISOEmp_Codigo = TOTAL_PEDIDO_EMPENHO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = TOTAL_PEDIDO_EMPENHO.ISOPvPed_Codigo

	LEFT OUTER JOIN TOTAL_PEDIDO ON -- VALOR TOTAL DO PEDIDO
		PEDIDO.ISOEmp_Codigo = TOTAL_PEDIDO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = TOTAL_PEDIDO.ISOPvPed_Codigo

	LEFT OUTER JOIN TABELA_CLIENTE ON -- TABELA DO CLIENTE
		PEDIDO.ISOEmp_Codigo = TABELA_CLIENTE.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_CliCodigo = TABELA_CLIENTE.ISOEntCli_Codigo AND
		PEDIDO.ISOPvPed_Codigo = TABELA_CLIENTE.ISOPvPed_Codigo AND
		TABELA_CLIENTE.ISOEntClienteAttId = 99
	LEFT OUTER JOIN ORIGEM_PROTHEUS ON -- PESQUISA CÓDIGO PROTHEUS DO CLIENTE
		PEDIDO.ISOEmp_Codigo = ORIGEM_PROTHEUS.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_CliCodigo = ORIGEM_PROTHEUS.ISOEmpEnt_EntCodigo AND
		PEDIDO.ISOPvPed_Codigo = ORIGEM_PROTHEUS.ISOPvPed_Codigo AND
		ORIGEM_PROTHEUS.ISOEmpOri_Codigo = 13
	LEFT OUTER JOIN ORIGEM_LX ON  -- PESQUISA CÓDIGO LX DO CLIENTE
		PEDIDO.ISOEmp_Codigo = ORIGEM_LX.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_CliCodigo = ORIGEM_LX.ISOEmpEnt_EntCodigo AND
		PEDIDO.ISOPvPed_Codigo = ORIGEM_LX.ISOPvPed_Codigo AND
		ORIGEM_LX.ISOEmpOri_Codigo = 2
	LEFT OUTER JOIN CONDICAO_PAGAMENTO ON
		PEDIDO.ISOEmp_Codigo = CONDICAO_PAGAMENTO.ISOEmp_Codigo AND
		PEDIDO.ISOPeCndPgt_Codigo = CONDICAO_PAGAMENTO.ISOPeCndPgt_Codigo
	LEFT OUTER JOIN ANALISE_CREDITO ON  -- PESQUISA DA TAREFA DE LIBERAÇÃO DE CRÉDITO
		PEDIDO.ISOEmp_Codigo = ANALISE_CREDITO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = ANALISE_CREDITO.ISOPvPed_Codigo
	LEFT OUTER JOIN TIPO_FRETE ON -- INFORMACOES DE FRETE DO PEDIDO
		PEDIDO.ISOEmp_Codigo = TIPO_FRETE.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = TIPO_FRETE.ISOPvPed_Codigo
	LEFT OUTER JOIN TRANSPORTADORA ON -- INFORMACOES DA TRANSPORTADORA DO PEDIDO
		PEDIDO.ISOEmp_Codigo = TRANSPORTADORA.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = TRANSPORTADORA.ISOPvPed_Codigo
	LEFT OUTER JOIN	LINHA_PEDIDO_CLIENTE  ON  -- Observação do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = LINHA_PEDIDO_CLIENTE.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = LINHA_PEDIDO_CLIENTE.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = LINHA_PEDIDO_CLIENTE.ISOPvPedIte_Codigo

	LEFT OUTER JOIN	LINHA_ORDEM_COMPRA ON  -- Observação do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = LINHA_ORDEM_COMPRA.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = LINHA_ORDEM_COMPRA.ISOPvPed_Codigo AND
	    PEDIDO_ITEM.ISOPvPedIte_Codigo = LINHA_ORDEM_COMPRA.ITEM_PEDIDO

	LEFT OUTER JOIN	OC_DO_CLIENTE ON  -- Observação do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = OC_DO_CLIENTE.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = OC_DO_CLIENTE.ISOPvPed_Codigo AND
	    PEDIDO_ITEM.ISOPvPedIte_Codigo = OC_DO_CLIENTE.ISOPvPedIte_Codigo

	LEFT OUTER JOIN	LOTE1 ON  -- lote 1 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = LOTE1.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = LOTE1.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = LOTE1.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	QTD1 ON  -- qtde 1 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = QTD1.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = QTD1.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = QTD1.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	LOTE2 ON  -- lote 2 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = LOTE2.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = LOTE2.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = LOTE2.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	QTD2 ON  -- qtde 2 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = QTD2.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = QTD2.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = QTD2.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	LOTE3 ON  -- lote 3 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = LOTE3.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = LOTE3.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = LOTE3.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	QTD3 ON  -- qtde 3 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = QTD3.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = QTD3.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = QTD3.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	LOTE4 ON  -- lote 4 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = LOTE4.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = LOTE4.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = LOTE4.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	QTD4 ON  -- qtde 4 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = QTD4.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = QTD4.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = QTD4.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	LOTE5 ON  -- lote 5 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = LOTE5.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = LOTE5.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = LOTE5.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	QTD5 ON  -- qtde 5 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = QTD5.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = QTD5.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = QTD5.ISOPvPedIte_Codigo

	LEFT OUTER JOIN NATUREZA_OPERACAO ON
		PEDIDO.ISOEmp_Codigo = NATUREZA_OPERACAO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPedTip_Codigo = NATUREZA_OPERACAO.ISOPvPedTip_Codigo

	LEFT OUTER JOIN	CLIENTEJUR ON						  -- Cliente Pessoa JURIDICA- Segmento
		PEDIDO.ISOEmp_Codigo = CLIENTEJUR.ISOEntOrg_EmpCodigo AND
		PEDIDO.ISOPvPed_CliCodigo = CLIENTEJUR.ISOEntOrg_codigo  AND
		PEDIDO.ISOPvPed_Codigo = CLIENTEJUR.ISOPvPed_Codigo

	LEFT OUTER JOIN	CLIENTEFIS ON						  -- Cliente Pessoa JURIDICA- Segmento
		PEDIDO.ISOEmp_Codigo = CLIENTEFIS.ISOEntPes_EmpCodigo AND
		PEDIDO.ISOPvPed_CliCodigo = CLIENTEFIS.ISOEntPes_Codigo  AND
		PEDIDO.ISOPvPed_Codigo = CLIENTEFIS.ISOPvPed_Codigo

	LEFT OUTER JOIN	CLISUFRAMA ON						  -- Cliente Exige CX Fechada - CLIENTE
		PEDIDO.ISOEmp_Codigo = CLISUFRAMA.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_CliCodigo = CLISUFRAMA.ISOEntCli_Codigo AND
		PEDIDO.ISOPvPed_Codigo = CLISUFRAMA.ISOPvPed_Codigo AND
		CLISUFRAMA.ISOEntClienteAttId = 8
	LEFT OUTER JOIN	CLICXFEC ON						  -- Cliente Exige CX Fechada - CLIENTE    2=SIM  3=NAO
		PEDIDO.ISOEmp_Codigo = CLICXFEC.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_CliCodigo = CLICXFEC.ISOEntCli_Codigo AND
		PEDIDO.ISOPvPed_Codigo = CLICXFEC.ISOPvPed_Codigo AND
		CLICXFEC.ISOEntClienteAttId = 2105
	LEFT OUTER JOIN	PEDCXFEC ON						  -- Cliente Exige CX Fechada - PEDIDO
		PEDIDO.ISOEmp_Codigo = PEDCXFEC.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = PEDCXFEC.ISOPvPed_Codigo
	LEFT OUTER JOIN	CLIFATPARC ON					  -- Cliente Aceita Faturamento Parcial - CLIENTE
		PEDIDO.ISOEmp_Codigo = CLIFATPARC.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_CliCodigo = CLIFATPARC.ISOEntCli_Codigo AND
		PEDIDO.ISOPvPed_Codigo = CLIFATPARC.ISOPvPed_Codigo AND
		CLIFATPARC.ISOEntClienteAttId = 2106
	LEFT OUTER JOIN	PEDFATPARC ON					  -- Cliente Aceita Faturamento Parcial - PEDIDO
		PEDIDO.ISOEmp_Codigo = PEDFATPARC.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = PEDFATPARC.ISOPvPed_Codigo
	LEFT OUTER JOIN	CLILOTUNI ON					  -- Cliente Exige Lote unico - CLIENTE
		PEDIDO.ISOEmp_Codigo = CLILOTUNI.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_CliCodigo = CLILOTUNI.ISOEntCli_Codigo AND
		PEDIDO.ISOPvPed_Codigo = CLILOTUNI.ISOPvPed_Codigo
	LEFT OUTER JOIN	PEDLOTUNI ON					  -- Cliente Exige Lote Unico - PEDIDO
		PEDIDO.ISOEmp_Codigo = PEDLOTUNI.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = PEDLOTUNI.ISOPvPed_Codigo
	LEFT OUTER JOIN	CLIVCTPRX ON					  -- Cliente Exige Lote unico - CLIENTE
		PEDIDO.ISOEmp_Codigo = CLIVCTPRX.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_CliCodigo = CLIVCTPRX.ISOEntCli_Codigo AND
		PEDIDO.ISOPvPed_Codigo = CLIVCTPRX.ISOPvPed_Codigo
	LEFT OUTER JOIN	CLIMESVCTPRX ON					  -- Cliente Exige Lote unico - CLIENTE
		PEDIDO.ISOEmp_Codigo = CLIMESVCTPRX.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_CliCodigo = CLIMESVCTPRX.ISOEntCli_Codigo AND
		PEDIDO.ISOPvPed_Codigo = CLIMESVCTPRX.ISOPvPed_Codigo
	LEFT OUTER JOIN	PEDVCTPRX ON					  -- Cliente Exige Vcto Proximo
		PEDIDO.ISOEmp_Codigo = PEDVCTPRX.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = PEDVCTPRX.ISOPvPed_Codigo
	LEFT OUTER JOIN	CLISIMPREMCOD ON						  -- Cod. Cliente Simples Remessa - CLIENTE
		PEDIDO.ISOEmp_Codigo = CLISIMPREMCOD.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_CliCodigo = CLISIMPREMCOD.ISOEntCli_Codigo AND
		PEDIDO.ISOPvPed_Codigo = CLISIMPREMCOD.ISOPvPed_Codigo AND
		CLISIMPREMCOD.ISOEntClienteAttId = 2107
	LEFT OUTER JOIN	PEDSIMPREMCOD ON				  -- Cod. Cliente Simples Remessa - PEDIDO
		PEDIDO.ISOEmp_Codigo = PEDSIMPREMCOD.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = PEDSIMPREMCOD.ISOPvPed_Codigo
	LEFT OUTER JOIN	CLISIMPREMLOJ ON						  -- Cod. Cliente Simples Remessa - CLIENTE
		PEDIDO.ISOEmp_Codigo = CLISIMPREMLOJ.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_CliCodigo = CLISIMPREMLOJ.ISOEntCli_Codigo AND
		PEDIDO.ISOPvPed_Codigo = CLISIMPREMLOJ.ISOPvPed_Codigo AND
		CLISIMPREMLOJ.ISOEntClienteAttId = 2108
	--LEFT OUTER JOIN	PEDSIMPREMLOJ ON                  -- Cod. LOJA Cliente Simples Remessa
	--	PEDIDO.ISOEmp_Codigo = PEDSIMPREMLOJ.ISOEmp_Codigo AND
	--	PEDIDO.ISOPvPed_Codigo = PEDSIMPREMLOJ.ISOPvPed_Codigo
	LEFT OUTER JOIN	CLIPRIORIDADE ON						  -- campo PRIORIDADE do CLIENTE
		PEDIDO.ISOEmp_Codigo = CLIPRIORIDADE.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_CliCodigo = CLIPRIORIDADE.ISOEntCli_Codigo AND
		PEDIDO.ISOPvPed_Codigo = CLIPRIORIDADE.ISOPvPed_Codigo AND
		CLIPRIORIDADE.ISOEntClienteAttId = 2109
	LEFT OUTER JOIN	CLIDIASALOCFUT ON						  -- campo DIAS ALOCAÇÃO FUTURA do CLIENTE
		PEDIDO.ISOEmp_Codigo = CLIDIASALOCFUT.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_CliCodigo = CLIDIASALOCFUT.ISOEntCli_Codigo AND
		PEDIDO.ISOPvPed_Codigo = CLIDIASALOCFUT.ISOPvPed_Codigo AND
		CLIDIASALOCFUT.ISOEntClienteAttId = 2110
	--LEFT OUTER JOIN MATRIZ_ICMS ON
	--	PEDIDO_ITEM.ISOEmp_Codigo = MATRIZ_ICMS.ISOEmp_Codigo AND
	--	PEDIDO_ITEM.ISOPvPed_Codigo = MATRIZ_ICMS.ISOPvPed_Codigo AND
	--	PEDIDO_ITEM.ISOPvPedIte_Codigo = MATRIZ_ICMS.ISOPvPedIte_Codigo

	-- 11/06/2021 -- zagoto, inclusão de function para performance de consulta de matriz de ICMS
	OUTER APPLY MacroConsultaMatrizICMS_FAST(PEDIDO_ITEM.ISOEmp_Codigo, PEDIDO_ITEM.ISOPvPed_Codigo, PEDIDO_ITEM.ISOPvPedIte_Codigo) AS ICMS_FAST
WHERE
	PEDIDO.ISOEmp_Codigo = 11 --AND
	--PEDIDO_ITEM.ISOPvPedIteSit_Codigo = 1
	--AND PEDIDO.ISOPvPed_Codigo >= 7042706

	--AND PEDIDO.ISOPvPedSit_Codigo in (1, 30, 35)     --- ABERTO /  PEDIDO LIBERADO DE CREDITO

	-- Limite de pedidos com clientes retidos em crédito
	AND PEDIDO.ISOPvPed_Codigo NOT IN (select isopvped_codigo from [MACRO_ANALISE_CREDITO] where ISOEmp_Codigo = 11)

	-- Limite de pedidos com valores acima de XXX reais
	AND PEDIDO.ISOPvPed_Codigo NOT IN (select isopvped_codigo from VWFlowPedidoValorMax where ISOEmp_Codigo = 11)

	-- inativado para testes
	-- remover comentário da linha abaixo em produção
	--AND LOCAL_FATURAMENTO.ISOPvCDOri_Armazem in ('ST')    --08/07/2021 faturar só SP (filial 001018)
	AND ESTABELECIMENTO_LX.ISOPvCD_Estabelecimento in (1, 2, 9, 12, 13, 28, 30, 35)    --16/09/2021 alterado pelo estabelecimento para considerar pedidos por exemplo AVE

	--PEDIDO.ISOPvPed_Codigo between 8740390 and 8740890 -- pedidos indaial
	--PEDIDO.ISOPvPed_Codigo between 8664441 AND 8739451 AND -- pedidos do simulador
	--AND (
	--	-- ANALISE DE CREDITO / INATIVIDADE DO CLIENTE / TITULOS EM ABERTO
	--	PEDIDO.ISOPvPed_Codigo NOT IN (select isopvped_codigo from [MACRO_ANALISE_CREDITO] where ISOEmp_Codigo = 11)-- and SITUACAO <> '')
	--	--PEDIDO.ISOPvPed_Codigo NOT IN (select isopvped_codigo from [MACRO_ANALISE_CREDITO] where ISOEmp_Codigo = 11 and ISOPvPedSit_Codigo = 1)
	--	--PEDIDO.ISOPvPed_Codigo NOT IN (SELECT ISOPvPed_Codigo FROM GATILHO_C21_ANALISE_LIMITE_CREDITO WHERE ISOEmp_Codigo = 11 AND  ((LIMITE_CREDITO - TOTAL_CONTAS_RECEBER - PED_EM_ABERTO) < TOTAL_PEDIDO) OR (DATEDIFF(DD,DATA_ULTIMA_COMPRA,GETDATE()) > 60) OR (DATEDIFF(DD,DATA_TITULO,GETDATE()) > 1))
	--	--OR
	--	-- ANALISE PRAZO MEDIO
	--	--PEDIDO.ISOPvPed_Codigo NOT IN (SELECT ISOPvPed_Codigo FROM GATILHO_C22_ANALISE_PRAZO_MEDIO_CLIENTE WITH (NOLOCK) WHERE (1=1) AND PRAZO_MEDIO_CP > PRAZO_MEDIO_CLIENTE)
	--);


-- dbo.VWFlowISOPedidoItens source

CREATE VIEW [dbo].[VWFlowISOPedidoItens]
as
SELECT  ISOEmp_Codigo, ISOPvPed_Codigo, ISOPvPed_CliCodigo, CLIENTE_BU,
	    ISOPvPed_CliCXFec, ISOPvPed_CliFatParc, ISOPvPed_CliLotUni, ISOPvPed_CliVctPrx, IsoPvPed_CliMesVctPrx, ISOPvPed_CliTG, ISOPvPed_LOJTG,
		ISOPVPed_CLIPRIORIDADE,ISOPvPed_CLIDIASALOCFUT,
		ISOPvPed_DtaPedido, ISOPvPed_HoraPedido, ISOPeCntPgt_Forma, ISOPvPed_Pagamento, ISOPvPed_DtaPrevFat, --ISOPvPed_DtaSolEntrega,
		ISOPvPed_CodEndEntrega, ISOPvPedOri_Codigo, IsoPVPed_LICITA, IsoPVPed_PORTAL, IsoPVPed_IDPORT,
        ISOPvPedTip_Codigo, ISOPvPed_CodEndCobranca, ISOPvPed_ValorTotalPedido,
        ISOPvPedIte_Codigo, ISOPrd_Codigo, Item_Quantidade, ISOPvPedIte_DataPromessa, ISOPvPedIte_DtaSolEntrega,
        ISOPvPedIte_UnidadeOrigem, Item_QTD_UnidadeDestino, ISOPrdUndFatC_FatorConversao, ISOPrdUndFatC_FatorConversaoCX, ISOPvPedIte_Qtd_UM_estoque, ISOPvPedIte_Vlr_Total_Unitario, ISOPvPedIte_Vlr_Total_Unitario_EST, ISOPvPedIteSit_Codigo,
        ISOPvPedIte_AgendamentoData, ISOPvPedIte_AgendamentoHoraIni, ISOPvPedIte_AgendamentoHoraFin, ISOPvPedIte_ValorEmpenho, ISOPvPed_ValorFrete, ISOEmpEnt_CliCod_ERP, ISOEmpEnt_Ori_LX,
        ISOPvPedIte_Armazem, ISOEntCli_Operacao, ISOPvCD_Estabelecimento_LX, ISOPvPed_CodigoAtendente, ISOEnt_NomeAtendente, ISOWFTrf_DataLiberacaoCredito, ISOWFTrf_HoraLiberacaoCredito,
        ISOWFTrf_CodigoAtendente, ISOMoe_Codigo, ISOPvPedIte_ValorIPI, ISOPvPedIte_VlrSubsTrib, ISOPvPedIte_ValorICMS, ISOPvPedIte_ValorPIS, ISOPvPedIte_ValorCofins, ISOPVPedIte_ValorFCPST, ISOPvPedIte_ValorFCP,
        ISOPvPedido_CodigoTRP, ISOPvPedidoTipoFrete, ISOEmpEnt_Tabela_Preco, ISOPvPedIte_PrecoLista, ISOPVPed_OrdCompra, ISOPvPedIte_NrOrdemCompra, ISOPvPedIte_LinhaOrdemCompra,
        ISOPvPed_Operacao, ISOPvPedIte_PrecoCMLIntegracaoBO, ISOPvPedIte_PrecoUNESTIntegracaoBO, ISOPvPedido_NumeroEmpenho, ISOPvPedIte_TotalLinhas,
        ISOPvPedIte_Lote1, ISOPvPedIte_QtdeLote1, ISOPvPedIte_Lote2, ISOPvPedIte_QtdeLote2, ISOPvPedIte_Lote3, ISOPvPedIte_QtdeLote3,
        ISOPvPedIte_Lote4, ISOPvPedIte_QtdeLote4, ISOPvPedIte_Lote5, ISOPvPedIte_QtdeLote5,
        Vlr_unit_LIQUIDO,
        OBSERVACAO_NF, OBSERVACAO_TRACKING
FROM    VWFlowIsoPedido
where
	ISOEmp_Codigo = 11
	AND	ISOPvPed_Codigo NOT IN (select isopvped_codigo from [MACRO_ANALISE_CREDITO] where ISOEmp_Codigo = 11);


-- dbo.VWFlowISOPedido_BKP2109 source

--Segue o DE PARA das peguntas do cliente e pedido, entre produção e homologação:

--Perguntas Pedido
--Pergunta                            Homologação   Produção
--Cliente exige Caixa fechada?              111      110
--Cliente aceita faturamento parcial?       112      111
--Cliente exige lote único?                 113      112
--Cliente exige vencimento próximo?         114      113
--Cód Cliente+Loja remessa (Venda a Ordem)  115      114

--Perguntas Cliente
--Pergunta                            Homologação  Produção
--Cliente exige caixa fechada?           2106       2105
--Cliente aceita faturamento parcial?    2107       2106
--Cliente Protheus Remessa (venda ordem) 2108       2107
--Loja Protheus Remessa (venda ordem)    2109       2108
--Prioridade de Faturamento              2112       2109
--Dias de alocação futura                2113       2110


--  SELECT * FROM VWFlowISOPedido

CREATE VIEW [dbo].[VWFlowISOPedido_BKP2109]
as
with
	PEDIDO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPed_CliCodigo,
			ISOPvPed_EstadoOrigem,
			ISOPvPed_EstadoDestino,
			ISOPvPed_CodigoAtendente,
			ISOPvPedSit_Codigo,
			ISOPvPedOri_Codigo,
			ISOPvPed_CodEndCobranca,
			ISOPvPed_ValorTotalPedido,
			ISOPeCndPgt_Codigo,
			ISOPvPed_ValorFrete,
			ISOPvPedTip_Codigo,
			ISOPvPed_Pagamento, -- Condição de pagamento
			ISOPVPed_OrdCompra,
			ISOPvPed_DtaSolEntrega,
			ISOPvPed_CodEndEntrega,
			ISOPvPed_DtaPedido,  -- Data do pedido
			ISOPvPed_HoraPedido -- Hora do pedido
		FROM ISOPVPEDIDO WITH (nOLOCK)
		WHERE
			ISOEmp_Codigo = 11
			AND ISOPvPedSit_Codigo in (1, 30, 35)
			--and ISOPvPedSit_Codigo = 999
			--AND ISOPvPed_Codigo IN (7960409)
			--and ISOPvPed_Codigo NOT IN (select isopvped_codigo from [MACRO_ANALISE_CREDITO] where ISOEmp_Codigo = 11)
			),
	PEDIDO_ITEM AS (
		SELECT
			ISOPVPEDITEM.ISOEmp_Codigo,
			ISOPVPEDITEM.ISOPvPed_Codigo,
			ISOPVPEDITEM.ISOPvPedIte_Codigo,
			ISOPVPEDITEM.ISOPrd_Codigo,
			ISOPVPEDITEM.ISOPvPedIte_Quantidade,
			ISOPVPEDITEM.ISOPvPedIte_DtaSolEntrega,
			ISOPVPEDITEM.ISOPvPedIte_UnidadeOrigem,
			ISOPVPEDITEM.ISOPvPedIte_UnidadeDestino,
			ISOPVPEDITEM.ISOPvPedIte_ValorUnitario,
			ISOPVPEDITEM.ISOPvPedIteSit_Codigo,
			ISOPVPEDITEM.ISOPvPedIte_AgendamentoData,
			ISOPVPEDITEM.ISOPvPedIte_AgendamentoHoraIni,
			ISOPVPEDITEM.ISOPvPedIte_AgendamentoHoraFin,
			ISOPVPEDITEM.ISOPvPedIte_ValorEmpenho,
			ISOPVPEDITEM.ISOPvPedIte_PrecoLista,
			ISOPVPEDITEM.ISOPvPedIte_ValorIPI,
			ISOPVPEDITEM.ISOPvPedIte_VlrSubsTributaria,
			ISOPVPEDITEM.ISOPvPedIte_ValorICMS,
			ISOPVPEDITEM.ISOPvPedIte_ValorPIS,
			ISOPVPEDITEM.ISOPvPedIte_ValorCofins,
			ISOPVPEDITEM.ISOPVPedIte_ValorFCPST,
			ISOPVPEDITEM.ISOPvPedIte_ValorFCP,
			ISOPVPEDITEM.ISOPvPedIte_ValorTotalCalculoF,
			ISOPVPEDITEM.ISOPvPedIte_DataEntregaItem,
			ISOPVPEDITEM.ISOPvPedIte_PercentualIPI,
			ISOPVPEDITEM.ISOPvPedIte_PercSubsTributaria,
			ISOPVPEDITEM.ISOPvPedIte_PercentualFCPST,
			ISOPVPEDITEM.ISOPvPedIte_PrecoAjustado,
			ISOPVPEDITEM.ISOPvPedIte_PrecoAjustadoTotal
		FROM ISOPVPEDITEM INNER JOIN PEDIDO
			ON PEDIDO.ISOEmp_Codigo = ISOPVPEDITEM.ISOEmp_Codigo
			AND PEDIDO.ISOPvPed_Codigo = ISOPVPEDITEM.ISOPvPed_Codigo
		WHERE
			ISOPVPEDITEM.ISOEmp_Codigo = 11
			AND ISOPVPEDITEM.ISOPvPedIteSit_Codigo = 1),
	TOTAL_LINHAS_PEDIDO AS (
		SELECT
			ISOPVPEDITEM.ISOEmp_Codigo,
			ISOPVPEDITEM.ISOPvPed_Codigo,
			COUNT(*) AS ISOPvPedIte_TotalLinhas
		FROM ISOPVPEDITEM INNER JOIN PEDIDO
			ON PEDIDO.ISOEmp_Codigo = ISOPVPEDITEM.ISOEmp_Codigo
			AND PEDIDO.ISOPvPed_Codigo = ISOPVPEDITEM.ISOPvPed_Codigo
		WHERE
			ISOPVPEDITEM.ISOEmp_Codigo = 11
			AND ISOPVPEDITEM.ISOPvPedIteSit_Codigo = 1
		GROUP BY
			ISOPVPEDITEM.ISOEmp_Codigo,
			ISOPVPEDITEM.ISOPvPed_Codigo),
	TOTAL_PEDIDO_EMPENHO AS (
		SELECT
			ISOPVPEDITEM.ISOEmp_Codigo,
			ISOPVPEDITEM.ISOPvPed_Codigo,
			SUM(ISOPVPEDITEM.ISOPvPedIte_Quantidade * ISOPVPEDITEM.ISOPvPedIte_ValorEmpenho) AS ISOPvPed_ValorTotalPedido
		FROM         ISOPVPEDITEM INNER JOIN ISOPVPEDIDO
			ON ISOPVPEDIDO.ISOEmp_Codigo = ISOPVPEDITEM.ISOEmp_Codigo
			AND ISOPVPEDIDO.ISOPvPed_Codigo = ISOPVPEDITEM.ISOPvPed_Codigo
			AND ISOPVPEDIDO.ISOPvPedSit_Codigo in (1, 30, 35)
		WHERE     (ISOPVPEDITEM.ISOEmp_Codigo = 11) AND (ISOPVPEDITEM.ISOPvPedIteSit_Codigo = 1)
		GROUP BY ISOPVPEDITEM.ISOEmp_Codigo, ISOPVPEDITEM.ISOPvPed_Codigo),
	TOTAL_PEDIDO AS (
		SELECT
			ISOPVPEDITEM.ISOEmp_Codigo,
			ISOPVPEDITEM.ISOPvPed_Codigo,
			SUM(ISOPVPEDITEM.ISOPvPedIte_Quantidade * ISOPVPEDITEM.ISOPvPedIte_PrecoAjustado) AS ISOPvPed_ValorTotalPedido
		FROM         ISOPVPEDITEM INNER JOIN ISOPVPEDIDO
			ON ISOPVPEDIDO.ISOEmp_Codigo = ISOPVPEDITEM.ISOEmp_Codigo
			AND ISOPVPEDIDO.ISOPvPed_Codigo = ISOPVPEDITEM.ISOPvPed_Codigo
			AND ISOPVPEDIDO.ISOPvPedSit_Codigo in (1, 30, 35)
		WHERE     (ISOPVPEDITEM.ISOEmp_Codigo = 11) AND (ISOPVPEDITEM.ISOPvPedIteSit_Codigo = 1) --and ISOPvPed_Codigo >= 8741752
		GROUP BY ISOPVPEDITEM.ISOEmp_Codigo, ISOPVPEDITEM.ISOPvPed_Codigo),
	ATENDENTE_PEDIDO AS (
		SELECT
			ISOEnt_Codigo,
			ISOEnt_Nome
		FROM ISOENTIDADE INNER JOIN ISOENTUSUARIO
			ON ISOENTIDADE.ISOEnt_Codigo = ISOENTUSUARIO.ISOEntUsu_Codigo),
	FATOR_CONVERSAO_PRODUTO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPrdUndFatC_PrdCodigo,
			ISOPrdUndFatC_UndOrigem,
			ISOPrdUndFatC_UndDestino,
			-- criado regra de divisão quando a unidade de medida for "M"  --  31/08/2021 zagoto,edilon,cris
			-- fizemos isso para voltar o numero inteiro que está na view do EAN
			-- Exemplo: produto 198988 - fator_conv = 50   (veio do ISO 0,02703 e precisa ir para o Protheus 50)
			case
				when ISOPrdUndFatC_UndDestino = 'M' then round(1 / ISOPrdUndFatC_FatorConversao ,0)
				else ISOPrdUndFatC_FatorConversao
			end ISOPrdUndFatC_FatorConversao,
			--ISOPrdUndFatC_FatorConversao,
			ISOPrdUndFatC_Flag,
			ISOPrdUndFatC_Armazem
		FROM ISOPRDUNDFATORCONVERSAO WITH (NOLOCK)
		WHERE ISOEmp_Codigo = 11 and ISOPrdUndFatC_Flag = 'A' AND ISOPrdUndFatC_Armazem = ''), -- 02/12/2020 Zagoto - incluido critério de flag PERFORMANCE
	FATOR_CONVERSAO_CX AS (
		SELECT
			ISOEmp_Codigo,
			ISOPrdUndFatC_PrdCodigo,
			ISOPrdUndFatC_UndOrigem,
			ISOPrdUndFatC_UndDestino,
			-- criado regra de divisão quando a unidade de medida for "M"  --  22/07/2020 zagoto,edilon,cris
			--case
			--	when ISOPrdUndFatC_UndDestino = 'M' then 1 / ISOPrdUndFatC_FatorConversao
			--	else ISOPrdUndFatC_FatorConversao
			--end ISOPrdUndFatC_FatorConversaoCX,
			ISOPrdUndFatC_FatorConversao as ISOPrdUndFatC_FatorConversaoCX,
			ISOPrdUndFatC_Flag,
			ISOPrdUndFatC_Armazem
		FROM ISOPRDUNDFATORCONVERSAO WITH (NOLOCK)
		WHERE ISOEmp_Codigo = 11 and ISOPrdUndFatC_Flag = 'A' AND ISOPrdUndFatC_Armazem = '' AND ISOPrdUndFatC_UndDestino = 'CX'), -- 02/12/2020 Zagoto - incluido critério de flag PERFORMANCE
	CLIENTE AS (
		SELECT	DISTINCT
			ISOENTCLIENTE.ISOEmp_Codigo,
			ISOENTCLIENTE.ISOEntCli_Codigo,
			ISOENTCLIENTE.ISOEntCli_Operacao
		FROM ISOENTCLIENTE INNER JOIN ISOPVPEDIDO
			ON ISOENTCLIENTE.ISOEmp_Codigo = ISOPVPEDIDO.ISOEmp_Codigo
				AND ISOENTCLIENTE.ISOEntCli_Codigo = ISOPVPEDIDO.ISOPvPed_CliCodigo
				AND ISOPVPEDIDO.ISOEmp_Codigo= 11
				AND ISOPVPEDIDO.ISOPvPedSit_Codigo in (1, 30, 35)),
	LOCAL_FATURAMENTO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvCD_Origem,
			ISOPvCD_Destino,
			ISOPvCDOri_Pedido,
			ISOPvCDOri_Armazem
		FROM ISOPVCDORIGEM WITH (NOLOCK)),
	ARMAZEMPROTHEUS as (
		SELECT
			ISOEmp_Codigo,
			ISOEmpPrm_Codigo,
			ISOEmpPrm_GrpUsuDet_Descricao,
			ISOEmpPrm_GrpUsuDet_Valor,
			ISOEmpPrm_GrpUsuDet_Flag
		FROM ISOEMPPRM_GRPUSUDETALHE WITH (NOLOCK)
		WHERE
			ISOEmp_Codigo = 11
			AND ISOEmpPrm_Codigo = 'DE_PARA_ARMAZEM_PROTHEUS'
			AND ISOEmpPrm_GrpUsu_Codigo = 1),
	EMPENHO AS (
		SELECT
			ISOCTPEDCONTRATO.ISOEmp_Codigo,
			ISOCTPEDCONTRATO.ISOCttPedCon_PedidoCodigo,
			ISOCTPEDCONTRATO.ISOCttPedCon_NumeroEmp
		FROM ISOCTPEDCONTRATO WITH (nOLOCK)
		INNER JOIN ISOPVPEDIDO
			ON ISOPVPEDIDO.ISOEmp_Codigo = ISOCTPEDCONTRATO.ISOEmp_Codigo
			AND ISOPVPEDIDO.ISOPvPed_Codigo = ISOCTPEDCONTRATO.ISOCttPedCon_PedidoCodigo
			AND ISOPVPEDIDO.ISOEmp_Codigo = 11
			AND ISOPVPEDIDO.ISOPvPedSit_Codigo in (1, 30, 35)),
	TABELA_CLIENTE AS (
		SELECT	DISTINCT
			ISOENTCLIENTEATTVALUES.ISOEmp_Codigo,
			ISOENTCLIENTEATTVALUES.ISOEntCli_Codigo,
			ISOENTCLIENTEATTVALUES.ISOEntClienteAttId,
			ISOENTCLIENTEATTVALUES.ISOEntClienteAttOtherValue
		FROM ISOENTCLIENTEATTVALUES INNER JOIN ISOPVPEDIDO
			ON ISOENTCLIENTEATTVALUES.ISOEmp_Codigo = ISOPVPEDIDO.ISOEmp_Codigo
				AND ISOENTCLIENTEATTVALUES.ISOEntCli_Codigo = ISOPVPEDIDO.ISOPvPed_CliCodigo
				AND ISOPVPEDIDO.ISOEmp_Codigo= 11
				AND ISOPVPEDIDO.ISOPvPedSit_Codigo in (1, 30, 35)
		WHERE
			ISOENTCLIENTEATTVALUES.ISOEmp_Codigo = 11 AND
			ISOENTCLIENTEATTVALUES.ISOEntClienteAttId = 99),
	ESTABELECIMENTO_LX AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvCD_Origem,
			ISOPvCD_Destino,
			ISOPvCD_Estabelecimento
		FROM ISOPVCD WITH (NOLOCK)
		WHERE
			ISOEmp_Codigo = 11),
	ORIGEM_PROTHEUS AS (
		SELECT
			ISOEMPENT_ORIGEM.ISOEmp_Codigo,
			ISOEMPENT_ORIGEM.ISOEmpEnt_EntCodigo,
			ISOEMPENT_ORIGEM.ISOEmpOri_Codigo,
			ISOEMPENT_ORIGEM.ISOEmpEnt_Ori_Codigo
		FROM ISOEMPENT_ORIGEM WITH (nOLOCK)
		INNER JOIN PEDIDO
			ON PEDIDO.ISOEmp_Codigo = ISOEMPENT_ORIGEM.ISOEmp_Codigo
				AND PEDIDO.ISOPvPed_CliCodigo = ISOEMPENT_ORIGEM.ISOEmpEnt_EntCodigo
				AND PEDIDO.ISOEmp_Codigo= 11
		WHERE
			ISOEMPENT_ORIGEM.ISOEmp_Codigo = 11 AND
			ISOEMPENT_ORIGEM.ISOEmpOri_Codigo = 13),
	ORIGEM_LX AS (
		SELECT	DISTINCT
			ISOEMPENT_ORIGEM.ISOEmp_Codigo,
			ISOEMPENT_ORIGEM.ISOEmpEnt_EntCodigo,
			ISOEMPENT_ORIGEM.ISOEmpOri_Codigo,
			ISOEMPENT_ORIGEM.ISOEmpEnt_Ori_Codigo
		FROM ISOEMPENT_ORIGEM INNER JOIN PEDIDO
			ON PEDIDO.ISOEmp_Codigo = ISOEMPENT_ORIGEM.ISOEmp_Codigo
				AND PEDIDO.ISOPvPed_CliCodigo = ISOEMPENT_ORIGEM.ISOEmpEnt_EntCodigo
				AND PEDIDO.ISOEmp_Codigo= 11
		WHERE
			ISOEMPENT_ORIGEM.ISOEmp_Codigo = 11 AND
			ISOEMPENT_ORIGEM.ISOEmpOri_Codigo = 2),
	CONDICAO_PAGAMENTO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPeCndPgt_Codigo,
			ISOPeCntPgt_Forma
		FROM ISOPECNDPAGAMENTO WITH (NOLOCK)
		WHERE
			ISOEmp_Codigo = 11),
	CUSTO_FINANCEIRO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvTV_Codigo,
			ISOPvEstab_Codigo,
			ISOPvEstabTbV_PercDespFinancei
		FROM ISOPvEstab_TblVenda
		WHERE
			ISOEmp_Codigo = 11),
	ANALISE_CREDITO AS (
		SELECT
			ISOWFTRF_PEDIDO.ISOEmp_Codigo,
			ISOWFTRF_PEDIDO.ISOPvPed_Codigo,
		    CASE WHEN ISOWFTrf_RspExe_RspCodigo IS NULL THEN '' ELSE CONVERT(VARCHAR(8), ISOWFTrf_DataSolucao, 112) END AS ISOWFTrf_DataLiberacaoCredito,  -- Data em que a tarefa de liberação de crédito foi executada
			CASE WHEN ISOWFTrf_RspExe_RspCodigo IS NULL THEN '' ELSE CONVERT(VARCHAR(8), ISOWFTrf_DataSolucao, 108) END AS ISOWFTrf_HoraLiberacaoCredito,
			CASE WHEN ISOWFTrf_RspExe_RspCodigo IS NULL THEN '' ELSE COALESCE(CAST(ISOWFTrf_RspExe_RspCodigo AS VARCHAR(10)),'')+'-'+COALESCE(USUARIO_CEDITO.ISOEnt_Nome,'') END AS ISOWFTrf_CodigoAtendente
		FROM ISOWFTRF_PEDIDO INNER JOIN ISOWFPROCEDIMENTO ON
			ISOWFTRF_PEDIDO.ISOEmp_Codigo = ISOWFPROCEDIMENTO.ISOEmp_Codigo AND
			ISOWFTRF_PEDIDO.ISOWFTrf_Ped_PrcCodigo = ISOWFPROCEDIMENTO.ISOWFPrc_Codigo AND
			ISOWFPROCEDIMENTO.ISOWFPrcPad_Codigo IN (SELECT ISOWFPrcPad_Codigo FROM ISOWFPrcPadrao where isoemp_codigo = 11 and ISOWFPrcPad_Descricao like 'BO%' and ISOWFPrcPad_Flag = 'A') AND -- PROCEDIMENTO ( PEDIDO - ANALISE DE CREDITO)
			ISOWFTRF_PEDIDO.ISOWFTrf_Ped_TrfCodigo = 1 --- CÓDIGO DA TAREFA QUE O ATENDENTE IRÁ CONFIRMAR O CRÉDITO DO CLIENTE ********
		INNER JOIN ISOWFTAREFA ON -- TAREFA DE LIBERAÇÃO DE CRÉDITO
			ISOWFTRF_PEDIDO.ISOEmp_Codigo = ISOWFTAREFA.ISOEmp_Codigo AND
			ISOWFTRF_PEDIDO.ISOWFTrf_Ped_PrcCodigo = ISOWFTAREFA.ISOWFPrc_Codigo AND
			ISOWFTRF_PEDIDO.ISOWFTrf_Ped_TrfCodigo = ISOWFTAREFA.ISOWFTrfPad_Codigo AND
			ISOWFTAREFA.ISOWFTrfPad_Codigo = 1 AND  -- TAREFA (ANALISAR PEDIDO RETIDO EM CREDITO)
			ISOWFTAREFA.ISOWFTrfPadSit_Codigo = 1  -- SITUACAO (PEDIDO APROVADO DE CREDITO)
		INNER JOIN ISOENTIDADE AS USUARIO_CEDITO ON -- USUÁRIO QUE LIBEROU O CRÉDITO DO CLIENTE
			ISOWFTAREFA.ISOWFTrf_RspExe_RspCodigo = USUARIO_CEDITO.ISOEnt_Codigo
		WHERE ISOWFTRF_PEDIDO.ISOEmp_Codigo = 11
		AND ISOWFTRF_PEDIDO.ISOPvPed_Codigo IN (SELECT ISOPVPED_CODIGO FROM ISOPVPEDIDO WHERE ISOEMP_CODIGO = 11 AND ISOPVPEDSIT_CODIGO IN (1,30, 35))
		AND ISOWFTRF_PEDIDO.ISOWFTrf_Ped_PrcCodigo = (SELECT MAX(X.ISOWFTrf_Ped_PrcCodigo) FROM ISOWFTRF_PEDIDO X WHERE ISOWFTRF_PEDIDO.ISOEmp_Codigo = X.ISOEmp_Codigo AND ISOWFTRF_PEDIDO.ISOPvPed_Codigo = X.ISOPvPed_Codigo)),
	TIPO_FRETE AS (
		SELECT 	DISTINCT
			ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOEmp_Codigo,
			ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOPvPed_Codigo,
			COALESCE(ISOPVPEDIDOATTLEVEL1.ISOPvPedidoAttOptId,10) AS ISOPvPedidoTipoFrete
		FROM ISOPVPEDIDOATTVALUES AS ISOPVPEDIDOATTVALUES_TIPO_FRETE
		INNER JOIN ISOPVPEDIDOATTLEVEL1 ON
			ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOEmp_Codigo = ISOPVPEDIDOATTLEVEL1.ISOEmp_Codigo AND
			ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOPvPedidoAttId = ISOPVPEDIDOATTLEVEL1.ISOPvPedidoAttId AND
			ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOPvPedidoAttOptId = ISOPVPEDIDOATTLEVEL1.ISOPvPedidoAttOptId AND
			ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOPvPedidoAttId = 104 -- CÓDIGO DA PERGUNTA TIPO DO FRETE
		WHERE
			ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOEmp_Codigo = 11
			AND ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOPvPed_Codigo IN (SELECT ISOPVPED_CODIGO FROM ISOPVPEDIDO WHERE ISOEMP_CODIGO = 11 AND ISOPVPEDSIT_CODIGO IN (1,30, 35))),
	TRANSPORTADORA AS (
		SELECT 	DISTINCT
			ISOPVPEDIDOATTVALUES_TRANSP.ISOEmp_Codigo,
			ISOPVPEDIDOATTVALUES_TRANSP.ISOPvPed_Codigo,
			COALESCE(ISOPvTrp_CodigoExterno,'') AS ISOPvPedido_CodigoTRP
		FROM ISOPVPEDIDOATTVALUES AS ISOPVPEDIDOATTVALUES_TRANSP
		INNER JOIN ISOPVTRANSPORTADORA ON
			ISOPVTRANSPORTADORA.ISOPvTrp_Codigo = ISOPVPEDIDOATTVALUES_TRANSP.ISOPvPedidoAttOptId AND
			ISOPVPEDIDOATTVALUES_TRANSP.ISOPvPedidoAttId = 105 --AND -- CÓDIGO DA PERGUNTA TRANSPORTADORA
			--ISOPVTRANSPORTADORA.ISOPvTrp_Flag = 'A'
		WHERE ISOPVPEDIDOATTVALUES_TRANSP.ISOEmp_Codigo = 11
			AND ISOPVPEDIDOATTVALUES_TRANSP.ISOPvPed_Codigo IN (SELECT ISOPVPED_CODIGO FROM ISOPVPEDIDO WHERE ISOEMP_CODIGO = 11 AND ISOPVPEDSIT_CODIGO IN (1,30, 35))),
	--OBSERVACAO_ITEM_PEDIDO AS (
	--	SELECT
	--		ISOEmp_Codigo,
	--		ISOPvPed_Codigo,
	--		ISOPvPedIte_Codigo,
	--		ISOPvPedItemAttValue
	--	FROM ISOPVPEDITEMATTVALUES WITH (nOLOCK)
	--	WHERE
	--		ISOEmp_Codigo = 11 AND
	--		ISOPvPedItemAttId = 2),
	OC_DO_CLIENTE AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (nOLOCK)
		WHERE
			ISOEmp_Codigo = 11
			AND ISOPVPEDITEMATTVALUES.ISOPvPed_Codigo IN (SELECT ISOPVPED_CODIGO FROM ISOPVPEDIDO WHERE ISOEMP_CODIGO = 11 AND ISOPVPEDSIT_CODIGO IN (1,30, 35))
			AND ISOPvPedItemAttId = 1),
	LINHA_PEDIDO_CLIENTE AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (nOLOCK)
		WHERE
			ISOEmp_Codigo = 11
			AND ISOPVPEDITEMATTVALUES.ISOPvPed_Codigo IN (SELECT ISOPVPED_CODIGO FROM ISOPVPEDIDO WHERE ISOEMP_CODIGO = 11 AND ISOPVPEDSIT_CODIGO IN (1,30, 35))
			AND ISOPvPedItemAttId = 2),
	LINHA_ORDEM_COMPRA AS (
		SELECT ISOPVPEDITEM.ISOEmp_Codigo, ISOPVPEDITEM.ISOPVPED_CODIGO, ITEM_PEDIDO, ITEM_CLIENTE
			FROM ISOPVPEDITEM LEFT OUTER JOIN (
			SELECT
				ISOEMP_CODIGO,
				ISOPVPED_CODIGO,
				CASE
					WHEN CHARINDEX('-',VALOR,1) > 1
					THEN SUBSTRING(VALOR,1,CHARINDEX('-',VALOR,1)-1)
					ELSE 0
				END AS ITEM_PEDIDO,
				SUBSTRING(VALOR,CHARINDEX('-',VALOR,1)+1,3) AS ITEM_CLIENTE
			-- incluido função para remover caracteres inválidos, como espaço e TAB
			FROM ISOPVPEDIDOATTVALUES CROSS APPLY DBO.SPLIT(REPLACE(REPLACE(LTRIM(RTRIM(ISOPVPEDIDOATTVALUELONG)),CHAR(32),''),CHAR(9),''),CHAR(10))
			--FROM ISOPVPEDIDOATTVALUES CROSS APPLY DBO.SPLIT(ISOPVPEDIDOATTVALUELONG,CHAR(10))
			WHERE ISOEMP_CODIGO = 11
			AND ISOPVPEDIDOATTID = 106
			AND PATINDEX('%[A-Z]%', ISOPVPEDIDOATTVALUELONG) = 0
			AND ISOPVPED_CODIGO IN (SELECT ISOPVPED_CODIGO FROM ISOPVPEDIDO WHERE ISOEMP_CODIGO = 11 AND ISOPVPEDSIT_CODIGO IN (1,30, 35))
			AND CHARINDEX('-',VALOR,1) > 1
			AND VALOR <> '') DADO_COMPLEMENTAR_PEDIDO
				ON ISOPVPEDITEM.ISOEmp_Codigo = DADO_COMPLEMENTAR_PEDIDO.ISOEmp_Codigo AND
					ISOPVPEDITEM.ISOPvPed_Codigo = DADO_COMPLEMENTAR_PEDIDO.ISOPvPed_Codigo AND
					ISOPVPEDITEM.ISOPvPedIte_Codigo = DADO_COMPLEMENTAR_PEDIDO.ITEM_PEDIDO
			WHERE ISOPVPEDITEM.ISOEmp_Codigo = 11
			AND ISOPVPEDITEM.ISOPVPED_CODIGO IN (SELECT ISOPVPED_CODIGO FROM ISOPVPEDIDO WHERE ISOEMP_CODIGO = 11 AND ISOPVPEDSIT_CODIGO IN (1,30, 35))),
	LOTE1 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- lote 1 do item do pedido
		WHERE
			ISOEmp_Codigo = 11
			AND ISOPVPEDITEMATTVALUES.ISOPvPed_Codigo IN (SELECT ISOPVPED_CODIGO FROM ISOPVPEDIDO WHERE ISOEMP_CODIGO = 11 AND ISOPVPEDSIT_CODIGO IN (1,30, 35))
			AND ISOPvPedItemAttId = 4),
	QTD1 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- qtde 1 do item do pedido
		WHERE
			ISOEmp_Codigo = 11
			AND ISOPVPEDITEMATTVALUES.ISOPvPed_Codigo IN (SELECT ISOPVPED_CODIGO FROM ISOPVPEDIDO WHERE ISOEMP_CODIGO = 11 AND ISOPVPEDSIT_CODIGO IN (1,30, 35))
			AND ISOPvPedItemAttId = 5),
	LOTE2 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- lote 2 do item do pedido
		WHERE
			ISOEmp_Codigo = 11
			AND ISOPVPEDITEMATTVALUES.ISOPvPed_Codigo IN (SELECT ISOPVPED_CODIGO FROM ISOPVPEDIDO WHERE ISOEMP_CODIGO = 11 AND ISOPVPEDSIT_CODIGO IN (1,30, 35))
			AND ISOPvPedItemAttId = 6),
	QTD2 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- qtde 2 do item do pedido
		WHERE
			ISOEmp_Codigo = 11
			AND ISOPVPEDITEMATTVALUES.ISOPvPed_Codigo IN (SELECT ISOPVPED_CODIGO FROM ISOPVPEDIDO WHERE ISOEMP_CODIGO = 11 AND ISOPVPEDSIT_CODIGO IN (1,30, 35))
			AND ISOPvPedItemAttId = 7),
	LOTE3 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- lote 3 do item do pedido
		WHERE
			ISOEmp_Codigo = 11
			AND ISOPVPEDITEMATTVALUES.ISOPvPed_Codigo IN (SELECT ISOPVPED_CODIGO FROM ISOPVPEDIDO WHERE ISOEMP_CODIGO = 11 AND ISOPVPEDSIT_CODIGO IN (1,30, 35))
			AND ISOPvPedItemAttId = 8),
	QTD3 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- qtde 3 do item do pedido
		WHERE
			ISOEmp_Codigo = 11
			AND ISOPVPEDITEMATTVALUES.ISOPvPed_Codigo IN (SELECT ISOPVPED_CODIGO FROM ISOPVPEDIDO WHERE ISOEMP_CODIGO = 11 AND ISOPVPEDSIT_CODIGO IN (1,30, 35))
			AND ISOPvPedItemAttId = 9),
	LOTE4 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- lote 4 do item do pedido
		WHERE
			ISOEmp_Codigo = 11
			AND ISOPVPEDITEMATTVALUES.ISOPvPed_Codigo IN (SELECT ISOPVPED_CODIGO FROM ISOPVPEDIDO WHERE ISOEMP_CODIGO = 11 AND ISOPVPEDSIT_CODIGO IN (1,30, 35))
			AND ISOPvPedItemAttId = 10),
	QTD4 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- qtde 4 do item do pedido
		WHERE
			ISOEmp_Codigo = 11
			AND ISOPVPEDITEMATTVALUES.ISOPvPed_Codigo IN (SELECT ISOPVPED_CODIGO FROM ISOPVPEDIDO WHERE ISOEMP_CODIGO = 11 AND ISOPVPEDSIT_CODIGO IN (1,30, 35))
			AND ISOPvPedItemAttId = 11),
	LOTE5 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- lote 5 do item do pedido
		WHERE
			ISOEmp_Codigo = 11
			AND ISOPVPEDITEMATTVALUES.ISOPvPed_Codigo IN (SELECT ISOPVPED_CODIGO FROM ISOPVPEDIDO WHERE ISOEMP_CODIGO = 11 AND ISOPVPEDSIT_CODIGO IN (1,30, 35))
			AND ISOPvPedItemAttId = 12),
	QTD5 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK)-- qtde 5 do item do pedido
		WHERE
			ISOEmp_Codigo = 11
			AND ISOPVPEDITEMATTVALUES.ISOPvPed_Codigo IN (SELECT ISOPVPED_CODIGO FROM ISOPVPEDIDO WHERE ISOEMP_CODIGO = 11 AND ISOPVPEDSIT_CODIGO IN (1,30, 35))
			AND ISOPvPedItemAttId = 13),
	CLIENTEJUR AS (
		SELECT
		    ISOEntOrg_EmpCodigo,
		    ISOEntOrg_codigo,
		    --ISOEntSeg_Codigo AS CLIJURSEGMENTO,
			ISOEmpPrm_GrpUsuDet_Valor AS CLIJURSEGMENTO,
		    isopvped_codigo
		FROM ISOENTORGANIZACAO
			INNER JOIN ISOEMPPRM_GRPUSUDETALHE
			ON ISOEMPPRM_GRPUSUDETALHE.ISOEmp_Codigo = 11
				AND ISOEMPPRM_GRPUSUDETALHE.ISOEmpPrm_Codigo = 'BUCLIENTE'
				AND ISOEMPPRM_GRPUSUDETALHE.ISOEmpPrm_GrpUsu_Codigo = 1
				AND ISOEmpPrm_GrpUsuDet_Descricao = ISOENTORGANIZACAO.ISOEntSeg_Codigo
			INNER JOIN ISOPVPEDIDO
			ON  ISOENTORGANIZACAO.ISOEntOrg_EmpCodigo = ISOPVPEDIDO.ISOEmp_Codigo
				AND ISOENTORGANIZACAO.ISOEntOrg_codigo = ISOPVPEDIDO.ISOPvPed_CliCodigo
				AND ISOPVPEDIDO.ISOEmp_Codigo= 11
				AND ISOPVPEDIDO.ISOPvPedSit_Codigo in (1, 30, 35)),
	CLIENTEFIS AS (
		SELECT
		    ISOEntPes_EmpCodigo,
		    ISOEntPes_Codigo,
		    --ISOEntSeg_Codigo AS CLIFISSEGMENTO,
			ISOEmpPrm_GrpUsuDet_Valor AS CLIFISSEGMENTO,
		    isopvped_codigo
		FROM ISOENTPESSOA
			INNER JOIN ISOEMPPRM_GRPUSUDETALHE
			ON ISOEMPPRM_GRPUSUDETALHE.ISOEmp_Codigo = 11
				AND ISOEMPPRM_GRPUSUDETALHE.ISOEmpPrm_Codigo = 'BUCLIENTE'
				AND ISOEMPPRM_GRPUSUDETALHE.ISOEmpPrm_GrpUsu_Codigo = 1
				AND ISOEmpPrm_GrpUsuDet_Descricao = ISOENTPESSOA.ISOEntSeg_Codigo
			INNER JOIN ISOPVPEDIDO
			ON  ISOENTPESSOA.ISOEntPes_EmpCodigo = ISOPVPEDIDO.ISOEmp_Codigo
				AND ISOENTPESSOA.ISOEntPes_Codigo = ISOPVPEDIDO.ISOPvPed_CliCodigo
				AND ISOPVPEDIDO.ISOEmp_Codigo= 11
				AND ISOPVPEDIDO.ISOPvPedSit_Codigo in (1, 30, 35)),
	CLISUFRAMA AS (
		SELECT	DISTINCT
			ISOENTCLIENTEATTVALUES.ISOEmp_Codigo,
			ISOENTCLIENTEATTVALUES.ISOEntCli_Codigo,
			ISOENTCLIENTEATTVALUES.ISOEntClienteAttId,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOENTCLIENTEATTVALUES.ISOENTCLIENTEATTVALUE,1,9))),'') AS ISOPvPedido_CLISUFRAMA
		FROM ISOENTCLIENTEATTVALUES INNER JOIN ISOPVPEDIDO
			ON ISOENTCLIENTEATTVALUES.ISOEmp_Codigo = ISOPVPEDIDO.ISOEmp_Codigo
				AND ISOENTCLIENTEATTVALUES.ISOEntCli_Codigo = ISOPVPEDIDO.ISOPvPed_CliCodigo
				AND ISOPVPEDIDO.ISOEmp_Codigo= 11
				AND ISOPVPEDIDO.ISOPvPedSit_Codigo in (1, 30, 35)
		WHERE
			ISOENTCLIENTEATTVALUES.ISOEmp_Codigo = 11 AND
			ISOENTCLIENTEATTVALUES.ISOEntClienteAttId = 8),
	CLICXFEC AS (
		SELECT	DISTINCT
			ISOENTCLIENTEATTVALUES.ISOEmp_Codigo,
			ISOENTCLIENTEATTVALUES.ISOEntCli_Codigo,
			ISOENTCLIENTEATTVALUES.ISOEntClienteAttId,
			ISOENTCLIENTEATTVALUES.ISOEntClienteAttOptId AS ISOPvPedido_CLICXFEC
		FROM ISOENTCLIENTEATTVALUES INNER JOIN ISOPVPEDIDO
			ON ISOENTCLIENTEATTVALUES.ISOEmp_Codigo = ISOPVPEDIDO.ISOEmp_Codigo
				AND ISOENTCLIENTEATTVALUES.ISOEntCli_Codigo = ISOPVPEDIDO.ISOPvPed_CliCodigo
				AND ISOPVPEDIDO.ISOEmp_Codigo= 11
				AND ISOPVPEDIDO.ISOPvPedSit_Codigo in (1, 30, 35)
		WHERE
			ISOENTCLIENTEATTVALUES.ISOEmp_Codigo = 11 AND
			ISOENTCLIENTEATTVALUES.ISOEntClienteAttId = 2105),
	PEDCXFEC AS (
		SELECT
			ISOPVPEDIDOATTVALUES_PEDCXFEC.ISOEmp_Codigo,
			ISOPVPEDIDOATTVALUES_PEDCXFEC.ISOPvPed_Codigo,
			ISOPvPedidoAttOptId AS ISOPvPedido_PEDCXFEC
		FROM ISOPVPEDIDOATTVALUES AS ISOPVPEDIDOATTVALUES_PEDCXFEC
		WHERE ISOPVPEDIDOATTVALUES_PEDCXFEC.ISOEmp_Codigo = 11
			AND ISOPVPEDIDOATTVALUES_PEDCXFEC.ISOPvPed_Codigo IN (SELECT ISOPVPED_CODIGO FROM ISOPVPEDIDO WHERE ISOEMP_CODIGO = 11 AND ISOPVPEDSIT_CODIGO IN (1,30, 35))
			and ISOPVPEDIDOATTVALUES_PEDCXFEC.ISOPvPedidoAttId =  110),	--HML 111  PRD 110
	CLIFATPARC AS (
		SELECT	DISTINCT
			ISOENTCLIENTEATTVALUES.ISOEmp_Codigo,
			ISOENTCLIENTEATTVALUES.ISOEntCli_Codigo,
			ISOENTCLIENTEATTVALUES.ISOEntClienteAttId,
			ISOENTCLIENTEATTVALUES.ISOEntClienteAttOptId AS ISOPvPedido_CLIFATPARC
		FROM ISOENTCLIENTEATTVALUES INNER JOIN ISOPVPEDIDO
			ON ISOENTCLIENTEATTVALUES.ISOEmp_Codigo = ISOPVPEDIDO.ISOEmp_Codigo
				AND ISOENTCLIENTEATTVALUES.ISOEntCli_Codigo = ISOPVPEDIDO.ISOPvPed_CliCodigo
				AND ISOPVPEDIDO.ISOEmp_Codigo= 11
				AND ISOPVPEDIDO.ISOPvPedSit_Codigo in (1, 30, 35)
		WHERE
			ISOENTCLIENTEATTVALUES.ISOEmp_Codigo = 11 AND
			ISOENTCLIENTEATTVALUES.ISOEntClienteAttId = 2106),
	PEDFATPARC AS (
		SELECT
			ISOPVPEDIDOATTVALUES_PEDFATPARC.ISOEmp_Codigo,
			ISOPVPEDIDOATTVALUES_PEDFATPARC.ISOPvPed_Codigo,
			ISOPvPedidoAttOptId                          AS ISOPvPedido_PEDFATPARC
		FROM ISOPVPEDIDOATTVALUES AS ISOPVPEDIDOATTVALUES_PEDFATPARC
		WHERE ISOPVPEDIDOATTVALUES_PEDFATPARC.ISOEmp_Codigo = 11
			AND ISOPVPEDIDOATTVALUES_PEDFATPARC.ISOPvPed_Codigo IN (SELECT ISOPVPED_CODIGO FROM ISOPVPEDIDO WHERE ISOEMP_CODIGO = 11 AND ISOPVPEDSIT_CODIGO IN (1,30, 35))
			and ISOPVPEDIDOATTVALUES_PEDFATPARC.ISOPvPedidoAttId = 111),
	CLILOTUNI AS (
		SELECT	DISTINCT
			ISOENTCLIENTEATTVALUES.ISOEmp_Codigo,
			ISOENTCLIENTEATTVALUES.ISOEntCli_Codigo,
			ISOENTCLIENTEATTVALUES.ISOEntClienteAttId,
			ISOENTCLIENTEATTVALUES.ISOEntClienteAttOptId AS ISOPvPedido_CLILOTUNI    --==> 1 = S
		FROM ISOENTCLIENTEATTVALUES INNER JOIN ISOPVPEDIDO
			ON ISOENTCLIENTEATTVALUES.ISOEmp_Codigo = ISOPVPEDIDO.ISOEmp_Codigo
				AND ISOENTCLIENTEATTVALUES.ISOEntCli_Codigo = ISOPVPEDIDO.ISOPvPed_CliCodigo
				AND ISOPVPEDIDO.ISOEmp_Codigo= 11
				AND ISOPVPEDIDO.ISOPvPedSit_Codigo in (1, 30, 35)
		WHERE
			ISOENTCLIENTEATTVALUES.ISOEmp_Codigo = 11 AND
			ISOENTCLIENTEATTVALUES.ISOEntClienteAttId = 2080),
	PEDLOTUNI AS (
		SELECT
			ISOPVPEDIDOATTVALUES_PEDLOTUNI.ISOEmp_Codigo,
			ISOPVPEDIDOATTVALUES_PEDLOTUNI.ISOPvPed_Codigo,
			ISOPvPedidoAttOptId AS ISOPvPedido_PEDLOTUNI
		FROM ISOPVPEDIDOATTVALUES AS ISOPVPEDIDOATTVALUES_PEDLOTUNI
		WHERE ISOPVPEDIDOATTVALUES_PEDLOTUNI.ISOEmp_Codigo = 11
			AND ISOPVPEDIDOATTVALUES_PEDLOTUNI.ISOPvPed_Codigo IN (SELECT ISOPVPED_CODIGO FROM ISOPVPEDIDO WHERE ISOEMP_CODIGO = 11 AND ISOPVPEDSIT_CODIGO IN (1,30, 35))
			and ISOPVPEDIDOATTVALUES_PEDLOTUNI.ISOPvPedidoAttId = 112),
	CLIVCTPRX AS (
		SELECT	DISTINCT
			ISOENTCLIENTEATTVALUES.ISOEmp_Codigo,
			ISOENTCLIENTEATTVALUES.ISOEntCli_Codigo,
			ISOENTCLIENTEATTVALUES.ISOEntClienteAttId,
			0 AS ISOPvPed_CLIVCTPRX,
			ISOENTCLIENTEATTVALUES.ISOEntClienteAttValue AS ISOPvPedido_CLIMESVCTPRX
		FROM ISOENTCLIENTEATTVALUES INNER JOIN ISOPVPEDIDO
			ON ISOENTCLIENTEATTVALUES.ISOEmp_Codigo = ISOPVPEDIDO.ISOEmp_Codigo
				AND ISOENTCLIENTEATTVALUES.ISOEntCli_Codigo = ISOPVPEDIDO.ISOPvPed_CliCodigo
				AND ISOPVPEDIDO.ISOEmp_Codigo= 11
				AND ISOPVPEDIDO.ISOPvPedSit_Codigo in (1, 30, 35)
		WHERE
			ISOENTCLIENTEATTVALUES.ISOEmp_Codigo = 11 AND
			ISOENTCLIENTEATTVALUES.ISOEntClienteAttId = 2088),
	PEDVCTPRX AS (
		SELECT
			ISOPVPEDIDOATTVALUES_PEDVCTPRX.ISOEmp_Codigo,
			ISOPVPEDIDOATTVALUES_PEDVCTPRX.ISOPvPed_Codigo,
			ISOPvPedidoAttOptId AS ISOPvPedido_PEDVCTPRX
		FROM ISOPVPEDIDOATTVALUES AS ISOPVPEDIDOATTVALUES_PEDVCTPRX
		WHERE ISOPVPEDIDOATTVALUES_PEDVCTPRX.ISOEmp_Codigo = 11
			AND ISOPVPEDIDOATTVALUES_PEDVCTPRX.ISOPvPed_Codigo IN (SELECT ISOPVPED_CODIGO FROM ISOPVPEDIDO WHERE ISOEMP_CODIGO = 11 AND ISOPVPEDSIT_CODIGO IN (1,30, 35))
			and ISOPVPEDIDOATTVALUES_PEDVCTPRX.ISOPvPedidoAttId  = 113),
	CLISIMPREMCOD AS (
		SELECT	DISTINCT
			ISOENTCLIENTEATTVALUES.ISOEmp_Codigo,
			ISOENTCLIENTEATTVALUES.ISOEntCli_Codigo,
			ISOENTCLIENTEATTVALUES.ISOEntClienteAttId,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOENTCLIENTEATTVALUES.ISOEntClienteAttValue,1,6))),'') AS ISOPvPedido_CLISIMPREMCOD
		FROM ISOENTCLIENTEATTVALUES INNER JOIN ISOPVPEDIDO
			ON ISOENTCLIENTEATTVALUES.ISOEmp_Codigo = ISOPVPEDIDO.ISOEmp_Codigo
				AND ISOENTCLIENTEATTVALUES.ISOEntCli_Codigo = ISOPVPEDIDO.ISOPvPed_CliCodigo
				AND ISOPVPEDIDO.ISOEmp_Codigo= 11
				AND ISOPVPEDIDO.ISOPvPedSit_Codigo in (1, 30, 35)
		WHERE
			ISOENTCLIENTEATTVALUES.ISOEmp_Codigo = 11 AND
			ISOENTCLIENTEATTVALUES.ISOEntClienteAttId = 2107),
	PEDSIMPREMCOD AS (
		SELECT
			ISOPVPEDIDOATTVALUES_PEDSIMPREMCOD.ISOEmp_Codigo,
			ISOPVPEDIDOATTVALUES_PEDSIMPREMCOD.ISOPvPed_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedidoAttValue,1,6))),'') AS IsoPvPedido_PEDSIMPREMCOD,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedidoAttValue,7,4))),'') AS IsoPvPedido_PEDSIMPREMLOJ
		FROM ISOPVPEDIDOATTVALUES AS ISOPVPEDIDOATTVALUES_PEDSIMPREMCOD
		WHERE ISOPVPEDIDOATTVALUES_PEDSIMPREMCOD.ISOEmp_Codigo = 11
			AND ISOPVPEDIDOATTVALUES_PEDSIMPREMCOD.ISOPvPed_Codigo IN (SELECT ISOPVPED_CODIGO FROM ISOPVPEDIDO WHERE ISOEMP_CODIGO = 11 AND ISOPVPEDSIT_CODIGO IN (1,30, 35))
			and ISOPVPEDIDOATTVALUES_PEDSIMPREMCOD.ISOPvPedidoAttId = 114),
	CLISIMPREMLOJ AS (
		SELECT	DISTINCT
			ISOENTCLIENTEATTVALUES.ISOEmp_Codigo,
			ISOENTCLIENTEATTVALUES.ISOEntCli_Codigo,
			ISOENTCLIENTEATTVALUES.ISOEntClienteAttId,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOENTCLIENTEATTVALUES.ISOEntClienteAttValue,1,4))),'') AS ISOPvPedido_CLISIMPREMLOJ
		FROM ISOENTCLIENTEATTVALUES INNER JOIN ISOPVPEDIDO
			ON ISOENTCLIENTEATTVALUES.ISOEmp_Codigo = ISOPVPEDIDO.ISOEmp_Codigo
				AND ISOENTCLIENTEATTVALUES.ISOEntCli_Codigo = ISOPVPEDIDO.ISOPvPed_CliCodigo
				AND ISOPVPEDIDO.ISOEmp_Codigo= 11
				AND ISOPVPEDIDO.ISOPvPedSit_Codigo in (1, 30, 35)
		WHERE
			ISOENTCLIENTEATTVALUES.ISOEmp_Codigo = 11 AND
			ISOENTCLIENTEATTVALUES.ISOEntClienteAttId = 2108),
	CLIPRIORIDADE AS (
		SELECT	DISTINCT
			ISOENTCLIENTEATTVALUES.ISOEmp_Codigo,
			ISOENTCLIENTEATTVALUES.ISOEntCli_Codigo,
			ISOENTCLIENTEATTVALUES.ISOEntClienteAttId,
			ISOENTCLIENTEATTVALUES.ISOEntClienteAttValue AS ISOPvPedido_CLIPRIORIDADE
		FROM ISOENTCLIENTEATTVALUES INNER JOIN ISOPVPEDIDO
			ON ISOENTCLIENTEATTVALUES.ISOEmp_Codigo = ISOPVPEDIDO.ISOEmp_Codigo
				AND ISOENTCLIENTEATTVALUES.ISOEntCli_Codigo = ISOPVPEDIDO.ISOPvPed_CliCodigo
				AND ISOPVPEDIDO.ISOEmp_Codigo= 11
				AND ISOPVPEDIDO.ISOPvPedSit_Codigo in (1, 30, 35)
		WHERE
			ISOENTCLIENTEATTVALUES.ISOEmp_Codigo = 11 AND
			ISOENTCLIENTEATTVALUES.ISOEntClienteAttId = 2109),
	CLIDIASALOCFUT AS (
		SELECT	DISTINCT
			ISOENTCLIENTEATTVALUES.ISOEmp_Codigo,
			ISOENTCLIENTEATTVALUES.ISOEntCli_Codigo,
			ISOENTCLIENTEATTVALUES.ISOEntClienteAttId,
			ISOENTCLIENTEATTVALUES.ISOEntClienteAttValue AS ISOPvPedido_CLIDIASALOCFUT
		FROM ISOENTCLIENTEATTVALUES INNER JOIN ISOPVPEDIDO
			ON ISOENTCLIENTEATTVALUES.ISOEmp_Codigo = ISOPVPEDIDO.ISOEmp_Codigo
				AND ISOENTCLIENTEATTVALUES.ISOEntCli_Codigo = ISOPVPEDIDO.ISOPvPed_CliCodigo
				AND ISOPVPEDIDO.ISOEmp_Codigo= 11
				AND ISOPVPEDIDO.ISOPvPedSit_Codigo in (1, 30, 35)
		WHERE
			ISOENTCLIENTEATTVALUES.ISOEmp_Codigo = 11 AND
			ISOENTCLIENTEATTVALUES.ISOEntClienteAttId = 2110),

	NATUREZA_OPERACAO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPedTip_Codigo,
			COALESCE(ISOPvPedTip_NaturezaOperacaoCo,'') AS ISOPvPedTip_NaturezaOperacaoCo
		FROM ISOPVPEDTIPO WITH (nOLOCK)
		WHERE
			ISOEmp_Codigo = 11)
	/*OBSERVACOES AS
		SELECT
			ISOPVPEDOBSERVACAO.ISOEmp_Codigo,
			ISOPVPEDOBSERVACAO.ISOPvPed_Codigo,
			ISOPVPEDOBSERVACAO.ISOPvPedObs_Sequencia,
			ISOPVPEDOBSERVACAO.ISOPvPedObs_Descricao,
			ISOPVPEDOBSERVACAO.ISOPvPedObs_Pick,
			ISOPVPEDOBSERVACAO.ISOPvPedObs_NF
		FROM ISOPVPEDOBSERVACAO INNER JOIN ISOPVPEDIDO ON
			ISOPVPEDOBSERVACAO.ISOEmp_Codigo = ISOPVPEDIDO.ISOEmp_Codigo AND
			ISOPVPEDOBSERVACAO.ISOPvPed_Codigo = ISOPVPEDIDO.ISOPvPed_Codigo
		WHERE ISOPVPEDOBSERVACAO.ISOEmp_Codigo = 11
		    AND ISOPVPEDIDO.ISOPvPedSit_Codigo in (1, 30, 35)
*/
	--MATRIZ_ICMS AS (
	--	SELECT
	--		ISOEmp_Codigo,
	--		ISOPvPed_CliCodigo,
	--		ISOPvPed_Codigo,
	--		ISOPvPedIte_Codigo,
	--		ISOPrd_Codigo,
	--		ISOPvMatICMS_SubTribICMSDocFis,
	--		ISOPvMatICMS_AliquotaICMS
	--	FROM MacroConsultaMatrizICMS WITH (NOLOCK)
	--	WHERE
	--		ISOEmp_Codigo = 11)
SELECT
	PEDIDO.ISOEmp_Codigo, -- Código da empresa
	PEDIDO.ISOPvPed_Codigo, -- Código CRM do Pedido
	PEDIDO.ISOPvPed_CliCodigo, -- Código CRM do cliente
	PEDIDO.ISOPvPed_DtaPedido,  -- Data do pedido
	PEDIDO.ISOPvPed_HoraPedido, -- Hora do pedido
	CASE CONDICAO_PAGAMENTO.ISOPeCntPgt_Forma
		WHEN 'Bol' THEN 'BOLETO'
		WHEN 'Car' THEN 'CARTAO'
		WHEN 'Che' THEN 'CHEQUE'
		WHEN 'Dep' THEN 'DEPOSITO'
		WHEN 'Din' THEN 'Dinheiro'
	END AS ISOPeCntPgt_Forma, -- Forma de pagamento
	PEDIDO.ISOPvPed_Pagamento, -- Condição de pagamento
--	PEDIDO.ISOPvPed_DtaSolEntrega,

	CASE
		WHEN PEDIDO.ISOPvPed_DtaSolEntrega = '1753-01-01 00:00:00.000' THEN DATEADD(DAY, DATEDIFF(DAY, 0, GETDATE()), 0)
		ELSE PEDIDO.ISOPvPed_DtaSolEntrega
	END AS ISOPvPed_DtaPrevFat, --PEDIDO.ISOPvPed_DtaSolEntrega,

	PEDIDO.ISOPvPed_CodEndEntrega,

	PEDIDO.ISOPvPedOri_Codigo,
	CASE WHEN PEDIDO.ISOPvPedOri_Codigo  = 'LIC' THEN 'S' ELSE 'N' END AS IsoPVPed_LICITA,
	CASE WHEN PEDIDO.ISOPvPedOri_Codigo  > ' ' THEN 'S' ELSE 'N' END AS IsoPVPed_PORTAL,
	CASE WHEN PEDIDO.ISOPvPedOri_Codigo  > ' ' THEN PEDIDO.ISOPvPedOri_Codigo ELSE '   ' END AS IsoPVPed_IDPORT,

	PEDIDO.ISOPvPedTip_Codigo,
	PEDIDO.ISOPvPed_CodEndCobranca,

	CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0 THEN TOTAL_PEDIDO_EMPENHO.ISOPvPed_ValorTotalPedido ELSE PEDIDO.ISOPvPed_ValorTotalPedido END AS ISOPvPed_ValorTotalPedido,

	PEDIDO_ITEM.ISOPvPedIte_Codigo, -- Sequencial do item do pedido
	PEDIDO_ITEM.ISOPrd_Codigo, -- Código do produto
	PEDIDO_ITEM.ISOPvPedIte_DataEntregaItem AS ISOPvPedIte_DataPromessa,

	CASE
		WHEN PEDIDO_ITEM.ISOPvPedIte_DtaSolEntrega = '1753-01-01 00:00:00.000' THEN DATEADD(DAY, DATEDIFF(DAY, 0, GETDATE()), 0)
		ELSE PEDIDO_ITEM.ISOPvPedIte_DtaSolEntrega
	END AS ISOPvPedIte_DtaSolEntrega,  --PEDIDO_ITEM.ISOPvPedIte_DtaSolEntrega,

	PEDIDO_ITEM.ISOPvPedIte_UnidadeOrigem,

	--07/07/2021----------- enviar '   ' quando UMComercial = UMEstoque-------------------------------
	--PEDIDO_ITEM.ISOPvPedIte_UnidadeDestino AS Item_QTD_UnidadeDestino,
	CASE
		WHEN PEDIDO_ITEM.ISOPvPedIte_UnidadeDestino = PEDIDO_ITEM.ISOPvPedIte_UnidadeOrigem
		THEN '   '
		ELSE PEDIDO_ITEM.ISOPvPedIte_UnidadeDestino
	END AS Item_QTD_UnidadeDestino,

	--07/07/2021----------- enviar 0 quando UMComercial = UMEstoque-------------------------------
	--CASE
	--	WHEN ISNULL(NULLIF(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0),0) = 0
	--	THEN 0
	--	ELSE PEDIDO_ITEM.ISOPvPedIte_Quantidade
	--END AS Item_Quantidade,
	CASE
		WHEN PEDIDO_ITEM.ISOPvPedIte_UnidadeDestino = PEDIDO_ITEM.ISOPvPedIte_UnidadeOrigem
		THEN 0
		ELSE
		CASE
		  WHEN ISNULL(NULLIF(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0),0) = 0
		  THEN 0
		  ELSE PEDIDO_ITEM.ISOPvPedIte_Quantidade
		END
	END AS Item_Quantidade,
	-----------------------------------------------------------------------------------------------

	ROUND(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,6) AS ISOPrdUndFatC_FatorConversao, -- Fator de conversão sem decimais
	ROUND(FATOR_CONVERSAO_CX.ISOPrdUndFatC_FatorConversaoCX,6) AS ISOPrdUndFatC_FatorConversaoCX, -- Fator de conversão sem decimais

	-- criado regra de divisão quando a unidade de medida for "M" -- 02/09/2021 zagoto
	--ROUND(PEDIDO_ITEM.ISOPvPedIte_Quantidade * ROUND(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,6),0) AS ISOPvPedIte_Qtd_UM_estoque,
	case
		when FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_UndDestino = 'M' then round(PEDIDO_ITEM.ISOPvPedIte_Quantidade / ISOPrdUndFatC_FatorConversao ,0)
		else ROUND(PEDIDO_ITEM.ISOPvPedIte_Quantidade * ROUND(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,6),0)
	end AS ISOPvPedIte_Qtd_UM_estoque,

	CASE
		WHEN ISNULL(NULLIF(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0),0) = 0
		THEN 0
		--ELSE CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho >0 THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho ELSE ROUND(PEDIDO_ITEM.ISOPvPedIte_ValorUnitario,6) END
		ELSE CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho >0 THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho ELSE ROUND(PEDIDO_ITEM.ISOPvPedIte_PrecoAjustadoTotal / PEDIDO_ITEM.ISOPvPedIte_Quantidade,6) END
	END ISOPvPedIte_Vlr_Total_Unitario,

	CASE
		WHEN ISNULL(NULLIF(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0),0) = 0 THEN 0
		WHEN PEDIDO_ITEM.ISOPvPedIte_Quantidade = 0 THEN 0
		WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho >0
	THEN round((PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho -
				  (PEDIDO_ITEM.ISOPvPedIte_ValorIPI		     / PEDIDO_ITEM.ISOPvPedIte_Quantidade) -
				  (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade) -
				  (PEDIDO_ITEM.ISOPvPedIte_ValorICMS	     / PEDIDO_ITEM.ISOPvPedIte_Quantidade) -
				  (PEDIDO_ITEM.ISOPvPedIte_ValorPIS		     / PEDIDO_ITEM.ISOPvPedIte_Quantidade) -
				  (PEDIDO_ITEM.ISOPvPedIte_ValorCofins	     / PEDIDO_ITEM.ISOPvPedIte_Quantidade) -
				  (PEDIDO_ITEM.ISOPVPedIte_ValorFCPST	     / PEDIDO_ITEM.ISOPvPedIte_Quantidade) -
				  (PEDIDO_ITEM.ISOPvPedIte_ValorFCP		     / PEDIDO_ITEM.ISOPvPedIte_Quantidade))
				  /  FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,6)
	 ELSE
	 round((ROUND(PEDIDO_ITEM.ISOPvPedIte_PrecoAjustadoTotal / PEDIDO_ITEM.ISOPvPedIte_Quantidade,6) -
				  (PEDIDO_ITEM.ISOPvPedIte_ValorIPI		     / PEDIDO_ITEM.ISOPvPedIte_Quantidade) -
				  (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade) -
				  (PEDIDO_ITEM.ISOPvPedIte_ValorICMS	     / PEDIDO_ITEM.ISOPvPedIte_Quantidade) -
				  (PEDIDO_ITEM.ISOPvPedIte_ValorPIS		     / PEDIDO_ITEM.ISOPvPedIte_Quantidade) -
				  (PEDIDO_ITEM.ISOPvPedIte_ValorCofins	     / PEDIDO_ITEM.ISOPvPedIte_Quantidade) -
				  (PEDIDO_ITEM.ISOPVPedIte_ValorFCPST	     / PEDIDO_ITEM.ISOPvPedIte_Quantidade) -
				  (PEDIDO_ITEM.ISOPvPedIte_ValorFCP		     / PEDIDO_ITEM.ISOPvPedIte_Quantidade))
				  /  FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,6)
	END as Vlr_unit_LIQUIDO,
	/*
	CASE
		WHEN ISNULL(NULLIF(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0),0) = 0 THEN 0
		WHEN PEDIDO_ITEM.ISOPvPedIte_Quantidade = 0 THEN 0
		ELSE
			ROUND((ISOPvPedIte_Vlr_Total_Unitario -
				  (PEDIDO_ITEM.ISOPvPedIte_ValorIPI		     / PEDIDO_ITEM.ISOPvPedIte_Quantidade) -
				  (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade) -
				  (PEDIDO_ITEM.ISOPvPedIte_ValorICMS	     / PEDIDO_ITEM.ISOPvPedIte_Quantidade) -
				  (PEDIDO_ITEM.ISOPvPedIte_ValorPIS		     / PEDIDO_ITEM.ISOPvPedIte_Quantidade) -
				  (PEDIDO_ITEM.ISOPvPedIte_ValorCofins	     / PEDIDO_ITEM.ISOPvPedIte_Quantidade) -
				  (PEDIDO_ITEM.ISOPVPedIte_ValorFCPST	     / PEDIDO_ITEM.ISOPvPedIte_Quantidade) -
				  (PEDIDO_ITEM.ISOPvPedIte_ValorFCP		     / PEDIDO_ITEM.ISOPvPedIte_Quantidade),6)
				  /  FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,6)
	END AS Vlr_unit_LIQUIDO,
	*/



	CASE
		WHEN ISNULL(NULLIF(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0),0) = 0
		THEN 0
		--ELSE CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0 THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho ELSE ROUND(PEDIDO_ITEM.ISOPvPedIte_ValorUnitario,6) END / NULLIF(ROUND(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0),0)
		ELSE CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0 THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho ELSE ROUND(PEDIDO_ITEM.ISOPvPedIte_PrecoAjustadoTotal / PEDIDO_ITEM.ISOPvPedIte_Quantidade,6) END / NULLIF(ROUND(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,6),0)
	END ISOPvPedIte_Vlr_Total_Unitario_EST,

	PEDIDO_ITEM.ISOPvPedIteSit_Codigo,
	PEDIDO_ITEM.ISOPvPedIte_AgendamentoData,
	PEDIDO_ITEM.ISOPvPedIte_AgendamentoHoraIni,
	PEDIDO_ITEM.ISOPvPedIte_AgendamentoHoraFin,
	PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,
	-- DESATIVADO 21/08/2020 - EDILON - para pedidos de contrato o valor de frete deve ser mostrado
	--CASE
	--	WHEN COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) > 0
	--	THEN 0
	--	ELSE COALESCE(PEDIDO.ISOPvPed_ValorFrete,0)
	--END AS ISOPvPed_ValorFrete,
	COALESCE(PEDIDO.ISOPvPed_ValorFrete,0) AS ISOPvPed_ValorFrete,
	COALESCE(ORIGEM_PROTHEUS.ISOEmpEnt_Ori_Codigo,'') AS ISOEmpEnt_CliCod_ERP,
	ORIGEM_LX.ISOEmpEnt_Ori_Codigo AS ISOEmpEnt_Ori_LX,

	--LOCAL_FATURAMENTO.ISOPvCDOri_Armazem AS ISOPvPedIte_Armazem,  --(Cris-24/06/21 De-PARA de Armazens)
	ARMAZEMPROTHEUS.ISOEmpPrm_GrpUsuDet_Valor AS ISOPvPedIte_Armazem,

	COALESCE(CLIENTE.ISOEntCli_Operacao,'') AS ISOEntCli_Operacao,
	ESTABELECIMENTO_LX.ISOPvCD_Estabelecimento AS ISOPvCD_Estabelecimento_LX,
	PEDIDO.ISOPvPed_CodigoAtendente AS ISOPvPed_CodigoAtendente, -- Código do atendente que criou o pedido
	ATENDENTE_PEDIDO.ISOEnt_Nome AS ISOEnt_NomeAtendente, -- Nome do atendente que criou o pedido

	/*
	'2020-05-13 00:00:00.000' AS ISOWFTrf_DataLiberacaoCredito, -- Data em que a tarefa de liberação de crédito foi executada
    '11:00:00' AS ISOWFTrf_HoraLiberacaoCredito,  -- Hora em que a tarefa de liberação de crédito foi executada
    975190 AS ISOWFTrf_CodigoAtendente, -- Responsável que executou a tarefa de liberação de crédito
	*/

	COALESCE(ANALISE_CREDITO.ISOWFTrf_DataLiberacaoCredito,'') AS ISOWFTrf_DataLiberacaoCredito, -- Data em que a tarefa de liberação de crédito foi executada
    COALESCE(ANALISE_CREDITO.ISOWFTrf_HoraLiberacaoCredito,'') AS ISOWFTrf_HoraLiberacaoCredito,  -- Hora em que a tarefa de liberação de crédito foi executada
    COALESCE(ANALISE_CREDITO.ISOWFTrf_CodigoAtendente,'') AS ISOWFTrf_CodigoAtendente, -- Responsável que executou a tarefa de liberação de crédito

	CASE
		WHEN PEDIDO.ISOPvPedOri_Codigo = 'EUR' THEN 3
		WHEN PEDIDO.ISOPvPedOri_Codigo = 'EU1' THEN 3
		WHEN PEDIDO.ISOPvPedOri_Codigo = 'USD' THEN 2
		WHEN PEDIDO.ISOPvPedOri_Codigo = 'US1' THEN 2
		ELSE 1
	END AS ISOMoe_Codigo,

	COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorIPI,0) AS ISOPvPedIte_ValorIPI,
	COALESCE(PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria,0) AS ISOPvPedIte_VlrSubsTrib,
	COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorICMS,0) AS ISOPvPedIte_ValorICMS,
	COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorPIS,0) AS ISOPvPedIte_ValorPIS,
	COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorCofins,0) AS ISOPvPedIte_ValorCofins,
	COALESCE(PEDIDO_ITEM.ISOPVPedIte_ValorFCPST,0) AS ISOPVPedIte_ValorFCPST,
	COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorFCP,0) AS ISOPvPedIte_ValorFCP,

	COALESCE(TRANSPORTADORA.ISOPvPedido_CodigoTRP,'') AS ISOPvPedido_CodigoTRP,

	CASE
		TIPO_FRETE.ISOPvPedidoTipoFrete
		WHEN 10 THEN 'C'  -- Tipo de frete CIF
		WHEN 20 THEN 'F'  -- Tipo de frete FOB
		ELSE 'C'  -- Tipo de frete CIF
	END
	AS ISOPvPedidoTipoFrete,

	-- Inativado para considerar o cod. da resposta, considerando 10 - C (CIF) ou 20 - F (FOB) - 13/07/21 zagoto
	--COALESCE(TIPO_FRETE.ISOPvPedidoTipoFrete,'') AS ISOPvPedidoTipoFrete,

	COALESCE(TABELA_CLIENTE.ISOEntClienteAttOtherValue,'') AS ISOEmpEnt_Tabela_Preco,
	PEDIDO_ITEM.ISOPvPedIte_PrecoLista,
	COALESCE(PEDIDO.ISOPVPed_OrdCompra,'') AS ISOPVPed_OrdCompra,

	CASE
		WHEN LINHA_ORDEM_COMPRA.ITEM_CLIENTE <> ''
		THEN COALESCE(PEDIDO.ISOPVPed_OrdCompra,'')
		ELSE
			CASE
				WHEN COALESCE(RTRIM(LTRIM(SUBSTRING(OC_DO_CLIENTE.ISOPvPedItemAttValue,1,15))),'') <> ''
				THEN COALESCE(RTRIM(LTRIM(SUBSTRING(OC_DO_CLIENTE.ISOPvPedItemAttValue,1,15))),'')
				ELSE COALESCE(PEDIDO.ISOPVPed_OrdCompra,'')
			END
	END AS ISOPvPedIte_NrOrdemCompra,

	CASE
		WHEN ABS(COALESCE(LINHA_PEDIDO_CLIENTE.ISOPvPedItemAttValue,LINHA_ORDEM_COMPRA.ITEM_CLIENTE,'')) = 0 AND LINHA_ORDEM_COMPRA.ITEM_CLIENTE <> ''
		THEN PEDIDO_ITEM.ISOPvPedIte_Codigo
		ELSE ABS(COALESCE(LINHA_PEDIDO_CLIENTE.ISOPvPedItemAttValue,LINHA_ORDEM_COMPRA.ITEM_CLIENTE,''))
	END
		AS ISOPvPedIte_LinhaOrdemCompra,

	COALESCE(RTRIM(LTRIM(SUBSTRING(LOTE1.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_Lote1,
	CONVERT(FLOAT,REPLACE(COALESCE(RTRIM(LTRIM(SUBSTRING(ISNULL(QTD1.ISOPvPedItemAttValue,'0'),1,15))),''),',','.')) AS ISOPvPedIte_QtdeLote1,
	COALESCE(RTRIM(LTRIM(SUBSTRING(LOTE2.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_Lote2,
	CONVERT(FLOAT,REPLACE(COALESCE(RTRIM(LTRIM(SUBSTRING(ISNULL(QTD2.ISOPvPedItemAttValue,'0'),1,15))),''),',','.')) AS ISOPvPedIte_QtdeLote2,
	COALESCE(RTRIM(LTRIM(SUBSTRING(LOTE3.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_Lote3,
	CONVERT(FLOAT,REPLACE(COALESCE(RTRIM(LTRIM(SUBSTRING(ISNULL(QTD3.ISOPvPedItemAttValue,'0'),1,15))),''),',','.')) AS ISOPvPedIte_QtdeLote3,
	COALESCE(RTRIM(LTRIM(SUBSTRING(LOTE4.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_Lote4,
	CONVERT(FLOAT,REPLACE(COALESCE(RTRIM(LTRIM(SUBSTRING(ISNULL(QTD4.ISOPvPedItemAttValue,'0'),1,15))),''),',','.')) AS ISOPvPedIte_QtdeLote4,
	COALESCE(RTRIM(LTRIM(SUBSTRING(LOTE5.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_Lote5,
	CONVERT(FLOAT,REPLACE(COALESCE(RTRIM(LTRIM(SUBSTRING(ISNULL(QTD5.ISOPvPedItemAttValue,'0'),1,15))),''),',','.')) AS ISOPvPedIte_QtdeLote5,

	COALESCE(NATUREZA_OPERACAO.ISOPvPedTip_NaturezaOperacaoCo,'') AS ISOPvPed_Operacao,

	ISNULL(CLIFISSEGMENTO, CLIJURSEGMENTO) as CLIENTE_BU,

    CASE
		WHEN ISOPvPedido_PEDCXFEC = 2 THEN 'S'
		WHEN ISOPvPedido_PEDCXFEC = 3 THEN 'N'
		WHEN ISOPvPedido_CLICXFEC = 2 THEN 'S'
		WHEN ISOPvPedido_CLICXFEC = 3 THEN 'N'
		ELSE 'N'
	END AS ISOPvPed_CliCXFec,

    CASE
		WHEN COALESCE(PEDIDO.ISOPvPed_ValorFrete,0) > 0 THEN 'N'
		WHEN CONDICAO_PAGAMENTO.ISOPeCntPgt_Forma <> 'Bol' THEN 'N'
		WHEN ISOPvPedido_PEDFATPARC = 2 THEN 'S'
		WHEN ISOPvPedido_PEDFATPARC = 3 THEN 'N'
		WHEN ISOPvPedido_CLIFATPARC = 2 THEN 'S'
		WHEN ISOPvPedido_CLIFATPARC = 3 THEN 'N'
		ELSE 'S'
    END AS ISOPvPed_CliFatParc,

    CASE
		WHEN ISOPvPedido_PEDLOTUNI = 2 THEN 'S'
		WHEN ISOPvPedido_PEDLOTUNI = 3 THEN 'N'
		WHEN ISOPvPedido_CLILOTUNI = 1 THEN 'S'
		ELSE 'N'
	END AS ISOPvPed_CliLotUni,

    CASE
		WHEN ISOPvPedido_PEDVCTPRX = 3 THEN 'N'
		WHEN ISOPvPedido_CLIMESVCTPRX > 0 THEN 'S'
		ELSE 'N'
	END AS ISOPvPed_CliVctPrx,

    CASE
		WHEN ISOPvPedido_CLIMESVCTPRX > 0 THEN ISOPvPedido_CLIMESVCTPRX
		ELSE 0
	END AS IsoPvPed_CliMesVctPrx,

    COALESCE(IsoPvPedido_PEDSIMPREMCOD,ISOPvPedido_CLISIMPREMCOD) AS ISOPvPed_CliTG,
    COALESCE(IsoPvPedido_PEDSIMPREMLOJ,ISOPvPedido_CLISIMPREMLOJ) AS ISOPvPed_LOJTG,

	CASE
		WHEN ISNULL(ISOPvPedido_CLIPRIORIDADE, 0) = 0 THEN '9'
		ELSE CAST(ISOPvPedido_CLIPRIORIDADE as CHAR)
	END AS ISOPVPed_CLIPRIORIDADE,
	CASE
		WHEN ISNULL(ISOPvPedido_CLIDIASALOCFUT, 0) = 0 THEN 1
		WHEN ISOPvPedido_CLIDIASALOCFUT = 0  THEN 1
		ELSE ISOPvPedido_CLIDIASALOCFUT
	END AS ISOPvPed_CLIDIASALOCFUT,

	--07/07/2021-- enviar 0 quando UMComercial = UMEstoque
	CASE
		WHEN PEDIDO_ITEM.ISOPvPedIte_UnidadeDestino = PEDIDO_ITEM.ISOPvPedIte_UnidadeOrigem
		THEN 0
		ELSE
		CASE
		WHEN COALESCE(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0) = 0
			THEN 0
		ELSE
		   CASE
			   -- cliente TEM desoneração e o pedido é empenho
			   WHEN ICMS_FAST.SubTribICMSDocFis = 1 AND COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) > 0
				   THEN ROUND(((((PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho / (1 - (ICMS_FAST.AliquotaICMS/100)) / (1 + (PEDIDO_ITEM.ISOPvPedIte_PercentualIPI / 100)))))),6)
			   -- cliente TEM desoneração e o pedido NÃO é empenho
			   WHEN ICMS_FAST.SubTribICMSDocFis = 1 AND COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) = 0
				   THEN ROUND(PEDIDO_ITEM.ISOPvPedIte_PrecoAjustado ,6)
			   -- cliente SEM desoneração
		   	   ELSE ROUND((CASE
							WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0
								THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho / (1 + ((PEDIDO_ITEM.ISOPvPedIte_PercSubsTributaria + PEDIDO_ITEM.ISOPvPedIte_PercentualFCPST)/100.0) ) / ((1+(PEDIDO_ITEM.ISOPvPedIte_PercentualIPI/100.0)) )
		  					ELSE PEDIDO_ITEM.ISOPvPedIte_PrecoAjustado -- desativado 16/07/2020 o valor já está na unidade comercial * PEDIDO_ITEM.ISOPvPedIte_Quantidade -- desativado 09/07/2020 pois o preco ajustado já está sem o frete ((((PEDIDO_ITEM.ISOPvPedIte_PrecoAjustado * PEDIDO_ITEM.ISOPvPedIte_Quantidade) - (((PEDIDO_ITEM.ISOPvPedIte_ValorUnitario * PEDIDO_ITEM.ISOPvPedIte_Quantidade) / TOTAL_PEDIDO.ISOPvPed_ValorTotalPedido) * PEDIDO.ISOPvPed_ValorFrete)) / PEDIDO_ITEM.ISOPvPedIte_Quantidade) )
		   				END )  / (1 + (ISOPvEstabTbV_PercDespFinancei / 100.00) ),6)
		   END
		END
	END AS ISOPvPedIte_PrecoCMLIntegracaoBO,
	-- performance1

	-- performance2
	ROUND (
	CASE
		WHEN COALESCE(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0) = 0
			THEN 0
		ELSE
		CASE
			-- cliente TEM desoneração e o pedido é empenho
			WHEN ICMS_FAST.SubTribICMSDocFis = 1 AND COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) > 0
				THEN ROUND(((((PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho / (1 - (ICMS_FAST.AliquotaICMS/100)) / (1 + (PEDIDO_ITEM.ISOPvPedIte_PercentualIPI / 100))))) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao),6)
			-- cliente TEM desoneração e o pedido NÃO é empenho
			WHEN ICMS_FAST.SubTribICMSDocFis = 1 AND COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) = 0
				THEN ROUND((PEDIDO_ITEM.ISOPvPedIte_PrecoAjustado / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao),6)
			-- cliente SEM desoneração
			ELSE ROUND((CASE
							WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0
								--Removido PEDIDO_ITEM.ISOPvPedIte_PercentualFCPST da fórmula pois não se aplica quando pedido de Empenho -- Zagoto/Edilon 26/08/21
								--THEN COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) / (1 + ((PEDIDO_ITEM.ISOPvPedIte_PercSubsTributaria + PEDIDO_ITEM.ISOPvPedIte_PercentualFCPST)/100.0) ) / ((1+(PEDIDO_ITEM.ISOPvPedIte_PercentualIPI/100.0)) )
								THEN COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) / (1 + ((PEDIDO_ITEM.ISOPvPedIte_PercSubsTributaria)/100.0) ) / ((1+(PEDIDO_ITEM.ISOPvPedIte_PercentualIPI/100.0)) )
							ELSE PEDIDO_ITEM.ISOPvPedIte_PrecoAjustado ---  desativado 09/07/2020 pois o preco ajustado já está sem o frete ((PEDIDO_ITEM.ISOPvPedIte_PrecoAjustado) - ((((PEDIDO_ITEM.ISOPvPedIte_PrecoAjustado * PEDIDO_ITEM.ISOPvPedIte_Quantidade) / TOTAL_PEDIDO.ISOPvPed_ValorTotalPedido) * PEDIDO.ISOPvPed_ValorFrete) / PEDIDO_ITEM.ISOPvPedIte_Quantidade))
						END ) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,6)
		END
	END / (1 + (ISOPvEstabTbV_PercDespFinancei / 100.00) ), 6) AS ISOPvPedIte_PrecoUNESTIntegracaoBO,
	-- performance2


	COALESCE(EMPENHO.ISOCttPedCon_NumeroEmp,'') AS ISOPvPedido_NumeroEmpenho,
	TOTAL_LINHAS_PEDIDO.ISOPvPedIte_TotalLinhas,

--	STUFF( (SELECT ' ' + ISOPvPedObs_Descricao
--		FROM ISOPVPEDOBSERVACAO OBSNF
--	    WHERE OBSNF.isoemp_codigo = pedido.isoemp_codigo
--		  and OBSNF.isopvped_codigo = pedido.isopvped_codigo
--		  and OBSNF.ISOPvPedObs_NF = 'S'
--		FOR XML PATH('')),1, 1, '') as CONCAT_OBS,

	CASE
		WHEN COALESCE(ISOPvPedido_CLISUFRAMA,'') > ' '
		THEN
			STUFF( (SELECT ' ' + ISOPvPedObs_Descricao
				FROM ISOPVPEDOBSERVACAO OBSNF
				WHERE OBSNF.isoemp_codigo = pedido.isoemp_codigo
				and OBSNF.isopvped_codigo = pedido.isopvped_codigo
				and OBSNF.ISOPvPedObs_NF = 'S'
			FOR XML PATH('')),1, 1, '') +
			'  SUFRAMA: ' + COALESCE(ISOPvPedido_CLISUFRAMA,'')
		ELSE
			STUFF( (SELECT ' ' + ISOPvPedObs_Descricao
				FROM ISOPVPEDOBSERVACAO OBSNF
				WHERE OBSNF.isoemp_codigo = pedido.isoemp_codigo
				and OBSNF.isopvped_codigo = pedido.isopvped_codigo
				and OBSNF.ISOPvPedObs_NF = 'S'
			FOR XML PATH('')),1, 1, '')
	END AS OBSERVACAO_NF,

	STUFF( (SELECT ' ' + ISOPvPedObs_Descricao
		FROM ISOPVPEDOBSERVACAO OBSPICK
	    WHERE OBSPICK.isoemp_codigo = pedido.isoemp_codigo
		  and OBSPICK.isopvped_codigo = pedido.isopvped_codigo
		  and OBSPICK.ISOPvPedObs_Pick = 'S'
		FOR XML PATH('')),1, 1, '') as OBSERVACAO_TRACKING

	-- INICIO SIMULACAO DE PREÇOS
	--(1 + (PEDIDO_ITEM.ISOPvPedIte_PercentualIPI / 100)) IPI,
	--(1 - (MATRIZ_ICMS.ISOPvMatICMS_AliquotaICMS/100)) ICMS,
	--PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho EMPENHO,
	--PEDIDO_ITEM.ISOPvPedIte_Quantidade QUANTIDADE,
	--FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao FATOR,
	--ROUND(ROUND(ROUND((PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho  / (1 - (MATRIZ_ICMS.ISOPvMatICMS_AliquotaICMS/100))) / (1 + (PEDIDO_ITEM.ISOPvPedIte_PercentualIPI / 100)) * PEDIDO_ITEM.ISOPvPedIte_Quantidade,2) * (1 + (PEDIDO_ITEM.ISOPvPedIte_PercentualIPI/100)),2) * (1 - (MATRIZ_ICMS.ISOPvMatICMS_AliquotaICMS/100)),2) SIMULACAO_PROTHEUS,
	--CASE
	--	WHEN MATRIZ_ICMS.ISOPvMatICMS_SubTribICMSDocFis = 1 AND COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) > 0
	--		THEN ROUND(((((PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho / (1 - (MATRIZ_ICMS.ISOPvMatICMS_AliquotaICMS/100)) / (1 + (PEDIDO_ITEM.ISOPvPedIte_PercentualIPI / 100))))) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao),6)
	--	WHEN MATRIZ_ICMS.ISOPvMatICMS_SubTribICMSDocFis = 1 AND COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) = 0
	--		THEN ROUND(((PEDIDO_ITEM.ISOPvPedIte_ValorTotalCalculoF - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade)) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao),6)
	--	ELSE ROUND(((CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0 THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho ELSE PEDIDO_ITEM.ISOPvPedIte_ValorUnitario END - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade) - (PEDIDO_ITEM.ISOPvPedIte_ValorIPI / PEDIDO_ITEM.ISOPvPedIte_Quantidade)) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao),6)
	--END * PEDIDO_ITEM.ISOPvPedIte_Quantidade AS SIMULADO_ISO,
	--PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho *	PEDIDO_ITEM.ISOPvPedIte_Quantidade RESULTADO_ISO
	-- TÉRMINO SIMULACAO DE PREÇOS
FROM
	PEDIDO -- CABECALHO DO PEDIDO
	INNER JOIN PEDIDO_ITEM ON -- ITEM DO PEDIDO
		PEDIDO.ISOEmp_Codigo = PEDIDO_ITEM.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = PEDIDO_ITEM.ISOPvPed_Codigo
	INNER JOIN TOTAL_LINHAS_PEDIDO ON -- TOTAL DE LINHAS DO PEDIDO
		PEDIDO.ISOEmp_Codigo = TOTAL_LINHAS_PEDIDO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = TOTAL_LINHAS_PEDIDO.ISOPvPed_Codigo
	INNER JOIN ATENDENTE_PEDIDO ON  -- ATENDENTE QUE CRIOU O PEDIDO
		PEDIDO.ISOPvPed_CodigoAtendente = ATENDENTE_PEDIDO.ISOEnt_Codigo
	INNER JOIN FATOR_CONVERSAO_PRODUTO ON -- UNIDADES DE MEDIDA DO ITEM DO PEDIDO
		PEDIDO_ITEM.ISOEmp_Codigo = FATOR_CONVERSAO_PRODUTO.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPrd_Codigo = FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_PrdCodigo AND
		PEDIDO_ITEM.ISOPvPedIte_UnidadeOrigem = FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_UndOrigem AND
		PEDIDO_ITEM.ISOPvPedIte_UnidadeDestino = FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_UndDestino AND
		FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_Flag = 'A' AND
		FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_Armazem = ''
	LEFT OUTER JOIN FATOR_CONVERSAO_CX ON -- UNIDADES DE MEDIDA DO ITEM DO PEDIDO
		PEDIDO_ITEM.ISOEmp_Codigo = FATOR_CONVERSAO_CX.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPrd_Codigo = FATOR_CONVERSAO_CX.ISOPrdUndFatC_PrdCodigo AND
		PEDIDO_ITEM.ISOPvPedIte_UnidadeOrigem = FATOR_CONVERSAO_CX.ISOPrdUndFatC_UndOrigem AND
		FATOR_CONVERSAO_CX.ISOPrdUndFatC_Flag = 'A' AND
		FATOR_CONVERSAO_CX.ISOPrdUndFatC_Armazem = ''
	INNER JOIN CLIENTE ON -- INFORMAÇÕES DO CLIENTE
		PEDIDO.ISOEmp_Codigo = CLIENTE.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_CliCodigo = CLIENTE.ISOEntCli_Codigo
    INNER JOIN LOCAL_FATURAMENTO ON
		PEDIDO.ISOEmp_Codigo = LOCAL_FATURAMENTO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_EstadoOrigem = LOCAL_FATURAMENTO.ISOPvCD_Origem AND
        PEDIDO.ISOPvPed_EstadoDestino = LOCAL_FATURAMENTO.ISOPvCD_Destino AND
        PEDIDO.ISOPvPedOri_Codigo = LOCAL_FATURAMENTO.ISOPvCDOri_Pedido
    LEFT OUTER JOIN ARMAZEMPROTHEUS ON   --DE-PARA de Armazens no ISO
		PEDIDO.ISOEmp_Codigo  = ARMAZEMPROTHEUS.ISOEmp_Codigo AND
		ARMAZEMPROTHEUS.ISOEmpPrm_GrpUsuDet_Flag = 'A' AND
		ARMAZEMPROTHEUS.ISOEmpPrm_GrpUsuDet_Descricao = LOCAL_FATURAMENTO.ISOPvCDOri_Armazem
	INNER JOIN ESTABELECIMENTO_LX ON -- ESTABELECIMENTO DO PEDIDO
		PEDIDO.ISOEmp_Codigo = ESTABELECIMENTO_LX.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_EstadoOrigem = ESTABELECIMENTO_LX.ISOPvCD_Origem AND
        PEDIDO.ISOPvPed_EstadoDestino = ESTABELECIMENTO_LX.ISOPvCD_Destino
	INNER JOIN CUSTO_FINANCEIRO ON
		ESTABELECIMENTO_LX.ISOEmp_Codigo = CUSTO_FINANCEIRO.ISOEmp_Codigo AND
		ESTABELECIMENTO_LX.ISOPvCD_Estabelecimento = CUSTO_FINANCEIRO.ISOPvEstab_Codigo AND
		PEDIDO.ISOEmp_Codigo = CUSTO_FINANCEIRO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Pagamento = CUSTO_FINANCEIRO.ISOPvTV_Codigo

	LEFT OUTER JOIN EMPENHO ON -- EMPENHO DO PEDIDO
		PEDIDO.ISOEmp_Codigo = EMPENHO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = EMPENHO.ISOCttPedCon_PedidoCodigo

	LEFT OUTER JOIN TOTAL_PEDIDO_EMPENHO ON -- EMPENHO DO PEDIDO
		PEDIDO.ISOEmp_Codigo = TOTAL_PEDIDO_EMPENHO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = TOTAL_PEDIDO_EMPENHO.ISOPvPed_Codigo

	LEFT OUTER JOIN TOTAL_PEDIDO ON -- VALOR TOTAL DO PEDIDO
		PEDIDO.ISOEmp_Codigo = TOTAL_PEDIDO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = TOTAL_PEDIDO.ISOPvPed_Codigo

	LEFT OUTER JOIN TABELA_CLIENTE ON -- TABELA DO CLIENTE
		PEDIDO.ISOEmp_Codigo = TABELA_CLIENTE.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_CliCodigo = TABELA_CLIENTE.ISOEntCli_Codigo
		AND TABELA_CLIENTE.ISOEntClienteAttId = 99
	LEFT OUTER JOIN ORIGEM_PROTHEUS ON -- PESQUISA CÓDIGO PROTHEUS DO CLIENTE
		PEDIDO.ISOEmp_Codigo = ORIGEM_PROTHEUS.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_CliCodigo = ORIGEM_PROTHEUS.ISOEmpEnt_EntCodigo AND
		ORIGEM_PROTHEUS.ISOEmpOri_Codigo = 13
	LEFT OUTER JOIN ORIGEM_LX ON  -- PESQUISA CÓDIGO LX DO CLIENTE
		PEDIDO.ISOEmp_Codigo = ORIGEM_LX.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_CliCodigo = ORIGEM_LX.ISOEmpEnt_EntCodigo AND
		ORIGEM_LX.ISOEmpOri_Codigo = 2
	LEFT OUTER JOIN CONDICAO_PAGAMENTO ON
		PEDIDO.ISOEmp_Codigo = CONDICAO_PAGAMENTO.ISOEmp_Codigo AND
		PEDIDO.ISOPeCndPgt_Codigo = CONDICAO_PAGAMENTO.ISOPeCndPgt_Codigo
	LEFT OUTER JOIN ANALISE_CREDITO ON  -- PESQUISA DA TAREFA DE LIBERAÇÃO DE CRÉDITO
		PEDIDO.ISOEmp_Codigo = ANALISE_CREDITO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = ANALISE_CREDITO.ISOPvPed_Codigo
	LEFT OUTER JOIN TIPO_FRETE ON -- INFORMACOES DE FRETE DO PEDIDO
		PEDIDO.ISOEmp_Codigo = TIPO_FRETE.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = TIPO_FRETE.ISOPvPed_Codigo
	LEFT OUTER JOIN TRANSPORTADORA ON -- INFORMACOES DA TRANSPORTADORA DO PEDIDO
		PEDIDO.ISOEmp_Codigo = TRANSPORTADORA.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = TRANSPORTADORA.ISOPvPed_Codigo
	LEFT OUTER JOIN	LINHA_PEDIDO_CLIENTE  ON  -- Observação do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = LINHA_PEDIDO_CLIENTE.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = LINHA_PEDIDO_CLIENTE.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = LINHA_PEDIDO_CLIENTE.ISOPvPedIte_Codigo

	LEFT OUTER JOIN	LINHA_ORDEM_COMPRA ON  -- Observação do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = LINHA_ORDEM_COMPRA.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = LINHA_ORDEM_COMPRA.ISOPvPed_Codigo AND
	    PEDIDO_ITEM.ISOPvPedIte_Codigo = LINHA_ORDEM_COMPRA.ITEM_PEDIDO

	LEFT OUTER JOIN	OC_DO_CLIENTE ON  -- Observação do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = OC_DO_CLIENTE.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = OC_DO_CLIENTE.ISOPvPed_Codigo AND
	    PEDIDO_ITEM.ISOPvPedIte_Codigo = OC_DO_CLIENTE.ISOPvPedIte_Codigo

	LEFT OUTER JOIN	LOTE1 ON  -- lote 1 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = LOTE1.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = LOTE1.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = LOTE1.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	QTD1 ON  -- qtde 1 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = QTD1.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = QTD1.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = QTD1.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	LOTE2 ON  -- lote 2 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = LOTE2.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = LOTE2.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = LOTE2.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	QTD2 ON  -- qtde 2 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = QTD2.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = QTD2.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = QTD2.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	LOTE3 ON  -- lote 3 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = LOTE3.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = LOTE3.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = LOTE3.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	QTD3 ON  -- qtde 3 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = QTD3.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = QTD3.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = QTD3.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	LOTE4 ON  -- lote 4 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = LOTE4.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = LOTE4.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = LOTE4.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	QTD4 ON  -- qtde 4 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = QTD4.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = QTD4.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = QTD4.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	LOTE5 ON  -- lote 5 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = LOTE5.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = LOTE5.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = LOTE5.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	QTD5 ON  -- qtde 5 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = QTD5.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = QTD5.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = QTD5.ISOPvPedIte_Codigo

	LEFT OUTER JOIN NATUREZA_OPERACAO ON
		PEDIDO.ISOEmp_Codigo = NATUREZA_OPERACAO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPedTip_Codigo = NATUREZA_OPERACAO.ISOPvPedTip_Codigo

	LEFT OUTER JOIN	CLIENTEJUR ON						  -- Cliente Pessoa JURIDICA- Segmento
		PEDIDO.ISOEmp_Codigo = CLIENTEJUR.ISOEntOrg_EmpCodigo AND
		PEDIDO.ISOPvPed_CliCodigo = CLIENTEJUR.ISOEntOrg_codigo  AND
		pedido.isopvped_codigo = CLIENTEJUR.isopvped_codigo

	LEFT OUTER JOIN	CLIENTEFIS ON						  -- Cliente Pessoa JURIDICA- Segmento
		PEDIDO.ISOEmp_Codigo = CLIENTEFIS.ISOEntPes_EmpCodigo AND
		PEDIDO.ISOPvPed_CliCodigo = CLIENTEFIS.ISOEntPes_Codigo  AND
		pedido.isopvped_codigo = CLIENTEFIS.isopvped_codigo

	LEFT OUTER JOIN	CLISUFRAMA ON						  -- Cliente Exige CX Fechada - CLIENTE
		PEDIDO.ISOEmp_Codigo = CLISUFRAMA.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_CliCodigo = CLISUFRAMA.ISOEntCli_Codigo AND
		CLISUFRAMA.ISOEntClienteAttId = 8
	LEFT OUTER JOIN	CLICXFEC ON						  -- Cliente Exige CX Fechada - CLIENTE    2=SIM  3=NAO
		PEDIDO.ISOEmp_Codigo = CLICXFEC.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_CliCodigo = CLICXFEC.ISOEntCli_Codigo AND
		CLICXFEC.ISOEntClienteAttId = 2105
	LEFT OUTER JOIN	PEDCXFEC ON						  -- Cliente Exige CX Fechada - PEDIDO
		PEDIDO.ISOEmp_Codigo = PEDCXFEC.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = PEDCXFEC.ISOPvPed_Codigo
	LEFT OUTER JOIN	CLIFATPARC ON					  -- Cliente Aceita Faturamento Parcial - CLIENTE
		PEDIDO.ISOEmp_Codigo = CLIFATPARC.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_CliCodigo = CLIFATPARC.ISOEntCli_Codigo AND
		CLIFATPARC.ISOEntClienteAttId = 2106
	LEFT OUTER JOIN	PEDFATPARC ON					  -- Cliente Aceita Faturamento Parcial - PEDIDO
		PEDIDO.ISOEmp_Codigo = PEDFATPARC.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = PEDFATPARC.ISOPvPed_Codigo
	LEFT OUTER JOIN	CLILOTUNI ON					  -- Cliente Exige Lote unico - CLIENTE
		PEDIDO.ISOEmp_Codigo = CLILOTUNI.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_CliCodigo = CLILOTUNI.ISOEntCli_Codigo AND
		CLILOTUNI.ISOEntClienteAttId = 2080
	LEFT OUTER JOIN	PEDLOTUNI ON					  -- Cliente Exige Lote Unico - PEDIDO
		PEDIDO.ISOEmp_Codigo = PEDLOTUNI.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = PEDLOTUNI.ISOPvPed_Codigo
	LEFT OUTER JOIN	CLIVCTPRX ON					  -- Cliente Exige Lote unico - CLIENTE
		PEDIDO.ISOEmp_Codigo = CLIVCTPRX.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_CliCodigo = CLIVCTPRX.ISOEntCli_Codigo AND
		CLIVCTPRX.ISOEntClienteAttId = 2088
	LEFT OUTER JOIN	PEDVCTPRX ON					  -- Cliente Exige Vcto Proximo
		PEDIDO.ISOEmp_Codigo = PEDVCTPRX.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = PEDVCTPRX.ISOPvPed_Codigo
	LEFT OUTER JOIN	CLISIMPREMCOD ON						  -- Cod. Cliente Simples Remessa - CLIENTE
		PEDIDO.ISOEmp_Codigo = CLISIMPREMCOD.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_CliCodigo = CLISIMPREMCOD.ISOEntCli_Codigo AND
		CLISIMPREMCOD.ISOEntClienteAttId = 2107
	LEFT OUTER JOIN	PEDSIMPREMCOD ON				  -- Cod. Cliente Simples Remessa - PEDIDO
		PEDIDO.ISOEmp_Codigo = PEDSIMPREMCOD.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = PEDSIMPREMCOD.ISOPvPed_Codigo
	LEFT OUTER JOIN	CLISIMPREMLOJ ON						  -- Cod. Cliente Simples Remessa - CLIENTE
		PEDIDO.ISOEmp_Codigo = CLISIMPREMLOJ.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_CliCodigo = CLISIMPREMLOJ.ISOEntCli_Codigo AND
		CLISIMPREMLOJ.ISOEntClienteAttId = 2108
	--LEFT OUTER JOIN	PEDSIMPREMLOJ ON                  -- Cod. LOJA Cliente Simples Remessa
	--	PEDIDO.ISOEmp_Codigo = PEDSIMPREMLOJ.ISOEmp_Codigo AND
	--	PEDIDO.ISOPvPed_Codigo = PEDSIMPREMLOJ.ISOPvPed_Codigo
	LEFT OUTER JOIN	CLIPRIORIDADE ON						  -- campo PRIORIDADE do CLIENTE
		PEDIDO.ISOEmp_Codigo = CLIPRIORIDADE.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_CliCodigo = CLIPRIORIDADE.ISOEntCli_Codigo AND
		CLIPRIORIDADE.ISOEntClienteAttId = 2109
	LEFT OUTER JOIN	CLIDIASALOCFUT ON						  -- campo DIAS ALOCAÇÃO FUTURA do CLIENTE
		PEDIDO.ISOEmp_Codigo = CLIDIASALOCFUT.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_CliCodigo = CLIDIASALOCFUT.ISOEntCli_Codigo AND
		CLIDIASALOCFUT.ISOEntClienteAttId = 2110
	--LEFT OUTER JOIN MATRIZ_ICMS ON
	--	PEDIDO_ITEM.ISOEmp_Codigo = MATRIZ_ICMS.ISOEmp_Codigo AND
	--	PEDIDO_ITEM.ISOPvPed_Codigo = MATRIZ_ICMS.ISOPvPed_Codigo AND
	--	PEDIDO_ITEM.ISOPvPedIte_Codigo = MATRIZ_ICMS.ISOPvPedIte_Codigo

	-- 11/06/2021 -- zagoto, inclusão de function para performance de consulta de matriz de ICMS
	OUTER APPLY MacroConsultaMatrizICMS_FAST(PEDIDO_ITEM.ISOEmp_Codigo, PEDIDO_ITEM.ISOPvPed_Codigo, PEDIDO_ITEM.ISOPvPedIte_Codigo) AS ICMS_FAST
WHERE
	PEDIDO.ISOEmp_Codigo = 11 --AND
	--PEDIDO_ITEM.ISOPvPedIteSit_Codigo = 1
	--AND PEDIDO.ISOPvPed_Codigo >= 7042706

	AND PEDIDO.ISOPvPedSit_Codigo in (1, 30, 35)     --- ABERTO /  PEDIDO LIBERADO DE CREDITO

	-- Limite de pedidos com clientes retidos em crédito
	AND PEDIDO.ISOPvPed_Codigo NOT IN (select isopvped_codigo from [MACRO_ANALISE_CREDITO] where ISOEmp_Codigo = 11)

	-- Limite de pedidos com valores acima de XXX reais
	AND PEDIDO.ISOPvPed_Codigo NOT IN (select isopvped_codigo from VWFlowPedidoValorMax where ISOEmp_Codigo = 11)

	-- inativado para testes
	-- remover comentário da linha abaixo em produção
	--AND LOCAL_FATURAMENTO.ISOPvCDOri_Armazem in ('ST')    --08/07/2021 faturar só SP (filial 001018)
	AND ESTABELECIMENTO_LX.ISOPvCD_Estabelecimento = 9    --16/09/2021 alterado pelo estabelecimento para considerar pedidos por exemplo AVE

	--PEDIDO.ISOPvPed_Codigo between 8740390 and 8740890 -- pedidos indaial
	--PEDIDO.ISOPvPed_Codigo between 8664441 AND 8739451 AND -- pedidos do simulador
	--AND (
	--	-- ANALISE DE CREDITO / INATIVIDADE DO CLIENTE / TITULOS EM ABERTO
	--	PEDIDO.ISOPvPed_Codigo NOT IN (select isopvped_codigo from [MACRO_ANALISE_CREDITO] where ISOEmp_Codigo = 11)-- and SITUACAO <> '')
	--	--PEDIDO.ISOPvPed_Codigo NOT IN (select isopvped_codigo from [MACRO_ANALISE_CREDITO] where ISOEmp_Codigo = 11 and ISOPvPedSit_Codigo = 1)
	--	--PEDIDO.ISOPvPed_Codigo NOT IN (SELECT ISOPvPed_Codigo FROM GATILHO_C21_ANALISE_LIMITE_CREDITO WHERE ISOEmp_Codigo = 11 AND  ((LIMITE_CREDITO - TOTAL_CONTAS_RECEBER - PED_EM_ABERTO) < TOTAL_PEDIDO) OR (DATEDIFF(DD,DATA_ULTIMA_COMPRA,GETDATE()) > 60) OR (DATEDIFF(DD,DATA_TITULO,GETDATE()) > 1))
	--	--OR
	--	-- ANALISE PRAZO MEDIO
	--	--PEDIDO.ISOPvPed_Codigo NOT IN (SELECT ISOPvPed_Codigo FROM GATILHO_C22_ANALISE_PRAZO_MEDIO_CLIENTE WITH (NOLOCK) WHERE (1=1) AND PRAZO_MEDIO_CP > PRAZO_MEDIO_CLIENTE)
	--);


-- dbo.VWFlowManutOF source

CREATE VIEW [dbo].[VWFlowManutOF]
as
	SELECT
		  ManOF_Filial as FILIAL,
          ManOF_OFNro as OFNRO,
          ManOF_Seq as Seq,
          ManOF_FatParcial as FatPar,
          ManOF_CxFech as CXFech,
          ManOF_LtUnic as Lote_unico,
          ManOF_VctoProx as Vcto_proximo,
          ManOF_ValTol as Valor_tolerancia,
          ManOF_VlrAbaixoMin as Libera_abaixo_minimo,
          ManOF_DatPrevFat as Data_Previsao_fat,
          ManOF_LibRetUsu as Retido_Usuario,
          ManOF_Processado as Processado,
          ManOF_DHProc as DH_Processamento,
          ManOF_Observacoes as Observacoes_NFE,
          ManOF_CancPedido as Cancelar_pedido,
          ManOF_VoltarPedidoISO as Voltar_Pedido_ISO,
          ManOF_Item_seq as ITEM_Seq,
          ManOF_Item_DatPrevFat as ITEM_DataPrevFat,
          ManOF_Item_CancItem as ITEM_CancSaldo,
          ManOF_TipoTriang as Tipo_Triang,
          ManOF_TabPreco as Tab_Preco,
          ManOF_CNPJCliente as CNPJ_Cliente,
          ManOF_NroPedidoCRM as Nro_Pedido_CRM,
          ManOF_QuebraOF45M3 as ManOF_QuebraOF45M3

		FROM ManutOFs WITH (nOLOCK)
		WHERE
			ManOF_Processado = 'N';


-- dbo.VWFlowOCCliente source

CREATE VIEW [dbo].[VWFlowOCCliente]
as
with
	CLIENTE AS (
		SELECT
			ISOEmp_Codigo,
			ISOEmpEnt_EntCodigo,
			ISOEmpEnt_Ori_Codigo
		FROM
			ISOEMPENT_ORIGEM
		WHERE
			(ISOEmp_Codigo = 11) AND
			(ISOEmpOri_Codigo = 13)
	),
	PEDIDO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPVPed_OrdCompra,
			ISOPvPed_CliCodigo
		FROM ISOPVPEDIDO WITH (nOLOCK)
		WHERE
			ISOEmp_Codigo = 11
			),
	PEDIDO_ITEM AS (
		SELECT
			ISOPVPEDITEM.ISOEmp_Codigo,
			ISOPVPEDITEM.ISOPvPed_Codigo,
			ISOPVPEDITEM.ISOPvPedIte_Codigo,
			ISOPVPEDITEM.ISOPrd_Codigo
		FROM ISOPVPEDITEM INNER JOIN ISOPVPEDIDO
			ON ISOPVPEDIDO.ISOEmp_Codigo = ISOPVPEDITEM.ISOEmp_Codigo
			AND ISOPVPEDIDO.ISOPvPed_Codigo = ISOPVPEDITEM.ISOPvPed_Codigo
		WHERE
			ISOPVPEDITEM.ISOEmp_Codigo = 11
			AND ISOPVPEDITEM.ISOPvPedIteSit_Codigo = 1
			),
	OC_DO_CLIENTE AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (nOLOCK)
		WHERE
			ISOEmp_Codigo = 11
			AND ISOPVPEDITEMATTVALUES.ISOPvPed_Codigo IN (SELECT ISOPVPED_CODIGO FROM ISOPVPEDIDO WHERE ISOEMP_CODIGO = 11
			)
			AND ISOPvPedItemAttId = 1),
	LINHA_PEDIDO_CLIENTE AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (nOLOCK)
		WHERE
			ISOEmp_Codigo = 11
			AND ISOPVPEDITEMATTVALUES.ISOPvPed_Codigo IN (SELECT ISOPVPED_CODIGO FROM ISOPVPEDIDO WHERE ISOEMP_CODIGO = 11
			)
			AND ISOPvPedItemAttId = 2),
	LINHA_ORDEM_COMPRA AS (
		SELECT
			ISOPVPEDITEM.ISOEmp_Codigo,
			ISOPVPEDITEM.ISOPVPED_CODIGO,
			ITEM_PEDIDO,
			ITEM_CLIENTE
		FROM ISOPVPEDITEM LEFT OUTER JOIN (
			SELECT
				ISOEMP_CODIGO,
				ISOPVPED_CODIGO,
				CASE
					WHEN CHARINDEX('-',VALOR,1) > 1
					THEN SUBSTRING(VALOR,1,CHARINDEX('-',VALOR,1)-1)
					ELSE 0
				END AS ITEM_PEDIDO,
				SUBSTRING(VALOR,CHARINDEX('-',VALOR,1)+1,3) AS ITEM_CLIENTE
			-- incluido função para remover caracteres inválidos, como espaço e TAB
			FROM ISOPVPEDIDOATTVALUES CROSS APPLY DBO.SPLIT(REPLACE(REPLACE(LTRIM(RTRIM(ISOPVPEDIDOATTVALUELONG)),CHAR(32),''),CHAR(9),''),CHAR(10))
			--FROM ISOPVPEDIDOATTVALUES CROSS APPLY DBO.SPLIT(ISOPVPEDIDOATTVALUELONG,CHAR(10))
			WHERE ISOEMP_CODIGO = 11
			AND ISOPVPEDIDOATTID = 106
			AND PATINDEX('%[A-Z]%', ISOPVPEDIDOATTVALUELONG) = 0
			AND ISOPVPED_CODIGO IN (SELECT ISOPVPED_CODIGO FROM ISOPVPEDIDO WHERE ISOEMP_CODIGO = 11
			)
			AND CHARINDEX('-',VALOR,1) > 1
			AND VALOR <> '') DADO_COMPLEMENTAR_PEDIDO
				ON ISOPVPEDITEM.ISOEmp_Codigo = DADO_COMPLEMENTAR_PEDIDO.ISOEmp_Codigo AND
					ISOPVPEDITEM.ISOPvPed_Codigo = DADO_COMPLEMENTAR_PEDIDO.ISOPvPed_Codigo AND
					ISOPVPEDITEM.ISOPvPedIte_Codigo = DADO_COMPLEMENTAR_PEDIDO.ITEM_PEDIDO
			WHERE ISOPVPEDITEM.ISOEmp_Codigo = 11
			AND ISOPVPEDITEM.ISOPVPED_CODIGO IN (SELECT ISOPVPED_CODIGO FROM ISOPVPEDIDO WHERE ISOEMP_CODIGO = 11
			))
SELECT
	PEDIDO.ISOEmp_Codigo,
	CLIENTE.ISOEmpEnt_Ori_Codigo AS ISOPvPed_CliCodigo,
	PEDIDO.ISOPvPed_Codigo,
	PEDIDO_ITEM.ISOPvPedIte_Codigo,
	PEDIDO_ITEM.ISOPrd_Codigo,
	CASE
		WHEN LINHA_ORDEM_COMPRA.ITEM_CLIENTE <> ''
		THEN COALESCE(PEDIDO.ISOPVPed_OrdCompra,'')
		ELSE
			CASE
				WHEN COALESCE(RTRIM(LTRIM(SUBSTRING(OC_DO_CLIENTE.ISOPvPedItemAttValue,1,15))),'') <> ''
				THEN COALESCE(RTRIM(LTRIM(SUBSTRING(OC_DO_CLIENTE.ISOPvPedItemAttValue,1,15))),'')
				ELSE COALESCE(PEDIDO.ISOPVPed_OrdCompra,'')
			END
	END AS ISOPvPedIte_NrOrdemCompra,
	CASE
		WHEN ABS(COALESCE(LINHA_PEDIDO_CLIENTE.ISOPvPedItemAttValue,LINHA_ORDEM_COMPRA.ITEM_CLIENTE,'')) = 0 AND LINHA_ORDEM_COMPRA.ITEM_CLIENTE <> ''
		THEN PEDIDO_ITEM.ISOPvPedIte_Codigo
		ELSE ABS(COALESCE(LINHA_PEDIDO_CLIENTE.ISOPvPedItemAttValue,LINHA_ORDEM_COMPRA.ITEM_CLIENTE,''))
	END
		AS ISOPvPedIte_LinhaOrdemCompra
FROM
	PEDIDO
		INNER JOIN CLIENTE ON
			PEDIDO.ISOEmp_Codigo = CLIENTE.ISOEmp_Codigo AND
			PEDIDO.ISOPvPed_CliCodigo = CLIENTE.ISOEmpEnt_EntCodigo
		INNER JOIN PEDIDO_ITEM ON -- ITEM DO PEDIDO
			PEDIDO.ISOEmp_Codigo = PEDIDO_ITEM.ISOEmp_Codigo AND
			PEDIDO.ISOPvPed_Codigo = PEDIDO_ITEM.ISOPvPed_Codigo
		INNER JOIN OC_DO_CLIENTE ON
			PEDIDO_ITEM.ISOEmp_Codigo = OC_DO_CLIENTE.ISOEmp_Codigo AND
			PEDIDO_ITEM.ISOPvPed_Codigo = OC_DO_CLIENTE.ISOPvPed_Codigo AND
			PEDIDO_ITEM.ISOPvPedIte_Codigo = OC_DO_CLIENTE.ISOPvPedIte_Codigo
		INNER JOIN LINHA_PEDIDO_CLIENTE  ON  -- Observação do item do pedido
			PEDIDO_ITEM.ISOEmp_Codigo = LINHA_PEDIDO_CLIENTE.ISOEmp_Codigo AND
			PEDIDO_ITEM.ISOPvPed_Codigo = LINHA_PEDIDO_CLIENTE.ISOPvPed_Codigo AND
			PEDIDO_ITEM.ISOPvPedIte_Codigo = LINHA_PEDIDO_CLIENTE.ISOPvPedIte_Codigo
		INNER JOIN LINHA_ORDEM_COMPRA ON  -- Observação do item do pedido
			PEDIDO_ITEM.ISOEmp_Codigo = LINHA_ORDEM_COMPRA.ISOEmp_Codigo AND
			PEDIDO_ITEM.ISOPvPed_Codigo = LINHA_ORDEM_COMPRA.ISOPvPed_Codigo AND
			PEDIDO_ITEM.ISOPvPedIte_Codigo = LINHA_ORDEM_COMPRA.ITEM_PEDIDO
WHERE
	PEDIDO.ISOEmp_Codigo = 11;


-- dbo.VWFlowPedidoValorMax source

CREATE VIEW [dbo].[VWFlowPedidoValorMax]
AS
with pedidos as (
SELECT        ISOPVPEDIDO.ISOEmp_Codigo, ISOPVPEDIDO.ISOPvPed_Codigo
FROM            ISOPVPEDIDO INNER JOIN
                         ISOPVPEDITEM ON ISOPVPEDIDO.ISOEmp_Codigo = ISOPVPEDITEM.ISOEmp_Codigo AND ISOPVPEDIDO.ISOPvPed_Codigo = ISOPVPEDITEM.ISOPvPed_Codigo INNER JOIN
						 ISOEMPPRM_GRPUSUDETALHE ON ISOPVPEDIDO.ISOEmp_Codigo = ISOEMPPRM_GRPUSUDETALHE.ISOEmp_Codigo AND ISOEMPPRM_GRPUSUDETALHE.ISOEmpPrm_Codigo = 'FLOW_VALOR_MAXIMO_PEDIDO' AND ISOEMPPRM_GRPUSUDETALHE.ISOEmpPrm_GrpUsu_Codigo = 2 AND ISOEMPPRM_GRPUSUDETALHE.ISOEmpPrm_GrpUsuDet_Codigo = 1
WHERE        (ISOPVPEDIDO.ISOEmp_Codigo = 11) AND (ISOPVPEDIDO.ISOPvPedSit_Codigo IN (1, 30)) AND (ISOPVPEDITEM.ISOPvPedIteSit_Codigo = 1)
GROUP BY ISOPVPEDIDO.ISOEmp_Codigo, ISOPVPEDIDO.ISOPvPed_Codigo
HAVING        (SUM(ISOPVPEDITEM.ISOPvPedIte_Quantidade * ISOPVPEDITEM.ISOPvPedIte_ValorUnitario) > MAX(CAST(ISOEMPPRM_GRPUSUDETALHE.ISOEmpPrm_GrpUsuDet_Valor AS DECIMAL(15,6))))
)
select ISOPVPEDIDO.ISOEmp_Codigo, ISOPVPEDIDO.ISOPvPed_Codigo, ISOPVPEDIDO.ISOPvPed_DataAlteracao from pedidos inner join ISOPVPEDIDO
on pedidos.ISOEmp_Codigo = ISOPVPEDIDO.ISOEmp_Codigo and pedidos.ISOPvPed_Codigo = ISOPVPEDIDO.ISOPvPed_Codigo;


-- dbo.VWMACROISOPvPedido source

--USE [ISOWEB]
--GO

--/****** Object:  View [dbo].[VWMACROISOPvPedido]    Script Date: 28/09/2021 09:03:08 ******/
--SET ANSI_NULLS ON
--GO

--SET QUOTED_IDENTIFIER ON
--GO











CREATE VIEW [dbo].[VWMACROISOPvPedido]
as
with
	PEDIDO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPed_CliCodigo,
			ISOPvPed_EstadoOrigem,
			ISOPvPed_EstadoDestino,
			ISOPvPed_CodigoAtendente,
			ISOPvPedSit_Codigo,
			ISOPvPedOri_Codigo,
			ISOPvPed_CodEndCobranca,
			ISOPvPed_ValorTotalPedido,
			ISOPeCndPgt_Codigo,
			ISOPvPed_ValorFrete,
			ISOPvPedTip_Codigo,
			ISOPvPed_Pagamento, -- Condição de pagamento
			ISOPVPed_OrdCompra,
			ISOPvPed_DtaSolEntrega,
			ISOPvPed_CodEndEntrega,
			ISOPvPed_DtaPedido,  -- Data do pedido
			ISOPvPed_HoraPedido -- Hora do pedido
		FROM ISOPVPEDIDO WITH (nOLOCK)
		WHERE
			ISOEmp_Codigo = 11
			AND ISOPvPedSit_Codigo in (1, 30)
			--and ISOPvPedSit_Codigo = 999
			--AND ISOPvPed_Codigo IN (7971050)
			--and ISOPvPed_Codigo NOT IN (select isopvped_codigo from [MACRO_ANALISE_CREDITO] where ISOEmp_Codigo = 11)
			),
	PEDIDO_ITEM AS (
		SELECT
			ISOPVPEDITEM.ISOEmp_Codigo,
			ISOPVPEDITEM.ISOPvPed_Codigo,
			ISOPVPEDITEM.ISOPvPedIte_Codigo,
			ISOPVPEDITEM.ISOPrd_Codigo,
			ISOPVPEDITEM.ISOPvPedIte_Quantidade,
			ISOPVPEDITEM.ISOPvPedIte_DtaSolEntrega,
			ISOPVPEDITEM.ISOPvPedIte_UnidadeOrigem,
			ISOPVPEDITEM.ISOPvPedIte_UnidadeDestino,
			ISOPVPEDITEM.ISOPvPedIte_ValorUnitario,
			ISOPVPEDITEM.ISOPvPedIteSit_Codigo,
			ISOPVPEDITEM.ISOPvPedIte_AgendamentoData,
			ISOPVPEDITEM.ISOPvPedIte_AgendamentoHoraIni,
			ISOPVPEDITEM.ISOPvPedIte_AgendamentoHoraFin,
			ISOPVPEDITEM.ISOPvPedIte_ValorEmpenho,
			ISOPVPEDITEM.ISOPvPedIte_PrecoLista,
			ISOPVPEDITEM.ISOPvPedIte_ValorIPI,
			ISOPVPEDITEM.ISOPvPedIte_VlrSubsTributaria,
			ISOPVPEDITEM.ISOPvPedIte_ValorICMS,
			ISOPVPEDITEM.ISOPvPedIte_ValorPIS,
			ISOPVPEDITEM.ISOPvPedIte_ValorCofins,
			ISOPVPEDITEM.ISOPVPedIte_ValorFCPST,
			ISOPVPEDITEM.ISOPvPedIte_ValorFCP,
			ISOPVPEDITEM.ISOPvPedIte_ValorTotalCalculoF,
			ISOPVPEDITEM.ISOPvPedIte_DataEntregaItem,
			ISOPVPEDITEM.ISOPvPedIte_PercentualIPI,
			ISOPVPEDITEM.ISOPvPedIte_PercSubsTributaria,
			ISOPVPEDITEM.ISOPvPedIte_PercentualFCPST,
			ISOPVPEDITEM.ISOPvPedIte_PrecoAjustado,
			ISOPVPEDITEM.ISOPvPedIte_PrecoAjustadoTotal
		FROM ISOPVPEDITEM INNER JOIN ISOPVPEDIDO
			ON ISOPVPEDIDO.ISOEmp_Codigo = ISOPVPEDITEM.ISOEmp_Codigo
			AND ISOPVPEDIDO.ISOPvPed_Codigo = ISOPVPEDITEM.ISOPvPed_Codigo
			AND ISOPVPEDIDO.ISOPvPedSit_Codigo in (1, 30)
		WHERE
			ISOPVPEDITEM.ISOEmp_Codigo = 11
			AND ISOPVPEDITEM.ISOPvPedIteSit_Codigo = 1
			),
	TOTAL_LINHAS_PEDIDO AS (
		SELECT
			ISOPVPEDITEM.ISOEmp_Codigo,
			ISOPVPEDITEM.ISOPvPed_Codigo,
			COUNT(*) AS ISOPvPedIte_TotalLinhas
		FROM ISOPVPEDITEM INNER JOIN ISOPVPEDIDO
			ON ISOPVPEDIDO.ISOEmp_Codigo = ISOPVPEDITEM.ISOEmp_Codigo
			AND ISOPVPEDIDO.ISOPvPed_Codigo = ISOPVPEDITEM.ISOPvPed_Codigo
			AND ISOPVPEDIDO.ISOPvPedSit_Codigo in (1, 30)
		WHERE
			ISOPVPEDITEM.ISOEmp_Codigo = 11
			AND ISOPVPEDITEM.ISOPvPedIteSit_Codigo = 1
		GROUP BY
			ISOPVPEDITEM.ISOEmp_Codigo,
			ISOPVPEDITEM.ISOPvPed_Codigo),
	TOTAL_PEDIDO_EMPENHO AS (
		SELECT
			ISOPVPEDITEM.ISOEmp_Codigo,
			ISOPVPEDITEM.ISOPvPed_Codigo,
			SUM(ISOPVPEDITEM.ISOPvPedIte_Quantidade * ISOPVPEDITEM.ISOPvPedIte_ValorEmpenho) AS ISOPvPed_ValorTotalPedido
		FROM         ISOPVPEDITEM INNER JOIN ISOPVPEDIDO
			ON ISOPVPEDIDO.ISOEmp_Codigo = ISOPVPEDITEM.ISOEmp_Codigo
			AND ISOPVPEDIDO.ISOPvPed_Codigo = ISOPVPEDITEM.ISOPvPed_Codigo
			AND ISOPVPEDIDO.ISOPvPedSit_Codigo in (1, 30)
		WHERE     (ISOPVPEDITEM.ISOEmp_Codigo = 11) AND (ISOPVPEDITEM.ISOPvPedIteSit_Codigo = 1)
		GROUP BY ISOPVPEDITEM.ISOEmp_Codigo, ISOPVPEDITEM.ISOPvPed_Codigo),
	TOTAL_PEDIDO AS (
		SELECT
			ISOPVPEDITEM.ISOEmp_Codigo,
			ISOPVPEDITEM.ISOPvPed_Codigo,
			SUM(ISOPVPEDITEM.ISOPvPedIte_Quantidade * ISOPVPEDITEM.ISOPvPedIte_PrecoAjustado) AS ISOPvPed_ValorTotalPedido
		FROM         ISOPVPEDITEM INNER JOIN ISOPVPEDIDO
			ON ISOPVPEDIDO.ISOEmp_Codigo = ISOPVPEDITEM.ISOEmp_Codigo
			AND ISOPVPEDIDO.ISOPvPed_Codigo = ISOPVPEDITEM.ISOPvPed_Codigo
			AND ISOPVPEDIDO.ISOPvPedSit_Codigo in (1, 30)
		WHERE     (ISOPVPEDITEM.ISOEmp_Codigo = 11) AND (ISOPVPEDITEM.ISOPvPedIteSit_Codigo = 1) --and ISOPvPed_Codigo >= 8741752
		GROUP BY ISOPVPEDITEM.ISOEmp_Codigo, ISOPVPEDITEM.ISOPvPed_Codigo),
	ATENDENTE_PEDIDO AS (
		SELECT
			ISOEnt_Codigo,
			ISOEnt_Nome
		FROM ISOENTIDADE INNER JOIN ISOENTUSUARIO
			ON ISOENTIDADE.ISOEnt_Codigo = ISOENTUSUARIO.ISOEntUsu_Codigo),
	FATOR_CONVERSAO_PRODUTO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPrdUndFatC_PrdCodigo,
			ISOPrdUndFatC_UndOrigem,
			ISOPrdUndFatC_UndDestino,
			-- criado regra de divisão quando a unidade de medida for "M"  --  22/07/2020 zagoto,edilon,cris
			--case
			--	when ISOPrdUndFatC_UndDestino = 'M' then 1 / ISOPrdUndFatC_FatorConversao
			--	else ISOPrdUndFatC_FatorConversao
			--end ISOPrdUndFatC_FatorConversao,
			--ISOPrdUndFatC_FatorConversao AS ISOPrdUndFatC_FatorConversao_Original,
			ISOPrdUndFatC_FatorConversao,
			ISOPrdUndFatC_Flag,
			ISOPrdUndFatC_Armazem
		FROM ISOPRDUNDFATORCONVERSAO WITH (NOLOCK)
		WHERE ISOEmp_Codigo = 11 and ISOPrdUndFatC_Flag = 'A' AND ISOPrdUndFatC_Armazem = ''), -- 02/12/2020 Zagoto - incluido critério de flag PERFORMANCE
	CLIENTE AS (
		SELECT	DISTINCT
			ISOENTCLIENTE.ISOEmp_Codigo,
			ISOENTCLIENTE.ISOEntCli_Codigo,
			ISOENTCLIENTE.ISOEntCli_Operacao
		FROM ISOENTCLIENTE INNER JOIN ISOPVPEDIDO
			ON ISOENTCLIENTE.ISOEmp_Codigo = ISOPVPEDIDO.ISOEmp_Codigo
				AND ISOENTCLIENTE.ISOEntCli_Codigo = ISOPVPEDIDO.ISOPvPed_CliCodigo
				AND ISOPVPEDIDO.ISOEmp_Codigo= 11
				AND ISOPVPEDIDO.ISOPvPedSit_Codigo in (1, 30)),
	LOCAL_FATURAMENTO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvCD_Origem,
			ISOPvCD_Destino,
			ISOPvCDOri_Pedido,
			ISOPvCDOri_Armazem
		FROM ISOPVCDORIGEM WITH (nOLOCK)),
	EMPENHO AS (
		SELECT
			ISOCTPEDCONTRATO.ISOEmp_Codigo,
			ISOCTPEDCONTRATO.ISOCttPedCon_PedidoCodigo,
			ISOCTPEDCONTRATO.ISOCttPedCon_NumeroEmp
		FROM ISOCTPEDCONTRATO WITH (nOLOCK)
		INNER JOIN ISOPVPEDIDO
			ON ISOPVPEDIDO.ISOEmp_Codigo = ISOCTPEDCONTRATO.ISOEmp_Codigo
			AND ISOPVPEDIDO.ISOPvPed_Codigo = ISOCTPEDCONTRATO.ISOCttPedCon_PedidoCodigo
			AND ISOPVPEDIDO.ISOEmp_Codigo = 11
			AND ISOPVPEDIDO.ISOPvPedSit_Codigo in (1, 30)),
	TABELA_CLIENTE AS (
		SELECT	DISTINCT
			ISOENTCLIENTEATTVALUES.ISOEmp_Codigo,
			ISOENTCLIENTEATTVALUES.ISOEntCli_Codigo,
			ISOENTCLIENTEATTVALUES.ISOEntClienteAttId,
			ISOENTCLIENTEATTVALUES.ISOEntClienteAttOtherValue
		FROM ISOENTCLIENTEATTVALUES INNER JOIN ISOPVPEDIDO
			ON ISOENTCLIENTEATTVALUES.ISOEmp_Codigo = ISOPVPEDIDO.ISOEmp_Codigo
				AND ISOENTCLIENTEATTVALUES.ISOEntCli_Codigo = ISOPVPEDIDO.ISOPvPed_CliCodigo
				AND ISOPVPEDIDO.ISOEmp_Codigo= 11
				AND ISOPVPEDIDO.ISOPvPedSit_Codigo in (1, 30)
		WHERE
			ISOENTCLIENTEATTVALUES.ISOEmp_Codigo = 11 AND
			ISOENTCLIENTEATTVALUES.ISOEntClienteAttId = 99),
	ESTABELECIMENTO_LX AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvCD_Origem,
			ISOPvCD_Destino,
			ISOPvCD_Estabelecimento
		FROM ISOPVCD WITH (nOLOCK)),
	ORIGEM_PROTHEUS AS (
		SELECT
			ISOEmp_Codigo,
			ISOEmpEnt_EntCodigo,
			ISOEmpOri_Codigo,
			ISOEmpEnt_Ori_Codigo
		FROM ISOEMPENT_ORIGEM WITH (nOLOCK)
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOEmpOri_Codigo = 13),
	ORIGEM_LX AS (
		SELECT	DISTINCT
			ISOEMPENT_ORIGEM.ISOEmp_Codigo,
			ISOEMPENT_ORIGEM.ISOEmpEnt_EntCodigo,
			ISOEMPENT_ORIGEM.ISOEmpOri_Codigo,
			ISOEMPENT_ORIGEM.ISOEmpEnt_Ori_Codigo
		FROM ISOEMPENT_ORIGEM INNER JOIN ISOPVPEDIDO
			ON ISOEMPENT_ORIGEM.ISOEmp_Codigo = ISOPVPEDIDO.ISOEmp_Codigo
				AND ISOEMPENT_ORIGEM.ISOEmpEnt_EntCodigo = ISOPVPEDIDO.ISOPvPed_CliCodigo
				AND ISOPVPEDIDO.ISOEmp_Codigo= 11
				AND ISOPVPEDIDO.ISOPvPedSit_Codigo in (1, 30)
		WHERE
			ISOEMPENT_ORIGEM.ISOEmp_Codigo = 11 AND
			ISOEMPENT_ORIGEM.ISOEmpOri_Codigo = 2),
	CONDICAO_PAGAMENTO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPeCndPgt_Codigo,
			ISOPeCntPgt_Forma
		FROM ISOPECNDPAGAMENTO WITH (nOLOCK)),
	CUSTO_FINANCEIRO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvTV_Codigo,
			ISOPvEstab_Codigo,
			ISOPvEstabTbV_PercDespFinancei
		FROM ISOPvEstab_TblVenda
		WHERE
			ISOEMP_CODIGO = 11
	),
	ANALISE_CREDITO AS (
		SELECT
			ISOWFTRF_PEDIDO.ISOEmp_Codigo,
			ISOWFTRF_PEDIDO.ISOPvPed_Codigo,
		    CASE WHEN ISOWFTrf_RspExe_RspCodigo IS NULL THEN '' ELSE CONVERT(VARCHAR(8), ISOWFTrf_DataSolucao, 112) END AS ISOWFTrf_DataLiberacaoCredito,  -- Data em que a tarefa de liberação de crédito foi executada
			CASE WHEN ISOWFTrf_RspExe_RspCodigo IS NULL THEN '' ELSE CONVERT(VARCHAR(8), ISOWFTrf_DataSolucao, 108) END AS ISOWFTrf_HoraLiberacaoCredito,
			CASE WHEN ISOWFTrf_RspExe_RspCodigo IS NULL THEN '' ELSE COALESCE(CAST(ISOWFTrf_RspExe_RspCodigo AS VARCHAR(10)),'')+'-'+COALESCE(USUARIO_CEDITO.ISOEnt_Nome,'') END AS ISOWFTrf_CodigoAtendente
		FROM ISOWFTRF_PEDIDO INNER JOIN ISOWFPROCEDIMENTO ON
			ISOWFTRF_PEDIDO.ISOEmp_Codigo = ISOWFPROCEDIMENTO.ISOEmp_Codigo AND
			ISOWFTRF_PEDIDO.ISOWFTrf_Ped_PrcCodigo = ISOWFPROCEDIMENTO.ISOWFPrc_Codigo AND
			ISOWFPROCEDIMENTO.ISOWFPrcPad_Codigo IN (SELECT ISOWFPrcPad_Codigo FROM ISOWFPrcPadrao where isoemp_codigo = 11 and ISOWFPrcPad_Descricao like 'BO%' and ISOWFPrcPad_Flag = 'A') AND -- PROCEDIMENTO ( PEDIDO - ANALISE DE CREDITO)
			ISOWFTRF_PEDIDO.ISOWFTrf_Ped_TrfCodigo = 1 --- CÓDIGO DA TAREFA QUE O ATENDENTE IRÁ CONFIRMAR O CRÉDITO DO CLIENTE ********
		INNER JOIN ISOWFTAREFA ON -- TAREFA DE LIBERAÇÃO DE CRÉDITO
			ISOWFTRF_PEDIDO.ISOEmp_Codigo = ISOWFTAREFA.ISOEmp_Codigo AND
			ISOWFTRF_PEDIDO.ISOWFTrf_Ped_PrcCodigo = ISOWFTAREFA.ISOWFPrc_Codigo AND
			ISOWFTRF_PEDIDO.ISOWFTrf_Ped_TrfCodigo = ISOWFTAREFA.ISOWFTrfPad_Codigo AND
			ISOWFTAREFA.ISOWFTrfPad_Codigo = 1 AND  -- TAREFA (ANALISAR PEDIDO RETIDO EM CREDITO)
			ISOWFTAREFA.ISOWFTrfPadSit_Codigo = 1  -- SITUACAO (PEDIDO APROVADO DE CREDITO)
		INNER JOIN ISOENTIDADE AS USUARIO_CEDITO ON -- USUÁRIO QUE LIBEROU O CRÉDITO DO CLIENTE
			ISOWFTAREFA.ISOWFTrf_RspExe_RspCodigo = USUARIO_CEDITO.ISOEnt_Codigo
		WHERE ISOWFTRF_PEDIDO.ISOEmp_Codigo = 11
		AND ISOWFTRF_PEDIDO.ISOPvPed_Codigo IN (SELECT ISOPVPED_CODIGO FROM ISOPVPEDIDO WHERE ISOEMP_CODIGO = 11 AND ISOPVPEDSIT_CODIGO IN (1,30))
		AND ISOWFTRF_PEDIDO.ISOWFTrf_Ped_PrcCodigo = (SELECT MAX(X.ISOWFTrf_Ped_PrcCodigo) FROM ISOWFTRF_PEDIDO X WHERE ISOWFTRF_PEDIDO.ISOEmp_Codigo = X.ISOEmp_Codigo AND ISOWFTRF_PEDIDO.ISOPvPed_Codigo = X.ISOPvPed_Codigo)),
	TIPO_FRETE AS (
		SELECT 	DISTINCT
			ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOEmp_Codigo,
			ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOPvPed_Codigo,
			COALESCE(ISOPvPedidoAttOptValue,'') AS ISOPvPedidoTipoFrete
		FROM ISOPVPEDIDOATTVALUES AS ISOPVPEDIDOATTVALUES_TIPO_FRETE
		INNER JOIN ISOPVPEDIDOATTLEVEL1 ON
			ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOEmp_Codigo = ISOPVPEDIDOATTLEVEL1.ISOEmp_Codigo AND
			ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOPvPedidoAttId = ISOPVPEDIDOATTLEVEL1.ISOPvPedidoAttId AND
			ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOPvPedidoAttOptId = ISOPVPEDIDOATTLEVEL1.ISOPvPedidoAttOptId AND
			ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOPvPedidoAttId = 104 -- CÓDIGO DA PERGUNTA TIPO DO FRETE
		WHERE
			ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOEmp_Codigo = 11
			AND ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOPvPed_Codigo IN (SELECT ISOPVPED_CODIGO FROM ISOPVPEDIDO WHERE ISOEMP_CODIGO = 11 AND ISOPVPEDSIT_CODIGO IN (1,30))
			),
	TRANSPORTADORA AS (
		SELECT 	DISTINCT
			ISOPVPEDIDOATTVALUES_TRANSP.ISOEmp_Codigo,
			ISOPVPEDIDOATTVALUES_TRANSP.ISOPvPed_Codigo,
			COALESCE(ISOPvTrp_CodigoExterno,'') AS ISOPvPedido_CodigoTRP
		FROM ISOPVPEDIDOATTVALUES AS ISOPVPEDIDOATTVALUES_TRANSP
		INNER JOIN ISOPVTRANSPORTADORA ON
			ISOPVTRANSPORTADORA.ISOPvTrp_Codigo = ISOPVPEDIDOATTVALUES_TRANSP.ISOPvPedidoAttOptId AND
			ISOPVPEDIDOATTVALUES_TRANSP.ISOPvPedidoAttId = 105 --AND -- CÓDIGO DA PERGUNTA TRANSPORTADORA
			--ISOPVTRANSPORTADORA.ISOPvTrp_Flag = 'A'
		WHERE ISOPVPEDIDOATTVALUES_TRANSP.ISOEmp_Codigo = 11
			AND ISOPVPEDIDOATTVALUES_TRANSP.ISOPvPed_Codigo IN (SELECT ISOPVPED_CODIGO FROM ISOPVPEDIDO WHERE ISOEMP_CODIGO = 11 AND ISOPVPEDSIT_CODIGO IN (1,30))
		),
	--OBSERVACAO_ITEM_PEDIDO AS (
	--	SELECT
	--		ISOEmp_Codigo,
	--		ISOPvPed_Codigo,
	--		ISOPvPedIte_Codigo,
	--		ISOPvPedItemAttValue
	--	FROM ISOPVPEDITEMATTVALUES WITH (nOLOCK)
	--	WHERE
	--		ISOEmp_Codigo = 11 AND
	--		ISOPvPedItemAttId = 2),
	OC_DO_CLIENTE AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (nOLOCK)
		WHERE
			ISOEmp_Codigo = 11
			AND ISOPVPEDITEMATTVALUES.ISOPvPed_Codigo IN (SELECT ISOPVPED_CODIGO FROM ISOPVPEDIDO WHERE ISOEMP_CODIGO = 11 AND ISOPVPEDSIT_CODIGO IN (1,30))
			AND ISOPvPedItemAttId = 1),
	LINHA_PEDIDO_CLIENTE AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (nOLOCK)
		WHERE
			ISOEmp_Codigo = 11
			AND ISOPVPEDITEMATTVALUES.ISOPvPed_Codigo IN (SELECT ISOPVPED_CODIGO FROM ISOPVPEDIDO WHERE ISOEMP_CODIGO = 11 AND ISOPVPEDSIT_CODIGO IN (1,30))
			AND ISOPvPedItemAttId = 2),
	LINHA_ORDEM_COMPRA AS (
		SELECT ISOPVPEDITEM.ISOEmp_Codigo, ISOPVPEDITEM.ISOPVPED_CODIGO, ITEM_PEDIDO, ITEM_CLIENTE
			FROM ISOPVPEDITEM LEFT OUTER JOIN (
			SELECT
				ISOEMP_CODIGO,
				ISOPVPED_CODIGO,
				CASE
					WHEN CHARINDEX('-',VALOR,1) > 1
					THEN SUBSTRING(VALOR,1,CHARINDEX('-',VALOR,1)-1)
					ELSE 0
				END AS ITEM_PEDIDO,
				SUBSTRING(VALOR,CHARINDEX('-',VALOR,1)+1,3) AS ITEM_CLIENTE
			-- incluido função para remover caracteres inválidos, como espaço e TAB
			FROM ISOPVPEDIDOATTVALUES CROSS APPLY DBO.SPLIT(REPLACE(REPLACE(LTRIM(RTRIM(ISOPVPEDIDOATTVALUELONG)),CHAR(32),''),CHAR(9),''),CHAR(10))
			--FROM ISOPVPEDIDOATTVALUES CROSS APPLY DBO.SPLIT(ISOPVPEDIDOATTVALUELONG,CHAR(10))
			WHERE ISOEMP_CODIGO = 11
			AND ISOPVPEDIDOATTID = 106
			AND PATINDEX('%[A-Z]%', ISOPVPEDIDOATTVALUELONG) = 0
			AND ISOPVPED_CODIGO IN (SELECT ISOPVPED_CODIGO FROM ISOPVPEDIDO WHERE ISOEMP_CODIGO = 11 AND ISOPVPEDSIT_CODIGO IN (1,30))
			AND CHARINDEX('-',VALOR,1) > 1
			AND VALOR <> '') DADO_COMPLEMENTAR_PEDIDO
				ON ISOPVPEDITEM.ISOEmp_Codigo = DADO_COMPLEMENTAR_PEDIDO.ISOEmp_Codigo AND
					ISOPVPEDITEM.ISOPvPed_Codigo = DADO_COMPLEMENTAR_PEDIDO.ISOPvPed_Codigo AND
					ISOPVPEDITEM.ISOPvPedIte_Codigo = DADO_COMPLEMENTAR_PEDIDO.ITEM_PEDIDO
			WHERE ISOPVPEDITEM.ISOEmp_Codigo = 11
			AND ISOPVPEDITEM.ISOPVPED_CODIGO IN (SELECT ISOPVPED_CODIGO FROM ISOPVPEDIDO WHERE ISOEMP_CODIGO = 11 AND ISOPVPEDSIT_CODIGO IN (1,30))),
	LOTE1 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- lote 1 do item do pedido
		WHERE
			ISOEmp_Codigo = 11
			AND ISOPVPEDITEMATTVALUES.ISOPvPed_Codigo IN (SELECT ISOPVPED_CODIGO FROM ISOPVPEDIDO WHERE ISOEMP_CODIGO = 11 AND ISOPVPEDSIT_CODIGO IN (1,30))
			AND ISOPvPedItemAttId = 4),
	QTD1 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- qtde 1 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 5),
	LOTE2 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- lote 2 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 6),
	QTD2 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- qtde 2 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 7),
	LOTE3 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- lote 3 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 8),
	QTD3 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- qtde 3 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 9),
	LOTE4 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- lote 4 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 10),
	QTD4 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- qtde 4 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 11),
	LOTE5 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- lote 5 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 12),
	QTD5 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK)-- qtde 5 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 13),
	NATUREZA_OPERACAO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPedTip_Codigo,
			COALESCE(ISOPvPedTip_NaturezaOperacaoCo,'') AS ISOPvPedTip_NaturezaOperacaoCo
		FROM ISOPVPEDTIPO WITH (nOLOCK)
		WHERE
			ISOEmp_Codigo = 11)
	--MATRIZ_ICMS AS (
	--	SELECT
	--		ISOEmp_Codigo,
	--		ISOPvPed_CliCodigo,
	--		ISOPvPed_Codigo,
	--		ISOPvPedIte_Codigo,
	--		ISOPrd_Codigo,
	--		ISOPvMatICMS_SubTribICMSDocFis,
	--		ISOPvMatICMS_AliquotaICMS
	--	FROM MacroConsultaMatrizICMS WITH (NOLOCK)
	--	WHERE
	--		ISOEmp_Codigo = 11)
SELECT
	PEDIDO.ISOEmp_Codigo, -- Código da empresa
	PEDIDO.ISOPvPed_Codigo, -- Código CRM do Pedido
	PEDIDO.ISOPvPed_CliCodigo, -- Código CRM do cliente
	PEDIDO.ISOPvPed_DtaPedido,  -- Data do pedido
	PEDIDO.ISOPvPed_HoraPedido, -- Hora do pedido
	CASE CONDICAO_PAGAMENTO.ISOPeCntPgt_Forma
		WHEN 'Bol' THEN 'BOLETO'
		WHEN 'Car' THEN 'CARTAO'
		WHEN 'Che' THEN 'CHEQUE'
		WHEN 'Dep' THEN 'DEPOSITO'
		WHEN 'Din' THEN 'Dinheiro'
	END AS ISOPeCntPgt_Forma, -- Forma de pagamento
	PEDIDO.ISOPvPed_Pagamento, -- Condição de pagamento
	PEDIDO.ISOPvPed_DtaSolEntrega,
	PEDIDO.ISOPvPed_CodEndEntrega,
	PEDIDO.ISOPvPedOri_Codigo,
	PEDIDO.ISOPvPedTip_Codigo,
	PEDIDO.ISOPvPed_CodEndCobranca,

	CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0 THEN TOTAL_PEDIDO_EMPENHO.ISOPvPed_ValorTotalPedido ELSE PEDIDO.ISOPvPed_ValorTotalPedido END AS ISOPvPed_ValorTotalPedido,

	PEDIDO_ITEM.ISOPvPedIte_Codigo, -- Sequencial do item do pedido
	PEDIDO_ITEM.ISOPrd_Codigo, -- Código do produto
	CASE
		WHEN ISNULL(NULLIF(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0),0) = 0
		THEN 0
		ELSE PEDIDO_ITEM.ISOPvPedIte_Quantidade
	END ISOPvPedIte_Quantidade,
	PEDIDO_ITEM.ISOPvPedIte_DataEntregaItem AS ISOPvPedIte_DataPromessa,
	PEDIDO_ITEM.ISOPvPedIte_DtaSolEntrega,
	PEDIDO_ITEM.ISOPvPedIte_UnidadeOrigem,
	PEDIDO_ITEM.ISOPvPedIte_UnidadeDestino,
	ROUND(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,6) AS ISOPrdUndFatC_FatorConversao, -- Fator de conversão sem decimais
	ROUND(PEDIDO_ITEM.ISOPvPedIte_Quantidade * ROUND(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,6),0) AS ISOPvPedIte_Qtd_UM_estoque,
	CASE
		WHEN ISNULL(NULLIF(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0),0) = 0
		THEN 0
		--ELSE CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho >0 THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho ELSE ROUND(PEDIDO_ITEM.ISOPvPedIte_ValorUnitario,6) END
		ELSE CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0 THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho ELSE ROUND(PEDIDO_ITEM.ISOPvPedIte_PrecoAjustadoTotal / PEDIDO_ITEM.ISOPvPedIte_Quantidade,6) END
	END ISOPvPedIte_Vlr_Total_Unitario,

	-- ZZ3_VALMON -- 27/10/2021
	CASE
		WHEN ISNULL(NULLIF(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0),0) = 0
		THEN 0
		ELSE
			CASE
				WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0
					THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho
					ELSE --PEDIDO_ITEM.ISOPvPedIte_PrecoAjustado
						 ROUND(PEDIDO_ITEM.ISOPvPedIte_PrecoAjustadoTotal / PEDIDO_ITEM.ISOPvPedIte_Quantidade,2) --alterado em 27/10/2021 por CRIS solicitado por Edilon para usar somente 2 casas decimais
				END / NULLIF(ROUND(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,6),0)
	END ISOPvPedIte_Vlr_Total_Unitario_EST,

	PEDIDO_ITEM.ISOPvPedIteSit_Codigo,
	PEDIDO_ITEM.ISOPvPedIte_AgendamentoData,
	PEDIDO_ITEM.ISOPvPedIte_AgendamentoHoraIni,
	PEDIDO_ITEM.ISOPvPedIte_AgendamentoHoraFin,
	PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,
	-- DESATIVADO 21/08/2020 - EDILON - para pedidos de contrato o valor de frete deve ser mostrado
	--CASE
	--	WHEN COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) > 0
	--	THEN 0
	--	ELSE COALESCE(PEDIDO.ISOPvPed_ValorFrete,0)
	--END AS ISOPvPed_ValorFrete,
	COALESCE(PEDIDO.ISOPvPed_ValorFrete,0) AS ISOPvPed_ValorFrete,
	COALESCE(ORIGEM_PROTHEUS.ISOEmpEnt_Ori_Codigo,'') AS ISOEmpEnt_CliCod_ERP,
	ORIGEM_LX.ISOEmpEnt_Ori_Codigo AS ISOEmpEnt_Ori_LX,
	LOCAL_FATURAMENTO.ISOPvCDOri_Armazem AS ISOPvPedIte_Armazem,
	COALESCE(CLIENTE.ISOEntCli_Operacao,'') AS ISOEntCli_Operacao,
	ESTABELECIMENTO_LX.ISOPvCD_Estabelecimento AS ISOPvCD_Estabelecimento_LX,
	PEDIDO.ISOPvPed_CodigoAtendente AS ISOPvPed_CodigoAtendente, -- Código do atendente que criou o pedido
	ATENDENTE_PEDIDO.ISOEnt_Nome AS ISOEnt_NomeAtendente, -- Nome do atendente que criou o pedido

	/*
	'2020-05-13 00:00:00.000' AS ISOWFTrf_DataLiberacaoCredito, -- Data em que a tarefa de liberação de crédito foi executada
    '11:00:00' AS ISOWFTrf_HoraLiberacaoCredito,  -- Hora em que a tarefa de liberação de crédito foi executada
    975190 AS ISOWFTrf_CodigoAtendente, -- Responsável que executou a tarefa de liberação de crédito
	*/

	COALESCE(ANALISE_CREDITO.ISOWFTrf_DataLiberacaoCredito,'') AS ISOWFTrf_DataLiberacaoCredito, -- Data em que a tarefa de liberação de crédito foi executada
    COALESCE(ANALISE_CREDITO.ISOWFTrf_HoraLiberacaoCredito,'') AS ISOWFTrf_HoraLiberacaoCredito,  -- Hora em que a tarefa de liberação de crédito foi executada
    COALESCE(ANALISE_CREDITO.ISOWFTrf_CodigoAtendente,'') AS ISOWFTrf_CodigoAtendente, -- Responsável que executou a tarefa de liberação de crédito

	CASE
		WHEN PEDIDO.ISOPvPedOri_Codigo = 'EUR' THEN 3
		WHEN PEDIDO.ISOPvPedOri_Codigo = 'EU1' THEN 3
		WHEN PEDIDO.ISOPvPedOri_Codigo = 'USD' THEN 2
		WHEN PEDIDO.ISOPvPedOri_Codigo = 'US1' THEN 2
		ELSE 1
	END AS ISOMoe_Codigo,

	COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorIPI,0) AS ISOPvPedIte_ValorIPI,
	COALESCE(PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria,0) AS ISOPvPedIte_VlrSubsTrib,
	COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorICMS,0) AS ISOPvPedIte_ValorICMS,
	COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorPIS,0) AS ISOPvPedIte_ValorPIS,
	COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorCofins,0) AS ISOPvPedIte_ValorCofins,
	COALESCE(PEDIDO_ITEM.ISOPVPedIte_ValorFCPST,0) AS ISOPVPedIte_ValorFCPST,
	COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorFCP,0) AS ISOPvPedIte_ValorFCP,
	COALESCE(TRANSPORTADORA.ISOPvPedido_CodigoTRP,'') AS ISOPvPedido_CodigoTRP,
	COALESCE(TIPO_FRETE.ISOPvPedidoTipoFrete,'') AS ISOPvPedidoTipoFrete,
	COALESCE(TABELA_CLIENTE.ISOEntClienteAttOtherValue,'') AS ISOEmpEnt_Tabela_Preco,
	PEDIDO_ITEM.ISOPvPedIte_PrecoLista,
	COALESCE(PEDIDO.ISOPVPed_OrdCompra,'') AS ISOPVPed_OrdCompra,

	CASE
		WHEN LINHA_ORDEM_COMPRA.ITEM_CLIENTE <> ''
		THEN COALESCE(PEDIDO.ISOPVPed_OrdCompra,'')
		ELSE
			CASE
				WHEN COALESCE(RTRIM(LTRIM(SUBSTRING(OC_DO_CLIENTE.ISOPvPedItemAttValue,1,15))),'') <> ''
				THEN COALESCE(RTRIM(LTRIM(SUBSTRING(OC_DO_CLIENTE.ISOPvPedItemAttValue,1,15))),'')
				ELSE COALESCE(PEDIDO.ISOPVPed_OrdCompra,'')
			END
	END AS ISOPvPedIte_NrOrdemCompra,

	CASE
		WHEN ABS(COALESCE(LINHA_PEDIDO_CLIENTE.ISOPvPedItemAttValue,LINHA_ORDEM_COMPRA.ITEM_CLIENTE,'')) = 0 AND LINHA_ORDEM_COMPRA.ITEM_CLIENTE <> ''
		THEN PEDIDO_ITEM.ISOPvPedIte_Codigo
		ELSE ABS(COALESCE(LINHA_PEDIDO_CLIENTE.ISOPvPedItemAttValue,LINHA_ORDEM_COMPRA.ITEM_CLIENTE,''))
	END
		AS ISOPvPedIte_LinhaOrdemCompra,

	COALESCE(RTRIM(LTRIM(SUBSTRING(LOTE1.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_Lote1,
	COALESCE(RTRIM(LTRIM(SUBSTRING(QTD1.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_QtdeLote1,
	COALESCE(RTRIM(LTRIM(SUBSTRING(LOTE2.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_Lote2,
	COALESCE(RTRIM(LTRIM(SUBSTRING(QTD2.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_QtdeLote2,
	COALESCE(RTRIM(LTRIM(SUBSTRING(LOTE3.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_Lote3,
	COALESCE(RTRIM(LTRIM(SUBSTRING(QTD3.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_QtdeLote3,
	COALESCE(RTRIM(LTRIM(SUBSTRING(LOTE4.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_Lote4,
	COALESCE(RTRIM(LTRIM(SUBSTRING(QTD4.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_QtdeLote4,
	COALESCE(RTRIM(LTRIM(SUBSTRING(LOTE5.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_Lote5,
	COALESCE(RTRIM(LTRIM(SUBSTRING(QTD5.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_QtdeLote5,
	COALESCE(NATUREZA_OPERACAO.ISOPvPedTip_NaturezaOperacaoCo,'') AS ISOPvPed_Operacao,

	/*
	Inativado por devergência de valores com protheus 13/05/20 (Edilon,Leticia)
	(PEDIDO_ITEM.ISOPvPedIte_ValorTotalCalculoF - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade)) AS ISOPvPedIte_PrecoCMLIntegracaoBO,
	((PEDIDO_ITEM.ISOPvPedIte_ValorTotalCalculoF - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade)) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao) AS ISOPvPedIte_PrecoUNESTIntegracaoBO,
	*/

/*
	CASE
		WHEN MATRIZ_ICMS.ISOPvMatICMS_SubTribICMSDocFis = 1
		THEN ROUND((PEDIDO_ITEM.ISOPvPedIte_ValorUnitario - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade)),6)
		ELSE ROUND((CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0 THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho ELSE PEDIDO_ITEM.ISOPvPedIte_ValorUnitario END - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade) - (PEDIDO_ITEM.ISOPvPedIte_ValorIPI / PEDIDO_ITEM.ISOPvPedIte_Quantidade)),6)
	END AS ISOPvPedIte_PrecoCMLIntegracaoBO,

	CASE
		WHEN MATRIZ_ICMS.ISOPvMatICMS_SubTribICMSDocFis = 1
		THEN ROUND(((PEDIDO_ITEM.ISOPvPedIte_ValorTotalCalculoF - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade)) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao),6)
		ELSE ROUND(((CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0 THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho ELSE PEDIDO_ITEM.ISOPvPedIte_ValorUnitario END - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade) - (PEDIDO_ITEM.ISOPvPedIte_ValorIPI / PEDIDO_ITEM.ISOPvPedIte_Quantidade)) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao),6)
	END AS ISOPvPedIte_PrecoUNESTIntegracaoBO,
*/

	-- INATIVADO 11/06/2021 zagoto
	-- Troca de consulta da view matriz de icms "MacroConsultaMatrizICMS" por function "MacroConsultaMatrizICMS_FAST" por questão de performance
	--CASE
	--	WHEN COALESCE(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0) = 0
	--		THEN 0
	--	ELSE
	--	CASE
	--		-- cliente TEM desoneração e o pedido é empenho
	--		-- PERFORMANCE WHEN MATRIZ_ICMS.ISOPvMatICMS_SubTribICMSDocFis = 1 AND COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) > 0
	--		WHEN (SELECT ISOPvMatICMS_SubTribICMSDocFis FROM MacroConsultaMatrizICMS WHERE MacroConsultaMatrizICMS.ISOEmp_Codigo = PEDIDO_ITEM.ISOEmp_Codigo AND MacroConsultaMatrizICMS.ISOPvPed_Codigo = PEDIDO_ITEM.ISOPvPed_Codigo AND MacroConsultaMatrizICMS.ISOPvPedIte_Codigo = PEDIDO_ITEM.ISOPvPedIte_Codigo) = 1 AND COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) > 0
	--			-- PERFORMANCE THEN ROUND(((((PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho / (1 - (MATRIZ_ICMS.ISOPvMatICMS_AliquotaICMS/100)) / (1 + (PEDIDO_ITEM.ISOPvPedIte_PercentualIPI / 100)))))),6)
	--			THEN ROUND(((((PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho / (1 - ((SELECT ISOPvMatICMS_AliquotaICMS FROM MacroConsultaMatrizICMS WHERE MacroConsultaMatrizICMS.ISOEmp_Codigo = PEDIDO_ITEM.ISOEmp_Codigo AND MacroConsultaMatrizICMS.ISOPvPed_Codigo = PEDIDO_ITEM.ISOPvPed_Codigo AND MacroConsultaMatrizICMS.ISOPvPedIte_Codigo = PEDIDO_ITEM.ISOPvPedIte_Codigo)/100)) / (1 + (PEDIDO_ITEM.ISOPvPedIte_PercentualIPI / 100)))))),6)
	--		-- cliente TEM desoneração e o pedido NÃO é empenho
	--		-- PERFORMANCE WHEN MATRIZ_ICMS.ISOPvMatICMS_SubTribICMSDocFis = 1 AND COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) = 0
	--		WHEN (SELECT ISOPvMatICMS_SubTribICMSDocFis FROM MacroConsultaMatrizICMS WHERE MacroConsultaMatrizICMS.ISOEmp_Codigo = PEDIDO_ITEM.ISOEmp_Codigo AND MacroConsultaMatrizICMS.ISOPvPed_Codigo = PEDIDO_ITEM.ISOPvPed_Codigo AND MacroConsultaMatrizICMS.ISOPvPedIte_Codigo = PEDIDO_ITEM.ISOPvPedIte_Codigo) = 1 AND COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) = 0
	--			-- desativado 22/06/2020 para utilizar novo campo de preco ajustado do item --	THEN ROUND(((PEDIDO_ITEM.ISOPvPedIte_ValorTotalCalculoF - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade)) ),6)
	--			THEN ROUND(PEDIDO_ITEM.ISOPvPedIte_PrecoAjustado ,6)
	--		--ELSE ROUND((CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0 THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho ELSE PEDIDO_ITEM.ISOPvPedIte_ValorUnitario END - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade) - (PEDIDO_ITEM.ISOPvPedIte_ValorIPI / PEDIDO_ITEM.ISOPvPedIte_Quantidade)),6)
	--		-- cliente SEM desoneração
	--		ELSE ROUND((CASE
	--						WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0
	--							THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho / (1 + ((PEDIDO_ITEM.ISOPvPedIte_PercSubsTributaria + PEDIDO_ITEM.ISOPvPedIte_PercentualFCPST)/100.0) ) / ((1+(PEDIDO_ITEM.ISOPvPedIte_PercentualIPI/100.0)) )
	--						--inativado pois não considerava o rateio do frete
	--						--ELSE (PEDIDO_ITEM.ISOPvPedIte_ValorUnitario - ((PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade) + PEDIDO_ITEM.ISOPVPedIte_ValorFCPST) - (PEDIDO_ITEM.ISOPvPedIte_ValorIPI / PEDIDO_ITEM.ISOPvPedIte_Quantidade))
	--						-- desativado 22/06/2020 para utilizar novo campo de preco ajustado do item --	ELSE ((((PEDIDO_ITEM.ISOPvPedIte_ValorUnitario * PEDIDO_ITEM.ISOPvPedIte_Quantidade) - (((PEDIDO_ITEM.ISOPvPedIte_ValorUnitario * PEDIDO_ITEM.ISOPvPedIte_Quantidade) / TOTAL_PEDIDO.ISOPvPed_ValorTotalPedido) * PEDIDO.ISOPvPed_ValorFrete)) / PEDIDO_ITEM.ISOPvPedIte_Quantidade) - ((PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade) + PEDIDO_ITEM.ISOPVPedIte_ValorFCPST) - (PEDIDO_ITEM.ISOPvPedIte_ValorIPI / PEDIDO_ITEM.ISOPvPedIte_Quantidade))
	--						ELSE PEDIDO_ITEM.ISOPvPedIte_PrecoAjustado -- desativado 16/07/2020 o valor já está na unidade comercial * PEDIDO_ITEM.ISOPvPedIte_Quantidade -- desativado 09/07/2020 pois o preco ajustado já está sem o frete ((((PEDIDO_ITEM.ISOPvPedIte_PrecoAjustado * PEDIDO_ITEM.ISOPvPedIte_Quantidade) - (((PEDIDO_ITEM.ISOPvPedIte_ValorUnitario * PEDIDO_ITEM.ISOPvPedIte_Quantidade) / TOTAL_PEDIDO.ISOPvPed_ValorTotalPedido) * PEDIDO.ISOPvPed_ValorFrete)) / PEDIDO_ITEM.ISOPvPedIte_Quantidade) )
	--					END )  / (1 + (ISOPvEstabTbV_PercDespFinancei / 100.00) ),6)
	--	END
	--END AS ISOPvPedIte_PrecoCMLIntegracaoBO,

	--ROUND (
	--CASE
	--	WHEN COALESCE(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0) = 0
	--		THEN 0
	--	ELSE
	--	CASE
	--		-- cliente TEM desoneração e o pedido é empenho
	--		-- PERFORMANCE WHEN MATRIZ_ICMS.ISOPvMatICMS_SubTribICMSDocFis = 1 AND COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) > 0
	--		WHEN (SELECT ISOPvMatICMS_SubTribICMSDocFis FROM MacroConsultaMatrizICMS WHERE MacroConsultaMatrizICMS.ISOEmp_Codigo = PEDIDO_ITEM.ISOEmp_Codigo AND MacroConsultaMatrizICMS.ISOPvPed_Codigo = PEDIDO_ITEM.ISOPvPed_Codigo AND MacroConsultaMatrizICMS.ISOPvPedIte_Codigo = PEDIDO_ITEM.ISOPvPedIte_Codigo) = 1 AND COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) > 0
	--			-- PERFORMANCE THEN ROUND(((((PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho / (1 - (MATRIZ_ICMS.ISOPvMatICMS_AliquotaICMS/100)) / (1 + (PEDIDO_ITEM.ISOPvPedIte_PercentualIPI / 100))))) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao),6)
	--			THEN ROUND(((((PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho / (1 - ((SELECT ISOPvMatICMS_AliquotaICMS FROM MacroConsultaMatrizICMS WHERE MacroConsultaMatrizICMS.ISOEmp_Codigo = PEDIDO_ITEM.ISOEmp_Codigo AND MacroConsultaMatrizICMS.ISOPvPed_Codigo = PEDIDO_ITEM.ISOPvPed_Codigo AND MacroConsultaMatrizICMS.ISOPvPedIte_Codigo = PEDIDO_ITEM.ISOPvPedIte_Codigo)/100)) / (1 + (PEDIDO_ITEM.ISOPvPedIte_PercentualIPI / 100))))) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao),6)
	--		-- cliente TEM desoneração e o pedido NÃO é empenho
	--		--PERFORMANCE WHEN MATRIZ_ICMS.ISOPvMatICMS_SubTribICMSDocFis = 1 AND COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) = 0
	--		WHEN (SELECT ISOPvMatICMS_SubTribICMSDocFis FROM MacroConsultaMatrizICMS WHERE MacroConsultaMatrizICMS.ISOEmp_Codigo = PEDIDO_ITEM.ISOEmp_Codigo AND MacroConsultaMatrizICMS.ISOPvPed_Codigo = PEDIDO_ITEM.ISOPvPed_Codigo AND MacroConsultaMatrizICMS.ISOPvPedIte_Codigo = PEDIDO_ITEM.ISOPvPedIte_Codigo) = 1 AND COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) = 0
	--		-- desativado 22/06/2020 para utilizar novo campo de preco ajustado do item --	THEN ROUND(((PEDIDO_ITEM.ISOPvPedIte_ValorTotalCalculoF - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade)) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao),6)
	--			THEN ROUND((PEDIDO_ITEM.ISOPvPedIte_PrecoAjustado / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao),6)
	--		-- desativado 28/05/2020 pois utilizando valor dos impostos os valores não fechavam ELSE ROUND(((CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0 THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho ELSE PEDIDO_ITEM.ISOPvPedIte_ValorUnitario END - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade) - (PEDIDO_ITEM.ISOPvPedIte_ValorIPI / PEDIDO_ITEM.ISOPvPedIte_Quantidade)) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao),6)
	--		-- cliente SEM desoneração
	--		ELSE ROUND((CASE
	--						WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0
	--							THEN COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) / (1 + ((PEDIDO_ITEM.ISOPvPedIte_PercSubsTributaria + PEDIDO_ITEM.ISOPvPedIte_PercentualFCPST)/100.0) ) / ((1+(PEDIDO_ITEM.ISOPvPedIte_PercentualIPI/100.0)) )
	--						--inativado pois não considerava o rateio do frete
	--						--ELSE (PEDIDO_ITEM.ISOPvPedIte_ValorUnitario - ((PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade) + PEDIDO_ITEM.ISOPVPedIte_ValorFCPST) - (PEDIDO_ITEM.ISOPvPedIte_ValorIPI / PEDIDO_ITEM.ISOPvPedIte_Quantidade))
	--						-- desativado 22/06/2020 para utilizar novo campo de preco ajustado do item --	ELSE ((((PEDIDO_ITEM.ISOPvPedIte_ValorUnitario * PEDIDO_ITEM.ISOPvPedIte_Quantidade) - (((PEDIDO_ITEM.ISOPvPedIte_ValorUnitario * PEDIDO_ITEM.ISOPvPedIte_Quantidade) / TOTAL_PEDIDO.ISOPvPed_ValorTotalPedido) * PEDIDO.ISOPvPed_ValorFrete)) / PEDIDO_ITEM.ISOPvPedIte_Quantidade) - ((PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade) + PEDIDO_ITEM.ISOPVPedIte_ValorFCPST) - (PEDIDO_ITEM.ISOPvPedIte_ValorIPI / PEDIDO_ITEM.ISOPvPedIte_Quantidade))
	--						ELSE PEDIDO_ITEM.ISOPvPedIte_PrecoAjustado ---  desativado 09/07/2020 pois o preco ajustado já está sem o frete ((PEDIDO_ITEM.ISOPvPedIte_PrecoAjustado) - ((((PEDIDO_ITEM.ISOPvPedIte_PrecoAjustado * PEDIDO_ITEM.ISOPvPedIte_Quantidade) / TOTAL_PEDIDO.ISOPvPed_ValorTotalPedido) * PEDIDO.ISOPvPed_ValorFrete) / PEDIDO_ITEM.ISOPvPedIte_Quantidade))
	--					END ) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,6)
	--	END
	--END / (1 + (ISOPvEstabTbV_PercDespFinancei / 100.00) ), 6) AS ISOPvPedIte_PrecoUNESTIntegracaoBO,
	-- INATIVADO 11/06/2021 zagoto

	-- performance1
	CASE
		WHEN COALESCE(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0) = 0
			THEN 0
		ELSE
		CASE
			-- cliente TEM desoneração e o pedido é empenho
			WHEN ICMS_FAST.SubTribICMSDocFis = 1 AND COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) > 0
				THEN ROUND(((((PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho / (1 - (ICMS_FAST.AliquotaICMS/100)) / (1 + (PEDIDO_ITEM.ISOPvPedIte_PercentualIPI / 100)))))),6)
			-- cliente TEM desoneração e o pedido NÃO é empenho
			WHEN ICMS_FAST.SubTribICMSDocFis = 1 AND COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) = 0
				THEN ROUND(PEDIDO_ITEM.ISOPvPedIte_PrecoAjustado ,6)
			-- cliente SEM desoneração
			ELSE ROUND((CASE
							WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0
								THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho / (1 + ((PEDIDO_ITEM.ISOPvPedIte_PercSubsTributaria + PEDIDO_ITEM.ISOPvPedIte_PercentualFCPST)/100.0) ) / ((1+(PEDIDO_ITEM.ISOPvPedIte_PercentualIPI/100.0)) )
							ELSE PEDIDO_ITEM.ISOPvPedIte_PrecoAjustado -- desativado 16/07/2020 o valor já está na unidade comercial * PEDIDO_ITEM.ISOPvPedIte_Quantidade -- desativado 09/07/2020 pois o preco ajustado já está sem o frete ((((PEDIDO_ITEM.ISOPvPedIte_PrecoAjustado * PEDIDO_ITEM.ISOPvPedIte_Quantidade) - (((PEDIDO_ITEM.ISOPvPedIte_ValorUnitario * PEDIDO_ITEM.ISOPvPedIte_Quantidade) / TOTAL_PEDIDO.ISOPvPed_ValorTotalPedido) * PEDIDO.ISOPvPed_ValorFrete)) / PEDIDO_ITEM.ISOPvPedIte_Quantidade) )
						END )  / (1 + (ISOPvEstabTbV_PercDespFinancei / 100.00) ),6)
		END
	END AS ISOPvPedIte_PrecoCMLIntegracaoBO,
	-- performance1

	-- performance2
	ROUND (
	CASE
		WHEN COALESCE(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0) = 0
			THEN 0
		ELSE
		CASE
			-- cliente TEM desoneração e o pedido é empenho
			WHEN ICMS_FAST.SubTribICMSDocFis = 1 AND COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) > 0
				THEN ROUND(((((PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho / (1 - (ICMS_FAST.AliquotaICMS/100)) / (1 + (PEDIDO_ITEM.ISOPvPedIte_PercentualIPI / 100))))) / ROUND(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,6)),6)
			-- cliente TEM desoneração e o pedido NÃO é empenho
			WHEN ICMS_FAST.SubTribICMSDocFis = 1 AND COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) = 0
				THEN ROUND((PEDIDO_ITEM.ISOPvPedIte_PrecoAjustado / ROUND(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,6)),6)
			-- cliente SEM desoneração
			ELSE ROUND((CASE
							WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0
								--Removido PEDIDO_ITEM.ISOPvPedIte_PercentualFCPST da fórmula pois não se aplica quando pedido de Empenho -- Zagoto/Edilon 26/08/21
								--THEN COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) / (1 + ((PEDIDO_ITEM.ISOPvPedIte_PercSubsTributaria + PEDIDO_ITEM.ISOPvPedIte_PercentualFCPST)/100.0) ) / ((1+(PEDIDO_ITEM.ISOPvPedIte_PercentualIPI/100.0)) )
								THEN COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) / (1 + ((PEDIDO_ITEM.ISOPvPedIte_PercSubsTributaria)/100.0) ) / ((1+(PEDIDO_ITEM.ISOPvPedIte_PercentualIPI/100.0)) )
							ELSE PEDIDO_ITEM.ISOPvPedIte_PrecoAjustado ---  desativado 09/07/2020 pois o preco ajustado já está sem o frete ((PEDIDO_ITEM.ISOPvPedIte_PrecoAjustado) - ((((PEDIDO_ITEM.ISOPvPedIte_PrecoAjustado * PEDIDO_ITEM.ISOPvPedIte_Quantidade) / TOTAL_PEDIDO.ISOPvPed_ValorTotalPedido) * PEDIDO.ISOPvPed_ValorFrete) / PEDIDO_ITEM.ISOPvPedIte_Quantidade))
						END ) / ROUND(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,6),6)
		END
	END / (1 + (ISOPvEstabTbV_PercDespFinancei / 100.00) ), 6) AS ISOPvPedIte_PrecoUNESTIntegracaoBO,
	-- performance2


	COALESCE(EMPENHO.ISOCttPedCon_NumeroEmp,'') AS ISOPvPedido_NumeroEmpenho,
	TOTAL_LINHAS_PEDIDO.ISOPvPedIte_TotalLinhas

	-- INICIO SIMULACAO DE PREÇOS
	--(1 + (PEDIDO_ITEM.ISOPvPedIte_PercentualIPI / 100)) IPI,
	--(1 - (MATRIZ_ICMS.ISOPvMatICMS_AliquotaICMS/100)) ICMS,
	--PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho EMPENHO,
	--PEDIDO_ITEM.ISOPvPedIte_Quantidade QUANTIDADE,
	--FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao FATOR,
	--ROUND(ROUND(ROUND((PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho  / (1 - (MATRIZ_ICMS.ISOPvMatICMS_AliquotaICMS/100))) / (1 + (PEDIDO_ITEM.ISOPvPedIte_PercentualIPI / 100)) * PEDIDO_ITEM.ISOPvPedIte_Quantidade,2) * (1 + (PEDIDO_ITEM.ISOPvPedIte_PercentualIPI/100)),2) * (1 - (MATRIZ_ICMS.ISOPvMatICMS_AliquotaICMS/100)),2) SIMULACAO_PROTHEUS,
	--CASE
	--	WHEN MATRIZ_ICMS.ISOPvMatICMS_SubTribICMSDocFis = 1 AND COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) > 0
	--		THEN ROUND(((((PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho / (1 - (MATRIZ_ICMS.ISOPvMatICMS_AliquotaICMS/100)) / (1 + (PEDIDO_ITEM.ISOPvPedIte_PercentualIPI / 100))))) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao),6)
	--	WHEN MATRIZ_ICMS.ISOPvMatICMS_SubTribICMSDocFis = 1 AND COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) = 0
	--		THEN ROUND(((PEDIDO_ITEM.ISOPvPedIte_ValorTotalCalculoF - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade)) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao),6)
	--	ELSE ROUND(((CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0 THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho ELSE PEDIDO_ITEM.ISOPvPedIte_ValorUnitario END - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade) - (PEDIDO_ITEM.ISOPvPedIte_ValorIPI / PEDIDO_ITEM.ISOPvPedIte_Quantidade)) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao),6)
	--END * PEDIDO_ITEM.ISOPvPedIte_Quantidade AS SIMULADO_ISO,
	--PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho *	PEDIDO_ITEM.ISOPvPedIte_Quantidade RESULTADO_ISO
	-- TÉRMINO SIMULACAO DE PREÇOS
FROM
	PEDIDO -- CABECALHO DO PEDIDO
	INNER JOIN PEDIDO_ITEM ON -- ITEM DO PEDIDO
		PEDIDO.ISOEmp_Codigo = PEDIDO_ITEM.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = PEDIDO_ITEM.ISOPvPed_Codigo
	INNER JOIN TOTAL_LINHAS_PEDIDO ON -- TOTAL DE LINHAS DO PEDIDO
		PEDIDO.ISOEmp_Codigo = TOTAL_LINHAS_PEDIDO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = TOTAL_LINHAS_PEDIDO.ISOPvPed_Codigo
	INNER JOIN ATENDENTE_PEDIDO ON  -- ATENDENTE QUE CRIOU O PEDIDO
		PEDIDO.ISOPvPed_CodigoAtendente = ATENDENTE_PEDIDO.ISOEnt_Codigo
	INNER JOIN FATOR_CONVERSAO_PRODUTO ON -- UNIDADES DE MEDIDA DO ITEM DO PEDIDO
		PEDIDO_ITEM.ISOEmp_Codigo = FATOR_CONVERSAO_PRODUTO.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPrd_Codigo = FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_PrdCodigo AND
		PEDIDO_ITEM.ISOPvPedIte_UnidadeOrigem = FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_UndOrigem AND
		PEDIDO_ITEM.ISOPvPedIte_UnidadeDestino = FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_UndDestino AND
		FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_Flag = 'A' AND
		FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_Armazem = ''
	INNER JOIN CLIENTE ON -- INFORMAÇÕES DO CLIENTE
		PEDIDO.ISOEmp_Codigo = CLIENTE.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_CliCodigo = CLIENTE.ISOEntCli_Codigo
    INNER JOIN LOCAL_FATURAMENTO ON
		PEDIDO.ISOEmp_Codigo = LOCAL_FATURAMENTO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_EstadoOrigem = LOCAL_FATURAMENTO.ISOPvCD_Origem AND
        PEDIDO.ISOPvPed_EstadoDestino = LOCAL_FATURAMENTO.ISOPvCD_Destino AND
        PEDIDO.ISOPvPedOri_Codigo = LOCAL_FATURAMENTO.ISOPvCDOri_Pedido
	INNER JOIN ESTABELECIMENTO_LX ON -- ESTABELECIMENTO DO PEDIDO
		PEDIDO.ISOEmp_Codigo = ESTABELECIMENTO_LX.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_EstadoOrigem = ESTABELECIMENTO_LX.ISOPvCD_Origem AND
        PEDIDO.ISOPvPed_EstadoDestino = ESTABELECIMENTO_LX.ISOPvCD_Destino
	INNER JOIN CUSTO_FINANCEIRO ON
		ESTABELECIMENTO_LX.ISOEmp_Codigo = CUSTO_FINANCEIRO.ISOEmp_Codigo AND
		ESTABELECIMENTO_LX.ISOPvCD_Estabelecimento = CUSTO_FINANCEIRO.ISOPvEstab_Codigo AND
		PEDIDO.ISOEmp_Codigo = CUSTO_FINANCEIRO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Pagamento = CUSTO_FINANCEIRO.ISOPvTV_Codigo

	LEFT OUTER JOIN EMPENHO ON -- EMPENHO DO PEDIDO
		PEDIDO.ISOEmp_Codigo = EMPENHO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = EMPENHO.ISOCttPedCon_PedidoCodigo

	LEFT OUTER JOIN TOTAL_PEDIDO_EMPENHO ON -- EMPENHO DO PEDIDO
		PEDIDO.ISOEmp_Codigo = TOTAL_PEDIDO_EMPENHO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = TOTAL_PEDIDO_EMPENHO.ISOPvPed_Codigo

	LEFT OUTER JOIN TOTAL_PEDIDO ON -- VALOR TOTAL DO PEDIDO
		PEDIDO.ISOEmp_Codigo = TOTAL_PEDIDO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = TOTAL_PEDIDO.ISOPvPed_Codigo

	LEFT OUTER JOIN TABELA_CLIENTE ON -- TABELA DO CLIENTE
		PEDIDO.ISOEmp_Codigo = TABELA_CLIENTE.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_CliCodigo = TABELA_CLIENTE.ISOEntCli_Codigo
		AND TABELA_CLIENTE.ISOEntClienteAttId = 99
	LEFT OUTER JOIN ORIGEM_PROTHEUS ON -- PESQUISA CÓDIGO PROTHEUS DO CLIENTE
		PEDIDO.ISOEmp_Codigo = ORIGEM_PROTHEUS.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_CliCodigo = ORIGEM_PROTHEUS.ISOEmpEnt_EntCodigo AND
		ORIGEM_PROTHEUS.ISOEmpOri_Codigo = 13
	LEFT OUTER JOIN ORIGEM_LX ON  -- PESQUISA CÓDIGO LX DO CLIENTE
		PEDIDO.ISOEmp_Codigo = ORIGEM_LX.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_CliCodigo = ORIGEM_LX.ISOEmpEnt_EntCodigo AND
		ORIGEM_LX.ISOEmpOri_Codigo = 2
	LEFT OUTER JOIN CONDICAO_PAGAMENTO ON
		PEDIDO.ISOEmp_Codigo = CONDICAO_PAGAMENTO.ISOEmp_Codigo AND
		PEDIDO.ISOPeCndPgt_Codigo = CONDICAO_PAGAMENTO.ISOPeCndPgt_Codigo
	LEFT OUTER JOIN ANALISE_CREDITO ON  -- PESQUISA DA TAREFA DE LIBERAÇÃO DE CRÉDITO
		PEDIDO.ISOEmp_Codigo = ANALISE_CREDITO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = ANALISE_CREDITO.ISOPvPed_Codigo
	LEFT OUTER JOIN TIPO_FRETE ON -- INFORMACOES DE FRETE DO PEDIDO
		PEDIDO.ISOEmp_Codigo = TIPO_FRETE.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = TIPO_FRETE.ISOPvPed_Codigo
	LEFT OUTER JOIN TRANSPORTADORA ON -- INFORMACOES DA TRANSPORTADORA DO PEDIDO
		PEDIDO.ISOEmp_Codigo = TRANSPORTADORA.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = TRANSPORTADORA.ISOPvPed_Codigo
	LEFT OUTER JOIN	LINHA_PEDIDO_CLIENTE  ON  -- Observação do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = LINHA_PEDIDO_CLIENTE.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = LINHA_PEDIDO_CLIENTE.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = LINHA_PEDIDO_CLIENTE.ISOPvPedIte_Codigo

	LEFT OUTER JOIN	LINHA_ORDEM_COMPRA ON  -- Observação do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = LINHA_ORDEM_COMPRA.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = LINHA_ORDEM_COMPRA.ISOPvPed_Codigo AND
	    PEDIDO_ITEM.ISOPvPedIte_Codigo = LINHA_ORDEM_COMPRA.ITEM_PEDIDO

	LEFT OUTER JOIN	OC_DO_CLIENTE ON  -- Observação do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = OC_DO_CLIENTE.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = OC_DO_CLIENTE.ISOPvPed_Codigo AND
	    PEDIDO_ITEM.ISOPvPedIte_Codigo = OC_DO_CLIENTE.ISOPvPedIte_Codigo

	LEFT OUTER JOIN	LOTE1 ON  -- lote 1 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = LOTE1.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = LOTE1.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = LOTE1.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	QTD1 ON  -- qtde 1 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = QTD1.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = QTD1.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = QTD1.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	LOTE2 ON  -- lote 2 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = LOTE2.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = LOTE2.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = LOTE2.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	QTD2 ON  -- qtde 2 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = QTD2.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = QTD2.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = QTD2.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	LOTE3 ON  -- lote 3 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = LOTE3.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = LOTE3.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = LOTE3.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	QTD3 ON  -- qtde 3 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = QTD3.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = QTD3.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = QTD3.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	LOTE4 ON  -- lote 4 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = LOTE4.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = LOTE4.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = LOTE4.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	QTD4 ON  -- qtde 4 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = QTD4.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = QTD4.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = QTD4.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	LOTE5 ON  -- lote 5 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = LOTE5.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = LOTE5.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = LOTE5.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	QTD5 ON  -- qtde 5 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = QTD5.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = QTD5.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = QTD5.ISOPvPedIte_Codigo
	LEFT OUTER JOIN NATUREZA_OPERACAO ON
		PEDIDO.ISOEmp_Codigo = NATUREZA_OPERACAO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPedTip_Codigo = NATUREZA_OPERACAO.ISOPvPedTip_Codigo
	--LEFT OUTER JOIN MATRIZ_ICMS ON
	--	PEDIDO_ITEM.ISOEmp_Codigo = MATRIZ_ICMS.ISOEmp_Codigo AND
	--	PEDIDO_ITEM.ISOPvPed_Codigo = MATRIZ_ICMS.ISOPvPed_Codigo AND
	--	PEDIDO_ITEM.ISOPvPedIte_Codigo = MATRIZ_ICMS.ISOPvPedIte_Codigo

	-- 11/06/2021 -- zagoto, inclusão de function para performance de consulta de matriz de ICMS
	OUTER APPLY MacroConsultaMatrizICMS_FAST(PEDIDO_ITEM.ISOEmp_Codigo, PEDIDO_ITEM.ISOPvPed_Codigo, PEDIDO_ITEM.ISOPvPedIte_Codigo) AS ICMS_FAST
WHERE
	PEDIDO.ISOEmp_Codigo = 11 --AND
	--PEDIDO_ITEM.ISOPvPedIteSit_Codigo = 1
	--PEDIDO.ISOPvPed_Codigo = 8742706 and

	AND PEDIDO.ISOPvPedSit_Codigo in (1, 30)     --- ABERTO /  PEDIDO LIBERADO DE CREDITO

	-- Filtro de pedidos ST
	--AND LOCAL_FATURAMENTO.ISOPvCDOri_Armazem not in ('ST')
	AND ESTABELECIMENTO_LX.ISOPvCD_Estabelecimento not in (1,2,9,12,13,28,30,35)   --16/09/2021 alterado pelo estabelecimento para considerar pedidos por exemplo AVE

	--PEDIDO.ISOPvPed_Codigo between 8740390 and 8740890 -- pedidos indaial
	--PEDIDO.ISOPvPed_Codigo between 8664441 AND 8739451 AND -- pedidos do simulador


	--AND (
	--	-- ANALISE DE CREDITO / INATIVIDADE DO CLIENTE / TITULOS EM ABERTO
	--	PEDIDO.ISOPvPed_Codigo NOT IN (select isopvped_codigo from [MACRO_ANALISE_CREDITO] where ISOEmp_Codigo = 11)-- and SITUACAO <> '')
	--	--PEDIDO.ISOPvPed_Codigo NOT IN (select isopvped_codigo from [MACRO_ANALISE_CREDITO] where ISOEmp_Codigo = 11 and ISOPvPedSit_Codigo = 1)
	--	--PEDIDO.ISOPvPed_Codigo NOT IN (SELECT ISOPvPed_Codigo FROM GATILHO_C21_ANALISE_LIMITE_CREDITO WHERE ISOEmp_Codigo = 11 AND  ((LIMITE_CREDITO - TOTAL_CONTAS_RECEBER - PED_EM_ABERTO) < TOTAL_PEDIDO) OR (DATEDIFF(DD,DATA_ULTIMA_COMPRA,GETDATE()) > 60) OR (DATEDIFF(DD,DATA_TITULO,GETDATE()) > 1))
	--	--OR
	--	-- ANALISE PRAZO MEDIO
	--	--PEDIDO.ISOPvPed_Codigo NOT IN (SELECT ISOPvPed_Codigo FROM GATILHO_C22_ANALISE_PRAZO_MEDIO_CLIENTE WITH (NOLOCK) WHERE (1=1) AND PRAZO_MEDIO_CP > PRAZO_MEDIO_CLIENTE)
	--)

/*
SELECT * FROM MACROISOPvPedido2

SELECT * FROM MACROISOPvPedido

select *
FROM MACRO_ANALISE_CREDITO WITH (NOLOCK) CROSS APPLY (SELECT ISOENTORG_CODIGO, ISOENTSEG_CODIGO FROM MACROISOUNIONORG_PES) AS DUMMY(COD_CLIENTE, SEGMENTO)
WHERE ISOEMP_CODIGO = 11
AND ISOPVPEDSIT_CODIGO = 1
AND (ISOPVPED_CLICODIGO = COD_CLIENTE AND SEGMENTO IN (1,2))

select * from isosdconexecucao
WHERE ISOEMP_CODIGO = 11
and ISOSDConExe_Codigo >= 395581965
and ISOSDConExe_Comando like '%credito%'

INSERT INTO ISOSDCON_PVPEDIDO
SELECT ISOEMP_CODIGO, 395582093, ISOPVPED_CODIGO,'A', CAST(CONVERT(CHAR , GETDATE(), 120) AS DATETIME), 977744
FROM MACRO_ANALISE_CREDITO WITH (NOLOCK) CROSS APPLY (SELECT ISOENTORG_CODIGO, ISOENTSEG_CODIGO FROM MACROISOUNIONORG_PES) AS DUMMY(COD_CLIENTE, SEGMENTO)
 WHERE (ISOEmp_Codigo = 11 AND ISOPvPed_DataAlteracao >= '2020-07-06 11:58:56.000' ) AND (   ISOEMP_CODIGO = 11
AND ISOPVPEDSIT_CODIGO = 1
AND (ISOPVPED_CLICODIGO = COD_CLIENTE AND SEGMENTO IN (1,2)))

*/;


-- dbo.VWMACROISOPvPedido_11062021 source

CREATE VIEW [dbo].[VWMACROISOPvPedido_11062021]
as
with
	PEDIDO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPed_CliCodigo,
			ISOPvPed_EstadoOrigem,
			ISOPvPed_EstadoDestino,
			ISOPvPed_CodigoAtendente,
			ISOPvPedSit_Codigo,
			ISOPvPedOri_Codigo,
			ISOPvPed_CodEndCobranca,
			ISOPvPed_ValorTotalPedido,
			ISOPeCndPgt_Codigo,
			ISOPvPed_ValorFrete,
			ISOPvPedTip_Codigo,
			ISOPvPed_Pagamento, -- Condição de pagamento
			ISOPVPed_OrdCompra,
			ISOPvPed_DtaSolEntrega,
			ISOPvPed_CodEndEntrega,
			ISOPvPed_DtaPedido,  -- Data do pedido
			ISOPvPed_HoraPedido -- Hora do pedido
		FROM ISOPVPEDIDO WITH (nOLOCK)
		WHERE
			ISOEmp_Codigo = 11
			AND ISOPvPedSit_Codigo in (1, 30)
			--and ISOPvPedSit_Codigo = 999
			--AND ISOPvPed_Codigo IN (7834128)
			--and ISOPvPed_Codigo NOT IN (select isopvped_codigo from [MACRO_ANALISE_CREDITO] where ISOEmp_Codigo = 11)
			),
	PEDIDO_ITEM AS (
		SELECT
			ISOPVPEDITEM.ISOEmp_Codigo,
			ISOPVPEDITEM.ISOPvPed_Codigo,
			ISOPVPEDITEM.ISOPvPedIte_Codigo,
			ISOPVPEDITEM.ISOPrd_Codigo,
			ISOPVPEDITEM.ISOPvPedIte_Quantidade,
			ISOPVPEDITEM.ISOPvPedIte_DtaSolEntrega,
			ISOPVPEDITEM.ISOPvPedIte_UnidadeOrigem,
			ISOPVPEDITEM.ISOPvPedIte_UnidadeDestino,
			ISOPVPEDITEM.ISOPvPedIte_ValorUnitario,
			ISOPVPEDITEM.ISOPvPedIteSit_Codigo,
			ISOPVPEDITEM.ISOPvPedIte_AgendamentoData,
			ISOPVPEDITEM.ISOPvPedIte_AgendamentoHoraIni,
			ISOPVPEDITEM.ISOPvPedIte_AgendamentoHoraFin,
			ISOPVPEDITEM.ISOPvPedIte_ValorEmpenho,
			ISOPVPEDITEM.ISOPvPedIte_PrecoLista,
			ISOPVPEDITEM.ISOPvPedIte_ValorIPI,
			ISOPVPEDITEM.ISOPvPedIte_VlrSubsTributaria,
			ISOPVPEDITEM.ISOPvPedIte_ValorICMS,
			ISOPVPEDITEM.ISOPvPedIte_ValorPIS,
			ISOPVPEDITEM.ISOPvPedIte_ValorCofins,
			ISOPVPEDITEM.ISOPVPedIte_ValorFCPST,
			ISOPVPEDITEM.ISOPvPedIte_ValorFCP,
			ISOPVPEDITEM.ISOPvPedIte_ValorTotalCalculoF,
			ISOPVPEDITEM.ISOPvPedIte_DataEntregaItem,
			ISOPVPEDITEM.ISOPvPedIte_PercentualIPI,
			ISOPVPEDITEM.ISOPvPedIte_PercSubsTributaria,
			ISOPVPEDITEM.ISOPvPedIte_PercentualFCPST,
			ISOPVPEDITEM.ISOPvPedIte_PrecoAjustado,
			ISOPVPEDITEM.ISOPvPedIte_PrecoAjustadoTotal
		FROM ISOPVPEDITEM INNER JOIN ISOPVPEDIDO
			ON ISOPVPEDIDO.ISOEmp_Codigo = ISOPVPEDITEM.ISOEmp_Codigo
			AND ISOPVPEDIDO.ISOPvPed_Codigo = ISOPVPEDITEM.ISOPvPed_Codigo
			AND ISOPVPEDIDO.ISOPvPedSit_Codigo in (1, 30)
		WHERE
			ISOPVPEDITEM.ISOEmp_Codigo = 11
			AND ISOPVPEDITEM.ISOPvPedIteSit_Codigo = 1
			),
	TOTAL_LINHAS_PEDIDO AS (
		SELECT
			ISOPVPEDITEM.ISOEmp_Codigo,
			ISOPVPEDITEM.ISOPvPed_Codigo,
			COUNT(*) AS ISOPvPedIte_TotalLinhas
		FROM ISOPVPEDITEM INNER JOIN ISOPVPEDIDO
			ON ISOPVPEDIDO.ISOEmp_Codigo = ISOPVPEDITEM.ISOEmp_Codigo
			AND ISOPVPEDIDO.ISOPvPed_Codigo = ISOPVPEDITEM.ISOPvPed_Codigo
			AND ISOPVPEDIDO.ISOPvPedSit_Codigo in (1, 30)
		WHERE
			ISOPVPEDITEM.ISOEmp_Codigo = 11
			AND ISOPVPEDITEM.ISOPvPedIteSit_Codigo = 1
		GROUP BY
			ISOPVPEDITEM.ISOEmp_Codigo,
			ISOPVPEDITEM.ISOPvPed_Codigo),
	TOTAL_PEDIDO_EMPENHO AS (
		SELECT
			ISOPVPEDITEM.ISOEmp_Codigo,
			ISOPVPEDITEM.ISOPvPed_Codigo,
			SUM(ISOPVPEDITEM.ISOPvPedIte_Quantidade * ISOPVPEDITEM.ISOPvPedIte_ValorEmpenho) AS ISOPvPed_ValorTotalPedido
		FROM         ISOPVPEDITEM INNER JOIN ISOPVPEDIDO
			ON ISOPVPEDIDO.ISOEmp_Codigo = ISOPVPEDITEM.ISOEmp_Codigo
			AND ISOPVPEDIDO.ISOPvPed_Codigo = ISOPVPEDITEM.ISOPvPed_Codigo
			AND ISOPVPEDIDO.ISOPvPedSit_Codigo in (1, 30)
		WHERE     (ISOPVPEDITEM.ISOEmp_Codigo = 11) AND (ISOPVPEDITEM.ISOPvPedIteSit_Codigo = 1)
		GROUP BY ISOPVPEDITEM.ISOEmp_Codigo, ISOPVPEDITEM.ISOPvPed_Codigo),
	TOTAL_PEDIDO AS (
		SELECT
			ISOPVPEDITEM.ISOEmp_Codigo,
			ISOPVPEDITEM.ISOPvPed_Codigo,
			SUM(ISOPVPEDITEM.ISOPvPedIte_Quantidade * ISOPVPEDITEM.ISOPvPedIte_PrecoAjustado) AS ISOPvPed_ValorTotalPedido
		FROM         ISOPVPEDITEM INNER JOIN ISOPVPEDIDO
			ON ISOPVPEDIDO.ISOEmp_Codigo = ISOPVPEDITEM.ISOEmp_Codigo
			AND ISOPVPEDIDO.ISOPvPed_Codigo = ISOPVPEDITEM.ISOPvPed_Codigo
			AND ISOPVPEDIDO.ISOPvPedSit_Codigo in (1, 30)
		WHERE     (ISOPVPEDITEM.ISOEmp_Codigo = 11) AND (ISOPVPEDITEM.ISOPvPedIteSit_Codigo = 1) --and ISOPvPed_Codigo >= 8741752
		GROUP BY ISOPVPEDITEM.ISOEmp_Codigo, ISOPVPEDITEM.ISOPvPed_Codigo),
	ATENDENTE_PEDIDO AS (
		SELECT
			ISOEnt_Codigo,
			ISOEnt_Nome
		FROM ISOENTIDADE INNER JOIN ISOENTUSUARIO
			ON ISOENTIDADE.ISOEnt_Codigo = ISOENTUSUARIO.ISOEntUsu_Codigo),
	FATOR_CONVERSAO_PRODUTO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPrdUndFatC_PrdCodigo,
			ISOPrdUndFatC_UndOrigem,
			ISOPrdUndFatC_UndDestino,
			-- criado regra de divisão quando a unidade de medida for "M"  --  22/07/2020 zagoto,edilon,cris
			case
				when ISOPrdUndFatC_UndDestino = 'M' then 1 / ISOPrdUndFatC_FatorConversao
				else ISOPrdUndFatC_FatorConversao
			end ISOPrdUndFatC_FatorConversao,
			ISOPrdUndFatC_Flag,
			ISOPrdUndFatC_Armazem
		FROM ISOPRDUNDFATORCONVERSAO WITH (NOLOCK)
		WHERE ISOEmp_Codigo = 11 and ISOPrdUndFatC_Flag = 'A' AND ISOPrdUndFatC_Armazem = ''), -- 02/12/2020 Zagoto - incluido critério de flag PERFORMANCE
	CLIENTE AS (
		SELECT	DISTINCT
			ISOENTCLIENTE.ISOEmp_Codigo,
			ISOENTCLIENTE.ISOEntCli_Codigo,
			ISOENTCLIENTE.ISOEntCli_Operacao
		FROM ISOENTCLIENTE INNER JOIN ISOPVPEDIDO
			ON ISOENTCLIENTE.ISOEmp_Codigo = ISOPVPEDIDO.ISOEmp_Codigo
				AND ISOENTCLIENTE.ISOEntCli_Codigo = ISOPVPEDIDO.ISOPvPed_CliCodigo
				AND ISOPVPEDIDO.ISOEmp_Codigo= 11
				AND ISOPVPEDIDO.ISOPvPedSit_Codigo in (1, 30)),
	LOCAL_FATURAMENTO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvCD_Origem,
			ISOPvCD_Destino,
			ISOPvCDOri_Pedido,
			ISOPvCDOri_Armazem
		FROM ISOPVCDORIGEM WITH (nOLOCK)),
	EMPENHO AS (
		SELECT
			ISOCTPEDCONTRATO.ISOEmp_Codigo,
			ISOCTPEDCONTRATO.ISOCttPedCon_PedidoCodigo,
			ISOCTPEDCONTRATO.ISOCttPedCon_NumeroEmp
		FROM ISOCTPEDCONTRATO WITH (nOLOCK)
		INNER JOIN ISOPVPEDIDO
			ON ISOPVPEDIDO.ISOEmp_Codigo = ISOCTPEDCONTRATO.ISOEmp_Codigo
			AND ISOPVPEDIDO.ISOPvPed_Codigo = ISOCTPEDCONTRATO.ISOCttPedCon_PedidoCodigo
			AND ISOPVPEDIDO.ISOEmp_Codigo = 11
			AND ISOPVPEDIDO.ISOPvPedSit_Codigo in (1, 30)),
	TABELA_CLIENTE AS (
		SELECT	DISTINCT
			ISOENTCLIENTEATTVALUES.ISOEmp_Codigo,
			ISOENTCLIENTEATTVALUES.ISOEntCli_Codigo,
			ISOENTCLIENTEATTVALUES.ISOEntClienteAttId,
			ISOENTCLIENTEATTVALUES.ISOEntClienteAttOtherValue
		FROM ISOENTCLIENTEATTVALUES INNER JOIN ISOPVPEDIDO
			ON ISOENTCLIENTEATTVALUES.ISOEmp_Codigo = ISOPVPEDIDO.ISOEmp_Codigo
				AND ISOENTCLIENTEATTVALUES.ISOEntCli_Codigo = ISOPVPEDIDO.ISOPvPed_CliCodigo
				AND ISOPVPEDIDO.ISOEmp_Codigo= 11
				AND ISOPVPEDIDO.ISOPvPedSit_Codigo in (1, 30)
		WHERE
			ISOENTCLIENTEATTVALUES.ISOEmp_Codigo = 11 AND
			ISOENTCLIENTEATTVALUES.ISOEntClienteAttId = 99),
	ESTABELECIMENTO_LX AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvCD_Origem,
			ISOPvCD_Destino,
			ISOPvCD_Estabelecimento
		FROM ISOPVCD WITH (nOLOCK)),
	ORIGEM_PROTHEUS AS (
		SELECT
			ISOEmp_Codigo,
			ISOEmpEnt_EntCodigo,
			ISOEmpOri_Codigo,
			ISOEmpEnt_Ori_Codigo
		FROM ISOEMPENT_ORIGEM WITH (nOLOCK)
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOEmpOri_Codigo = 13),
	ORIGEM_LX AS (
		SELECT	DISTINCT
			ISOEMPENT_ORIGEM.ISOEmp_Codigo,
			ISOEMPENT_ORIGEM.ISOEmpEnt_EntCodigo,
			ISOEMPENT_ORIGEM.ISOEmpOri_Codigo,
			ISOEMPENT_ORIGEM.ISOEmpEnt_Ori_Codigo
		FROM ISOEMPENT_ORIGEM INNER JOIN ISOPVPEDIDO
			ON ISOEMPENT_ORIGEM.ISOEmp_Codigo = ISOPVPEDIDO.ISOEmp_Codigo
				AND ISOEMPENT_ORIGEM.ISOEmpEnt_EntCodigo = ISOPVPEDIDO.ISOPvPed_CliCodigo
				AND ISOPVPEDIDO.ISOEmp_Codigo= 11
				AND ISOPVPEDIDO.ISOPvPedSit_Codigo in (1, 30)
		WHERE
			ISOEMPENT_ORIGEM.ISOEmp_Codigo = 11 AND
			ISOEMPENT_ORIGEM.ISOEmpOri_Codigo = 2),
	CONDICAO_PAGAMENTO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPeCndPgt_Codigo,
			ISOPeCntPgt_Forma
		FROM ISOPECNDPAGAMENTO WITH (nOLOCK)),
	CUSTO_FINANCEIRO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvTV_Codigo,
			ISOPvEstab_Codigo,
			ISOPvEstabTbV_PercDespFinancei
		FROM ISOPvEstab_TblVenda
		WHERE
			ISOEMP_CODIGO = 11
	),
	ANALISE_CREDITO AS (
		SELECT
			ISOWFTRF_PEDIDO.ISOEmp_Codigo,
			ISOWFTRF_PEDIDO.ISOPvPed_Codigo,
		    CASE WHEN ISOWFTrf_RspExe_RspCodigo IS NULL THEN '' ELSE CONVERT(VARCHAR(8), ISOWFTrf_DataSolucao, 112) END AS ISOWFTrf_DataLiberacaoCredito,  -- Data em que a tarefa de liberação de crédito foi executada
			CASE WHEN ISOWFTrf_RspExe_RspCodigo IS NULL THEN '' ELSE CONVERT(VARCHAR(8), ISOWFTrf_DataSolucao, 108) END AS ISOWFTrf_HoraLiberacaoCredito,
			CASE WHEN ISOWFTrf_RspExe_RspCodigo IS NULL THEN '' ELSE COALESCE(CAST(ISOWFTrf_RspExe_RspCodigo AS VARCHAR(10)),'')+'-'+COALESCE(USUARIO_CEDITO.ISOEnt_Nome,'') END AS ISOWFTrf_CodigoAtendente
		FROM ISOWFTRF_PEDIDO INNER JOIN ISOWFPROCEDIMENTO ON
			ISOWFTRF_PEDIDO.ISOEmp_Codigo = ISOWFPROCEDIMENTO.ISOEmp_Codigo AND
			ISOWFTRF_PEDIDO.ISOWFTrf_Ped_PrcCodigo = ISOWFPROCEDIMENTO.ISOWFPrc_Codigo AND
			ISOWFPROCEDIMENTO.ISOWFPrcPad_Codigo IN (SELECT ISOWFPrcPad_Codigo FROM ISOWFPrcPadrao where isoemp_codigo = 11 and ISOWFPrcPad_Descricao like 'BO%' and ISOWFPrcPad_Flag = 'A') AND -- PROCEDIMENTO ( PEDIDO - ANALISE DE CREDITO)
			ISOWFTRF_PEDIDO.ISOWFTrf_Ped_TrfCodigo = 1 --- CÓDIGO DA TAREFA QUE O ATENDENTE IRÁ CONFIRMAR O CRÉDITO DO CLIENTE ********
		INNER JOIN ISOWFTAREFA ON -- TAREFA DE LIBERAÇÃO DE CRÉDITO
			ISOWFTRF_PEDIDO.ISOEmp_Codigo = ISOWFTAREFA.ISOEmp_Codigo AND
			ISOWFTRF_PEDIDO.ISOWFTrf_Ped_PrcCodigo = ISOWFTAREFA.ISOWFPrc_Codigo AND
			ISOWFTRF_PEDIDO.ISOWFTrf_Ped_TrfCodigo = ISOWFTAREFA.ISOWFTrfPad_Codigo AND
			ISOWFTAREFA.ISOWFTrfPad_Codigo = 1 AND  -- TAREFA (ANALISAR PEDIDO RETIDO EM CREDITO)
			ISOWFTAREFA.ISOWFTrfPadSit_Codigo = 1  -- SITUACAO (PEDIDO APROVADO DE CREDITO)
		INNER JOIN ISOENTIDADE AS USUARIO_CEDITO ON -- USUÁRIO QUE LIBEROU O CRÉDITO DO CLIENTE
			ISOWFTAREFA.ISOWFTrf_RspExe_RspCodigo = USUARIO_CEDITO.ISOEnt_Codigo
		WHERE ISOWFTRF_PEDIDO.ISOEmp_Codigo = 11
		AND ISOWFTRF_PEDIDO.ISOPvPed_Codigo IN (SELECT ISOPVPED_CODIGO FROM ISOPVPEDIDO WHERE ISOEMP_CODIGO = 11 AND ISOPVPEDSIT_CODIGO IN (1,30))
		AND ISOWFTRF_PEDIDO.ISOWFTrf_Ped_PrcCodigo = (SELECT MAX(X.ISOWFTrf_Ped_PrcCodigo) FROM ISOWFTRF_PEDIDO X WHERE ISOWFTRF_PEDIDO.ISOEmp_Codigo = X.ISOEmp_Codigo AND ISOWFTRF_PEDIDO.ISOPvPed_Codigo = X.ISOPvPed_Codigo)),
	TIPO_FRETE AS (
		SELECT 	DISTINCT
			ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOEmp_Codigo,
			ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOPvPed_Codigo,
			COALESCE(ISOPvPedidoAttOptValue,'') AS ISOPvPedidoTipoFrete
		FROM ISOPVPEDIDOATTVALUES AS ISOPVPEDIDOATTVALUES_TIPO_FRETE
		INNER JOIN ISOPVPEDIDOATTLEVEL1 ON
			ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOEmp_Codigo = ISOPVPEDIDOATTLEVEL1.ISOEmp_Codigo AND
			ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOPvPedidoAttId = ISOPVPEDIDOATTLEVEL1.ISOPvPedidoAttId AND
			ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOPvPedidoAttOptId = ISOPVPEDIDOATTLEVEL1.ISOPvPedidoAttOptId AND
			ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOPvPedidoAttId = 104 -- CÓDIGO DA PERGUNTA TIPO DO FRETE
		WHERE
			ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOEmp_Codigo = 11
			AND ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOPvPed_Codigo IN (SELECT ISOPVPED_CODIGO FROM ISOPVPEDIDO WHERE ISOEMP_CODIGO = 11 AND ISOPVPEDSIT_CODIGO IN (1,30))
			),
	TRANSPORTADORA AS (
		SELECT 	DISTINCT
			ISOPVPEDIDOATTVALUES_TRANSP.ISOEmp_Codigo,
			ISOPVPEDIDOATTVALUES_TRANSP.ISOPvPed_Codigo,
			COALESCE(ISOPvTrp_CodigoExterno,'') AS ISOPvPedido_CodigoTRP
		FROM ISOPVPEDIDOATTVALUES AS ISOPVPEDIDOATTVALUES_TRANSP
		INNER JOIN ISOPVTRANSPORTADORA ON
			ISOPVTRANSPORTADORA.ISOPvTrp_Codigo = ISOPVPEDIDOATTVALUES_TRANSP.ISOPvPedidoAttOptId AND
			ISOPVPEDIDOATTVALUES_TRANSP.ISOPvPedidoAttId = 105 --AND -- CÓDIGO DA PERGUNTA TRANSPORTADORA
			--ISOPVTRANSPORTADORA.ISOPvTrp_Flag = 'A'
		WHERE ISOPVPEDIDOATTVALUES_TRANSP.ISOEmp_Codigo = 11
			AND ISOPVPEDIDOATTVALUES_TRANSP.ISOPvPed_Codigo IN (SELECT ISOPVPED_CODIGO FROM ISOPVPEDIDO WHERE ISOEMP_CODIGO = 11 AND ISOPVPEDSIT_CODIGO IN (1,30))
		),
	--OBSERVACAO_ITEM_PEDIDO AS (
	--	SELECT
	--		ISOEmp_Codigo,
	--		ISOPvPed_Codigo,
	--		ISOPvPedIte_Codigo,
	--		ISOPvPedItemAttValue
	--	FROM ISOPVPEDITEMATTVALUES WITH (nOLOCK)
	--	WHERE
	--		ISOEmp_Codigo = 11 AND
	--		ISOPvPedItemAttId = 2),
	OC_DO_CLIENTE AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (nOLOCK)
		WHERE
			ISOEmp_Codigo = 11
			AND ISOPVPEDITEMATTVALUES.ISOPvPed_Codigo IN (SELECT ISOPVPED_CODIGO FROM ISOPVPEDIDO WHERE ISOEMP_CODIGO = 11 AND ISOPVPEDSIT_CODIGO IN (1,30))
			AND ISOPvPedItemAttId = 1),
	LINHA_PEDIDO_CLIENTE AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (nOLOCK)
		WHERE
			ISOEmp_Codigo = 11
			AND ISOPVPEDITEMATTVALUES.ISOPvPed_Codigo IN (SELECT ISOPVPED_CODIGO FROM ISOPVPEDIDO WHERE ISOEMP_CODIGO = 11 AND ISOPVPEDSIT_CODIGO IN (1,30))
			AND ISOPvPedItemAttId = 2),
	LINHA_ORDEM_COMPRA AS (
		SELECT ISOPVPEDITEM.ISOEmp_Codigo, ISOPVPEDITEM.ISOPVPED_CODIGO, ITEM_PEDIDO, ITEM_CLIENTE
			FROM ISOPVPEDITEM LEFT OUTER JOIN (
			SELECT
				ISOEMP_CODIGO,
				ISOPVPED_CODIGO,
				CASE
					WHEN CHARINDEX('-',VALOR,1) > 1
					THEN SUBSTRING(VALOR,1,CHARINDEX('-',VALOR,1)-1)
					ELSE 0
				END AS ITEM_PEDIDO,
				SUBSTRING(VALOR,CHARINDEX('-',VALOR,1)+1,3) AS ITEM_CLIENTE
			-- incluido função para remover caracteres inválidos, como espaço e TAB
			FROM ISOPVPEDIDOATTVALUES CROSS APPLY DBO.SPLIT(REPLACE(REPLACE(LTRIM(RTRIM(ISOPVPEDIDOATTVALUELONG)),CHAR(32),''),CHAR(9),''),CHAR(10))
			--FROM ISOPVPEDIDOATTVALUES CROSS APPLY DBO.SPLIT(ISOPVPEDIDOATTVALUELONG,CHAR(10))
			WHERE ISOEMP_CODIGO = 11
			AND ISOPVPEDIDOATTID = 106
			AND PATINDEX('%[A-Z]%', ISOPVPEDIDOATTVALUELONG) = 0
			AND ISOPVPED_CODIGO IN (SELECT ISOPVPED_CODIGO FROM ISOPVPEDIDO WHERE ISOEMP_CODIGO = 11 AND ISOPVPEDSIT_CODIGO IN (1,30))
			AND CHARINDEX('-',VALOR,1) > 1
			AND VALOR <> '') DADO_COMPLEMENTAR_PEDIDO
				ON ISOPVPEDITEM.ISOEmp_Codigo = DADO_COMPLEMENTAR_PEDIDO.ISOEmp_Codigo AND
					ISOPVPEDITEM.ISOPvPed_Codigo = DADO_COMPLEMENTAR_PEDIDO.ISOPvPed_Codigo AND
					ISOPVPEDITEM.ISOPvPedIte_Codigo = DADO_COMPLEMENTAR_PEDIDO.ITEM_PEDIDO
			WHERE ISOPVPEDITEM.ISOEmp_Codigo = 11
			AND ISOPVPEDITEM.ISOPVPED_CODIGO IN (SELECT ISOPVPED_CODIGO FROM ISOPVPEDIDO WHERE ISOEMP_CODIGO = 11 AND ISOPVPEDSIT_CODIGO IN (1,30))),
	LOTE1 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- lote 1 do item do pedido
		WHERE
			ISOEmp_Codigo = 11
			AND ISOPVPEDITEMATTVALUES.ISOPvPed_Codigo IN (SELECT ISOPVPED_CODIGO FROM ISOPVPEDIDO WHERE ISOEMP_CODIGO = 11 AND ISOPVPEDSIT_CODIGO IN (1,30))
			AND ISOPvPedItemAttId = 4),
	QTD1 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- qtde 1 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 5),
	LOTE2 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- lote 2 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 6),
	QTD2 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- qtde 2 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 7),
	LOTE3 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- lote 3 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 8),
	QTD3 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- qtde 3 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 9),
	LOTE4 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- lote 4 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 10),
	QTD4 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- qtde 4 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 11),
	LOTE5 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- lote 5 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 12),
	QTD5 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK)-- qtde 5 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 13),
	NATUREZA_OPERACAO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPedTip_Codigo,
			COALESCE(ISOPvPedTip_NaturezaOperacaoCo,'') AS ISOPvPedTip_NaturezaOperacaoCo
		FROM ISOPVPEDTIPO WITH (nOLOCK)
		WHERE
			ISOEmp_Codigo = 11)
	--MATRIZ_ICMS AS (
	--	SELECT
	--		ISOEmp_Codigo,
	--		ISOPvPed_CliCodigo,
	--		ISOPvPed_Codigo,
	--		ISOPvPedIte_Codigo,
	--		ISOPrd_Codigo,
	--		ISOPvMatICMS_SubTribICMSDocFis,
	--		ISOPvMatICMS_AliquotaICMS
	--	FROM MacroConsultaMatrizICMS WITH (NOLOCK)
	--	WHERE
	--		ISOEmp_Codigo = 11)
SELECT
	PEDIDO.ISOEmp_Codigo, -- Código da empresa
	PEDIDO.ISOPvPed_Codigo, -- Código CRM do Pedido
	PEDIDO.ISOPvPed_CliCodigo, -- Código CRM do cliente
	PEDIDO.ISOPvPed_DtaPedido,  -- Data do pedido
	PEDIDO.ISOPvPed_HoraPedido, -- Hora do pedido
	CASE CONDICAO_PAGAMENTO.ISOPeCntPgt_Forma
		WHEN 'Bol' THEN 'BOLETO'
		WHEN 'Car' THEN 'CARTAO'
		WHEN 'Che' THEN 'CHEQUE'
		WHEN 'Dep' THEN 'DEPOSITO'
		WHEN 'Din' THEN 'Dinheiro'
	END AS ISOPeCntPgt_Forma, -- Forma de pagamento
	PEDIDO.ISOPvPed_Pagamento, -- Condição de pagamento
	PEDIDO.ISOPvPed_DtaSolEntrega,
	PEDIDO.ISOPvPed_CodEndEntrega,
	PEDIDO.ISOPvPedOri_Codigo,
	PEDIDO.ISOPvPedTip_Codigo,
	PEDIDO.ISOPvPed_CodEndCobranca,

	CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0 THEN TOTAL_PEDIDO_EMPENHO.ISOPvPed_ValorTotalPedido ELSE PEDIDO.ISOPvPed_ValorTotalPedido END AS ISOPvPed_ValorTotalPedido,

	PEDIDO_ITEM.ISOPvPedIte_Codigo, -- Sequencial do item do pedido
	PEDIDO_ITEM.ISOPrd_Codigo, -- Código do produto
	CASE
		WHEN ISNULL(NULLIF(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0),0) = 0
		THEN 0
		ELSE PEDIDO_ITEM.ISOPvPedIte_Quantidade
	END ISOPvPedIte_Quantidade,
	PEDIDO_ITEM.ISOPvPedIte_DataEntregaItem AS ISOPvPedIte_DataPromessa,
	PEDIDO_ITEM.ISOPvPedIte_DtaSolEntrega,
	PEDIDO_ITEM.ISOPvPedIte_UnidadeOrigem,
	PEDIDO_ITEM.ISOPvPedIte_UnidadeDestino,
	ROUND(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,6) AS ISOPrdUndFatC_FatorConversao, -- Fator de conversão sem decimais
	ROUND(PEDIDO_ITEM.ISOPvPedIte_Quantidade * ROUND(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,6),0) AS ISOPvPedIte_Qtd_UM_estoque,
	CASE
		WHEN ISNULL(NULLIF(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0),0) = 0
		THEN 0
		--ELSE CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho >0 THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho ELSE ROUND(PEDIDO_ITEM.ISOPvPedIte_ValorUnitario,6) END
		ELSE CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho >0 THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho ELSE ROUND(PEDIDO_ITEM.ISOPvPedIte_PrecoAjustadoTotal / PEDIDO_ITEM.ISOPvPedIte_Quantidade,6) END
	END ISOPvPedIte_Vlr_Total_Unitario,

	CASE
		WHEN ISNULL(NULLIF(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0),0) = 0
		THEN 0
		--ELSE CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0 THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho ELSE ROUND(PEDIDO_ITEM.ISOPvPedIte_ValorUnitario,6) END / NULLIF(ROUND(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0),0)
		ELSE CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0 THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho ELSE ROUND(PEDIDO_ITEM.ISOPvPedIte_PrecoAjustadoTotal / PEDIDO_ITEM.ISOPvPedIte_Quantidade,6) END / NULLIF(ROUND(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,6),0)
	END ISOPvPedIte_Vlr_Total_Unitario_EST,

	PEDIDO_ITEM.ISOPvPedIteSit_Codigo,
	PEDIDO_ITEM.ISOPvPedIte_AgendamentoData,
	PEDIDO_ITEM.ISOPvPedIte_AgendamentoHoraIni,
	PEDIDO_ITEM.ISOPvPedIte_AgendamentoHoraFin,
	PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,
	-- DESATIVADO 21/08/2020 - EDILON - para pedidos de contrato o valor de frete deve ser mostrado
	--CASE
	--	WHEN COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) > 0
	--	THEN 0
	--	ELSE COALESCE(PEDIDO.ISOPvPed_ValorFrete,0)
	--END AS ISOPvPed_ValorFrete,
	COALESCE(PEDIDO.ISOPvPed_ValorFrete,0) AS ISOPvPed_ValorFrete,
	COALESCE(ORIGEM_PROTHEUS.ISOEmpEnt_Ori_Codigo,'') AS ISOEmpEnt_CliCod_ERP,
	ORIGEM_LX.ISOEmpEnt_Ori_Codigo AS ISOEmpEnt_Ori_LX,
	LOCAL_FATURAMENTO.ISOPvCDOri_Armazem AS ISOPvPedIte_Armazem,
	COALESCE(CLIENTE.ISOEntCli_Operacao,'') AS ISOEntCli_Operacao,
	ESTABELECIMENTO_LX.ISOPvCD_Estabelecimento AS ISOPvCD_Estabelecimento_LX,
	PEDIDO.ISOPvPed_CodigoAtendente AS ISOPvPed_CodigoAtendente, -- Código do atendente que criou o pedido
	ATENDENTE_PEDIDO.ISOEnt_Nome AS ISOEnt_NomeAtendente, -- Nome do atendente que criou o pedido

	/*
	'2020-05-13 00:00:00.000' AS ISOWFTrf_DataLiberacaoCredito, -- Data em que a tarefa de liberação de crédito foi executada
    '11:00:00' AS ISOWFTrf_HoraLiberacaoCredito,  -- Hora em que a tarefa de liberação de crédito foi executada
    975190 AS ISOWFTrf_CodigoAtendente, -- Responsável que executou a tarefa de liberação de crédito
	*/

	COALESCE(ANALISE_CREDITO.ISOWFTrf_DataLiberacaoCredito,'') AS ISOWFTrf_DataLiberacaoCredito, -- Data em que a tarefa de liberação de crédito foi executada
    COALESCE(ANALISE_CREDITO.ISOWFTrf_HoraLiberacaoCredito,'') AS ISOWFTrf_HoraLiberacaoCredito,  -- Hora em que a tarefa de liberação de crédito foi executada
    COALESCE(ANALISE_CREDITO.ISOWFTrf_CodigoAtendente,'') AS ISOWFTrf_CodigoAtendente, -- Responsável que executou a tarefa de liberação de crédito

	CASE
		WHEN PEDIDO.ISOPvPedOri_Codigo = 'EUR' THEN 3
		WHEN PEDIDO.ISOPvPedOri_Codigo = 'EU1' THEN 3
		WHEN PEDIDO.ISOPvPedOri_Codigo = 'USD' THEN 2
		WHEN PEDIDO.ISOPvPedOri_Codigo = 'US1' THEN 2
		ELSE 1
	END AS ISOMoe_Codigo,

	COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorIPI,0) AS ISOPvPedIte_ValorIPI,
	COALESCE(PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria,0) AS ISOPvPedIte_VlrSubsTrib,
	COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorICMS,0) AS ISOPvPedIte_ValorICMS,
	COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorPIS,0) AS ISOPvPedIte_ValorPIS,
	COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorCofins,0) AS ISOPvPedIte_ValorCofins,
	COALESCE(PEDIDO_ITEM.ISOPVPedIte_ValorFCPST,0) AS ISOPVPedIte_ValorFCPST,
	COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorFCP,0) AS ISOPvPedIte_ValorFCP,
	COALESCE(TRANSPORTADORA.ISOPvPedido_CodigoTRP,'') AS ISOPvPedido_CodigoTRP,
	COALESCE(TIPO_FRETE.ISOPvPedidoTipoFrete,'') AS ISOPvPedidoTipoFrete,
	COALESCE(TABELA_CLIENTE.ISOEntClienteAttOtherValue,'') AS ISOEmpEnt_Tabela_Preco,
	PEDIDO_ITEM.ISOPvPedIte_PrecoLista,
	COALESCE(PEDIDO.ISOPVPed_OrdCompra,'') AS ISOPVPed_OrdCompra,

	CASE
		WHEN LINHA_ORDEM_COMPRA.ITEM_CLIENTE <> ''
		THEN COALESCE(PEDIDO.ISOPVPed_OrdCompra,'')
		ELSE
			CASE
				WHEN COALESCE(RTRIM(LTRIM(SUBSTRING(OC_DO_CLIENTE.ISOPvPedItemAttValue,1,15))),'') <> ''
				THEN COALESCE(RTRIM(LTRIM(SUBSTRING(OC_DO_CLIENTE.ISOPvPedItemAttValue,1,15))),'')
				ELSE COALESCE(PEDIDO.ISOPVPed_OrdCompra,'')
			END
	END AS ISOPvPedIte_NrOrdemCompra,

	CASE
		WHEN ABS(COALESCE(LINHA_PEDIDO_CLIENTE.ISOPvPedItemAttValue,LINHA_ORDEM_COMPRA.ITEM_CLIENTE,'')) = 0 AND LINHA_ORDEM_COMPRA.ITEM_CLIENTE <> ''
		THEN PEDIDO_ITEM.ISOPvPedIte_Codigo
		ELSE ABS(COALESCE(LINHA_PEDIDO_CLIENTE.ISOPvPedItemAttValue,LINHA_ORDEM_COMPRA.ITEM_CLIENTE,''))
	END
		AS ISOPvPedIte_LinhaOrdemCompra,

	COALESCE(RTRIM(LTRIM(SUBSTRING(LOTE1.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_Lote1,
	COALESCE(RTRIM(LTRIM(SUBSTRING(QTD1.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_QtdeLote1,
	COALESCE(RTRIM(LTRIM(SUBSTRING(LOTE2.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_Lote2,
	COALESCE(RTRIM(LTRIM(SUBSTRING(QTD2.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_QtdeLote2,
	COALESCE(RTRIM(LTRIM(SUBSTRING(LOTE3.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_Lote3,
	COALESCE(RTRIM(LTRIM(SUBSTRING(QTD3.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_QtdeLote3,
	COALESCE(RTRIM(LTRIM(SUBSTRING(LOTE4.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_Lote4,
	COALESCE(RTRIM(LTRIM(SUBSTRING(QTD4.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_QtdeLote4,
	COALESCE(RTRIM(LTRIM(SUBSTRING(LOTE5.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_Lote5,
	COALESCE(RTRIM(LTRIM(SUBSTRING(QTD5.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_QtdeLote5,
	COALESCE(NATUREZA_OPERACAO.ISOPvPedTip_NaturezaOperacaoCo,'') AS ISOPvPed_Operacao,

	/*
	Inativado por devergência de valores com protheus 13/05/20 (Edilon,Leticia)
	(PEDIDO_ITEM.ISOPvPedIte_ValorTotalCalculoF - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade)) AS ISOPvPedIte_PrecoCMLIntegracaoBO,
	((PEDIDO_ITEM.ISOPvPedIte_ValorTotalCalculoF - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade)) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao) AS ISOPvPedIte_PrecoUNESTIntegracaoBO,
	*/

/*
	CASE
		WHEN MATRIZ_ICMS.ISOPvMatICMS_SubTribICMSDocFis = 1
		THEN ROUND((PEDIDO_ITEM.ISOPvPedIte_ValorUnitario - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade)),6)
		ELSE ROUND((CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0 THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho ELSE PEDIDO_ITEM.ISOPvPedIte_ValorUnitario END - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade) - (PEDIDO_ITEM.ISOPvPedIte_ValorIPI / PEDIDO_ITEM.ISOPvPedIte_Quantidade)),6)
	END AS ISOPvPedIte_PrecoCMLIntegracaoBO,

	CASE
		WHEN MATRIZ_ICMS.ISOPvMatICMS_SubTribICMSDocFis = 1
		THEN ROUND(((PEDIDO_ITEM.ISOPvPedIte_ValorTotalCalculoF - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade)) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao),6)
		ELSE ROUND(((CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0 THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho ELSE PEDIDO_ITEM.ISOPvPedIte_ValorUnitario END - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade) - (PEDIDO_ITEM.ISOPvPedIte_ValorIPI / PEDIDO_ITEM.ISOPvPedIte_Quantidade)) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao),6)
	END AS ISOPvPedIte_PrecoUNESTIntegracaoBO,
*/
	CASE
		WHEN COALESCE(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0) = 0
			THEN 0
		ELSE
		CASE
			-- cliente TEM desoneração e o pedido é empenho
			-- PERFORMANCE WHEN MATRIZ_ICMS.ISOPvMatICMS_SubTribICMSDocFis = 1 AND COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) > 0
			WHEN (SELECT ISOPvMatICMS_SubTribICMSDocFis FROM MacroConsultaMatrizICMS WHERE MacroConsultaMatrizICMS.ISOEmp_Codigo = PEDIDO_ITEM.ISOEmp_Codigo AND MacroConsultaMatrizICMS.ISOPvPed_Codigo = PEDIDO_ITEM.ISOPvPed_Codigo AND MacroConsultaMatrizICMS.ISOPvPedIte_Codigo = PEDIDO_ITEM.ISOPvPedIte_Codigo) = 1 AND COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) > 0
				-- PERFORMANCE THEN ROUND(((((PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho / (1 - (MATRIZ_ICMS.ISOPvMatICMS_AliquotaICMS/100)) / (1 + (PEDIDO_ITEM.ISOPvPedIte_PercentualIPI / 100)))))),6)
				THEN ROUND(((((PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho / (1 - ((SELECT ISOPvMatICMS_AliquotaICMS FROM MacroConsultaMatrizICMS WHERE MacroConsultaMatrizICMS.ISOEmp_Codigo = PEDIDO_ITEM.ISOEmp_Codigo AND MacroConsultaMatrizICMS.ISOPvPed_Codigo = PEDIDO_ITEM.ISOPvPed_Codigo AND MacroConsultaMatrizICMS.ISOPvPedIte_Codigo = PEDIDO_ITEM.ISOPvPedIte_Codigo)/100)) / (1 + (PEDIDO_ITEM.ISOPvPedIte_PercentualIPI / 100)))))),6)
			-- cliente TEM desoneração e o pedido NÃO é empenho
			-- PERFORMANCE WHEN MATRIZ_ICMS.ISOPvMatICMS_SubTribICMSDocFis = 1 AND COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) = 0
			WHEN (SELECT ISOPvMatICMS_SubTribICMSDocFis FROM MacroConsultaMatrizICMS WHERE MacroConsultaMatrizICMS.ISOEmp_Codigo = PEDIDO_ITEM.ISOEmp_Codigo AND MacroConsultaMatrizICMS.ISOPvPed_Codigo = PEDIDO_ITEM.ISOPvPed_Codigo AND MacroConsultaMatrizICMS.ISOPvPedIte_Codigo = PEDIDO_ITEM.ISOPvPedIte_Codigo) = 1 AND COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) = 0
				-- desativado 22/06/2020 para utilizar novo campo de preco ajustado do item --	THEN ROUND(((PEDIDO_ITEM.ISOPvPedIte_ValorTotalCalculoF - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade)) ),6)
				THEN ROUND(PEDIDO_ITEM.ISOPvPedIte_PrecoAjustado ,6)
			--ELSE ROUND((CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0 THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho ELSE PEDIDO_ITEM.ISOPvPedIte_ValorUnitario END - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade) - (PEDIDO_ITEM.ISOPvPedIte_ValorIPI / PEDIDO_ITEM.ISOPvPedIte_Quantidade)),6)
			-- cliente SEM desoneração
			ELSE ROUND((CASE
							WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0
								THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho / (1 + ((PEDIDO_ITEM.ISOPvPedIte_PercSubsTributaria + PEDIDO_ITEM.ISOPvPedIte_PercentualFCPST)/100.0) ) / ((1+(PEDIDO_ITEM.ISOPvPedIte_PercentualIPI/100.0)) )
							--inativado pois não considerava o rateio do frete
							--ELSE (PEDIDO_ITEM.ISOPvPedIte_ValorUnitario - ((PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade) + PEDIDO_ITEM.ISOPVPedIte_ValorFCPST) - (PEDIDO_ITEM.ISOPvPedIte_ValorIPI / PEDIDO_ITEM.ISOPvPedIte_Quantidade))
							-- desativado 22/06/2020 para utilizar novo campo de preco ajustado do item --	ELSE ((((PEDIDO_ITEM.ISOPvPedIte_ValorUnitario * PEDIDO_ITEM.ISOPvPedIte_Quantidade) - (((PEDIDO_ITEM.ISOPvPedIte_ValorUnitario * PEDIDO_ITEM.ISOPvPedIte_Quantidade) / TOTAL_PEDIDO.ISOPvPed_ValorTotalPedido) * PEDIDO.ISOPvPed_ValorFrete)) / PEDIDO_ITEM.ISOPvPedIte_Quantidade) - ((PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade) + PEDIDO_ITEM.ISOPVPedIte_ValorFCPST) - (PEDIDO_ITEM.ISOPvPedIte_ValorIPI / PEDIDO_ITEM.ISOPvPedIte_Quantidade))
							ELSE PEDIDO_ITEM.ISOPvPedIte_PrecoAjustado -- desativado 16/07/2020 o valor já está na unidade comercial * PEDIDO_ITEM.ISOPvPedIte_Quantidade -- desativado 09/07/2020 pois o preco ajustado já está sem o frete ((((PEDIDO_ITEM.ISOPvPedIte_PrecoAjustado * PEDIDO_ITEM.ISOPvPedIte_Quantidade) - (((PEDIDO_ITEM.ISOPvPedIte_ValorUnitario * PEDIDO_ITEM.ISOPvPedIte_Quantidade) / TOTAL_PEDIDO.ISOPvPed_ValorTotalPedido) * PEDIDO.ISOPvPed_ValorFrete)) / PEDIDO_ITEM.ISOPvPedIte_Quantidade) )
						END )  / (1 + (ISOPvEstabTbV_PercDespFinancei / 100.00) ),6)
		END
	END AS ISOPvPedIte_PrecoCMLIntegracaoBO,

	ROUND (
	CASE
		WHEN COALESCE(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0) = 0
			THEN 0
		ELSE
		CASE
			-- cliente TEM desoneração e o pedido é empenho
			-- PERFORMANCE WHEN MATRIZ_ICMS.ISOPvMatICMS_SubTribICMSDocFis = 1 AND COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) > 0
			WHEN (SELECT ISOPvMatICMS_SubTribICMSDocFis FROM MacroConsultaMatrizICMS WHERE MacroConsultaMatrizICMS.ISOEmp_Codigo = PEDIDO_ITEM.ISOEmp_Codigo AND MacroConsultaMatrizICMS.ISOPvPed_Codigo = PEDIDO_ITEM.ISOPvPed_Codigo AND MacroConsultaMatrizICMS.ISOPvPedIte_Codigo = PEDIDO_ITEM.ISOPvPedIte_Codigo) = 1 AND COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) > 0
				-- PERFORMANCE THEN ROUND(((((PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho / (1 - (MATRIZ_ICMS.ISOPvMatICMS_AliquotaICMS/100)) / (1 + (PEDIDO_ITEM.ISOPvPedIte_PercentualIPI / 100))))) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao),6)
				THEN ROUND(((((PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho / (1 - ((SELECT ISOPvMatICMS_AliquotaICMS FROM MacroConsultaMatrizICMS WHERE MacroConsultaMatrizICMS.ISOEmp_Codigo = PEDIDO_ITEM.ISOEmp_Codigo AND MacroConsultaMatrizICMS.ISOPvPed_Codigo = PEDIDO_ITEM.ISOPvPed_Codigo AND MacroConsultaMatrizICMS.ISOPvPedIte_Codigo = PEDIDO_ITEM.ISOPvPedIte_Codigo)/100)) / (1 + (PEDIDO_ITEM.ISOPvPedIte_PercentualIPI / 100))))) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao),6)
			-- cliente TEM desoneração e o pedido NÃO é empenho
			--PERFORMANCE WHEN MATRIZ_ICMS.ISOPvMatICMS_SubTribICMSDocFis = 1 AND COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) = 0
			WHEN (SELECT ISOPvMatICMS_SubTribICMSDocFis FROM MacroConsultaMatrizICMS WHERE MacroConsultaMatrizICMS.ISOEmp_Codigo = PEDIDO_ITEM.ISOEmp_Codigo AND MacroConsultaMatrizICMS.ISOPvPed_Codigo = PEDIDO_ITEM.ISOPvPed_Codigo AND MacroConsultaMatrizICMS.ISOPvPedIte_Codigo = PEDIDO_ITEM.ISOPvPedIte_Codigo) = 1 AND COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) = 0
			-- desativado 22/06/2020 para utilizar novo campo de preco ajustado do item --	THEN ROUND(((PEDIDO_ITEM.ISOPvPedIte_ValorTotalCalculoF - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade)) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao),6)
				THEN ROUND((PEDIDO_ITEM.ISOPvPedIte_PrecoAjustado / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao),6)
			-- desativado 28/05/2020 pois utilizando valor dos impostos os valores não fechavam ELSE ROUND(((CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0 THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho ELSE PEDIDO_ITEM.ISOPvPedIte_ValorUnitario END - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade) - (PEDIDO_ITEM.ISOPvPedIte_ValorIPI / PEDIDO_ITEM.ISOPvPedIte_Quantidade)) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao),6)
			-- cliente SEM desoneração
			ELSE ROUND((CASE
							WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0
								THEN COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) / (1 + ((PEDIDO_ITEM.ISOPvPedIte_PercSubsTributaria + PEDIDO_ITEM.ISOPvPedIte_PercentualFCPST)/100.0) ) / ((1+(PEDIDO_ITEM.ISOPvPedIte_PercentualIPI/100.0)) )
							--inativado pois não considerava o rateio do frete
							--ELSE (PEDIDO_ITEM.ISOPvPedIte_ValorUnitario - ((PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade) + PEDIDO_ITEM.ISOPVPedIte_ValorFCPST) - (PEDIDO_ITEM.ISOPvPedIte_ValorIPI / PEDIDO_ITEM.ISOPvPedIte_Quantidade))
							-- desativado 22/06/2020 para utilizar novo campo de preco ajustado do item --	ELSE ((((PEDIDO_ITEM.ISOPvPedIte_ValorUnitario * PEDIDO_ITEM.ISOPvPedIte_Quantidade) - (((PEDIDO_ITEM.ISOPvPedIte_ValorUnitario * PEDIDO_ITEM.ISOPvPedIte_Quantidade) / TOTAL_PEDIDO.ISOPvPed_ValorTotalPedido) * PEDIDO.ISOPvPed_ValorFrete)) / PEDIDO_ITEM.ISOPvPedIte_Quantidade) - ((PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade) + PEDIDO_ITEM.ISOPVPedIte_ValorFCPST) - (PEDIDO_ITEM.ISOPvPedIte_ValorIPI / PEDIDO_ITEM.ISOPvPedIte_Quantidade))
							ELSE PEDIDO_ITEM.ISOPvPedIte_PrecoAjustado ---  desativado 09/07/2020 pois o preco ajustado já está sem o frete ((PEDIDO_ITEM.ISOPvPedIte_PrecoAjustado) - ((((PEDIDO_ITEM.ISOPvPedIte_PrecoAjustado * PEDIDO_ITEM.ISOPvPedIte_Quantidade) / TOTAL_PEDIDO.ISOPvPed_ValorTotalPedido) * PEDIDO.ISOPvPed_ValorFrete) / PEDIDO_ITEM.ISOPvPedIte_Quantidade))
						END ) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,6)
		END
	END / (1 + (ISOPvEstabTbV_PercDespFinancei / 100.00) ), 6) AS ISOPvPedIte_PrecoUNESTIntegracaoBO,

	COALESCE(EMPENHO.ISOCttPedCon_NumeroEmp,'') AS ISOPvPedido_NumeroEmpenho,
	TOTAL_LINHAS_PEDIDO.ISOPvPedIte_TotalLinhas

	-- INICIO SIMULACAO DE PREÇOS
	--(1 + (PEDIDO_ITEM.ISOPvPedIte_PercentualIPI / 100)) IPI,
	--(1 - (MATRIZ_ICMS.ISOPvMatICMS_AliquotaICMS/100)) ICMS,
	--PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho EMPENHO,
	--PEDIDO_ITEM.ISOPvPedIte_Quantidade QUANTIDADE,
	--FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao FATOR,
	--ROUND(ROUND(ROUND((PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho  / (1 - (MATRIZ_ICMS.ISOPvMatICMS_AliquotaICMS/100))) / (1 + (PEDIDO_ITEM.ISOPvPedIte_PercentualIPI / 100)) * PEDIDO_ITEM.ISOPvPedIte_Quantidade,2) * (1 + (PEDIDO_ITEM.ISOPvPedIte_PercentualIPI/100)),2) * (1 - (MATRIZ_ICMS.ISOPvMatICMS_AliquotaICMS/100)),2) SIMULACAO_PROTHEUS,
	--CASE
	--	WHEN MATRIZ_ICMS.ISOPvMatICMS_SubTribICMSDocFis = 1 AND COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) > 0
	--		THEN ROUND(((((PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho / (1 - (MATRIZ_ICMS.ISOPvMatICMS_AliquotaICMS/100)) / (1 + (PEDIDO_ITEM.ISOPvPedIte_PercentualIPI / 100))))) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao),6)
	--	WHEN MATRIZ_ICMS.ISOPvMatICMS_SubTribICMSDocFis = 1 AND COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) = 0
	--		THEN ROUND(((PEDIDO_ITEM.ISOPvPedIte_ValorTotalCalculoF - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade)) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao),6)
	--	ELSE ROUND(((CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0 THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho ELSE PEDIDO_ITEM.ISOPvPedIte_ValorUnitario END - (PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria / PEDIDO_ITEM.ISOPvPedIte_Quantidade) - (PEDIDO_ITEM.ISOPvPedIte_ValorIPI / PEDIDO_ITEM.ISOPvPedIte_Quantidade)) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao),6)
	--END * PEDIDO_ITEM.ISOPvPedIte_Quantidade AS SIMULADO_ISO,
	--PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho *	PEDIDO_ITEM.ISOPvPedIte_Quantidade RESULTADO_ISO
	-- TÉRMINO SIMULACAO DE PREÇOS
FROM
	PEDIDO -- CABECALHO DO PEDIDO
	INNER JOIN PEDIDO_ITEM ON -- ITEM DO PEDIDO
		PEDIDO.ISOEmp_Codigo = PEDIDO_ITEM.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = PEDIDO_ITEM.ISOPvPed_Codigo
	INNER JOIN TOTAL_LINHAS_PEDIDO ON -- TOTAL DE LINHAS DO PEDIDO
		PEDIDO.ISOEmp_Codigo = TOTAL_LINHAS_PEDIDO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = TOTAL_LINHAS_PEDIDO.ISOPvPed_Codigo
	INNER JOIN ATENDENTE_PEDIDO ON  -- ATENDENTE QUE CRIOU O PEDIDO
		PEDIDO.ISOPvPed_CodigoAtendente = ATENDENTE_PEDIDO.ISOEnt_Codigo
	INNER JOIN FATOR_CONVERSAO_PRODUTO ON -- UNIDADES DE MEDIDA DO ITEM DO PEDIDO
		PEDIDO_ITEM.ISOEmp_Codigo = FATOR_CONVERSAO_PRODUTO.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPrd_Codigo = FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_PrdCodigo AND
		PEDIDO_ITEM.ISOPvPedIte_UnidadeOrigem = FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_UndOrigem AND
		PEDIDO_ITEM.ISOPvPedIte_UnidadeDestino = FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_UndDestino AND
		FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_Flag = 'A' AND
		FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_Armazem = ''
	INNER JOIN CLIENTE ON -- INFORMAÇÕES DO CLIENTE
		PEDIDO.ISOEmp_Codigo = CLIENTE.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_CliCodigo = CLIENTE.ISOEntCli_Codigo
    INNER JOIN LOCAL_FATURAMENTO ON
		PEDIDO.ISOEmp_Codigo = LOCAL_FATURAMENTO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_EstadoOrigem = LOCAL_FATURAMENTO.ISOPvCD_Origem AND
        PEDIDO.ISOPvPed_EstadoDestino = LOCAL_FATURAMENTO.ISOPvCD_Destino AND
        PEDIDO.ISOPvPedOri_Codigo = LOCAL_FATURAMENTO.ISOPvCDOri_Pedido
	INNER JOIN ESTABELECIMENTO_LX ON -- ESTABELECIMENTO DO PEDIDO
		PEDIDO.ISOEmp_Codigo = ESTABELECIMENTO_LX.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_EstadoOrigem = ESTABELECIMENTO_LX.ISOPvCD_Origem AND
        PEDIDO.ISOPvPed_EstadoDestino = ESTABELECIMENTO_LX.ISOPvCD_Destino
	INNER JOIN CUSTO_FINANCEIRO ON
		ESTABELECIMENTO_LX.ISOEmp_Codigo = CUSTO_FINANCEIRO.ISOEmp_Codigo AND
		ESTABELECIMENTO_LX.ISOPvCD_Estabelecimento = CUSTO_FINANCEIRO.ISOPvEstab_Codigo AND
		PEDIDO.ISOEmp_Codigo = CUSTO_FINANCEIRO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Pagamento = CUSTO_FINANCEIRO.ISOPvTV_Codigo

	LEFT OUTER JOIN EMPENHO ON -- EMPENHO DO PEDIDO
		PEDIDO.ISOEmp_Codigo = EMPENHO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = EMPENHO.ISOCttPedCon_PedidoCodigo

	LEFT OUTER JOIN TOTAL_PEDIDO_EMPENHO ON -- EMPENHO DO PEDIDO
		PEDIDO.ISOEmp_Codigo = TOTAL_PEDIDO_EMPENHO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = TOTAL_PEDIDO_EMPENHO.ISOPvPed_Codigo

	LEFT OUTER JOIN TOTAL_PEDIDO ON -- VALOR TOTAL DO PEDIDO
		PEDIDO.ISOEmp_Codigo = TOTAL_PEDIDO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = TOTAL_PEDIDO.ISOPvPed_Codigo

	LEFT OUTER JOIN TABELA_CLIENTE ON -- TABELA DO CLIENTE
		PEDIDO.ISOEmp_Codigo = TABELA_CLIENTE.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_CliCodigo = TABELA_CLIENTE.ISOEntCli_Codigo
		AND TABELA_CLIENTE.ISOEntClienteAttId = 99
	LEFT OUTER JOIN ORIGEM_PROTHEUS ON -- PESQUISA CÓDIGO PROTHEUS DO CLIENTE
		PEDIDO.ISOEmp_Codigo = ORIGEM_PROTHEUS.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_CliCodigo = ORIGEM_PROTHEUS.ISOEmpEnt_EntCodigo AND
		ORIGEM_PROTHEUS.ISOEmpOri_Codigo = 13
	LEFT OUTER JOIN ORIGEM_LX ON  -- PESQUISA CÓDIGO LX DO CLIENTE
		PEDIDO.ISOEmp_Codigo = ORIGEM_LX.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_CliCodigo = ORIGEM_LX.ISOEmpEnt_EntCodigo AND
		ORIGEM_LX.ISOEmpOri_Codigo = 2
	LEFT OUTER JOIN CONDICAO_PAGAMENTO ON
		PEDIDO.ISOEmp_Codigo = CONDICAO_PAGAMENTO.ISOEmp_Codigo AND
		PEDIDO.ISOPeCndPgt_Codigo = CONDICAO_PAGAMENTO.ISOPeCndPgt_Codigo
	LEFT OUTER JOIN ANALISE_CREDITO ON  -- PESQUISA DA TAREFA DE LIBERAÇÃO DE CRÉDITO
		PEDIDO.ISOEmp_Codigo = ANALISE_CREDITO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = ANALISE_CREDITO.ISOPvPed_Codigo
	LEFT OUTER JOIN TIPO_FRETE ON -- INFORMACOES DE FRETE DO PEDIDO
		PEDIDO.ISOEmp_Codigo = TIPO_FRETE.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = TIPO_FRETE.ISOPvPed_Codigo
	LEFT OUTER JOIN TRANSPORTADORA ON -- INFORMACOES DA TRANSPORTADORA DO PEDIDO
		PEDIDO.ISOEmp_Codigo = TRANSPORTADORA.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = TRANSPORTADORA.ISOPvPed_Codigo
	LEFT OUTER JOIN	LINHA_PEDIDO_CLIENTE  ON  -- Observação do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = LINHA_PEDIDO_CLIENTE.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = LINHA_PEDIDO_CLIENTE.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = LINHA_PEDIDO_CLIENTE.ISOPvPedIte_Codigo

	LEFT OUTER JOIN	LINHA_ORDEM_COMPRA ON  -- Observação do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = LINHA_ORDEM_COMPRA.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = LINHA_ORDEM_COMPRA.ISOPvPed_Codigo AND
	    PEDIDO_ITEM.ISOPvPedIte_Codigo = LINHA_ORDEM_COMPRA.ITEM_PEDIDO

	LEFT OUTER JOIN	OC_DO_CLIENTE ON  -- Observação do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = OC_DO_CLIENTE.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = OC_DO_CLIENTE.ISOPvPed_Codigo AND
	    PEDIDO_ITEM.ISOPvPedIte_Codigo = OC_DO_CLIENTE.ISOPvPedIte_Codigo

	LEFT OUTER JOIN	LOTE1 ON  -- lote 1 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = LOTE1.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = LOTE1.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = LOTE1.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	QTD1 ON  -- qtde 1 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = QTD1.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = QTD1.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = QTD1.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	LOTE2 ON  -- lote 2 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = LOTE2.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = LOTE2.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = LOTE2.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	QTD2 ON  -- qtde 2 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = QTD2.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = QTD2.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = QTD2.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	LOTE3 ON  -- lote 3 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = LOTE3.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = LOTE3.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = LOTE3.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	QTD3 ON  -- qtde 3 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = QTD3.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = QTD3.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = QTD3.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	LOTE4 ON  -- lote 4 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = LOTE4.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = LOTE4.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = LOTE4.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	QTD4 ON  -- qtde 4 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = QTD4.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = QTD4.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = QTD4.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	LOTE5 ON  -- lote 5 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = LOTE5.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = LOTE5.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = LOTE5.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	QTD5 ON  -- qtde 5 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = QTD5.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = QTD5.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = QTD5.ISOPvPedIte_Codigo
	LEFT OUTER JOIN NATUREZA_OPERACAO ON
		PEDIDO.ISOEmp_Codigo = NATUREZA_OPERACAO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPedTip_Codigo = NATUREZA_OPERACAO.ISOPvPedTip_Codigo
	--LEFT OUTER JOIN MATRIZ_ICMS ON
	--	PEDIDO_ITEM.ISOEmp_Codigo = MATRIZ_ICMS.ISOEmp_Codigo AND
	--	PEDIDO_ITEM.ISOPvPed_Codigo = MATRIZ_ICMS.ISOPvPed_Codigo AND
	--	PEDIDO_ITEM.ISOPvPedIte_Codigo = MATRIZ_ICMS.ISOPvPedIte_Codigo
WHERE
	PEDIDO.ISOEmp_Codigo = 11 --AND
	--PEDIDO_ITEM.ISOPvPedIteSit_Codigo = 1
	--PEDIDO.ISOPvPed_Codigo = 8742706 and

	AND PEDIDO.ISOPvPedSit_Codigo in (1, 30)     --- ABERTO /  PEDIDO LIBERADO DE CREDITO

	--PEDIDO.ISOPvPed_Codigo between 8740390 and 8740890 -- pedidos indaial
	--PEDIDO.ISOPvPed_Codigo between 8664441 AND 8739451 AND -- pedidos do simulador


	--AND (
	--	-- ANALISE DE CREDITO / INATIVIDADE DO CLIENTE / TITULOS EM ABERTO
	--	PEDIDO.ISOPvPed_Codigo NOT IN (select isopvped_codigo from [MACRO_ANALISE_CREDITO] where ISOEmp_Codigo = 11)-- and SITUACAO <> '')
	--	--PEDIDO.ISOPvPed_Codigo NOT IN (select isopvped_codigo from [MACRO_ANALISE_CREDITO] where ISOEmp_Codigo = 11 and ISOPvPedSit_Codigo = 1)
	--	--PEDIDO.ISOPvPed_Codigo NOT IN (SELECT ISOPvPed_Codigo FROM GATILHO_C21_ANALISE_LIMITE_CREDITO WHERE ISOEmp_Codigo = 11 AND  ((LIMITE_CREDITO - TOTAL_CONTAS_RECEBER - PED_EM_ABERTO) < TOTAL_PEDIDO) OR (DATEDIFF(DD,DATA_ULTIMA_COMPRA,GETDATE()) > 60) OR (DATEDIFF(DD,DATA_TITULO,GETDATE()) > 1))
	--	--OR
	--	-- ANALISE PRAZO MEDIO
	--	--PEDIDO.ISOPvPed_Codigo NOT IN (SELECT ISOPvPed_Codigo FROM GATILHO_C22_ANALISE_PRAZO_MEDIO_CLIENTE WITH (NOLOCK) WHERE (1=1) AND PRAZO_MEDIO_CP > PRAZO_MEDIO_CLIENTE)
	--)

/*
SELECT * FROM MACROISOPvPedido2

SELECT * FROM MACROISOPvPedido

select *
FROM MACRO_ANALISE_CREDITO WITH (NOLOCK) CROSS APPLY (SELECT ISOENTORG_CODIGO, ISOENTSEG_CODIGO FROM MACROISOUNIONORG_PES) AS DUMMY(COD_CLIENTE, SEGMENTO)
WHERE ISOEMP_CODIGO = 11
AND ISOPVPEDSIT_CODIGO = 1
AND (ISOPVPED_CLICODIGO = COD_CLIENTE AND SEGMENTO IN (1,2))

select * from isosdconexecucao
WHERE ISOEMP_CODIGO = 11
and ISOSDConExe_Codigo >= 395581965
and ISOSDConExe_Comando like '%credito%'

INSERT INTO ISOSDCON_PVPEDIDO
SELECT ISOEMP_CODIGO, 395582093, ISOPVPED_CODIGO,'A', CAST(CONVERT(CHAR , GETDATE(), 120) AS DATETIME), 977744
FROM MACRO_ANALISE_CREDITO WITH (NOLOCK) CROSS APPLY (SELECT ISOENTORG_CODIGO, ISOENTSEG_CODIGO FROM MACROISOUNIONORG_PES) AS DUMMY(COD_CLIENTE, SEGMENTO)
 WHERE (ISOEmp_Codigo = 11 AND ISOPvPed_DataAlteracao >= '2020-07-06 11:58:56.000' ) AND (   ISOEMP_CODIGO = 11
AND ISOPVPEDSIT_CODIGO = 1
AND (ISOPVPED_CLICODIGO = COD_CLIENTE AND SEGMENTO IN (1,2)))

*/;


-- dbo.VWMACROISOPvPedido_PERFORMANCE source

/*

select * from MacroConsultaMatrizICMS_FAST(11, 7923878, 1)

drop table view_pedido
go
select * into view_pedido from (
select 'PERFORMANCE' as Origem, ISOEmp_Codigo,	ISOPvPed_Codigo,	ISOPvPed_CliCodigo,	ISOPvPed_DtaPedido,	ISOPvPed_HoraPedido,	ISOPeCntPgt_Forma,	ISOPvPed_Pagamento,	ISOPvPed_DtaSolEntrega,	ISOPvPed_CodEndEntrega,	ISOPvPedOri_Codigo,	ISOPvPedTip_Codigo,	ISOPvPed_CodEndCobranca,	ISOPvPed_ValorTotalPedido,	ISOPvPedIte_Codigo,	ISOPrd_Codigo,	ISOPvPedIte_Quantidade,	ISOPvPedIte_DataPromessa,	ISOPvPedIte_DtaSolEntrega,	ISOPvPedIte_UnidadeOrigem,	ISOPvPedIte_UnidadeDestino,	ISOPrdUndFatC_FatorConversao,	ISOPvPedIte_Qtd_UM_estoque,	ISOPvPedIte_Vlr_Total_Unitario,	ISOPvPedIte_Vlr_Total_Unitario_EST,	ISOPvPedIteSit_Codigo,	ISOPvPedIte_AgendamentoData,	ISOPvPedIte_AgendamentoHoraIni,	ISOPvPedIte_AgendamentoHoraFin,	ISOPvPedIte_ValorEmpenho,	ISOPvPed_ValorFrete,	ISOEmpEnt_CliCod_ERP,	ISOEmpEnt_Ori_LX,	ISOPvPedIte_Armazem,	ISOEntCli_Operacao,	ISOPvCD_Estabelecimento_LX,	ISOPvPed_CodigoAtendente,	ISOEnt_NomeAtendente,	ISOWFTrf_DataLiberacaoCredito,	ISOWFTrf_HoraLiberacaoCredito,	ISOWFTrf_CodigoAtendente,	ISOMoe_Codigo,	ISOPvPedIte_ValorIPI,	ISOPvPedIte_VlrSubsTrib,	ISOPvPedIte_ValorICMS,	ISOPvPedIte_ValorPIS,	ISOPvPedIte_ValorCofins,	ISOPVPedIte_ValorFCPST,	ISOPvPedIte_ValorFCP,	ISOPvPedido_CodigoTRP,	ISOPvPedidoTipoFrete,	ISOEmpEnt_Tabela_Preco,	ISOPvPedIte_PrecoLista,	ISOPVPed_OrdCompra,	ISOPvPedIte_NrOrdemCompra,	ISOPvPedIte_LinhaOrdemCompra,	ISOPvPedIte_Lote1,	ISOPvPedIte_QtdeLote1,	ISOPvPedIte_Lote2,	ISOPvPedIte_QtdeLote2,	ISOPvPedIte_Lote3,	ISOPvPedIte_QtdeLote3,	ISOPvPedIte_Lote4,	ISOPvPedIte_QtdeLote4,	ISOPvPedIte_Lote5,	ISOPvPedIte_QtdeLote5,	ISOPvPed_Operacao,	ISOPvPedIte_PrecoCMLIntegracaoBO,	ISOPvPedIte_PrecoUNESTIntegracaoBO,	ISOPvPedido_NumeroEmpenho,	ISOPvPedIte_TotalLinhas from VWMACROISOPvPedido_PERFORMANCE
union all
select 'PRODUCAO' as Origem, ISOEmp_Codigo,	ISOPvPed_Codigo,	ISOPvPed_CliCodigo,	ISOPvPed_DtaPedido,	ISOPvPed_HoraPedido,	ISOPeCntPgt_Forma,	ISOPvPed_Pagamento,	ISOPvPed_DtaSolEntrega,	ISOPvPed_CodEndEntrega,	ISOPvPedOri_Codigo,	ISOPvPedTip_Codigo,	ISOPvPed_CodEndCobranca,	ISOPvPed_ValorTotalPedido,	ISOPvPedIte_Codigo,	ISOPrd_Codigo,	ISOPvPedIte_Quantidade,	ISOPvPedIte_DataPromessa,	ISOPvPedIte_DtaSolEntrega,	ISOPvPedIte_UnidadeOrigem,	ISOPvPedIte_UnidadeDestino,	ISOPrdUndFatC_FatorConversao,	ISOPvPedIte_Qtd_UM_estoque,	ISOPvPedIte_Vlr_Total_Unitario,	ISOPvPedIte_Vlr_Total_Unitario_EST,	ISOPvPedIteSit_Codigo,	ISOPvPedIte_AgendamentoData,	ISOPvPedIte_AgendamentoHoraIni,	ISOPvPedIte_AgendamentoHoraFin,	ISOPvPedIte_ValorEmpenho,	ISOPvPed_ValorFrete,	ISOEmpEnt_CliCod_ERP,	ISOEmpEnt_Ori_LX,	ISOPvPedIte_Armazem,	ISOEntCli_Operacao,	ISOPvCD_Estabelecimento_LX,	ISOPvPed_CodigoAtendente,	ISOEnt_NomeAtendente,	ISOWFTrf_DataLiberacaoCredito,	ISOWFTrf_HoraLiberacaoCredito,	ISOWFTrf_CodigoAtendente,	ISOMoe_Codigo,	ISOPvPedIte_ValorIPI,	ISOPvPedIte_VlrSubsTrib,	ISOPvPedIte_ValorICMS,	ISOPvPedIte_ValorPIS,	ISOPvPedIte_ValorCofins,	ISOPVPedIte_ValorFCPST,	ISOPvPedIte_ValorFCP,	ISOPvPedido_CodigoTRP,	ISOPvPedidoTipoFrete,	ISOEmpEnt_Tabela_Preco,	ISOPvPedIte_PrecoLista,	ISOPVPed_OrdCompra,	ISOPvPedIte_NrOrdemCompra,	ISOPvPedIte_LinhaOrdemCompra,	ISOPvPedIte_Lote1,	ISOPvPedIte_QtdeLote1,	ISOPvPedIte_Lote2,	ISOPvPedIte_QtdeLote2,	ISOPvPedIte_Lote3,	ISOPvPedIte_QtdeLote3,	ISOPvPedIte_Lote4,	ISOPvPedIte_QtdeLote4,	ISOPvPedIte_Lote5,	ISOPvPedIte_QtdeLote5,	ISOPvPed_Operacao,	ISOPvPedIte_PrecoCMLIntegracaoBO,	ISOPvPedIte_PrecoUNESTIntegracaoBO,	ISOPvPedido_NumeroEmpenho,	ISOPvPedIte_TotalLinhas from VWMACROISOPvPedido
) as pedido

select Origem, ISOEmp_Codigo, ISOPvPed_Codigo, ISOPvPedIte_Codigo, ISOPrd_Codigo,	ISOPvPedIte_Quantidade,	ISOPrdUndFatC_FatorConversao,	ISOPvPedIte_Qtd_UM_estoque,	ISOPvPedIte_Vlr_Total_Unitario,	ISOPvPedIte_Vlr_Total_Unitario_EST, ISOPvPedIte_ValorEmpenho,	ISOPvPed_ValorFrete, ISOPvPedIte_ValorIPI,	ISOPvPedIte_VlrSubsTrib,	ISOPvPedIte_ValorICMS,	ISOPvPedIte_ValorPIS,	ISOPvPedIte_ValorCofins,	ISOPVPedIte_ValorFCPST,	ISOPvPedIte_ValorFCP, ISOPvPedIte_PrecoCMLIntegracaoBO,	ISOPvPedIte_PrecoUNESTIntegracaoBO from view_pedido
order by ISOEmp_Codigo,	ISOPvPed_Codigo, ISOPvPedIte_Codigo, Origem

select * from MacroConsultaMatrizICMS

select * from [VWMACROISOPvPedido_PERFORMANCE]
where isoemp_codigo = 11
and isopvped_codigo = 7923878

-- diferenca de valores
select Origem, ISOEmp_Codigo, ISOPvPed_Codigo, ISOPvPedIte_Codigo, ISOPrd_Codigo,	ISOPvPedIte_Quantidade,	ISOPrdUndFatC_FatorConversao,	ISOPvPedIte_Qtd_UM_estoque,	ISOPvPedIte_Vlr_Total_Unitario,	ISOPvPedIte_Vlr_Total_Unitario_EST, ISOPvPedIte_ValorEmpenho,	ISOPvPed_ValorFrete, ISOPvPedIte_ValorIPI,	ISOPvPedIte_VlrSubsTrib,	ISOPvPedIte_ValorICMS,	ISOPvPedIte_ValorPIS,	ISOPvPedIte_ValorCofins,	ISOPVPedIte_ValorFCPST,	ISOPvPedIte_ValorFCP, ISOPvPedIte_PrecoCMLIntegracaoBO,	ISOPvPedIte_PrecoUNESTIntegracaoBO
from view_pedido A
where Origem = 'PRODUCAO'
and exists (select Origem, ISOEmp_Codigo, ISOPvPed_Codigo, ISOPvPedIte_Codigo, ISOPrd_Codigo,	ISOPvPedIte_Quantidade,	ISOPrdUndFatC_FatorConversao,	ISOPvPedIte_Qtd_UM_estoque,	ISOPvPedIte_Vlr_Total_Unitario,	ISOPvPedIte_Vlr_Total_Unitario_EST, ISOPvPedIte_ValorEmpenho,	ISOPvPed_ValorFrete, ISOPvPedIte_ValorIPI,	ISOPvPedIte_VlrSubsTrib,	ISOPvPedIte_ValorICMS,	ISOPvPedIte_ValorPIS,	ISOPvPedIte_ValorCofins,	ISOPVPedIte_ValorFCPST,	ISOPvPedIte_ValorFCP, ISOPvPedIte_PrecoCMLIntegracaoBO,	ISOPvPedIte_PrecoUNESTIntegracaoBO
from view_pedido B
where
A.ISOEmp_Codigo = B.ISOEmp_Codigo
AND A.ISOPvPed_Codigo = B.ISOPvPed_Codigo
AND A.ISOPvPedIte_Codigo = B.ISOPvPedIte_Codigo
AND (A.ISOPvPedIte_PrecoCMLIntegracaoBO <> B.ISOPvPedIte_PrecoCMLIntegracaoBO
	OR A.ISOPvPedIte_PrecoUNESTIntegracaoBO <> B.ISOPvPedIte_PrecoUNESTIntegracaoBO)
AND B.Origem = 'PERFORMANCE')

-- diferenca de pedidos/itens
select Origem, ISOEmp_Codigo, ISOPvPed_Codigo, ISOPvPedIte_Codigo, ISOPrd_Codigo,	ISOPvPedIte_Quantidade,	ISOPrdUndFatC_FatorConversao,	ISOPvPedIte_Qtd_UM_estoque,	ISOPvPedIte_Vlr_Total_Unitario,	ISOPvPedIte_Vlr_Total_Unitario_EST, ISOPvPedIte_ValorEmpenho,	ISOPvPed_ValorFrete, ISOPvPedIte_ValorIPI,	ISOPvPedIte_VlrSubsTrib,	ISOPvPedIte_ValorICMS,	ISOPvPedIte_ValorPIS,	ISOPvPedIte_ValorCofins,	ISOPVPedIte_ValorFCPST,	ISOPvPedIte_ValorFCP, ISOPvPedIte_PrecoCMLIntegracaoBO,	ISOPvPedIte_PrecoUNESTIntegracaoBO
from view_pedido A
where Origem = 'PRODUCAO'
and not exists (select Origem, ISOEmp_Codigo, ISOPvPed_Codigo, ISOPvPedIte_Codigo, ISOPrd_Codigo,	ISOPvPedIte_Quantidade,	ISOPrdUndFatC_FatorConversao,	ISOPvPedIte_Qtd_UM_estoque,	ISOPvPedIte_Vlr_Total_Unitario,	ISOPvPedIte_Vlr_Total_Unitario_EST, ISOPvPedIte_ValorEmpenho,	ISOPvPed_ValorFrete, ISOPvPedIte_ValorIPI,	ISOPvPedIte_VlrSubsTrib,	ISOPvPedIte_ValorICMS,	ISOPvPedIte_ValorPIS,	ISOPvPedIte_ValorCofins,	ISOPVPedIte_ValorFCPST,	ISOPvPedIte_ValorFCP, ISOPvPedIte_PrecoCMLIntegracaoBO,	ISOPvPedIte_PrecoUNESTIntegracaoBO
from view_pedido B
where
A.ISOEmp_Codigo = B.ISOEmp_Codigo
AND A.ISOPvPed_Codigo = B.ISOPvPed_Codigo
AND A.ISOPvPedIte_Codigo = B.ISOPvPedIte_Codigo
AND B.Origem = 'PERFORMANCE')


*/

CREATE VIEW [dbo].[VWMACROISOPvPedido_PERFORMANCE]
as
with
	PEDIDO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPed_CliCodigo,
			ISOPvPed_EstadoOrigem,
			ISOPvPed_EstadoDestino,
			ISOPvPed_CodigoAtendente,
			ISOPvPedSit_Codigo,
			ISOPvPedOri_Codigo,
			ISOPvPed_CodEndCobranca,
			ISOPvPed_ValorTotalPedido,
			ISOPeCndPgt_Codigo,
			ISOPvPed_ValorFrete,
			ISOPvPedTip_Codigo,
			ISOPvPed_Pagamento, -- Condição de pagamento
			ISOPVPed_OrdCompra,
			ISOPvPed_DtaSolEntrega,
			ISOPvPed_CodEndEntrega,
			ISOPvPed_DtaPedido,  -- Data do pedido
			ISOPvPed_HoraPedido -- Hora do pedido
		FROM ISOPVPEDIDO WITH (nOLOCK)
		WHERE
			ISOEmp_Codigo = 11
			AND ISOPvPedSit_Codigo in (1, 30)
			--AND ISOPvPed_Codigo NOT IN (select isopvped_codigo from [MACRO_ANALISE_CREDITO] where ISOEmp_Codigo = 11)
			--AND ISOPvPed_Codigo = 7923878
			),
	PEDIDO_ITEM AS (
		SELECT
			ISOPVPEDITEM.ISOEmp_Codigo,
			ISOPVPEDITEM.ISOPvPed_Codigo,
			ISOPVPEDITEM.ISOPvPedIte_Codigo,
			ISOPVPEDITEM.ISOPrd_Codigo,
			ISOPVPEDITEM.ISOPvPedIte_Quantidade,
			ISOPVPEDITEM.ISOPvPedIte_DtaSolEntrega,
			ISOPVPEDITEM.ISOPvPedIte_UnidadeOrigem,
			ISOPVPEDITEM.ISOPvPedIte_UnidadeDestino,
			ISOPVPEDITEM.ISOPvPedIte_ValorUnitario,
			ISOPVPEDITEM.ISOPvPedIteSit_Codigo,
			ISOPVPEDITEM.ISOPvPedIte_AgendamentoData,
			ISOPVPEDITEM.ISOPvPedIte_AgendamentoHoraIni,
			ISOPVPEDITEM.ISOPvPedIte_AgendamentoHoraFin,
			ISOPVPEDITEM.ISOPvPedIte_ValorEmpenho,
			ISOPVPEDITEM.ISOPvPedIte_PrecoLista,
			ISOPVPEDITEM.ISOPvPedIte_ValorIPI,
			ISOPVPEDITEM.ISOPvPedIte_VlrSubsTributaria,
			ISOPVPEDITEM.ISOPvPedIte_ValorICMS,
			ISOPVPEDITEM.ISOPvPedIte_ValorPIS,
			ISOPVPEDITEM.ISOPvPedIte_ValorCofins,
			ISOPVPEDITEM.ISOPVPedIte_ValorFCPST,
			ISOPVPEDITEM.ISOPvPedIte_ValorFCP,
			ISOPVPEDITEM.ISOPvPedIte_ValorTotalCalculoF,
			ISOPVPEDITEM.ISOPvPedIte_DataEntregaItem,
			ISOPVPEDITEM.ISOPvPedIte_PercentualIPI,
			ISOPVPEDITEM.ISOPvPedIte_PercSubsTributaria,
			ISOPVPEDITEM.ISOPvPedIte_PercentualFCPST,
			ISOPVPEDITEM.ISOPvPedIte_PrecoAjustado,
			ISOPVPEDITEM.ISOPvPedIte_PrecoAjustadoTotal
		FROM ISOPVPEDITEM INNER JOIN ISOPVPEDIDO
			ON ISOPVPEDIDO.ISOEmp_Codigo = ISOPVPEDITEM.ISOEmp_Codigo
			AND ISOPVPEDIDO.ISOPvPed_Codigo = ISOPVPEDITEM.ISOPvPed_Codigo
			AND ISOPVPEDIDO.ISOPvPedSit_Codigo in (1, 30)
		WHERE
			ISOPVPEDITEM.ISOEmp_Codigo = 11
			AND ISOPVPEDITEM.ISOPvPedIteSit_Codigo = 1
			),
	TOTAL_LINHAS_PEDIDO AS (
		SELECT
			ISOPVPEDITEM.ISOEmp_Codigo,
			ISOPVPEDITEM.ISOPvPed_Codigo,
			COUNT(*) AS ISOPvPedIte_TotalLinhas
		FROM ISOPVPEDITEM INNER JOIN ISOPVPEDIDO
			ON ISOPVPEDIDO.ISOEmp_Codigo = ISOPVPEDITEM.ISOEmp_Codigo
			AND ISOPVPEDIDO.ISOPvPed_Codigo = ISOPVPEDITEM.ISOPvPed_Codigo
			AND ISOPVPEDIDO.ISOPvPedSit_Codigo in (1, 30)
		WHERE
			ISOPVPEDITEM.ISOEmp_Codigo = 11
			AND ISOPVPEDITEM.ISOPvPedIteSit_Codigo = 1
		GROUP BY
			ISOPVPEDITEM.ISOEmp_Codigo,
			ISOPVPEDITEM.ISOPvPed_Codigo),
	TOTAL_PEDIDO_EMPENHO AS (
		SELECT
			ISOPVPEDITEM.ISOEmp_Codigo,
			ISOPVPEDITEM.ISOPvPed_Codigo,
			SUM(ISOPVPEDITEM.ISOPvPedIte_Quantidade * ISOPVPEDITEM.ISOPvPedIte_ValorEmpenho) AS ISOPvPed_ValorTotalPedido
		FROM         ISOPVPEDITEM INNER JOIN ISOPVPEDIDO
			ON ISOPVPEDIDO.ISOEmp_Codigo = ISOPVPEDITEM.ISOEmp_Codigo
			AND ISOPVPEDIDO.ISOPvPed_Codigo = ISOPVPEDITEM.ISOPvPed_Codigo
			AND ISOPVPEDIDO.ISOPvPedSit_Codigo in (1, 30)
		WHERE     (ISOPVPEDITEM.ISOEmp_Codigo = 11) AND (ISOPVPEDITEM.ISOPvPedIteSit_Codigo = 1)
		GROUP BY ISOPVPEDITEM.ISOEmp_Codigo, ISOPVPEDITEM.ISOPvPed_Codigo),
	TOTAL_PEDIDO AS (
		SELECT
			ISOPVPEDITEM.ISOEmp_Codigo,
			ISOPVPEDITEM.ISOPvPed_Codigo,
			SUM(ISOPVPEDITEM.ISOPvPedIte_Quantidade * ISOPVPEDITEM.ISOPvPedIte_PrecoAjustado) AS ISOPvPed_ValorTotalPedido
		FROM         ISOPVPEDITEM INNER JOIN ISOPVPEDIDO
			ON ISOPVPEDIDO.ISOEmp_Codigo = ISOPVPEDITEM.ISOEmp_Codigo
			AND ISOPVPEDIDO.ISOPvPed_Codigo = ISOPVPEDITEM.ISOPvPed_Codigo
			AND ISOPVPEDIDO.ISOPvPedSit_Codigo in (1, 30)
		WHERE     (ISOPVPEDITEM.ISOEmp_Codigo = 11) AND (ISOPVPEDITEM.ISOPvPedIteSit_Codigo = 1) --and ISOPvPed_Codigo >= 8741752
		GROUP BY ISOPVPEDITEM.ISOEmp_Codigo, ISOPVPEDITEM.ISOPvPed_Codigo),
	ATENDENTE_PEDIDO AS (
		SELECT
			ISOEnt_Codigo,
			ISOEnt_Nome
		FROM ISOENTIDADE INNER JOIN ISOENTUSUARIO
			ON ISOENTIDADE.ISOEnt_Codigo = ISOENTUSUARIO.ISOEntUsu_Codigo),
	FATOR_CONVERSAO_PRODUTO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPrdUndFatC_PrdCodigo,
			ISOPrdUndFatC_UndOrigem,
			ISOPrdUndFatC_UndDestino,
			-- criado regra de divisão quando a unidade de medida for "M"  --  22/07/2020 zagoto,edilon,cris
			case
				when ISOPrdUndFatC_UndDestino = 'M' then 1 / ISOPrdUndFatC_FatorConversao
				else ISOPrdUndFatC_FatorConversao
			end ISOPrdUndFatC_FatorConversao,
			ISOPrdUndFatC_Flag,
			ISOPrdUndFatC_Armazem
		FROM ISOPRDUNDFATORCONVERSAO WITH (NOLOCK)
		WHERE ISOEmp_Codigo = 11 and ISOPrdUndFatC_Flag = 'A' AND ISOPrdUndFatC_Armazem = ''), -- 02/12/2020 Zagoto - incluido critério de flag PERFORMANCE
	CLIENTE AS (
		SELECT	DISTINCT
			ISOENTCLIENTE.ISOEmp_Codigo,
			ISOENTCLIENTE.ISOEntCli_Codigo,
			ISOENTCLIENTE.ISOEntCli_Operacao
		FROM ISOENTCLIENTE INNER JOIN ISOPVPEDIDO
			ON ISOENTCLIENTE.ISOEmp_Codigo = ISOPVPEDIDO.ISOEmp_Codigo
				AND ISOENTCLIENTE.ISOEntCli_Codigo = ISOPVPEDIDO.ISOPvPed_CliCodigo
				AND ISOPVPEDIDO.ISOEmp_Codigo= 11
				AND ISOPVPEDIDO.ISOPvPedSit_Codigo in (1, 30)),
	LOCAL_FATURAMENTO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvCD_Origem,
			ISOPvCD_Destino,
			ISOPvCDOri_Pedido,
			ISOPvCDOri_Armazem
		FROM ISOPVCDORIGEM WITH (nOLOCK)),
	EMPENHO AS (
		SELECT
			ISOCTPEDCONTRATO.ISOEmp_Codigo,
			ISOCTPEDCONTRATO.ISOCttPedCon_PedidoCodigo,
			ISOCTPEDCONTRATO.ISOCttPedCon_NumeroEmp
		FROM ISOCTPEDCONTRATO WITH (nOLOCK)
		INNER JOIN ISOPVPEDIDO
			ON ISOPVPEDIDO.ISOEmp_Codigo = ISOCTPEDCONTRATO.ISOEmp_Codigo
			AND ISOPVPEDIDO.ISOPvPed_Codigo = ISOCTPEDCONTRATO.ISOCttPedCon_PedidoCodigo
			AND ISOPVPEDIDO.ISOEmp_Codigo = 11
			AND ISOPVPEDIDO.ISOPvPedSit_Codigo in (1, 30)),
	TABELA_CLIENTE AS (
		SELECT	DISTINCT
			ISOENTCLIENTEATTVALUES.ISOEmp_Codigo,
			ISOENTCLIENTEATTVALUES.ISOEntCli_Codigo,
			ISOENTCLIENTEATTVALUES.ISOEntClienteAttId,
			ISOENTCLIENTEATTVALUES.ISOEntClienteAttOtherValue
		FROM ISOENTCLIENTEATTVALUES INNER JOIN ISOPVPEDIDO
			ON ISOENTCLIENTEATTVALUES.ISOEmp_Codigo = ISOPVPEDIDO.ISOEmp_Codigo
				AND ISOENTCLIENTEATTVALUES.ISOEntCli_Codigo = ISOPVPEDIDO.ISOPvPed_CliCodigo
				AND ISOPVPEDIDO.ISOEmp_Codigo= 11
				AND ISOPVPEDIDO.ISOPvPedSit_Codigo in (1, 30)
		WHERE
			ISOENTCLIENTEATTVALUES.ISOEmp_Codigo = 11 AND
			ISOENTCLIENTEATTVALUES.ISOEntClienteAttId = 99),
	ESTABELECIMENTO_LX AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvCD_Origem,
			ISOPvCD_Destino,
			ISOPvCD_Estabelecimento
		FROM ISOPVCD WITH (nOLOCK)),
	ORIGEM_PROTHEUS AS (
		SELECT
			ISOEmp_Codigo,
			ISOEmpEnt_EntCodigo,
			ISOEmpOri_Codigo,
			ISOEmpEnt_Ori_Codigo
		FROM ISOEMPENT_ORIGEM WITH (nOLOCK)
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOEmpOri_Codigo = 13),
	ORIGEM_LX AS (
		SELECT	DISTINCT
			ISOEMPENT_ORIGEM.ISOEmp_Codigo,
			ISOEMPENT_ORIGEM.ISOEmpEnt_EntCodigo,
			ISOEMPENT_ORIGEM.ISOEmpOri_Codigo,
			ISOEMPENT_ORIGEM.ISOEmpEnt_Ori_Codigo
		FROM ISOEMPENT_ORIGEM INNER JOIN ISOPVPEDIDO
			ON ISOEMPENT_ORIGEM.ISOEmp_Codigo = ISOPVPEDIDO.ISOEmp_Codigo
				AND ISOEMPENT_ORIGEM.ISOEmpEnt_EntCodigo = ISOPVPEDIDO.ISOPvPed_CliCodigo
				AND ISOPVPEDIDO.ISOEmp_Codigo= 11
				AND ISOPVPEDIDO.ISOPvPedSit_Codigo in (1, 30)
		WHERE
			ISOEMPENT_ORIGEM.ISOEmp_Codigo = 11 AND
			ISOEMPENT_ORIGEM.ISOEmpOri_Codigo = 2),
	CONDICAO_PAGAMENTO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPeCndPgt_Codigo,
			ISOPeCntPgt_Forma
		FROM ISOPECNDPAGAMENTO WITH (nOLOCK)),
	CUSTO_FINANCEIRO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvTV_Codigo,
			ISOPvEstab_Codigo,
			ISOPvEstabTbV_PercDespFinancei
		FROM ISOPvEstab_TblVenda
		WHERE
			ISOEMP_CODIGO = 11
	),
	ANALISE_CREDITO AS (
		SELECT
			ISOWFTRF_PEDIDO.ISOEmp_Codigo,
			ISOWFTRF_PEDIDO.ISOPvPed_Codigo,
		    CASE WHEN ISOWFTrf_RspExe_RspCodigo IS NULL THEN '' ELSE CONVERT(VARCHAR(8), ISOWFTrf_DataSolucao, 112) END AS ISOWFTrf_DataLiberacaoCredito,  -- Data em que a tarefa de liberação de crédito foi executada
			CASE WHEN ISOWFTrf_RspExe_RspCodigo IS NULL THEN '' ELSE CONVERT(VARCHAR(8), ISOWFTrf_DataSolucao, 108) END AS ISOWFTrf_HoraLiberacaoCredito,
			CASE WHEN ISOWFTrf_RspExe_RspCodigo IS NULL THEN '' ELSE COALESCE(CAST(ISOWFTrf_RspExe_RspCodigo AS VARCHAR(10)),'')+'-'+COALESCE(USUARIO_CEDITO.ISOEnt_Nome,'') END AS ISOWFTrf_CodigoAtendente
		FROM ISOWFTRF_PEDIDO INNER JOIN ISOWFPROCEDIMENTO ON
			ISOWFTRF_PEDIDO.ISOEmp_Codigo = ISOWFPROCEDIMENTO.ISOEmp_Codigo AND
			ISOWFTRF_PEDIDO.ISOWFTrf_Ped_PrcCodigo = ISOWFPROCEDIMENTO.ISOWFPrc_Codigo AND
			ISOWFPROCEDIMENTO.ISOWFPrcPad_Codigo IN (SELECT ISOWFPrcPad_Codigo FROM ISOWFPrcPadrao where isoemp_codigo = 11 and ISOWFPrcPad_Descricao like 'BO%' and ISOWFPrcPad_Flag = 'A') AND -- PROCEDIMENTO ( PEDIDO - ANALISE DE CREDITO)
			ISOWFTRF_PEDIDO.ISOWFTrf_Ped_TrfCodigo = 1 --- CÓDIGO DA TAREFA QUE O ATENDENTE IRÁ CONFIRMAR O CRÉDITO DO CLIENTE ********
		INNER JOIN ISOWFTAREFA ON -- TAREFA DE LIBERAÇÃO DE CRÉDITO
			ISOWFTRF_PEDIDO.ISOEmp_Codigo = ISOWFTAREFA.ISOEmp_Codigo AND
			ISOWFTRF_PEDIDO.ISOWFTrf_Ped_PrcCodigo = ISOWFTAREFA.ISOWFPrc_Codigo AND
			ISOWFTRF_PEDIDO.ISOWFTrf_Ped_TrfCodigo = ISOWFTAREFA.ISOWFTrfPad_Codigo AND
			ISOWFTAREFA.ISOWFTrfPad_Codigo = 1 AND  -- TAREFA (ANALISAR PEDIDO RETIDO EM CREDITO)
			ISOWFTAREFA.ISOWFTrfPadSit_Codigo = 1  -- SITUACAO (PEDIDO APROVADO DE CREDITO)
		INNER JOIN ISOENTIDADE AS USUARIO_CEDITO ON -- USUÁRIO QUE LIBEROU O CRÉDITO DO CLIENTE
			ISOWFTAREFA.ISOWFTrf_RspExe_RspCodigo = USUARIO_CEDITO.ISOEnt_Codigo
		WHERE ISOWFTRF_PEDIDO.ISOEmp_Codigo = 11
		AND ISOWFTRF_PEDIDO.ISOPvPed_Codigo IN (SELECT ISOPVPED_CODIGO FROM ISOPVPEDIDO WHERE ISOEMP_CODIGO = 11 AND ISOPVPEDSIT_CODIGO IN (1,30))
		AND ISOWFTRF_PEDIDO.ISOWFTrf_Ped_PrcCodigo = (SELECT MAX(X.ISOWFTrf_Ped_PrcCodigo) FROM ISOWFTRF_PEDIDO X WHERE ISOWFTRF_PEDIDO.ISOEmp_Codigo = X.ISOEmp_Codigo AND ISOWFTRF_PEDIDO.ISOPvPed_Codigo = X.ISOPvPed_Codigo)),
	TIPO_FRETE AS (
		SELECT 	DISTINCT
			ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOEmp_Codigo,
			ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOPvPed_Codigo,
			COALESCE(ISOPvPedidoAttOptValue,'') AS ISOPvPedidoTipoFrete
		FROM ISOPVPEDIDOATTVALUES AS ISOPVPEDIDOATTVALUES_TIPO_FRETE
		INNER JOIN ISOPVPEDIDOATTLEVEL1 ON
			ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOEmp_Codigo = ISOPVPEDIDOATTLEVEL1.ISOEmp_Codigo AND
			ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOPvPedidoAttId = ISOPVPEDIDOATTLEVEL1.ISOPvPedidoAttId AND
			ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOPvPedidoAttOptId = ISOPVPEDIDOATTLEVEL1.ISOPvPedidoAttOptId AND
			ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOPvPedidoAttId = 104 -- CÓDIGO DA PERGUNTA TIPO DO FRETE
		WHERE
			ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOEmp_Codigo = 11
			AND ISOPVPEDIDOATTVALUES_TIPO_FRETE.ISOPvPed_Codigo IN (SELECT ISOPVPED_CODIGO FROM ISOPVPEDIDO WHERE ISOEMP_CODIGO = 11 AND ISOPVPEDSIT_CODIGO IN (1,30))
			),
	TRANSPORTADORA AS (
		SELECT 	DISTINCT
			ISOPVPEDIDOATTVALUES_TRANSP.ISOEmp_Codigo,
			ISOPVPEDIDOATTVALUES_TRANSP.ISOPvPed_Codigo,
			COALESCE(ISOPvTrp_CodigoExterno,'') AS ISOPvPedido_CodigoTRP
		FROM ISOPVPEDIDOATTVALUES AS ISOPVPEDIDOATTVALUES_TRANSP
		INNER JOIN ISOPVTRANSPORTADORA ON
			ISOPVTRANSPORTADORA.ISOPvTrp_Codigo = ISOPVPEDIDOATTVALUES_TRANSP.ISOPvPedidoAttOptId AND
			ISOPVPEDIDOATTVALUES_TRANSP.ISOPvPedidoAttId = 105 --AND -- CÓDIGO DA PERGUNTA TRANSPORTADORA
			--ISOPVTRANSPORTADORA.ISOPvTrp_Flag = 'A'
		WHERE ISOPVPEDIDOATTVALUES_TRANSP.ISOEmp_Codigo = 11
			AND ISOPVPEDIDOATTVALUES_TRANSP.ISOPvPed_Codigo IN (SELECT ISOPVPED_CODIGO FROM ISOPVPEDIDO WHERE ISOEMP_CODIGO = 11 AND ISOPVPEDSIT_CODIGO IN (1,30))
		),
	OC_DO_CLIENTE AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (nOLOCK)
		WHERE
			ISOEmp_Codigo = 11
			AND ISOPVPEDITEMATTVALUES.ISOPvPed_Codigo IN (SELECT ISOPVPED_CODIGO FROM ISOPVPEDIDO WHERE ISOEMP_CODIGO = 11 AND ISOPVPEDSIT_CODIGO IN (1,30))
			AND ISOPvPedItemAttId = 1),
	LINHA_PEDIDO_CLIENTE AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (nOLOCK)
		WHERE
			ISOEmp_Codigo = 11
			AND ISOPVPEDITEMATTVALUES.ISOPvPed_Codigo IN (SELECT ISOPVPED_CODIGO FROM ISOPVPEDIDO WHERE ISOEMP_CODIGO = 11 AND ISOPVPEDSIT_CODIGO IN (1,30))
			AND ISOPvPedItemAttId = 2),
	LINHA_ORDEM_COMPRA AS (
		SELECT ISOPVPEDITEM.ISOEmp_Codigo, ISOPVPEDITEM.ISOPVPED_CODIGO, ITEM_PEDIDO, ITEM_CLIENTE
			FROM ISOPVPEDITEM LEFT OUTER JOIN (
			SELECT
				ISOEMP_CODIGO,
				ISOPVPED_CODIGO,
				CASE
					WHEN CHARINDEX('-',VALOR,1) > 1
					THEN SUBSTRING(VALOR,1,CHARINDEX('-',VALOR,1)-1)
					ELSE 0
				END AS ITEM_PEDIDO,
				SUBSTRING(VALOR,CHARINDEX('-',VALOR,1)+1,3) AS ITEM_CLIENTE
			-- incluido função para remover caracteres inválidos, como espaço e TAB
			FROM ISOPVPEDIDOATTVALUES CROSS APPLY DBO.SPLIT(REPLACE(REPLACE(LTRIM(RTRIM(ISOPVPEDIDOATTVALUELONG)),CHAR(32),''),CHAR(9),''),CHAR(10))
			--FROM ISOPVPEDIDOATTVALUES CROSS APPLY DBO.SPLIT(ISOPVPEDIDOATTVALUELONG,CHAR(10))
			WHERE ISOEMP_CODIGO = 11
			AND ISOPVPEDIDOATTID = 106
			AND PATINDEX('%[A-Z]%', ISOPVPEDIDOATTVALUELONG) = 0
			AND ISOPVPED_CODIGO IN (SELECT ISOPVPED_CODIGO FROM ISOPVPEDIDO WHERE ISOEMP_CODIGO = 11 AND ISOPVPEDSIT_CODIGO IN (1,30))
			AND CHARINDEX('-',VALOR,1) > 1
			AND VALOR <> '') DADO_COMPLEMENTAR_PEDIDO
				ON ISOPVPEDITEM.ISOEmp_Codigo = DADO_COMPLEMENTAR_PEDIDO.ISOEmp_Codigo AND
					ISOPVPEDITEM.ISOPvPed_Codigo = DADO_COMPLEMENTAR_PEDIDO.ISOPvPed_Codigo AND
					ISOPVPEDITEM.ISOPvPedIte_Codigo = DADO_COMPLEMENTAR_PEDIDO.ITEM_PEDIDO
			WHERE ISOPVPEDITEM.ISOEmp_Codigo = 11
			AND ISOPVPEDITEM.ISOPVPED_CODIGO IN (SELECT ISOPVPED_CODIGO FROM ISOPVPEDIDO WHERE ISOEMP_CODIGO = 11 AND ISOPVPEDSIT_CODIGO IN (1,30))),
	LOTE1 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- lote 1 do item do pedido
		WHERE
			ISOEmp_Codigo = 11
			AND ISOPVPEDITEMATTVALUES.ISOPvPed_Codigo IN (SELECT ISOPVPED_CODIGO FROM ISOPVPEDIDO WHERE ISOEMP_CODIGO = 11 AND ISOPVPEDSIT_CODIGO IN (1,30))
			AND ISOPvPedItemAttId = 4),
	QTD1 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- qtde 1 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 5),
	LOTE2 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- lote 2 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 6),
	QTD2 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- qtde 2 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 7),
	LOTE3 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- lote 3 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 8),
	QTD3 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- qtde 3 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 9),
	LOTE4 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- lote 4 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 10),
	QTD4 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- qtde 4 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 11),
	LOTE5 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK) -- lote 5 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 12),
	QTD5 AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPed_Codigo,
			ISOPvPedIte_Codigo,
			COALESCE(RTRIM(LTRIM(SUBSTRING(ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedItemAttValue
		FROM ISOPVPEDITEMATTVALUES WITH (NOLOCK)-- qtde 5 do item do pedido
		WHERE
			ISOEmp_Codigo = 11 AND
			ISOPvPedItemAttId = 13),
	NATUREZA_OPERACAO AS (
		SELECT
			ISOEmp_Codigo,
			ISOPvPedTip_Codigo,
			COALESCE(ISOPvPedTip_NaturezaOperacaoCo,'') AS ISOPvPedTip_NaturezaOperacaoCo
		FROM ISOPVPEDTIPO WITH (nOLOCK)
		WHERE
			ISOEmp_Codigo = 11)
SELECT
	PEDIDO.ISOEmp_Codigo, -- Código da empresa
	PEDIDO.ISOPvPed_Codigo, -- Código CRM do Pedido
	PEDIDO.ISOPvPed_CliCodigo, -- Código CRM do cliente
	PEDIDO.ISOPvPed_DtaPedido,  -- Data do pedido
	PEDIDO.ISOPvPed_HoraPedido, -- Hora do pedido
	CASE CONDICAO_PAGAMENTO.ISOPeCntPgt_Forma
		WHEN 'Bol' THEN 'BOLETO'
		WHEN 'Car' THEN 'CARTAO'
		WHEN 'Che' THEN 'CHEQUE'
		WHEN 'Dep' THEN 'DEPOSITO'
		WHEN 'Din' THEN 'Dinheiro'
	END AS ISOPeCntPgt_Forma, -- Forma de pagamento
	PEDIDO.ISOPvPed_Pagamento, -- Condição de pagamento
	PEDIDO.ISOPvPed_DtaSolEntrega,
	PEDIDO.ISOPvPed_CodEndEntrega,
	PEDIDO.ISOPvPedOri_Codigo,
	PEDIDO.ISOPvPedTip_Codigo,
	PEDIDO.ISOPvPed_CodEndCobranca,

	CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0 THEN TOTAL_PEDIDO_EMPENHO.ISOPvPed_ValorTotalPedido ELSE PEDIDO.ISOPvPed_ValorTotalPedido END AS ISOPvPed_ValorTotalPedido,

	PEDIDO_ITEM.ISOPvPedIte_Codigo, -- Sequencial do item do pedido
	PEDIDO_ITEM.ISOPrd_Codigo, -- Código do produto
	CASE
		WHEN ISNULL(NULLIF(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0),0) = 0
		THEN 0
		ELSE PEDIDO_ITEM.ISOPvPedIte_Quantidade
	END ISOPvPedIte_Quantidade,
	PEDIDO_ITEM.ISOPvPedIte_DataEntregaItem AS ISOPvPedIte_DataPromessa,
	PEDIDO_ITEM.ISOPvPedIte_DtaSolEntrega,
	PEDIDO_ITEM.ISOPvPedIte_UnidadeOrigem,
	PEDIDO_ITEM.ISOPvPedIte_UnidadeDestino,
	ROUND(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,6) AS ISOPrdUndFatC_FatorConversao, -- Fator de conversão sem decimais
	ROUND(PEDIDO_ITEM.ISOPvPedIte_Quantidade * ROUND(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,6),0) AS ISOPvPedIte_Qtd_UM_estoque,
	CASE
		WHEN ISNULL(NULLIF(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0),0) = 0
		THEN 0
		ELSE CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho >0 THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho ELSE ROUND(PEDIDO_ITEM.ISOPvPedIte_PrecoAjustadoTotal / PEDIDO_ITEM.ISOPvPedIte_Quantidade,6) END
	END ISOPvPedIte_Vlr_Total_Unitario,

	CASE
		WHEN ISNULL(NULLIF(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0),0) = 0
		THEN 0
		ELSE CASE WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0 THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho ELSE ROUND(PEDIDO_ITEM.ISOPvPedIte_PrecoAjustadoTotal / PEDIDO_ITEM.ISOPvPedIte_Quantidade,6) END / NULLIF(ROUND(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,6),0)
	END ISOPvPedIte_Vlr_Total_Unitario_EST,

	PEDIDO_ITEM.ISOPvPedIteSit_Codigo,
	PEDIDO_ITEM.ISOPvPedIte_AgendamentoData,
	PEDIDO_ITEM.ISOPvPedIte_AgendamentoHoraIni,
	PEDIDO_ITEM.ISOPvPedIte_AgendamentoHoraFin,
	PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,
	COALESCE(PEDIDO.ISOPvPed_ValorFrete,0) AS ISOPvPed_ValorFrete,
	COALESCE(ORIGEM_PROTHEUS.ISOEmpEnt_Ori_Codigo,'') AS ISOEmpEnt_CliCod_ERP,
	ORIGEM_LX.ISOEmpEnt_Ori_Codigo AS ISOEmpEnt_Ori_LX,
	LOCAL_FATURAMENTO.ISOPvCDOri_Armazem AS ISOPvPedIte_Armazem,
	COALESCE(CLIENTE.ISOEntCli_Operacao,'') AS ISOEntCli_Operacao,
	ESTABELECIMENTO_LX.ISOPvCD_Estabelecimento AS ISOPvCD_Estabelecimento_LX,
	PEDIDO.ISOPvPed_CodigoAtendente AS ISOPvPed_CodigoAtendente, -- Código do atendente que criou o pedido
	ATENDENTE_PEDIDO.ISOEnt_Nome AS ISOEnt_NomeAtendente, -- Nome do atendente que criou o pedido

	COALESCE(ANALISE_CREDITO.ISOWFTrf_DataLiberacaoCredito,'') AS ISOWFTrf_DataLiberacaoCredito, -- Data em que a tarefa de liberação de crédito foi executada
    COALESCE(ANALISE_CREDITO.ISOWFTrf_HoraLiberacaoCredito,'') AS ISOWFTrf_HoraLiberacaoCredito,  -- Hora em que a tarefa de liberação de crédito foi executada
    COALESCE(ANALISE_CREDITO.ISOWFTrf_CodigoAtendente,'') AS ISOWFTrf_CodigoAtendente, -- Responsável que executou a tarefa de liberação de crédito

	CASE
		WHEN PEDIDO.ISOPvPedOri_Codigo = 'EUR' THEN 3
		WHEN PEDIDO.ISOPvPedOri_Codigo = 'EU1' THEN 3
		WHEN PEDIDO.ISOPvPedOri_Codigo = 'USD' THEN 2
		WHEN PEDIDO.ISOPvPedOri_Codigo = 'US1' THEN 2
		ELSE 1
	END AS ISOMoe_Codigo,

	COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorIPI,0) AS ISOPvPedIte_ValorIPI,
	COALESCE(PEDIDO_ITEM.ISOPvPedIte_VlrSubsTributaria,0) AS ISOPvPedIte_VlrSubsTrib,
	COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorICMS,0) AS ISOPvPedIte_ValorICMS,
	COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorPIS,0) AS ISOPvPedIte_ValorPIS,
	COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorCofins,0) AS ISOPvPedIte_ValorCofins,
	COALESCE(PEDIDO_ITEM.ISOPVPedIte_ValorFCPST,0) AS ISOPVPedIte_ValorFCPST,
	COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorFCP,0) AS ISOPvPedIte_ValorFCP,
	COALESCE(TRANSPORTADORA.ISOPvPedido_CodigoTRP,'') AS ISOPvPedido_CodigoTRP,
	COALESCE(TIPO_FRETE.ISOPvPedidoTipoFrete,'') AS ISOPvPedidoTipoFrete,
	COALESCE(TABELA_CLIENTE.ISOEntClienteAttOtherValue,'') AS ISOEmpEnt_Tabela_Preco,
	PEDIDO_ITEM.ISOPvPedIte_PrecoLista,
	COALESCE(PEDIDO.ISOPVPed_OrdCompra,'') AS ISOPVPed_OrdCompra,

	CASE
		WHEN LINHA_ORDEM_COMPRA.ITEM_CLIENTE <> ''
		THEN COALESCE(PEDIDO.ISOPVPed_OrdCompra,'')
		ELSE
			CASE
				WHEN COALESCE(RTRIM(LTRIM(SUBSTRING(OC_DO_CLIENTE.ISOPvPedItemAttValue,1,15))),'') <> ''
				THEN COALESCE(RTRIM(LTRIM(SUBSTRING(OC_DO_CLIENTE.ISOPvPedItemAttValue,1,15))),'')
				ELSE COALESCE(PEDIDO.ISOPVPed_OrdCompra,'')
			END
	END AS ISOPvPedIte_NrOrdemCompra,

	CASE
		WHEN ABS(COALESCE(LINHA_PEDIDO_CLIENTE.ISOPvPedItemAttValue,LINHA_ORDEM_COMPRA.ITEM_CLIENTE,'')) = 0 AND LINHA_ORDEM_COMPRA.ITEM_CLIENTE <> ''
		THEN PEDIDO_ITEM.ISOPvPedIte_Codigo
		ELSE ABS(COALESCE(LINHA_PEDIDO_CLIENTE.ISOPvPedItemAttValue,LINHA_ORDEM_COMPRA.ITEM_CLIENTE,''))
	END
		AS ISOPvPedIte_LinhaOrdemCompra,

	COALESCE(RTRIM(LTRIM(SUBSTRING(LOTE1.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_Lote1,
	COALESCE(RTRIM(LTRIM(SUBSTRING(QTD1.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_QtdeLote1,
	COALESCE(RTRIM(LTRIM(SUBSTRING(LOTE2.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_Lote2,
	COALESCE(RTRIM(LTRIM(SUBSTRING(QTD2.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_QtdeLote2,
	COALESCE(RTRIM(LTRIM(SUBSTRING(LOTE3.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_Lote3,
	COALESCE(RTRIM(LTRIM(SUBSTRING(QTD3.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_QtdeLote3,
	COALESCE(RTRIM(LTRIM(SUBSTRING(LOTE4.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_Lote4,
	COALESCE(RTRIM(LTRIM(SUBSTRING(QTD4.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_QtdeLote4,
	COALESCE(RTRIM(LTRIM(SUBSTRING(LOTE5.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_Lote5,
	COALESCE(RTRIM(LTRIM(SUBSTRING(QTD5.ISOPvPedItemAttValue,1,15))),'') AS ISOPvPedIte_QtdeLote5,
	COALESCE(NATUREZA_OPERACAO.ISOPvPedTip_NaturezaOperacaoCo,'') AS ISOPvPed_Operacao,

	-- performance1
	CASE
		WHEN COALESCE(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0) = 0
			THEN 0
		ELSE
		CASE
			-- cliente TEM desoneração e o pedido é empenho
			WHEN ICMS_FAST.SubTribICMSDocFis = 1 AND COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) > 0
				THEN ROUND(((((PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho / (1 - (ICMS_FAST.AliquotaICMS/100)) / (1 + (PEDIDO_ITEM.ISOPvPedIte_PercentualIPI / 100)))))),6)
			-- cliente TEM desoneração e o pedido NÃO é empenho
			WHEN ICMS_FAST.SubTribICMSDocFis = 1 AND COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) = 0
				THEN ROUND(PEDIDO_ITEM.ISOPvPedIte_PrecoAjustado ,6)
			-- cliente SEM desoneração
			ELSE ROUND((CASE
							WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0
								THEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho / (1 + ((PEDIDO_ITEM.ISOPvPedIte_PercSubsTributaria + PEDIDO_ITEM.ISOPvPedIte_PercentualFCPST)/100.0) ) / ((1+(PEDIDO_ITEM.ISOPvPedIte_PercentualIPI/100.0)) )
							ELSE PEDIDO_ITEM.ISOPvPedIte_PrecoAjustado -- desativado 16/07/2020 o valor já está na unidade comercial * PEDIDO_ITEM.ISOPvPedIte_Quantidade -- desativado 09/07/2020 pois o preco ajustado já está sem o frete ((((PEDIDO_ITEM.ISOPvPedIte_PrecoAjustado * PEDIDO_ITEM.ISOPvPedIte_Quantidade) - (((PEDIDO_ITEM.ISOPvPedIte_ValorUnitario * PEDIDO_ITEM.ISOPvPedIte_Quantidade) / TOTAL_PEDIDO.ISOPvPed_ValorTotalPedido) * PEDIDO.ISOPvPed_ValorFrete)) / PEDIDO_ITEM.ISOPvPedIte_Quantidade) )
						END )  / (1 + (ISOPvEstabTbV_PercDespFinancei / 100.00) ),6)
		END
	END AS ISOPvPedIte_PrecoCMLIntegracaoBO,
	-- performance1

	-- performance2
	ROUND (
	CASE
		WHEN COALESCE(FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,0) = 0
			THEN 0
		ELSE
		CASE
			-- cliente TEM desoneração e o pedido é empenho
			WHEN ICMS_FAST.SubTribICMSDocFis = 1 AND COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) > 0
				THEN ROUND(((((PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho / (1 - (ICMS_FAST.AliquotaICMS/100)) / (1 + (PEDIDO_ITEM.ISOPvPedIte_PercentualIPI / 100))))) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao),6)
			-- cliente TEM desoneração e o pedido NÃO é empenho
			WHEN ICMS_FAST.SubTribICMSDocFis = 1 AND COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) = 0
				THEN ROUND((PEDIDO_ITEM.ISOPvPedIte_PrecoAjustado / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao),6)
			-- cliente SEM desoneração
			ELSE ROUND((CASE
							WHEN PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho > 0
								THEN COALESCE(PEDIDO_ITEM.ISOPvPedIte_ValorEmpenho,0) / (1 + ((PEDIDO_ITEM.ISOPvPedIte_PercSubsTributaria + PEDIDO_ITEM.ISOPvPedIte_PercentualFCPST)/100.0) ) / ((1+(PEDIDO_ITEM.ISOPvPedIte_PercentualIPI/100.0)) )
							ELSE PEDIDO_ITEM.ISOPvPedIte_PrecoAjustado ---  desativado 09/07/2020 pois o preco ajustado já está sem o frete ((PEDIDO_ITEM.ISOPvPedIte_PrecoAjustado) - ((((PEDIDO_ITEM.ISOPvPedIte_PrecoAjustado * PEDIDO_ITEM.ISOPvPedIte_Quantidade) / TOTAL_PEDIDO.ISOPvPed_ValorTotalPedido) * PEDIDO.ISOPvPed_ValorFrete) / PEDIDO_ITEM.ISOPvPedIte_Quantidade))
						END ) / FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_FatorConversao,6)
		END
	END / (1 + (ISOPvEstabTbV_PercDespFinancei / 100.00) ), 6) AS ISOPvPedIte_PrecoUNESTIntegracaoBO,
	-- performance2

	COALESCE(EMPENHO.ISOCttPedCon_NumeroEmp,'') AS ISOPvPedido_NumeroEmpenho,
	TOTAL_LINHAS_PEDIDO.ISOPvPedIte_TotalLinhas
FROM
	PEDIDO -- CABECALHO DO PEDIDO
	INNER JOIN PEDIDO_ITEM ON -- ITEM DO PEDIDO
		PEDIDO.ISOEmp_Codigo = PEDIDO_ITEM.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = PEDIDO_ITEM.ISOPvPed_Codigo
	INNER JOIN TOTAL_LINHAS_PEDIDO ON -- TOTAL DE LINHAS DO PEDIDO
		PEDIDO.ISOEmp_Codigo = TOTAL_LINHAS_PEDIDO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = TOTAL_LINHAS_PEDIDO.ISOPvPed_Codigo
	INNER JOIN ATENDENTE_PEDIDO ON  -- ATENDENTE QUE CRIOU O PEDIDO
		PEDIDO.ISOPvPed_CodigoAtendente = ATENDENTE_PEDIDO.ISOEnt_Codigo
	INNER JOIN FATOR_CONVERSAO_PRODUTO ON -- UNIDADES DE MEDIDA DO ITEM DO PEDIDO
		PEDIDO_ITEM.ISOEmp_Codigo = FATOR_CONVERSAO_PRODUTO.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPrd_Codigo = FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_PrdCodigo AND
		PEDIDO_ITEM.ISOPvPedIte_UnidadeOrigem = FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_UndOrigem AND
		PEDIDO_ITEM.ISOPvPedIte_UnidadeDestino = FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_UndDestino AND
		FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_Flag = 'A' AND
		FATOR_CONVERSAO_PRODUTO.ISOPrdUndFatC_Armazem = ''
	INNER JOIN CLIENTE ON -- INFORMAÇÕES DO CLIENTE
		PEDIDO.ISOEmp_Codigo = CLIENTE.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_CliCodigo = CLIENTE.ISOEntCli_Codigo
    INNER JOIN LOCAL_FATURAMENTO ON
		PEDIDO.ISOEmp_Codigo = LOCAL_FATURAMENTO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_EstadoOrigem = LOCAL_FATURAMENTO.ISOPvCD_Origem AND
        PEDIDO.ISOPvPed_EstadoDestino = LOCAL_FATURAMENTO.ISOPvCD_Destino AND
        PEDIDO.ISOPvPedOri_Codigo = LOCAL_FATURAMENTO.ISOPvCDOri_Pedido
	INNER JOIN ESTABELECIMENTO_LX ON -- ESTABELECIMENTO DO PEDIDO
		PEDIDO.ISOEmp_Codigo = ESTABELECIMENTO_LX.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_EstadoOrigem = ESTABELECIMENTO_LX.ISOPvCD_Origem AND
        PEDIDO.ISOPvPed_EstadoDestino = ESTABELECIMENTO_LX.ISOPvCD_Destino
	INNER JOIN CUSTO_FINANCEIRO ON
		ESTABELECIMENTO_LX.ISOEmp_Codigo = CUSTO_FINANCEIRO.ISOEmp_Codigo AND
		ESTABELECIMENTO_LX.ISOPvCD_Estabelecimento = CUSTO_FINANCEIRO.ISOPvEstab_Codigo AND
		PEDIDO.ISOEmp_Codigo = CUSTO_FINANCEIRO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Pagamento = CUSTO_FINANCEIRO.ISOPvTV_Codigo

	LEFT OUTER JOIN EMPENHO ON -- EMPENHO DO PEDIDO
		PEDIDO.ISOEmp_Codigo = EMPENHO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = EMPENHO.ISOCttPedCon_PedidoCodigo

	LEFT OUTER JOIN TOTAL_PEDIDO_EMPENHO ON -- EMPENHO DO PEDIDO
		PEDIDO.ISOEmp_Codigo = TOTAL_PEDIDO_EMPENHO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = TOTAL_PEDIDO_EMPENHO.ISOPvPed_Codigo

	LEFT OUTER JOIN TOTAL_PEDIDO ON -- VALOR TOTAL DO PEDIDO
		PEDIDO.ISOEmp_Codigo = TOTAL_PEDIDO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = TOTAL_PEDIDO.ISOPvPed_Codigo

	LEFT OUTER JOIN TABELA_CLIENTE ON -- TABELA DO CLIENTE
		PEDIDO.ISOEmp_Codigo = TABELA_CLIENTE.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_CliCodigo = TABELA_CLIENTE.ISOEntCli_Codigo
		AND TABELA_CLIENTE.ISOEntClienteAttId = 99
	LEFT OUTER JOIN ORIGEM_PROTHEUS ON -- PESQUISA CÓDIGO PROTHEUS DO CLIENTE
		PEDIDO.ISOEmp_Codigo = ORIGEM_PROTHEUS.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_CliCodigo = ORIGEM_PROTHEUS.ISOEmpEnt_EntCodigo AND
		ORIGEM_PROTHEUS.ISOEmpOri_Codigo = 13
	LEFT OUTER JOIN ORIGEM_LX ON  -- PESQUISA CÓDIGO LX DO CLIENTE
		PEDIDO.ISOEmp_Codigo = ORIGEM_LX.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_CliCodigo = ORIGEM_LX.ISOEmpEnt_EntCodigo AND
		ORIGEM_LX.ISOEmpOri_Codigo = 2
	LEFT OUTER JOIN CONDICAO_PAGAMENTO ON
		PEDIDO.ISOEmp_Codigo = CONDICAO_PAGAMENTO.ISOEmp_Codigo AND
		PEDIDO.ISOPeCndPgt_Codigo = CONDICAO_PAGAMENTO.ISOPeCndPgt_Codigo
	LEFT OUTER JOIN ANALISE_CREDITO ON  -- PESQUISA DA TAREFA DE LIBERAÇÃO DE CRÉDITO
		PEDIDO.ISOEmp_Codigo = ANALISE_CREDITO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = ANALISE_CREDITO.ISOPvPed_Codigo
	LEFT OUTER JOIN TIPO_FRETE ON -- INFORMACOES DE FRETE DO PEDIDO
		PEDIDO.ISOEmp_Codigo = TIPO_FRETE.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = TIPO_FRETE.ISOPvPed_Codigo
	LEFT OUTER JOIN TRANSPORTADORA ON -- INFORMACOES DA TRANSPORTADORA DO PEDIDO
		PEDIDO.ISOEmp_Codigo = TRANSPORTADORA.ISOEmp_Codigo AND
		PEDIDO.ISOPvPed_Codigo = TRANSPORTADORA.ISOPvPed_Codigo
	LEFT OUTER JOIN	LINHA_PEDIDO_CLIENTE  ON  -- Observação do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = LINHA_PEDIDO_CLIENTE.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = LINHA_PEDIDO_CLIENTE.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = LINHA_PEDIDO_CLIENTE.ISOPvPedIte_Codigo

	LEFT OUTER JOIN	LINHA_ORDEM_COMPRA ON  -- Observação do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = LINHA_ORDEM_COMPRA.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = LINHA_ORDEM_COMPRA.ISOPvPed_Codigo AND
	    PEDIDO_ITEM.ISOPvPedIte_Codigo = LINHA_ORDEM_COMPRA.ITEM_PEDIDO

	LEFT OUTER JOIN	OC_DO_CLIENTE ON  -- Observação do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = OC_DO_CLIENTE.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = OC_DO_CLIENTE.ISOPvPed_Codigo AND
	    PEDIDO_ITEM.ISOPvPedIte_Codigo = OC_DO_CLIENTE.ISOPvPedIte_Codigo

	LEFT OUTER JOIN	LOTE1 ON  -- lote 1 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = LOTE1.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = LOTE1.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = LOTE1.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	QTD1 ON  -- qtde 1 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = QTD1.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = QTD1.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = QTD1.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	LOTE2 ON  -- lote 2 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = LOTE2.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = LOTE2.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = LOTE2.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	QTD2 ON  -- qtde 2 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = QTD2.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = QTD2.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = QTD2.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	LOTE3 ON  -- lote 3 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = LOTE3.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = LOTE3.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = LOTE3.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	QTD3 ON  -- qtde 3 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = QTD3.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = QTD3.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = QTD3.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	LOTE4 ON  -- lote 4 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = LOTE4.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = LOTE4.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = LOTE4.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	QTD4 ON  -- qtde 4 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = QTD4.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = QTD4.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = QTD4.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	LOTE5 ON  -- lote 5 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = LOTE5.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = LOTE5.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = LOTE5.ISOPvPedIte_Codigo
	LEFT OUTER JOIN	QTD5 ON  -- qtde 5 do item do pedido
		PEDIDO_ITEM.ISOEmp_Codigo = QTD5.ISOEmp_Codigo AND
		PEDIDO_ITEM.ISOPvPed_Codigo = QTD5.ISOPvPed_Codigo AND
		PEDIDO_ITEM.ISOPvPedIte_Codigo = QTD5.ISOPvPedIte_Codigo
	LEFT OUTER JOIN NATUREZA_OPERACAO ON
		PEDIDO.ISOEmp_Codigo = NATUREZA_OPERACAO.ISOEmp_Codigo AND
		PEDIDO.ISOPvPedTip_Codigo = NATUREZA_OPERACAO.ISOPvPedTip_Codigo
	OUTER APPLY MacroConsultaMatrizICMS_FAST(PEDIDO_ITEM.ISOEmp_Codigo, PEDIDO_ITEM.ISOPvPed_Codigo, PEDIDO_ITEM.ISOPvPedIte_Codigo) AS ICMS_FAST
WHERE
	PEDIDO.ISOEmp_Codigo = 11 --AND
	AND PEDIDO.ISOPvPedSit_Codigo in (1, 30)     --- ABERTO /  PEDIDO LIBERADO DE CREDITO
	--AND (
	--	-- ANALISE DE CREDITO / INATIVIDADE DO CLIENTE / TITULOS EM ABERTO
	--	PEDIDO.ISOPvPed_Codigo NOT IN (select isopvped_codigo from [MACRO_ANALISE_CREDITO] where ISOEmp_Codigo = 11)-- and SITUACAO <> '')
	--	--PEDIDO.ISOPvPed_Codigo NOT IN (select isopvped_codigo from [MACRO_ANALISE_CREDITO] where ISOEmp_Codigo = 11 and ISOPvPedSit_Codigo = 1)
	--	--PEDIDO.ISOPvPed_Codigo NOT IN (SELECT ISOPvPed_Codigo FROM GATILHO_C21_ANALISE_LIMITE_CREDITO WHERE ISOEmp_Codigo = 11 AND  ((LIMITE_CREDITO - TOTAL_CONTAS_RECEBER - PED_EM_ABERTO) < TOTAL_PEDIDO) OR (DATEDIFF(DD,DATA_ULTIMA_COMPRA,GETDATE()) > 60) OR (DATEDIFF(DD,DATA_TITULO,GETDATE()) > 1))
	--	--OR
	--	-- ANALISE PRAZO MEDIO
	--	--PEDIDO.ISOPvPed_Codigo NOT IN (SELECT ISOPvPed_Codigo FROM GATILHO_C22_ANALISE_PRAZO_MEDIO_CLIENTE WITH (NOLOCK) WHERE (1=1) AND PRAZO_MEDIO_CP > PRAZO_MEDIO_CLIENTE)
	--);


-- dbo.VWParametrosCliente source

CREATE VIEW [dbo].[VWParametrosCliente]
as
SELECT DISTINCT
                      ParametrosCliente.EmpCod, ParametrosCliente.CliCod, ISOMKATECAMPANHA.ISOMkAteCmp_Codigo, ISOMKATECMPCONTATO.ISOMkAteCmpCnt_Sequencia, ParametrosCliente.MediaDia, ParametrosCliente.DvpMediaDia, ParametrosCliente.QdtVendas, ParametrosCliente.MediaVenda,
                      ParametrosCliente.DvpMediaVenda, ParametrosCliente.SegPlanejamento, ParametrosCliente.ProjetoPulverizado, ParametrosCliente.ReceitaMes1Ativo, ParametrosCliente.ReceitaMes2Ativo,
                      ParametrosCliente.ReceitaMes3Ativo, ParametrosCliente.ReceitaMes4Ativo, ParametrosCliente.ReceitaMes5Ativo, ParametrosCliente.ReceitaMes6Ativo, ParametrosCliente.ReceitaMes7Ativo,
                      ParametrosCliente.ReceitaMes8Ativo, ParametrosCliente.ReceitaMes9Ativo, ParametrosCliente.ReceitaMes10Ativo, ParametrosCliente.ReceitaMes11Ativo, ParametrosCliente.ReceitaMes12Ativo,
                      ParametrosCliente.ReceitaMes1Receptivo, ParametrosCliente.ReceitaMes2Receptivo, ParametrosCliente.ReceitaMes3Receptivo, ParametrosCliente.ReceitaMes4Receptivo,
                      ParametrosCliente.ReceitaMes5Receptivo, ParametrosCliente.ReceitaMes6Receptivo, ParametrosCliente.ReceitaMes7Receptivo, ParametrosCliente.ReceitaMes8Receptivo,
                      ParametrosCliente.ReceitaMes9Receptivo, ParametrosCliente.ReceitaMes10Receptivo, ParametrosCliente.ReceitaMes11Receptivo, ParametrosCliente.ReceitaMes12Receptivo,
                      ParametrosCliente.ReceitaMesAtualAtivo, ParametrosCliente.ReceitaMesAtualReceptivo, (ParametrosCliente.ReceitaMesAtualAtivo + ParametrosCliente.ReceitaMesAtualReceptivo) ReceitaMesAtual,
                      ParametrosCliente.MediaReceitaTrimes, ParametrosCliente.TipoEntrada,
                      ParametrosCliente.FrequenciaEntrada, ParametrosCliente.TipoClientePlanejamento, ParametrosCliente.NovoResponsavel, ParametrosCliente.EstadoClientePlanejamento,
                      ParametrosCliente.MediaCompraAnual, ParametrosCliente.ModaHora, ParametrosCliente.DvpHora, ISOENTENDERECO.ISOEntEnd_Codigo, ISOENTENDERECO.ISOEntEnd_CEP,
                      ISOLOCALIDADE.ISOLoc_Descricao, ISOESTADO.ISOEst_Sigla, ISOENTCLIENTE.ISOEntCli_Codigo, ISOENTCLIENTE.ISOEntCli_Flag, ISOENTCLIENTE.ISOEntCli_CodigoExt,
                      ISOENTCLIENTE.ISOEntCliSit_Codigo, ISOENTCLASSIFICACAOPAPEL.ISOEntClaP_Codigo, ISOENTCLASSIFICACAOPAPEL.ISOEntClaP_Descricao,
                      ISOENTCLAPESPECIALIDADE.ISOEntClaPEsp_Codigo, ISOENTCLAPESPECIALIDADE.ISOEntClaPEsp_Descricao, ISOENTORGANIZACAO.ISOEntOrg_RazaoSocial,
                      ISOENTORGANIZACAO.ISOEntSeg_Codigo, ISOENTSEGMENTO.ISOEntSeg_Descricao, ISOENTCLISITUACAO.ISOEntCliSit_Descricao, ISOMKATECMPCONTATO.ISOMkAteCmpCnt_Flag,
                      ISOMKCAMPANHA.ISOEmp_Codigo, ISOMKCAMPANHA.ISOMkCmp_Codigo, ISOMKATECAMPANHA.ISOMkAteCmp_Descricao, ISOMKCAMPANHA.ISOMkCmp_Descricao, ISOMKFINALIDADE.ISOMkFin_Descricao,
                      ISOENTENDERECO.ISOEnt_Codigo,
					  0 ValorUltimoPedidoCampanha,
					  getdate() DataUltimoPedidoCampanha,
					  getdate() DataUltimoPedido,
					  '' Regiao,
					  'S' RestricaoCredito,
					  0 CodigoCTI,
					  '' StatusCTI,
					  0 SequenciaLigacao,
					  0 OrdemContato,
					  getdate() DataUltimoContatoDecisor,
					  0 CodigoResponsavel,
					  '' Privacidade
FROM         ISOENTCLIENTE INNER JOIN
                      ParametrosCliente ON ISOENTCLIENTE.ISOEmp_Codigo = ParametrosCliente.EmpCod AND ISOENTCLIENTE.ISOEntCli_Codigo = ParametrosCliente.CliCod INNER JOIN
                      ISOENTCLASSIFICACAOPAPEL ON ISOENTCLIENTE.ISOEmp_Codigo = ISOENTCLASSIFICACAOPAPEL.ISOEmp_Codigo AND
                      ISOENTCLIENTE.ISOEntClaP_Codigo = ISOENTCLASSIFICACAOPAPEL.ISOEntClaP_Codigo INNER JOIN
                      ISOENTCLAPESPECIALIDADE ON ISOENTCLIENTE.ISOEmp_Codigo = ISOENTCLAPESPECIALIDADE.ISOEmp_Codigo AND
                      ISOENTCLIENTE.ISOEntClaP_Codigo = ISOENTCLAPESPECIALIDADE.ISOEntClaP_Codigo AND ISOENTCLIENTE.ISOEntClaPEsp_Codigo = ISOENTCLAPESPECIALIDADE.ISOEntClaPEsp_Codigo AND
                      ISOENTCLASSIFICACAOPAPEL.ISOEmp_Codigo = ISOENTCLAPESPECIALIDADE.ISOEmp_Codigo AND
                      ISOENTCLASSIFICACAOPAPEL.ISOEntClaP_Codigo = ISOENTCLAPESPECIALIDADE.ISOEntClaP_Codigo INNER JOIN
                      ISOENTORGANIZACAO ON ParametrosCliente.CliCod = ISOENTORGANIZACAO.ISOEntOrg_Codigo INNER JOIN
                      ISOENTSEGMENTO ON ISOENTORGANIZACAO.ISOEntSeg_Codigo = ISOENTSEGMENTO.ISOEntSeg_Codigo INNER JOIN
                      ISOLOCALIDADE INNER JOIN
                      ISOENTENDERECO ON ISOLOCALIDADE.ISOLoc_Codigo = ISOENTENDERECO.ISOLoc_Codigo INNER JOIN
                      ISOESTADO ON ISOLOCALIDADE.ISOPais_Codigo = ISOESTADO.ISOPais_Codigo AND ISOLOCALIDADE.ISOEst_Codigo = ISOESTADO.ISOEst_Codigo ON
                      ParametrosCliente.CliCod = ISOENTENDERECO.ISOEnt_Codigo INNER JOIN
                      ISOENTCLISITUACAO ON ISOENTCLIENTE.ISOEmp_Codigo = ISOENTCLISITUACAO.ISOEmp_Codigo AND
                      ISOENTCLIENTE.ISOEntCliSit_Codigo = ISOENTCLISITUACAO.ISOEntCliSit_Codigo INNER JOIN
                      ISOMKATECMPCONTATO ON ISOENTCLIENTE.ISOEmp_Codigo = ISOMKATECMPCONTATO.ISOEmp_Codigo AND
                      ISOENTCLIENTE.ISOEntCli_Codigo = ISOMKATECMPCONTATO.ISOMkAteCmpCnt_EntCodigo INNER JOIN
                      ISOMKATECAMPANHA ON ISOMKATECMPCONTATO.ISOEmp_Codigo = ISOMKATECAMPANHA.ISOEmp_Codigo AND
                      ISOMKATECMPCONTATO.ISOMkAteCmp_Codigo = ISOMKATECAMPANHA.ISOMkAteCmp_Codigo INNER JOIN
                      ISOMKCAMPANHA ON ISOMKATECAMPANHA.ISOEmp_Codigo = ISOMKCAMPANHA.ISOEmp_Codigo AND
                      ISOMKATECAMPANHA.ISOMkCmp_Codigo = ISOMKCAMPANHA.ISOMkCmp_Codigo INNER JOIN
                      ISOMKFINALIDADE ON ISOMKATECAMPANHA.ISOEmp_Codigo = ISOMKFINALIDADE.ISOEmp_Codigo AND ISOMKATECAMPANHA.ISOMkFin_Codigo = ISOMKFINALIDADE.ISOMkFin_Codigo
WHERE     (ParametrosCliente.EmpCod = 11) AND (ISOENTENDERECO.ISOEntEnd_Flag = 'A') and ISOENTENDERECO.ISOEntEnd_Principal = 'S'
--AND (ParametrosCliente.CliCod = 20204)
AND (ISOENTCLIENTE.ISOEntCli_Flag = 'A');


-- dbo.VW_093_Integr_Pedido_DadosAdic source

CREATE VIEW VW_093_Integr_Pedido_DadosAdic as
Select T01.ISOEmp_Codigo                         as VW_093_CodEmpresa,
       T02.ISOEmpOri_Codigo                      as VW_093_CodOrigemERP,
       T01.ISOPvPed_Codigo                       as VW_093_CodPedido,
       T01.ISOPvPed_CliCodigo                    as VW_093_CodClienteISO,
       RTrim(T10.ISOEnt_Nome)                    as VW_093_NomeClienteISO,
       T02.ISOEmpEnt_Ori_Codigo                  as VW_093_CodClienteERP,
       T01.ISOPvPed_CodEndCobranca               as VW_093_CodEndCobISO,
       T03.ISOEmpEntEnd_Ori_OriCodigo            as VW_093_CodEndCobERP,
       T01.ISOPvPed_CodEndEntrega                as VW_093_CodEndEntISO,
       T04.ISOEmpEntEnd_Ori_OriCodigo            as VW_093_CodEndEntERP,
       T05.ISOPvCDOri_Armazem                    as VW_093_CodArmazem,
       T06.ISOPvCD_Estabelecimento               as VW_093_CodEstabelecimento,
       T01.ISOPvPed_CodVendedorCD                as VW_093_CodRepresISO,
       RTrim(T07.ISOEnt_Nome)                    as VW_093_NomeRepresISO,
       T11.ISOEmpEnt_Ori_Codigo                  as VW_093_CodRepresERP,
       RTrim(T09.ISOEnt_Nome)                    as VW_093_NomeCoordISO
  From ISOPVPEDIDO T01
        Left Join ISOEMPENT_ORIGEM T02
          On T02.ISOEmp_Codigo              = T01.ISOEmp_Codigo
         And T02.ISOEmpEnt_EntCodigo        = T01.ISOPvPed_CliCodigo
        Left Join ISOEMPENTENDERECO_ORIGEM T03
          On T03.ISOEmp_Codigo              = T02.ISOEmp_Codigo
         And T03.ISOEmpOri_Codigo           = T02.ISOEmpOri_Codigo
         And T03.ISOEmpEntEnd_Ori_EntCodigo = T02.ISOEmpEnt_EntCodigo
         And T03.ISOEmpEntEnd_Ori_EndCodigo = T01.ISOPvPed_CodEndCobranca
        Left Join ISOEMPENTENDERECO_ORIGEM T04
          On T04.ISOEmp_Codigo              = T02.ISOEmp_Codigo
         And T04.ISOEmpOri_Codigo           = T02.ISOEmpOri_Codigo
         And T04.ISOEmpEntEnd_Ori_EntCodigo = T02.ISOEmpEnt_EntCodigo
         And T04.ISOEmpEntEnd_Ori_EndCodigo = T01.ISOPvPed_CodEndEntrega
       Inner Join ISOPVCDORIGEM T05
          On T05.ISOEmp_Codigo              = T01.ISOEmp_Codigo
         And T05.ISOPvCD_Origem             = T01.ISOPvPed_EstadoOrigem
         And T05.ISOPvCD_Destino            = T01.ISOPvPed_EstadoDestino
         And T05.ISOPvCDOri_Pedido          = T01.ISOPvPedOri_Codigo
       Inner Join ISOPVCD T06
          On T06.ISOEmp_Codigo              = T05.ISOEmp_Codigo
         And T06.ISOPvCD_Origem             = T05.ISOPvCD_Origem
       Inner Join ISOENTIDADE T07
          On T07.ISOEnt_Codigo              = T01.ISOPvPed_CodVendedorCD
        Left Join ISOENTRSP_CLIENTES T08
          On T08.ISOEmp_Codigo              = T01.ISOEmp_Codigo
         And T08.ISOEntCli_Codigo           = T01.ISOPvPed_CodVendedorCD
         And T08.ISOEntNivRsp_Codigo        = 9
        Left Join ISOENTIDADE T09
          On T09.ISOEnt_Codigo              = T08.ISOEntRsp_Codigo
       Inner JOin ISOENTIDADE T10
          On T10.ISOEnt_Codigo              = T01.ISOPvPed_CliCodigo
        Left Join ISOEMPENT_ORIGEM T11
          On T11.ISOEmp_Codigo              = T01.ISOEmp_Codigo
         And T11.ISOEmpEnt_EntCodigo        = T01.ISOPvPed_CodVendedorCD;

-------------------------------------------------------------------------------------------------------------------;


-- dbo.isoentenderecoprincipal source

CREATE VIEW isoentenderecoprincipal
as
select ISOEnt_Codigo,	ISOEntEnd_Codigo,	ISOEndTip_Codigo,	ISOEntEnd_CEP,	ISOLoc_Codigo,	ISOEntEnd_Titulo,	ISOEntEnd_Logradouro,	ISOEntEnd_Numero,	ISOEntEnd_Complemento,	ISOEntEnd_Bairro,	ISOEntEnd_CNPJ,	ISOEntEnd_InscEstadual,	ISOEntEnd_Flag,	ISOEntEnd_DataAlteracao,	ISOEntEnd_UsuarioAlteracao,	ISOEntEnd_Principal,	ISOEntEnd_Observacao,	ISOEntEnd_CodFiscal,	ISOEntEnd_CaixaPostal,	ISOEntEnd_SeqCategFiscal,	ISOEntEnd_Longitude,	ISOEntEnd_Latitude,	ISOEntEnd_Tabela,	ISOEntEnd_EmpCodigo from isoentendereco
where ISOEntEnd_Principal = 'S';


-- dbo.view_classe source

CREATE VIEW view_classe as
select linha.isolin_codigo, linha.isolin_descricao
from isoprdattvalues dad, isolinha linha, isoprdlinha prd
where
prd.isoprd_codigo = dad.isoprd_codigo
and linha.isolin_codigo = prd.isolin_codigo
and dad.isoprdattid = 9
and dad.isoprdattvalueid = 1
and linha.ISOLinTip_Codigo = 1
group by linha.isolin_codigo, linha.isolin_descricao;


-- dbo.view_familia source

CREATE VIEW view_familia as
select linha.isolin_codigo, linha.isolin_descricao
from isoprdattvalues dad, isolinha linha, isoprdlinha prd
where
prd.isoprd_codigo = dad.isoprd_codigo
and linha.isolin_codigo = prd.isolin_codigo
and dad.isoprdattid = 9
and dad.isoprdattvalueid = 1
and linha.ISOLinTip_Codigo = 2
group by linha.isolin_codigo, linha.isolin_descricao;


-- dbo.view_tabela_preco source

--USE [ISOWEB]
--GO

--/****** Object:  View [dbo].[view_tabela_preco]    Script Date: 01/08/2020 10:00:16 ******/
--SET ANSI_NULLS ON
--GO

--SET QUOTED_IDENTIFIER ON
--GO


CREATE VIEW [dbo].[view_tabela_preco]
AS
select
UFOrigem.ISOEst_Sigla as stufor,
UFDestino.ISOEst_Sigla as stufde,
ffi.isoprddadf_prdcodigo as fiitem,
prd.isoprd_descricao as tvprodsc,
icmsINTERNO.ISOPvMatICMS_AgrupFiscalCod,
fst.isopvmatsubst_agrupfiscalcod as stagfi,
fst.isopvmatsubst_categfiscalcod as stcatf,
case when fti.isopvicms_substtributaria = 'S'
	then isnull((100*(1+(fst.isopvmatsubst_percmarlucrofix/100)))*fst.isopvmatsubst_fatormultipbc,0)
	else 0
end as base_iva,
case when fti.isopvicms_substtributaria = 'S'
	then isnull((100*(1+(fst.isopvmatsubst_percmarlucrofix/100))) * (fst.isopvmatsubst_aliqicmsdif /100),0)
	else 0
end as icms_da_st,
icmsINTERNO.ISOPvMatICMS_AliquotaICMS as ICMS_interno,
--icmsINTERNO.ISOPvMatICMS_FatorMultBCICMS as FatorICMSInterno,
icmsINTERNO.ISOPvMatICMS_FatorMultICMS as FatorICMSInterno,
icmsSP.ISOPvMatICMS_AliquotaICMS as ICMS_SP,
--icmsSP.ISOPvMatICMS_FatorMultBCICMS as FatorICMSSP,
icmsSP.ISOPvMatICMS_FatorMultICMS as FatorICMSSP,
fti.isopvicms_substtributaria,

(select top 1 IPI from (
	select 1 as seq, ISOPvMatIPI_AliquotaIPI as IPI from isopvmatrizipi a
		where
			a.ISOPvMatIPI_InicioVigencia =
				(select max(b.ISOPvMatIPI_InicioVigencia) from isopvmatrizipi b
					where
					a.ISOEmp_Codigo = b.ISOEmp_Codigo
					and a.ISOPvMatIPI_AgrupFiscalCod = b.ISOPvMatIPI_AgrupFiscalCod
					and a.ISOPvMatIPI_EspecieCod = b.ISOPvMatIPI_EspecieCod
					and a.ISOPvMatIPI_PrdOrigemCod = b.ISOPvMatIPI_PrdOrigemCod
					and a.ISOPvMatIPI_DestinacaoCod = b.ISOPvMatIPI_DestinacaoCod
					and a.ISOPvMatIPI_NatOperacaoCod = b.ISOPvMatIPI_NatOperacaoCod
					and a.ISOPvMatIPI_CategFiscalCod = b.ISOPvMatIPI_CategFiscalCod
					and b.ISOPvMatIPI_Flag = 'A')
					and a.ISOEmp_Codigo = ffi.ISOEmp_Codigo
					and a.ISOPvMatIPI_AgrupFiscalCod = ffi.ISOPrdDadF_CodAgrupFiscal
					and a.ISOPvMatIPI_EspecieCod = case when ffi.ISOPrdDadF_EspecieCod = '0' then '' else ffi.ISOPrdDadF_EspecieCod end
					and a.ISOPvMatIPI_PrdOrigemCod = ffi.ISOPrdDadF_CodOrigem
					and a.ISOPvMatIPI_DestinacaoCod = ffi.ISOPrdDadF_CodDestinacao
					and a.ISOPvMatIPI_CategFiscalCod = icmsINTERNO.ISOPvMatICMS_CatFiscalCod
					and a.isoemp_codigo = 11
					and a.ISOPvMatIPI_Flag = 'A'
					and a.ISOPvMatIPI_NatOperacaoCod = '01'
				union all
					select 2 as seq, ISOPvClassF_AliqIPI as IPI from isopvclassificacaofiscal a
					where
						a.ISOPvClassF_Codigo = ffi.ISOPrdDadF_CodClassFiscal
						and a.ISOPvClassF_Flag = 'A'
						and a.ISOPvClassF_InicioVigencia =
							(select max(ISOPvClassF_InicioVigencia) from isopvclassificacaofiscal b
								where
									a.ISOPvClassF_Codigo = b.ISOPvClassF_Codigo
									and b.ISOPvClassF_Flag = 'A')

				) as AliquotaIPI order by seq
) as aliquotaIPI,
ISNULL((select isopvmaticms_aliqcargamaxima from isopvmatrizicms w
			where w.isopvmaticms_uforigem = fst.isopvmatsubst_uforigem
			and w.isopvmaticms_ufdestino = fst.isopvmatsubst_ufdestino
			and w.isopvmaticms_agrupfiscalcod = fst.isopvmatsubst_agrupfiscalcod
			and w.isopvmaticms_catfiscalcod = fst.isopvmatsubst_categfiscalcod
			and w.isopvmaticms_natoperacod = '01'
			and w.isopvmaticms_prdorigemcod = icmsINTERNO.ISOPvMatICMS_PrdOrigemCod -- 1
			and w.isopvmaticms_destinacaocod = 'S'
			and w.isopvmaticms_iniciovigencia = (select max(a.isopvmaticms_iniciovigencia) from isopvmatrizicms as a where w.isopvmaticms_uforigem = a.isopvmaticms_uforigem and w.isopvmaticms_ufdestino = a.isopvmaticms_ufdestino and w.isopvmaticms_agrupfiscalcod = a.isopvmaticms_agrupfiscalcod and w.isopvmaticms_catfiscalcod = a.isopvmaticms_catfiscalcod and w.isopvmaticms_natoperacod = a.isopvmaticms_natoperacod and w.isopvmaticms_prdorigemcod = a.isopvmaticms_prdorigemcod and a.isopvmaticms_flag = 'A' )),0)
isopvmaticms_aliqcargamaxima,

ISNULL((select ISOPvPrdEstab_OrigemCod from ISOPVPRDESTABELECIMENTO x, ISOPvEstabelecimento y where x.isoemp_codigo = prd.isoemp_codigo and x.isoprd_codigo = prd.isoprd_codigo and x.isoemp_codigo = y.isoemp_codigo and x.isopvestab_codigo = y.isopvestab_codigo and y.isopvestab_uf = icmsINTERNO.isopvmaticms_uforigem and isopvestab_flag = 'A' and isopvprdestab_flag = 'A'
		and
			(
				(y.isopvestab_uf = 'SC' and x.ISOPvEstab_Codigo = 35) or
				(y.isopvestab_uf = 'SP' and x.ISOPvEstab_Codigo = 9) or
				(y.isopvestab_uf = 'MG' and x.ISOPvEstab_Codigo = 12) or
				(y.isopvestab_uf = 'PE' and x.ISOPvEstab_Codigo = 28) or
				(y.isopvestab_uf = 'CE' and x.ISOPvEstab_Codigo = 13)
			)
		 ),icmsINTERNO.ISOPvMatICMS_PrdOrigemCod) ISOPvMatICMS_PrdOrigemCod,  -- TROCAR
fst.isopvmatsubst_percmarlucrofix,
fst.isopvmatsubst_fatormultipbc,
fst.isopvmatsubst_aliqicmsdif,
case when fti.isopvicms_substtributaria = 'S'
	then isnull(
			((100 +

(select top 1 IPI from (
	select 1 as seq, ISOPvMatIPI_AliquotaIPI as IPI from isopvmatrizipi a
		where
			a.ISOPvMatIPI_InicioVigencia =
				(select max(b.ISOPvMatIPI_InicioVigencia) from isopvmatrizipi b
					where
					a.ISOEmp_Codigo = b.ISOEmp_Codigo
					and a.ISOPvMatIPI_AgrupFiscalCod = b.ISOPvMatIPI_AgrupFiscalCod
					and a.ISOPvMatIPI_EspecieCod = b.ISOPvMatIPI_EspecieCod
					and a.ISOPvMatIPI_PrdOrigemCod = b.ISOPvMatIPI_PrdOrigemCod
					and a.ISOPvMatIPI_DestinacaoCod = b.ISOPvMatIPI_DestinacaoCod
					and a.ISOPvMatIPI_NatOperacaoCod = b.ISOPvMatIPI_NatOperacaoCod
					and a.ISOPvMatIPI_CategFiscalCod = b.ISOPvMatIPI_CategFiscalCod
					and b.ISOPvMatIPI_Flag = 'A')
					and a.ISOEmp_Codigo = ffi.ISOEmp_Codigo
					and a.ISOPvMatIPI_AgrupFiscalCod = ffi.ISOPrdDadF_CodAgrupFiscal
					and a.ISOPvMatIPI_EspecieCod = case when ffi.ISOPrdDadF_EspecieCod = '0' then '' else ffi.ISOPrdDadF_EspecieCod end
					and a.ISOPvMatIPI_PrdOrigemCod = ffi.ISOPrdDadF_CodOrigem
					and a.ISOPvMatIPI_DestinacaoCod = ffi.ISOPrdDadF_CodDestinacao
					and a.ISOPvMatIPI_CategFiscalCod = icmsINTERNO.ISOPvMatICMS_CatFiscalCod
					and a.isoemp_codigo = 11
					and a.ISOPvMatIPI_Flag = 'A'
					and a.ISOPvMatIPI_NatOperacaoCod = '01'
				union all
					select 2 as seq, ISOPvClassF_AliqIPI as IPI from isopvclassificacaofiscal a
					where
						a.ISOPvClassF_Codigo = ffi.ISOPrdDadF_CodClassFiscal
						and a.ISOPvClassF_Flag = 'A'
						and a.ISOPvClassF_InicioVigencia =
							(select max(ISOPvClassF_InicioVigencia) from isopvclassificacaofiscal b
								where
									a.ISOPvClassF_Codigo = b.ISOPvClassF_Codigo
									and b.ISOPvClassF_Flag = 'A')

				) as AliquotaIPI order by seq
)

			)*

			(1+(fst.isopvmatsubst_percmarlucrofix/100))) *
			fst.isopvmatsubst_fatormultipbc *
			(fst.isopvmatsubst_aliqicmsdif /100) -
			((select isopvmaticms_aliqcargamaxima from isopvmatrizicms w where w.isopvmaticms_uforigem = fst.isopvmatsubst_uforigem and w.isopvmaticms_ufdestino = fst.isopvmatsubst_ufdestino and w.isopvmaticms_agrupfiscalcod = fst.isopvmatsubst_agrupfiscalcod and w.isopvmaticms_catfiscalcod = fst.isopvmatsubst_categfiscalcod and w.isopvmaticms_natoperacod = '01' and w.isopvmaticms_prdorigemcod = icmsINTERNO.ISOPvMatICMS_PrdOrigemCod and w.isopvmaticms_destinacaocod = 'S' and w.isopvmaticms_flag = 'A' and w.isopvmaticms_iniciovigencia = (select max(a.isopvmaticms_iniciovigencia) from isopvmatrizicms as a where w.isopvmaticms_uforigem = a.isopvmaticms_uforigem and w.isopvmaticms_ufdestino = a.isopvmaticms_ufdestino and w.isopvmaticms_agrupfiscalcod = a.isopvmaticms_agrupfiscalcod and w.isopvmaticms_catfiscalcod = a.isopvmaticms_catfiscalcod and w.isopvmaticms_natoperacod = a.isopvmaticms_natoperacod and w.isopvmaticms_prdorigemcod = a.isopvmaticms_prdorigemcod and a.isopvmaticms_flag = 'A' ))/100)
		* 100,0)
	else 0
end as perc_st,
ffi.ISOPrdDadF_CodClassFiscal,
case when isoprd_unidade <> 'CX'
	then (select isoprdundfatc_unddestino
					from ISOPRDUNDFATORCONVERSAO fator
					where fator.isoemp_codigo = prd.isoemp_codigo and
						fator.ISOPrdUndFatC_PrdCodigo = prd.isoprd_codigo and
						fator.ISOPrdUndFatC_UndOrigem = prd.isoprd_unidade and
						-- 08/01/2020
						-- Zagoto: Incluído filtro para escluir registros em que o código do armazem seja diferente de ''
						-- Chamado: I2001-599
						-- 08/01/2020
						fator.ISOPrdUndFatC_Armazem = '' and
						fator.ISOPrdUndFatC_UndDestino = 'CX'
						and fator.ISOPrdUndFatC_Flag = 'A')
	else isoprd_unidade
end as unidade,
(select top 1 IPI from (
	select 1 as seq, ISOPvMatIPI_AliquotaIPI as IPI from isopvmatrizipi a
		where
			a.ISOPvMatIPI_InicioVigencia =
				(select max(b.ISOPvMatIPI_InicioVigencia) from isopvmatrizipi b
					where
					a.ISOEmp_Codigo = b.ISOEmp_Codigo
					and a.ISOPvMatIPI_AgrupFiscalCod = b.ISOPvMatIPI_AgrupFiscalCod
					and a.ISOPvMatIPI_EspecieCod = b.ISOPvMatIPI_EspecieCod
					and a.ISOPvMatIPI_PrdOrigemCod = b.ISOPvMatIPI_PrdOrigemCod
					and a.ISOPvMatIPI_DestinacaoCod = b.ISOPvMatIPI_DestinacaoCod
					and a.ISOPvMatIPI_NatOperacaoCod = b.ISOPvMatIPI_NatOperacaoCod
					and a.ISOPvMatIPI_CategFiscalCod = b.ISOPvMatIPI_CategFiscalCod
					and b.ISOPvMatIPI_Flag = 'A')
					and a.ISOEmp_Codigo = ffi.ISOEmp_Codigo
					and a.ISOPvMatIPI_AgrupFiscalCod = ffi.ISOPrdDadF_CodAgrupFiscal
					and a.ISOPvMatIPI_EspecieCod = case when ffi.ISOPrdDadF_EspecieCod = '0' then '' else ffi.ISOPrdDadF_EspecieCod end
					and a.ISOPvMatIPI_PrdOrigemCod = ffi.ISOPrdDadF_CodOrigem
					and a.ISOPvMatIPI_DestinacaoCod = ffi.ISOPrdDadF_CodDestinacao
					and a.ISOPvMatIPI_CategFiscalCod = icmsINTERNO.ISOPvMatICMS_CatFiscalCod
					and a.isoemp_codigo = 11
					and a.ISOPvMatIPI_Flag = 'A'
					and a.ISOPvMatIPI_NatOperacaoCod = '01'
				union all
					select 2 as seq, ISOPvClassF_AliqIPI as IPI from isopvclassificacaofiscal a
					where
						a.ISOPvClassF_Codigo = ffi.ISOPrdDadF_CodClassFiscal
						and a.ISOPvClassF_Flag = 'A'
						and a.ISOPvClassF_InicioVigencia =
							(select max(ISOPvClassF_InicioVigencia) from isopvclassificacaofiscal b
								where
									a.ISOPvClassF_Codigo = b.ISOPvClassF_Codigo
									and b.ISOPvClassF_Flag = 'A')

				) as AliquotaIPI order by seq
) as perc_ipi,
substring(esp.isopvprel_chave,16,4) as tabela,
(select top 1 classe.isolin_codigo from isolinha as classe, isoprdlinha as plinha
		where plinha.isoemp_codigo = classe.isoemp_codigo
		and plinha.isolin_codigo = classe.isolin_codigo
		and prd.isoemp_codigo = plinha.isoemp_codigo
		and prd.isoprd_codigo = plinha.isoprd_codigo
		and classe.isolintip_codigo = 1
		and classe.isolin_flag = 'A')
 as CodClasse,
(select top 1 isolin_descricao from isolinha as classe, isoprdlinha as plinha
		where plinha.isoemp_codigo = classe.isoemp_codigo
		and plinha.isolin_codigo = classe.isolin_codigo
		and prd.isoemp_codigo = plinha.isoemp_codigo
		and prd.isoprd_codigo = plinha.isoprd_codigo
		and classe.isolintip_codigo = 1
		and classe.isolin_flag = 'A')
 as classe,
(select top 1 familia.isolin_codigo from isolinha as familia, isoprdlinha as plinha
		where plinha.isoemp_codigo = familia.isoemp_codigo
		and plinha.isolin_codigo = familia.isolin_codigo
		and prd.isoemp_codigo = plinha.isoemp_codigo
		and prd.isoprd_codigo = plinha.isoprd_codigo
		and familia.isolintip_codigo = 2
		and familia.isolin_flag = 'A')
 as CodFamilia,
(select top 1 isolin_descricao from isolinha as familia, isoprdlinha as plinha
		where plinha.isoemp_codigo = familia.isoemp_codigo
		and plinha.isolin_codigo = familia.isolin_codigo
		and prd.isoemp_codigo = plinha.isoemp_codigo
		and prd.isoprd_codigo = plinha.isoprd_codigo
		and familia.isolintip_codigo = 2
		and familia.isolin_flag = 'A')
 as familia,
case when icmsINTERNO.ISOPvMatICMS_AliquotaICMS is null
	then 0
	else
		case when isoprd_unidade <> 'CX'
			then esp.ISOPvPreL_preco * isnull((select top 1 ISOPrdUndFatC_FatorConversao from ISOPRDUNDFATORCONVERSAO fator where fator.isoemp_codigo = prd.isoemp_codigo and fator.isoemp_codigo = 11 and fator.ISOPrdUndFatC_PrdCodigo = prd.isoprd_codigo and fator.ISOPrdUndFatC_UndOrigem = prd.isoprd_unidade and fator.ISOPrdUndFatC_UndDestino = 'CX'),1)
			else esp.ISOPvPreL_preco
		end
end
as PrecoESP

--'---',

--ffi.isoprddadf_prdcodigo,
--ffi.ISOPrdDadF_CodClassFiscal,
--icmsINTERNO.ISOPvMatICMS_AgrupFiscalCod,
--icmsINTERNO.ISOPvMatICMS_PrdOrigemCod,
--icmsINTERNO.ISOPvMatICMS_DestinacaoCod


from isoproduto as prd
	inner join isopvprecolista as esp
		on prd.isoprd_codigo = substring(esp.isopvprel_chave,1,6)

	left join isoprddadofiscal as ffi
		on prd.isoprd_codigo = ffi.isoprddadf_prdcodigo
		and ffi.isoprddadf_iniciovigencia = (select max(y.isoprddadf_iniciovigencia) from isoprddadofiscal as y
				where
					ffi.isoemp_codigo = y.isoemp_codigo and
					ffi.isoprddadf_prdcodigo = y.isoprddadf_prdcodigo and
					-- zagoto 08/01/2020
					-- deve ser considerado apenas o registro vigente, utilizando a chave empresa, produto (max) da data
					-- zagoto 08/01/2020
					--and ffi.ISOPrdDadF_CodAgrupFiscal = y.ISOPrdDadF_CodAgrupFiscal
					--and ffi.ISOPrdDadF_CodClassFiscal = y.ISOPrdDadF_CodClassFiscal
					--and ffi.ISOPrdDadF_CodDestinacao = y.ISOPrdDadF_CodDestinacao
					y.isoprddadf_flag = 'A')
		and isoprddadf_flag = 'A'

	inner join isoprdattvalues as dad_comp
		on prd.isoemp_codigo = dad_comp.isoemp_codigo
		and prd.isoprd_codigo = dad_comp.isoprd_codigo
		and dad_comp.isoemp_codigo = 11
		and dad_comp.isoprdattid = 9
		and dad_comp.isoprdattvalueid = 1
	left join isoestado UFOrigem
		on UFOrigem.ISOPais_Codigo = 1
	left join isoestado UFDestino
		on UFDestino.ISOPais_Codigo = 1
	left join isopvmatrizicms icmsINTERNO
		on ffi.ISOPrdDadF_CodAgrupFiscal = icmsINTERNO.ISOPvMatICMS_AgrupFiscalCod
		and	(
				(icmsINTERNO.ISOPvMatICMS_PrdOrigemCod = (select top 1 isopvprdestab_origemcod from ISOPVPRDESTABELECIMENTO x, ISOPvEstabelecimento y
														where x.isoemp_codigo = prd.isoemp_codigo
															and x.isoprd_codigo = prd.isoprd_codigo
															and x.isoemp_codigo = y.isoemp_codigo
															and x.isopvestab_codigo = y.isopvestab_codigo
															and y.isopvestab_uf = icmsINTERNO.isopvmaticms_uforigem

															-- chamado 39256
--															and (((x.isopvestab_codigo = 9) and y.isopvestab_uf = 'SP') or ((x.isopvestab_codigo = 35) and y.isopvestab_uf = 'SC') )

															--and ( (1=1 and y.isopvestab_uf not in ('SP','SC')) or ((x.isopvestab_codigo = 9) and y.isopvestab_uf = 'SP')
															--		or ((x.isopvestab_codigo = 35) and y.isopvestab_uf = 'SC') )

															and isopvestab_flag = 'A'
															and isopvprdestab_flag = 'A') and
				((select count(*) from ISOPVPRDESTABELECIMENTO x, ISOPvEstabelecimento y where x.isoemp_codigo = prd.isoemp_codigo and x.isoprd_codigo = prd.isoprd_codigo and x.isoemp_codigo = y.isoemp_codigo and x.isopvestab_codigo = y.isopvestab_codigo and y.isopvestab_uf = icmsINTERNO.isopvmaticms_uforigem and isopvestab_flag = 'A' and isopvprdestab_flag = 'A') > 0))


				or (icmsINTERNO.ISOPvMatICMS_PrdOrigemCod = ffi.ISOPrdDadF_CodOrigem and
				((select count(*) from ISOPVPRDESTABELECIMENTO x, ISOPvEstabelecimento y where x.isoemp_codigo = prd.isoemp_codigo and x.isoprd_codigo = prd.isoprd_codigo and x.isoemp_codigo = y.isoemp_codigo and x.isopvestab_codigo = y.isopvestab_codigo and y.isopvestab_uf = icmsINTERNO.isopvmaticms_uforigem and isopvestab_flag = 'A' and isopvprdestab_flag = 'A') = 0))
			)

		and ISOPvMatICMS_Flag = 'A'

		and icmsINTERNO.isopvmaticms_uforigem = UFOrigem.ISOEst_Sigla
		and icmsINTERNO.isopvmaticms_ufdestino  = UFDestino.ISOEst_Sigla
and icmsINTERNO.ISOPvMatICMS_CatFiscalCod = 'C08NS'
and icmsINTERNO.ISOPvMatICMS_NatOperaCod = '01'
and icmsINTERNO.ISOPvMatICMS_EspecieCod = ''
and icmsINTERNO.ISOPvMatICMS_DestinacaoCod = 'S'
and icmsINTERNO.ISOPvMatICMS_InicioVigencia = (select max(x.ISOPvMatICMS_InicioVigencia) from isopvmatrizicms x where icmsINTERNO.ISOEmp_Codigo = x.ISOEmp_Codigo and icmsINTERNO.ISOPvMatICMS_UFOrigem = x.ISOPvMatICMS_UFOrigem and icmsINTERNO.ISOPvMatICMS_UFDestino = x.ISOPvMatICMS_UFDestino and icmsINTERNO.ISOPvMatICMS_NatOperaCod = x.ISOPvMatICMS_NatOperaCod and icmsINTERNO.ISOPvMatICMS_AgrupFiscalCod = x.ISOPvMatICMS_AgrupFiscalCod and icmsINTERNO.ISOPvMatICMS_EspecieCod = x.ISOPvMatICMS_EspecieCod and icmsINTERNO.ISOPvMatICMS_CatFiscalCod = x.ISOPvMatICMS_CatFiscalCod and icmsINTERNO.ISOPvMatICMS_PrdOrigemCod = x.ISOPvMatICMS_PrdOrigemCod and icmsINTERNO.ISOPvMatICMS_DestinacaoCod = x.ISOPvMatICMS_DestinacaoCod and x.ISOPvMatICMS_Flag = 'A')

	inner join isopvmatrizicms icmsSP
		on ffi.ISOPrdDadF_CodAgrupFiscal = icmsSP.ISOPvMatICMS_AgrupFiscalCod
		and icmsSP.ISOPvMatICMS_PrdOrigemCod = ffi.ISOPrdDadF_CodOrigem
	left join isopvicms fti
		on icmsInterno.isopvmaticms_tributicmscod = fti.isopvicms_codigo
	left join isopvmatrizsubsttributaria as fst
		on icmsINTERNO.isopvmaticms_uforigem = fst.isopvmatsubst_uforigem
			and icmsINTERNO.isopvmaticms_ufdestino = fst.isopvmatsubst_ufdestino
			and icmsINTERNO.ISOPvMatICMS_AgrupFiscalCod = fst.ISOPvMatSubsT_AgrupFiscalCod
			and icmsINTERNO.ISOPvMatICMS_CatFiscalCod = fst.ISOPvMatSubsT_CategFiscalCod
			and fst.ISOPvMatSubsT_PrdOrigemCod = icmsInterno.ISOPvMatICMS_PrdOrigemCod
			and fst.isopvmatsubst_categfiscalcod = 'C08NS'
			and fst.isopvmatsubst_iniciovigencia = (select max(x.isopvmatsubst_iniciovigencia) from isopvmatrizsubsttributaria as x where fst.isopvmatsubst_uforigem = x.isopvmatsubst_uforigem and fst.isopvmatsubst_ufdestino = x.isopvmatsubst_ufdestino and fst.isopvmatsubst_categfiscalcod = x.isopvmatsubst_categfiscalcod and fst.isopvmatsubst_agrupfiscalcod = x.isopvmatsubst_agrupfiscalcod and x.isopvmatsubst_flag = 'A')
			and fst.isopvmatsubst_uforigem in ('SC', 'SP', 'PE', 'CE', 'MG')
where
esp.isopvprel_metodo = 'B' and
esp.isopvprel_datainicio = (select max(z.isopvprel_datainicio) from isopvprecolista as z where esp.isoemp_codigo = z.isoemp_codigo and esp.isopvprel_chave = z.isopvprel_chave and esp.isopvprel_metodo = z.isopvprel_metodo)

-- comentado 04/07/2017 zagoto, não mostrava determinados produtos
and ((ffi.isoprddadf_iniciovigencia = (select max(y.isoprddadf_iniciovigencia) from isoprddadofiscal as y
		where
			ffi.isoprddadf_prdcodigo = y.isoprddadf_prdcodigo
			and y.ISOPrdDadF_CodAgrupFiscal = icmsINTERNO.ISOPvMatICMS_AgrupFiscalCod
			and ffi.ISOPrdDadF_CodClassFiscal = y.ISOPrdDadF_CodClassFiscal
			and y.ISOPrdDadF_CodOrigem = icmsINTERNO.ISOPvMatICMS_PrdOrigemCod
			and y.ISOPrdDadF_CodDestinacao = icmsINTERNO.ISOPvMatICMS_DestinacaoCod
			and y.isoprddadf_flag = 'A')) and
			((select count(*) from ISOPVPRDESTABELECIMENTO x, ISOPvEstabelecimento y where x.isoemp_codigo = prd.isoemp_codigo and x.isoprd_codigo = prd.isoprd_codigo and x.isoemp_codigo = y.isoemp_codigo and x.isopvestab_codigo = y.isopvestab_codigo and y.isopvestab_uf = icmsINTERNO.isopvmaticms_uforigem and isopvestab_flag = 'A' and isopvprdestab_flag = 'A') = 0)
or ffi.isoprddadf_iniciovigencia = (select max(y.isoprddadf_iniciovigencia) from isoprddadofiscal as y
		where
			ffi.isoprddadf_prdcodigo = y.isoprddadf_prdcodigo
			--and ffi.ISOPrdDadF_CodAgrupFiscal = y.ISOPrdDadF_CodAgrupFiscal
			--and ffi.ISOPrdDadF_CodClassFiscal = y.ISOPrdDadF_CodClassFiscal
			--and ffi.ISOPrdDadF_CodOrigem = y.ISOPrdDadF_CodOrigem
			--and ffi.ISOPrdDadF_CodDestinacao = y.ISOPrdDadF_CodDestinacao
			and y.isoprddadf_flag = 'A'))

and icmsSP.ISOPvMatICMS_InicioVigencia = (select max(x.ISOPvMatICMS_InicioVigencia) from isopvmatrizicms x where icmsSP.ISOEmp_Codigo = x.ISOEmp_Codigo and icmsSP.ISOPvMatICMS_UFOrigem = x.ISOPvMatICMS_UFOrigem and icmsSP.ISOPvMatICMS_UFDestino = x.ISOPvMatICMS_UFDestino and icmsSP.ISOPvMatICMS_NatOperaCod = x.ISOPvMatICMS_NatOperaCod and icmsSP.ISOPvMatICMS_AgrupFiscalCod = x.ISOPvMatICMS_AgrupFiscalCod and icmsSP.ISOPvMatICMS_EspecieCod = x.ISOPvMatICMS_EspecieCod and icmsSP.ISOPvMatICMS_CatFiscalCod = x.ISOPvMatICMS_CatFiscalCod and icmsSP.ISOPvMatICMS_PrdOrigemCod = x.ISOPvMatICMS_PrdOrigemCod and icmsSP.ISOPvMatICMS_DestinacaoCod = x.ISOPvMatICMS_DestinacaoCod and x.ISOPvMatICMS_Flag = 'A')
and prd.ISOPrd_Flag = 'A'
and icmsSP.ISOPvMatICMS_UFOrigem = 'SP'
and icmsSP.ISOPvMatICMS_UFDestino = 'SP'
and icmsSP.ISOPvMatICMS_CatFiscalCod = 'C08NS'
and icmsSP.ISOPvMatICMS_NatOperaCod = '01'
and icmsSP.ISOPvMatICMS_EspecieCod = ''
and icmsSP.ISOPvMatICMS_DestinacaoCod = 'S'

--------------

--and UFOrigem.ISOEst_Sigla = 'SC'
--and UFDestino.ISOEst_Sigla = 'SC'
--and ffi.isoprddadf_prdcodigo in ('539387','622669','156775','156911')

--and substring(esp.isopvprel_chave,16,4) = '0152'

--and ffi.isoprddadf_prdcodigo = '350142'

--and ffi.isoprddadf_prdcodigo between '350141' and '350141';


-- dbo.view_tabela_preco_1 source

CREATE VIEW [dbo].[view_tabela_preco_bkp]
as
select
icmsINTERNO.isopvmaticms_uforigem as stufor,
icmsINTERNO.isopvmaticms_ufdestino as stufde,
ffi.isoprddadf_prdcodigo as fiitem,
prd.isoprd_descricao as tvprodsc,
fst.isopvmatsubst_agrupfiscalcod as stagfi,
fst.isopvmatsubst_categfiscalcod as stcatf,
case when isopvicms_substtributaria = 'S'
	then isnull((100*(1+(fst.isopvmatsubst_percmarlucrofix/100)))*fst.isopvmatsubst_fatormultipbc,0)
	else 0
end as base_iva,
case when isopvicms_substtributaria = 'S'
	then isnull((100*(1+(fst.isopvmatsubst_percmarlucrofix/100))) * (fst.isopvmatsubst_aliqicmsdif /100),0)
	else 0
end as icms_da_st,
--((select isopvmaticms_aliqcargamaxima from isopvmatrizicms w where w.isopvmaticms_uforigem = fst.isopvmatsubst_uforigem and w.isopvmaticms_ufdestino = fst.isopvmatsubst_ufdestino and w.isopvmaticms_agrupfiscalcod = fst.isopvmatsubst_agrupfiscalcod and w.isopvmaticms_catfiscalcod = fst.isopvmatsubst_categfiscalcod and w.isopvmaticms_natoperacod = '51' and w.isopvmaticms_prdorigemcod = 1 and w.isopvmaticms_destinacaocod = 'S' and w.isopvmaticms_iniciovigencia = (select max(a.isopvmaticms_iniciovigencia) from isopvmatrizicms as a where w.isopvmaticms_uforigem = a.isopvmaticms_uforigem and w.isopvmaticms_ufdestino = a.isopvmaticms_ufdestino and w.isopvmaticms_agrupfiscalcod = a.isopvmaticms_agrupfiscalcod and w.isopvmaticms_catfiscalcod = a.isopvmaticms_catfiscalcod and w.isopvmaticms_natoperacod = a.isopvmaticms_natoperacod and w.isopvmaticms_prdorigemcod = a.isopvmaticms_prdorigemcod and a.isopvmaticms_flag = 'A' ))/100)*100 as icms_interno,
icmsINTERNO.ISOPvMatICMS_AliquotaICMS as ICMS_interno,
icmsINTERNO.ISOPvMatICMS_FatorMultBCICMS as FatorICMSInterno,
icmsSP.ISOPvMatICMS_AliquotaICMS as ICMS_SP,
icmsSP.ISOPvMatICMS_FatorMultBCICMS as FatorICMSSP,
case when isopvicms_substtributaria = 'S'
	then isnull(
			((100 +

(select top 1 IPI from (
	select 1 as seq, ISOPvMatIPI_AliquotaIPI as IPI from isopvmatrizipi a
		where
			a.ISOPvMatIPI_InicioVigencia =
				(select max(b.ISOPvMatIPI_InicioVigencia) from isopvmatrizipi b
					where
					a.ISOEmp_Codigo = b.ISOEmp_Codigo
					and a.ISOPvMatIPI_AgrupFiscalCod = b.ISOPvMatIPI_AgrupFiscalCod
					and a.ISOPvMatIPI_EspecieCod = b.ISOPvMatIPI_EspecieCod
					and a.ISOPvMatIPI_PrdOrigemCod = b.ISOPvMatIPI_PrdOrigemCod
					and a.ISOPvMatIPI_DestinacaoCod = b.ISOPvMatIPI_DestinacaoCod
					and a.ISOPvMatIPI_NatOperacaoCod = b.ISOPvMatIPI_NatOperacaoCod
					and a.ISOPvMatIPI_CategFiscalCod = b.ISOPvMatIPI_CategFiscalCod
					and b.ISOPvMatIPI_Flag = 'A')
					and a.ISOEmp_Codigo = ffi.ISOEmp_Codigo
					and a.ISOPvMatIPI_AgrupFiscalCod = ffi.ISOPrdDadF_CodAgrupFiscal
					and a.ISOPvMatIPI_EspecieCod = case when ffi.ISOPrdDadF_EspecieCod = '0' then '' else ffi.ISOPrdDadF_EspecieCod end
					and a.ISOPvMatIPI_PrdOrigemCod = ffi.ISOPrdDadF_CodOrigem
					and a.ISOPvMatIPI_DestinacaoCod = ffi.ISOPrdDadF_CodDestinacao
					and a.ISOPvMatIPI_CategFiscalCod = icmsINTERNO.ISOPvMatICMS_CatFiscalCod
					and a.isoemp_codigo = 11
					and a.ISOPvMatIPI_Flag = 'A'
					and a.ISOPvMatIPI_NatOperacaoCod = '51'
				union all
					select 2 as seq, ISOPvClassF_AliqIPI as IPI from isopvclassificacaofiscal a
					where
						a.ISOPvClassF_Codigo = ffi.ISOPrdDadF_CodClassFiscal
						and a.ISOPvClassF_Flag = 'A'
						and a.ISOPvClassF_InicioVigencia =
							(select max(ISOPvClassF_InicioVigencia) from isopvclassificacaofiscal b
								where
									a.ISOPvClassF_Codigo = b.ISOPvClassF_Codigo
									and b.ISOPvClassF_Flag = 'A')

				) as AliquotaIPI order by seq
)

			)
			*(1+(fst.isopvmatsubst_percmarlucrofix/100))) *
			fst.isopvmatsubst_fatormultipbc *
			(fst.isopvmatsubst_aliqicmsdif /100) -
			((select isopvmaticms_aliqcargamaxima from isopvmatrizicms w where w.isopvmaticms_uforigem = fst.isopvmatsubst_uforigem and w.isopvmaticms_ufdestino = fst.isopvmatsubst_ufdestino and w.isopvmaticms_agrupfiscalcod = fst.isopvmatsubst_agrupfiscalcod and w.isopvmaticms_catfiscalcod = fst.isopvmatsubst_categfiscalcod and w.isopvmaticms_natoperacod = '51' and w.isopvmaticms_prdorigemcod = 1 and w.isopvmaticms_destinacaocod = 'S' and w.isopvmaticms_iniciovigencia = (select max(a.isopvmaticms_iniciovigencia) from isopvmatrizicms as a where w.isopvmaticms_uforigem = a.isopvmaticms_uforigem and w.isopvmaticms_ufdestino = a.isopvmaticms_ufdestino and w.isopvmaticms_agrupfiscalcod = a.isopvmaticms_agrupfiscalcod and w.isopvmaticms_catfiscalcod = a.isopvmaticms_catfiscalcod and w.isopvmaticms_natoperacod = a.isopvmaticms_natoperacod and w.isopvmaticms_prdorigemcod = a.isopvmaticms_prdorigemcod and a.isopvmaticms_flag = 'A' ))/100)
		* 100,0)
	else 0
end as perc_st,
--prd.isoprd_unidade as unidade,
case when isoprd_unidade <> 'CX'
	then (select isoprdundfatc_unddestino from ISOPRDUNDFATORCONVERSAO fator where fator.isoemp_codigo = prd.isoemp_codigo and fator.isoemp_codigo = 11 and fator.ISOPrdUndFatC_PrdCodigo = prd.isoprd_codigo and fator.ISOPrdUndFatC_UndOrigem = prd.isoprd_unidade and fator.ISOPrdUndFatC_UndDestino = 'CX')
	else isoprd_unidade
end as unidade,
(select top 1 IPI from (
	select 1 as seq, ISOPvMatIPI_AliquotaIPI as IPI from isopvmatrizipi a
		where
			a.ISOPvMatIPI_InicioVigencia =
				(select max(b.ISOPvMatIPI_InicioVigencia) from isopvmatrizipi b
					where
					a.ISOEmp_Codigo = b.ISOEmp_Codigo
					and a.ISOPvMatIPI_AgrupFiscalCod = b.ISOPvMatIPI_AgrupFiscalCod
					and a.ISOPvMatIPI_EspecieCod = b.ISOPvMatIPI_EspecieCod
					and a.ISOPvMatIPI_PrdOrigemCod = b.ISOPvMatIPI_PrdOrigemCod
					and a.ISOPvMatIPI_DestinacaoCod = b.ISOPvMatIPI_DestinacaoCod
					and a.ISOPvMatIPI_NatOperacaoCod = b.ISOPvMatIPI_NatOperacaoCod
					and a.ISOPvMatIPI_CategFiscalCod = b.ISOPvMatIPI_CategFiscalCod
					and b.ISOPvMatIPI_Flag = 'A')
					and a.ISOEmp_Codigo = ffi.ISOEmp_Codigo
					and a.ISOPvMatIPI_AgrupFiscalCod = ffi.ISOPrdDadF_CodAgrupFiscal
					and a.ISOPvMatIPI_EspecieCod = case when ffi.ISOPrdDadF_EspecieCod = '0' then '' else ffi.ISOPrdDadF_EspecieCod end
					and a.ISOPvMatIPI_PrdOrigemCod = ffi.ISOPrdDadF_CodOrigem
					and a.ISOPvMatIPI_DestinacaoCod = ffi.ISOPrdDadF_CodDestinacao
					and a.ISOPvMatIPI_CategFiscalCod = icmsINTERNO.ISOPvMatICMS_CatFiscalCod
					and a.isoemp_codigo = 11
					and a.ISOPvMatIPI_Flag = 'A'
					and a.ISOPvMatIPI_NatOperacaoCod = '51'
				union all
					select 2 as seq, ISOPvClassF_AliqIPI as IPI from isopvclassificacaofiscal a
					where
						a.ISOPvClassF_Codigo = ffi.ISOPrdDadF_CodClassFiscal
						and a.ISOPvClassF_Flag = 'A'
						and a.ISOPvClassF_InicioVigencia =
							(select max(ISOPvClassF_InicioVigencia) from isopvclassificacaofiscal b
								where
									a.ISOPvClassF_Codigo = b.ISOPvClassF_Codigo
									and b.ISOPvClassF_Flag = 'A')

				) as AliquotaIPI order by seq
) as perc_ipi,
substring(esp.isopvprel_chave,16,4) as tabela,
(select top 1 classe.isolin_codigo from isolinha as classe, isoprdlinha as plinha
		where plinha.isoemp_codigo = classe.isoemp_codigo
		and plinha.isolin_codigo = classe.isolin_codigo
		and prd.isoemp_codigo = plinha.isoemp_codigo
		and prd.isoprd_codigo = plinha.isoprd_codigo
		and classe.isolintip_codigo = 1
		and classe.isolin_flag = 'A')
 as CodClasse,
(select top 1 isolin_descricao from isolinha as classe, isoprdlinha as plinha
		where plinha.isoemp_codigo = classe.isoemp_codigo
		and plinha.isolin_codigo = classe.isolin_codigo
		and prd.isoemp_codigo = plinha.isoemp_codigo
		and prd.isoprd_codigo = plinha.isoprd_codigo
		and classe.isolintip_codigo = 1
		and classe.isolin_flag = 'A')
 as classe,
(select top 1 familia.isolin_codigo from isolinha as familia, isoprdlinha as plinha
		where plinha.isoemp_codigo = familia.isoemp_codigo
		and plinha.isolin_codigo = familia.isolin_codigo
		and prd.isoemp_codigo = plinha.isoemp_codigo
		and prd.isoprd_codigo = plinha.isoprd_codigo
		and familia.isolintip_codigo = 2
		and familia.isolin_flag = 'A')
 as CodFamilia,
(select top 1 isolin_descricao from isolinha as familia, isoprdlinha as plinha
		where plinha.isoemp_codigo = familia.isoemp_codigo
		and plinha.isolin_codigo = familia.isolin_codigo
		and prd.isoemp_codigo = plinha.isoemp_codigo
		and prd.isoprd_codigo = plinha.isoprd_codigo
		and familia.isolintip_codigo = 2
		and familia.isolin_flag = 'A')
 as familia,
case when isoprd_unidade <> 'CX'
	then esp.ISOPvPreL_preco * isnull((select top 1 ISOPrdUndFatC_FatorConversao from ISOPRDUNDFATORCONVERSAO fator where fator.isoemp_codigo = prd.isoemp_codigo and fator.isoemp_codigo = 11 and fator.ISOPrdUndFatC_PrdCodigo = prd.isoprd_codigo and fator.ISOPrdUndFatC_UndOrigem = prd.isoprd_unidade and fator.ISOPrdUndFatC_UndDestino = 'CX'),1)
	else esp.ISOPvPreL_preco
end as PrecoESP,
fst.*
from isoproduto as prd
	inner join isopvprecolista as esp
		on prd.isoprd_codigo = substring(esp.isopvprel_chave,1,6)
	inner join isoprddadofiscal as ffi
		on prd.isoprd_codigo = ffi.isoprddadf_prdcodigo
	inner join isoprdattvalues as dad_comp
		on prd.isoemp_codigo = dad_comp.isoemp_codigo
		and prd.isoprd_codigo = dad_comp.isoprd_codigo
		and dad_comp.isoemp_codigo = 11
		and dad_comp.isoprdattid = 9
		and dad_comp.isoprdattvalueid = 1
	inner join isopvmatrizicms icmsINTERNO
		on ffi.ISOPrdDadF_CodAgrupFiscal = icmsINTERNO.ISOPvMatICMS_AgrupFiscalCod
	inner join isopvmatrizicms icmsSP
		on ffi.ISOPrdDadF_CodAgrupFiscal = icmsSP.ISOPvMatICMS_AgrupFiscalCod
	inner join isopvicms fti
		on icmsInterno.isopvmaticms_tributicmscod = fti.isopvicms_codigo
	left join isopvmatrizsubsttributaria as fst
		on icmsINTERNO.isopvmaticms_uforigem = fst.isopvmatsubst_uforigem
			and icmsINTERNO.isopvmaticms_ufdestino = fst.isopvmatsubst_ufdestino
			and icmsINTERNO.ISOPvMatICMS_AgrupFiscalCod = fst.ISOPvMatSubsT_AgrupFiscalCod
			and icmsINTERNO.ISOPvMatICMS_CatFiscalCod = fst.ISOPvMatSubsT_CategFiscalCod
			and fst.isopvmatsubst_categfiscalcod = 'COM'
			and fst.isopvmatsubst_iniciovigencia = (select max(x.isopvmatsubst_iniciovigencia) from isopvmatrizsubsttributaria as x where fst.isopvmatsubst_uforigem = x.isopvmatsubst_uforigem and fst.isopvmatsubst_ufdestino = x.isopvmatsubst_ufdestino and fst.isopvmatsubst_categfiscalcod = x.isopvmatsubst_categfiscalcod and fst.isopvmatsubst_agrupfiscalcod = x.isopvmatsubst_agrupfiscalcod and x.isopvmatsubst_flag = 'A')
			and fst.isopvmatsubst_uforigem in ('SC', 'SP', 'RJ', 'BA', 'PE', 'CE', 'MG')
where
esp.isopvprel_metodo = 'B'
and esp.isopvprel_datainicio = (select max(z.isopvprel_datainicio) from isopvprecolista as z where esp.isoemp_codigo = z.isoemp_codigo and esp.isopvprel_chave = z.isopvprel_chave and esp.isopvprel_metodo = z.isopvprel_metodo)
--and ffi.isoprddadf_iniciovigencia = (select max(y.isoprddadf_iniciovigencia) from isoprddadofiscal as y where ffi.isoprddadf_prdcodigo = y.isoprddadf_prdcodigo and ffi.isoprddadf_codagrupfiscal = y.isoprddadf_codagrupfiscal and ffi.isoprddadf_codclassfiscal = y.isoprddadf_codclassfiscal and y.isoprddadf_flag = 'A')
and ffi.isoprddadf_iniciovigencia = (select max(y.isoprddadf_iniciovigencia) from isoprddadofiscal as y where ffi.isoprddadf_prdcodigo = y.isoprddadf_prdcodigo and y.isoprddadf_flag = 'A')
and icmsSP.ISOPvMatICMS_InicioVigencia = (select max(x.ISOPvMatICMS_InicioVigencia) from isopvmatrizicms x where icmsSP.ISOEmp_Codigo = x.ISOEmp_Codigo and icmsSP.ISOPvMatICMS_UFOrigem = x.ISOPvMatICMS_UFOrigem and icmsSP.ISOPvMatICMS_UFDestino = x.ISOPvMatICMS_UFDestino and icmsSP.ISOPvMatICMS_NatOperaCod = x.ISOPvMatICMS_NatOperaCod and icmsSP.ISOPvMatICMS_AgrupFiscalCod = x.ISOPvMatICMS_AgrupFiscalCod and icmsSP.ISOPvMatICMS_EspecieCod = x.ISOPvMatICMS_EspecieCod and icmsSP.ISOPvMatICMS_CatFiscalCod = x.ISOPvMatICMS_CatFiscalCod and icmsSP.ISOPvMatICMS_PrdOrigemCod = x.ISOPvMatICMS_PrdOrigemCod and icmsSP.ISOPvMatICMS_DestinacaoCod = x.ISOPvMatICMS_DestinacaoCod and x.ISOPvMatICMS_Flag = 'A')
and icmsINTERNO.ISOPvMatICMS_InicioVigencia = (select max(x.ISOPvMatICMS_InicioVigencia) from isopvmatrizicms x where icmsINTERNO.ISOEmp_Codigo = x.ISOEmp_Codigo and icmsINTERNO.ISOPvMatICMS_UFOrigem = x.ISOPvMatICMS_UFOrigem and icmsINTERNO.ISOPvMatICMS_UFDestino = x.ISOPvMatICMS_UFDestino and icmsINTERNO.ISOPvMatICMS_NatOperaCod = x.ISOPvMatICMS_NatOperaCod and icmsINTERNO.ISOPvMatICMS_AgrupFiscalCod = x.ISOPvMatICMS_AgrupFiscalCod and icmsINTERNO.ISOPvMatICMS_EspecieCod = x.ISOPvMatICMS_EspecieCod and icmsINTERNO.ISOPvMatICMS_CatFiscalCod = x.ISOPvMatICMS_CatFiscalCod and icmsINTERNO.ISOPvMatICMS_PrdOrigemCod = x.ISOPvMatICMS_PrdOrigemCod and icmsINTERNO.ISOPvMatICMS_DestinacaoCod = x.ISOPvMatICMS_DestinacaoCod and x.ISOPvMatICMS_Flag = 'A')
and prd.ISOPrd_Flag = 'A'
and icmsSP.ISOPvMatICMS_UFOrigem = 'SP'
and icmsSP.ISOPvMatICMS_UFDestino = 'SP'
and icmsSP.ISOPvMatICMS_CatFiscalCod = 'COM'
and icmsSP.ISOPvMatICMS_NatOperaCod = '51'
and icmsSP.ISOPvMatICMS_EspecieCod = ''
and icmsSP.ISOPvMatICMS_PrdOrigemCod = '1'
and icmsSP.ISOPvMatICMS_DestinacaoCod = 'S'
and icmsINTERNO.ISOPvMatICMS_CatFiscalCod = 'COM'
and icmsINTERNO.ISOPvMatICMS_NatOperaCod = '51'
and icmsINTERNO.ISOPvMatICMS_EspecieCod = ''
and icmsINTERNO.ISOPvMatICMS_PrdOrigemCod = '1'
and icmsINTERNO.ISOPvMatICMS_DestinacaoCod = 'S';


-- dbo.view_tabela_preco_2 source

CREATE VIEW [dbo].[view_tabela_preco_2]
as
select
icmsINTERNO.isopvmaticms_uforigem as stufor,
icmsINTERNO.isopvmaticms_ufdestino as stufde,
ffi.isoprddadf_prdcodigo as fiitem,
prd.isoprd_descricao as tvprodsc,
fst.isopvmatsubst_agrupfiscalcod as stagfi,
fst.isopvmatsubst_categfiscalcod as stcatf,
case when fti.isopvicms_substtributaria = 'S'
	then isnull((100*(1+(fst.isopvmatsubst_percmarlucrofix/100)))*fst.isopvmatsubst_fatormultipbc,0)
	else 0
end as base_iva,
case when fti.isopvicms_substtributaria = 'S'
	then isnull((100*(1+(fst.isopvmatsubst_percmarlucrofix/100))) * (fst.isopvmatsubst_aliqicmsdif /100),0)
	else 0
end as icms_da_st,
--((select isopvmaticms_aliqcargamaxima from isopvmatrizicms w where w.isopvmaticms_uforigem = fst.isopvmatsubst_uforigem and w.isopvmaticms_ufdestino = fst.isopvmatsubst_ufdestino and w.isopvmaticms_agrupfiscalcod = fst.isopvmatsubst_agrupfiscalcod and w.isopvmaticms_catfiscalcod = fst.isopvmatsubst_categfiscalcod and w.isopvmaticms_natoperacod = '51' and w.isopvmaticms_prdorigemcod = 1 and w.isopvmaticms_destinacaocod = 'S' and w.isopvmaticms_iniciovigencia = (select max(a.isopvmaticms_iniciovigencia) from isopvmatrizicms as a where w.isopvmaticms_uforigem = a.isopvmaticms_uforigem and w.isopvmaticms_ufdestino = a.isopvmaticms_ufdestino and w.isopvmaticms_agrupfiscalcod = a.isopvmaticms_agrupfiscalcod and w.isopvmaticms_catfiscalcod = a.isopvmaticms_catfiscalcod and w.isopvmaticms_natoperacod = a.isopvmaticms_natoperacod and w.isopvmaticms_prdorigemcod = a.isopvmaticms_prdorigemcod and a.isopvmaticms_flag = 'A' ))/100)*100 as icms_interno,
icmsINTERNO.ISOPvMatICMS_AliquotaICMS as ICMS_interno,
icmsINTERNO.ISOPvMatICMS_FatorMultBCICMS as FatorICMSInterno,
icmsSP.ISOPvMatICMS_AliquotaICMS as ICMS_SP,
icmsSP.ISOPvMatICMS_FatorMultBCICMS as FatorICMSSP,
fti.isopvicms_substtributaria,

(select top 1 IPI from (
	select 1 as seq, ISOPvMatIPI_AliquotaIPI as IPI from isopvmatrizipi a
		where
			a.ISOPvMatIPI_InicioVigencia =
				(select max(b.ISOPvMatIPI_InicioVigencia) from isopvmatrizipi b
					where
					a.ISOEmp_Codigo = b.ISOEmp_Codigo
					and a.ISOPvMatIPI_AgrupFiscalCod = b.ISOPvMatIPI_AgrupFiscalCod
					and a.ISOPvMatIPI_EspecieCod = b.ISOPvMatIPI_EspecieCod
					and a.ISOPvMatIPI_PrdOrigemCod = b.ISOPvMatIPI_PrdOrigemCod
					and a.ISOPvMatIPI_DestinacaoCod = b.ISOPvMatIPI_DestinacaoCod
					and a.ISOPvMatIPI_NatOperacaoCod = b.ISOPvMatIPI_NatOperacaoCod
					and a.ISOPvMatIPI_CategFiscalCod = b.ISOPvMatIPI_CategFiscalCod
					and b.ISOPvMatIPI_Flag = 'A')
					and a.ISOEmp_Codigo = ffi.ISOEmp_Codigo
					and a.ISOPvMatIPI_AgrupFiscalCod = ffi.ISOPrdDadF_CodAgrupFiscal
					and a.ISOPvMatIPI_EspecieCod = case when ffi.ISOPrdDadF_EspecieCod = '0' then '' else ffi.ISOPrdDadF_EspecieCod end
					and a.ISOPvMatIPI_PrdOrigemCod = ffi.ISOPrdDadF_CodOrigem
					and a.ISOPvMatIPI_DestinacaoCod = ffi.ISOPrdDadF_CodDestinacao
					and a.ISOPvMatIPI_CategFiscalCod = icmsINTERNO.ISOPvMatICMS_CatFiscalCod
					and a.isoemp_codigo = 11
					and a.ISOPvMatIPI_Flag = 'A'
					and a.ISOPvMatIPI_NatOperacaoCod = '51'
				union all
					select 2 as seq, ISOPvClassF_AliqIPI as IPI from isopvclassificacaofiscal a
					where
						a.ISOPvClassF_Codigo = ffi.ISOPrdDadF_CodClassFiscal
						and a.ISOPvClassF_Flag = 'A'
						and a.ISOPvClassF_InicioVigencia =
							(select max(ISOPvClassF_InicioVigencia) from isopvclassificacaofiscal b
								where
									a.ISOPvClassF_Codigo = b.ISOPvClassF_Codigo
									and b.ISOPvClassF_Flag = 'A')

				) as AliquotaIPI order by seq
) as aliquotaIPI,
(select isopvmaticms_aliqcargamaxima from isopvmatrizicms w where w.isopvmaticms_uforigem = fst.isopvmatsubst_uforigem and w.isopvmaticms_ufdestino = fst.isopvmatsubst_ufdestino and w.isopvmaticms_agrupfiscalcod = fst.isopvmatsubst_agrupfiscalcod and w.isopvmaticms_catfiscalcod = fst.isopvmatsubst_categfiscalcod and w.isopvmaticms_natoperacod = '51' and w.isopvmaticms_prdorigemcod = 1 and w.isopvmaticms_destinacaocod = 'S' and w.isopvmaticms_iniciovigencia = (select max(a.isopvmaticms_iniciovigencia) from isopvmatrizicms as a where w.isopvmaticms_uforigem = a.isopvmaticms_uforigem and w.isopvmaticms_ufdestino = a.isopvmaticms_ufdestino and w.isopvmaticms_agrupfiscalcod = a.isopvmaticms_agrupfiscalcod and w.isopvmaticms_catfiscalcod = a.isopvmaticms_catfiscalcod and w.isopvmaticms_natoperacod = a.isopvmaticms_natoperacod and w.isopvmaticms_prdorigemcod = a.isopvmaticms_prdorigemcod and a.isopvmaticms_flag = 'A' )) isopvmaticms_aliqcargamaxima,
fst.isopvmatsubst_percmarlucrofix,
fst.isopvmatsubst_fatormultipbc,
fst.isopvmatsubst_aliqicmsdif,
case when fti.isopvicms_substtributaria = 'S'
	then isnull(
			((100 +

(select top 1 IPI from (
	select 1 as seq, ISOPvMatIPI_AliquotaIPI as IPI from isopvmatrizipi a
		where
			a.ISOPvMatIPI_InicioVigencia =
				(select max(b.ISOPvMatIPI_InicioVigencia) from isopvmatrizipi b
					where
					a.ISOEmp_Codigo = b.ISOEmp_Codigo
					and a.ISOPvMatIPI_AgrupFiscalCod = b.ISOPvMatIPI_AgrupFiscalCod
					and a.ISOPvMatIPI_EspecieCod = b.ISOPvMatIPI_EspecieCod
					and a.ISOPvMatIPI_PrdOrigemCod = b.ISOPvMatIPI_PrdOrigemCod
					and a.ISOPvMatIPI_DestinacaoCod = b.ISOPvMatIPI_DestinacaoCod
					and a.ISOPvMatIPI_NatOperacaoCod = b.ISOPvMatIPI_NatOperacaoCod
					and a.ISOPvMatIPI_CategFiscalCod = b.ISOPvMatIPI_CategFiscalCod
					and b.ISOPvMatIPI_Flag = 'A')
					and a.ISOEmp_Codigo = ffi.ISOEmp_Codigo
					and a.ISOPvMatIPI_AgrupFiscalCod = ffi.ISOPrdDadF_CodAgrupFiscal
					and a.ISOPvMatIPI_EspecieCod = case when ffi.ISOPrdDadF_EspecieCod = '0' then '' else ffi.ISOPrdDadF_EspecieCod end
					and a.ISOPvMatIPI_PrdOrigemCod = ffi.ISOPrdDadF_CodOrigem
					and a.ISOPvMatIPI_DestinacaoCod = ffi.ISOPrdDadF_CodDestinacao
					and a.ISOPvMatIPI_CategFiscalCod = icmsINTERNO.ISOPvMatICMS_CatFiscalCod
					and a.isoemp_codigo = 11
					and a.ISOPvMatIPI_Flag = 'A'
					and a.ISOPvMatIPI_NatOperacaoCod = '51'
				union all
					select 2 as seq, ISOPvClassF_AliqIPI as IPI from isopvclassificacaofiscal a
					where
						a.ISOPvClassF_Codigo = ffi.ISOPrdDadF_CodClassFiscal
						and a.ISOPvClassF_Flag = 'A'
						and a.ISOPvClassF_InicioVigencia =
							(select max(ISOPvClassF_InicioVigencia) from isopvclassificacaofiscal b
								where
									a.ISOPvClassF_Codigo = b.ISOPvClassF_Codigo
									and b.ISOPvClassF_Flag = 'A')

				) as AliquotaIPI order by seq
)

			)*

			(1+(fst.isopvmatsubst_percmarlucrofix/100))) *
			fst.isopvmatsubst_fatormultipbc *
			(fst.isopvmatsubst_aliqicmsdif /100) -
			((select isopvmaticms_aliqcargamaxima from isopvmatrizicms w where w.isopvmaticms_uforigem = fst.isopvmatsubst_uforigem and w.isopvmaticms_ufdestino = fst.isopvmatsubst_ufdestino and w.isopvmaticms_agrupfiscalcod = fst.isopvmatsubst_agrupfiscalcod and w.isopvmaticms_catfiscalcod = fst.isopvmatsubst_categfiscalcod and w.isopvmaticms_natoperacod = '51' and w.isopvmaticms_prdorigemcod = 1 and w.isopvmaticms_destinacaocod = 'S' and w.isopvmaticms_iniciovigencia = (select max(a.isopvmaticms_iniciovigencia) from isopvmatrizicms as a where w.isopvmaticms_uforigem = a.isopvmaticms_uforigem and w.isopvmaticms_ufdestino = a.isopvmaticms_ufdestino and w.isopvmaticms_agrupfiscalcod = a.isopvmaticms_agrupfiscalcod and w.isopvmaticms_catfiscalcod = a.isopvmaticms_catfiscalcod and w.isopvmaticms_natoperacod = a.isopvmaticms_natoperacod and w.isopvmaticms_prdorigemcod = a.isopvmaticms_prdorigemcod and a.isopvmaticms_flag = 'A' ))/100)
		* 100,0)
	else 0
end as perc_st,
ffi.ISOPrdDadF_CodClassFiscal,
--prd.isoprd_unidade as unidade,
case when isoprd_unidade <> 'CX'
	then (select isoprdundfatc_unddestino from ISOPRDUNDFATORCONVERSAO fator where fator.isoemp_codigo = prd.isoemp_codigo and fator.isoemp_codigo = 11 and fator.ISOPrdUndFatC_PrdCodigo = prd.isoprd_codigo and fator.ISOPrdUndFatC_UndOrigem = prd.isoprd_unidade and fator.ISOPrdUndFatC_UndDestino = 'CX')
	else isoprd_unidade
end as unidade,
(select top 1 IPI from (
	select 1 as seq, ISOPvMatIPI_AliquotaIPI as IPI from isopvmatrizipi a
		where
			a.ISOPvMatIPI_InicioVigencia =
				(select max(b.ISOPvMatIPI_InicioVigencia) from isopvmatrizipi b
					where
					a.ISOEmp_Codigo = b.ISOEmp_Codigo
					and a.ISOPvMatIPI_AgrupFiscalCod = b.ISOPvMatIPI_AgrupFiscalCod
					and a.ISOPvMatIPI_EspecieCod = b.ISOPvMatIPI_EspecieCod
					and a.ISOPvMatIPI_PrdOrigemCod = b.ISOPvMatIPI_PrdOrigemCod
					and a.ISOPvMatIPI_DestinacaoCod = b.ISOPvMatIPI_DestinacaoCod
					and a.ISOPvMatIPI_NatOperacaoCod = b.ISOPvMatIPI_NatOperacaoCod
					and a.ISOPvMatIPI_CategFiscalCod = b.ISOPvMatIPI_CategFiscalCod
					and b.ISOPvMatIPI_Flag = 'A')
					and a.ISOEmp_Codigo = ffi.ISOEmp_Codigo
					and a.ISOPvMatIPI_AgrupFiscalCod = ffi.ISOPrdDadF_CodAgrupFiscal
					and a.ISOPvMatIPI_EspecieCod = case when ffi.ISOPrdDadF_EspecieCod = '0' then '' else ffi.ISOPrdDadF_EspecieCod end
					and a.ISOPvMatIPI_PrdOrigemCod = ffi.ISOPrdDadF_CodOrigem
					and a.ISOPvMatIPI_DestinacaoCod = ffi.ISOPrdDadF_CodDestinacao
					and a.ISOPvMatIPI_CategFiscalCod = icmsINTERNO.ISOPvMatICMS_CatFiscalCod
					and a.isoemp_codigo = 11
					and a.ISOPvMatIPI_Flag = 'A'
					and a.ISOPvMatIPI_NatOperacaoCod = '51'
				union all
					select 2 as seq, ISOPvClassF_AliqIPI as IPI from isopvclassificacaofiscal a
					where
						a.ISOPvClassF_Codigo = ffi.ISOPrdDadF_CodClassFiscal
						and a.ISOPvClassF_Flag = 'A'
						and a.ISOPvClassF_InicioVigencia =
							(select max(ISOPvClassF_InicioVigencia) from isopvclassificacaofiscal b
								where
									a.ISOPvClassF_Codigo = b.ISOPvClassF_Codigo
									and b.ISOPvClassF_Flag = 'A')

				) as AliquotaIPI order by seq
) as perc_ipi,
substring(esp.isopvprel_chave,16,4) as tabela,
(select top 1 classe.isolin_codigo from isolinha as classe, isoprdlinha as plinha
		where plinha.isoemp_codigo = classe.isoemp_codigo
		and plinha.isolin_codigo = classe.isolin_codigo
		and prd.isoemp_codigo = plinha.isoemp_codigo
		and prd.isoprd_codigo = plinha.isoprd_codigo
		and classe.isolintip_codigo = 1
		and classe.isolin_flag = 'A')
 as CodClasse,
(select top 1 isolin_descricao from isolinha as classe, isoprdlinha as plinha
		where plinha.isoemp_codigo = classe.isoemp_codigo
		and plinha.isolin_codigo = classe.isolin_codigo
		and prd.isoemp_codigo = plinha.isoemp_codigo
		and prd.isoprd_codigo = plinha.isoprd_codigo
		and classe.isolintip_codigo = 1
		and classe.isolin_flag = 'A')
 as classe,
(select top 1 familia.isolin_codigo from isolinha as familia, isoprdlinha as plinha
		where plinha.isoemp_codigo = familia.isoemp_codigo
		and plinha.isolin_codigo = familia.isolin_codigo
		and prd.isoemp_codigo = plinha.isoemp_codigo
		and prd.isoprd_codigo = plinha.isoprd_codigo
		and familia.isolintip_codigo = 2
		and familia.isolin_flag = 'A')
 as CodFamilia,
(select top 1 isolin_descricao from isolinha as familia, isoprdlinha as plinha
		where plinha.isoemp_codigo = familia.isoemp_codigo
		and plinha.isolin_codigo = familia.isolin_codigo
		and prd.isoemp_codigo = plinha.isoemp_codigo
		and prd.isoprd_codigo = plinha.isoprd_codigo
		and familia.isolintip_codigo = 2
		and familia.isolin_flag = 'A')
 as familia,
case when isoprd_unidade <> 'CX'
	then esp.ISOPvPreL_preco * isnull((select top 1 ISOPrdUndFatC_FatorConversao from ISOPRDUNDFATORCONVERSAO fator where fator.isoemp_codigo = prd.isoemp_codigo and fator.isoemp_codigo = 11 and fator.ISOPrdUndFatC_PrdCodigo = prd.isoprd_codigo and fator.ISOPrdUndFatC_UndOrigem = prd.isoprd_unidade and fator.ISOPrdUndFatC_UndDestino = 'CX'),1)
	else esp.ISOPvPreL_preco
end as PrecoESP
--,icmsInterno.*
from isoproduto as prd
	inner join isopvprecolista as esp
		on prd.isoprd_codigo = substring(esp.isopvprel_chave,1,6)
	inner join isoprddadofiscal as ffi
		on prd.isoprd_codigo = ffi.isoprddadf_prdcodigo
		and isoprddadf_flag = 'A'
	inner join isoprdattvalues as dad_comp
		on prd.isoemp_codigo = dad_comp.isoemp_codigo
		and prd.isoprd_codigo = dad_comp.isoprd_codigo
		and dad_comp.isoemp_codigo = 11
		and dad_comp.isoprdattid = 9
		and dad_comp.isoprdattvalueid = 1
	inner join isopvmatrizicms icmsINTERNO
		on ffi.ISOPrdDadF_CodAgrupFiscal = icmsINTERNO.ISOPvMatICMS_AgrupFiscalCod
		and	(
				(icmsINTERNO.ISOPvMatICMS_PrdOrigemCod = (select top 1 isopvprdestab_origemcod from ISOPVPRDESTABELECIMENTO x, ISOPvEstabelecimento y
														where x.isoemp_codigo = prd.isoemp_codigo
															and x.isoprd_codigo = prd.isoprd_codigo
															and x.isoemp_codigo = y.isoemp_codigo
															and x.isopvestab_codigo = y.isopvestab_codigo
															and y.isopvestab_uf = icmsINTERNO.isopvmaticms_uforigem

															-- chamado 39256
--															and (((x.isopvestab_codigo = 9) and y.isopvestab_uf = 'SP') or ((x.isopvestab_codigo = 35) and y.isopvestab_uf = 'SC') )
															and ( (1=1 and y.isopvestab_uf not in ('SP','SC')) or ((x.isopvestab_codigo = 9) and y.isopvestab_uf = 'SP')
																	or ((x.isopvestab_codigo = 35) and y.isopvestab_uf = 'SC') )

															and isopvestab_flag = 'A'
															and isopvprdestab_flag = 'A') and
				((select count(*) from ISOPVPRDESTABELECIMENTO x, ISOPvEstabelecimento y where x.isoemp_codigo = prd.isoemp_codigo and x.isoprd_codigo = prd.isoprd_codigo and x.isoemp_codigo = y.isoemp_codigo and x.isopvestab_codigo = y.isopvestab_codigo and y.isopvestab_uf = icmsINTERNO.isopvmaticms_uforigem and isopvestab_flag = 'A' and isopvprdestab_flag = 'A') > 0))


				or (icmsINTERNO.ISOPvMatICMS_PrdOrigemCod = ffi.ISOPrdDadF_CodOrigem and
				((select count(*) from ISOPVPRDESTABELECIMENTO x, ISOPvEstabelecimento y where x.isoemp_codigo = prd.isoemp_codigo and x.isoprd_codigo = prd.isoprd_codigo and x.isoemp_codigo = y.isoemp_codigo and x.isopvestab_codigo = y.isopvestab_codigo and y.isopvestab_uf = icmsINTERNO.isopvmaticms_uforigem and isopvestab_flag = 'A' and isopvprdestab_flag = 'A') = 0))
			)

		--or		(icmsINTERNO.ISOPvMatICMS_PrdOrigemCod = ffi.ISOPrdDadF_CodOrigem
		--			and ffi.isoprddadf_flag = 'A'
		--			and ffi.ISOPrdDadF_CodAgrupFiscal = icmsinterno.ISOPvMatICMS_AgrupFiscalCod
		--			and icmsINTERNO.ISOPvMatICMS_InicioVigencia = (select max(a.isopvmaticms_iniciovigencia) from isopvmatrizicms as a where icmsInterno.isopvmaticms_uforigem = a.isopvmaticms_uforigem and icmsInterno.isopvmaticms_ufdestino = a.isopvmaticms_ufdestino and icmsInterno.isopvmaticms_agrupfiscalcod = a.isopvmaticms_agrupfiscalcod and icmsInterno.isopvmaticms_catfiscalcod = a.isopvmaticms_catfiscalcod and icmsInterno.isopvmaticms_natoperacod = a.isopvmaticms_natoperacod and icmsInterno.isopvmaticms_prdorigemcod = a.isopvmaticms_prdorigemcod and a.isopvmaticms_flag = 'A' )))
		and ISOPvMatICMS_Flag = 'A'
	inner join isopvmatrizicms icmsSP
		on ffi.ISOPrdDadF_CodAgrupFiscal = icmsSP.ISOPvMatICMS_AgrupFiscalCod
		and icmsSP.ISOPvMatICMS_PrdOrigemCod = ffi.ISOPrdDadF_CodOrigem
	inner join isopvicms fti
		on icmsInterno.isopvmaticms_tributicmscod = fti.isopvicms_codigo
	left join isopvmatrizsubsttributaria as fst
		on icmsINTERNO.isopvmaticms_uforigem = fst.isopvmatsubst_uforigem
			and icmsINTERNO.isopvmaticms_ufdestino = fst.isopvmatsubst_ufdestino
			and icmsINTERNO.ISOPvMatICMS_AgrupFiscalCod = fst.ISOPvMatSubsT_AgrupFiscalCod
			and icmsINTERNO.ISOPvMatICMS_CatFiscalCod = fst.ISOPvMatSubsT_CategFiscalCod
			and fst.isopvmatsubst_categfiscalcod = 'COM'
			and fst.isopvmatsubst_iniciovigencia = (select max(x.isopvmatsubst_iniciovigencia) from isopvmatrizsubsttributaria as x where fst.isopvmatsubst_uforigem = x.isopvmatsubst_uforigem and fst.isopvmatsubst_ufdestino = x.isopvmatsubst_ufdestino and fst.isopvmatsubst_categfiscalcod = x.isopvmatsubst_categfiscalcod and fst.isopvmatsubst_agrupfiscalcod = x.isopvmatsubst_agrupfiscalcod and x.isopvmatsubst_flag = 'A')
			and fst.isopvmatsubst_uforigem in ('SC', 'SP', 'RJ', 'BA', 'PE', 'CE', 'MG')
where
esp.isopvprel_metodo = 'B'
and esp.isopvprel_datainicio = (select max(z.isopvprel_datainicio) from isopvprecolista as z where esp.isoemp_codigo = z.isoemp_codigo and esp.isopvprel_chave = z.isopvprel_chave and esp.isopvprel_metodo = z.isopvprel_metodo)
--and ffi.isoprddadf_iniciovigencia = (select max(y.isoprddadf_iniciovigencia) from isoprddadofiscal as y where ffi.isoprddadf_prdcodigo = y.isoprddadf_prdcodigo and ffi.isoprddadf_codagrupfiscal = y.isoprddadf_codagrupfiscal and ffi.isoprddadf_codclassfiscal = y.isoprddadf_codclassfiscal and y.isoprddadf_flag = 'A')
and ffi.isoprddadf_iniciovigencia = (select max(y.isoprddadf_iniciovigencia) from isoprddadofiscal as y where ffi.isoprddadf_prdcodigo = y.isoprddadf_prdcodigo and y.isoprddadf_flag = 'A')
and icmsSP.ISOPvMatICMS_InicioVigencia = (select max(x.ISOPvMatICMS_InicioVigencia) from isopvmatrizicms x where icmsSP.ISOEmp_Codigo = x.ISOEmp_Codigo and icmsSP.ISOPvMatICMS_UFOrigem = x.ISOPvMatICMS_UFOrigem and icmsSP.ISOPvMatICMS_UFDestino = x.ISOPvMatICMS_UFDestino and icmsSP.ISOPvMatICMS_NatOperaCod = x.ISOPvMatICMS_NatOperaCod and icmsSP.ISOPvMatICMS_AgrupFiscalCod = x.ISOPvMatICMS_AgrupFiscalCod and icmsSP.ISOPvMatICMS_EspecieCod = x.ISOPvMatICMS_EspecieCod and icmsSP.ISOPvMatICMS_CatFiscalCod = x.ISOPvMatICMS_CatFiscalCod and icmsSP.ISOPvMatICMS_PrdOrigemCod = x.ISOPvMatICMS_PrdOrigemCod and icmsSP.ISOPvMatICMS_DestinacaoCod = x.ISOPvMatICMS_DestinacaoCod and x.ISOPvMatICMS_Flag = 'A')
and icmsINTERNO.ISOPvMatICMS_InicioVigencia = (select max(x.ISOPvMatICMS_InicioVigencia) from isopvmatrizicms x where icmsINTERNO.ISOEmp_Codigo = x.ISOEmp_Codigo and icmsINTERNO.ISOPvMatICMS_UFOrigem = x.ISOPvMatICMS_UFOrigem and icmsINTERNO.ISOPvMatICMS_UFDestino = x.ISOPvMatICMS_UFDestino and icmsINTERNO.ISOPvMatICMS_NatOperaCod = x.ISOPvMatICMS_NatOperaCod and icmsINTERNO.ISOPvMatICMS_AgrupFiscalCod = x.ISOPvMatICMS_AgrupFiscalCod and icmsINTERNO.ISOPvMatICMS_EspecieCod = x.ISOPvMatICMS_EspecieCod and icmsINTERNO.ISOPvMatICMS_CatFiscalCod = x.ISOPvMatICMS_CatFiscalCod and icmsINTERNO.ISOPvMatICMS_PrdOrigemCod = x.ISOPvMatICMS_PrdOrigemCod and icmsINTERNO.ISOPvMatICMS_DestinacaoCod = x.ISOPvMatICMS_DestinacaoCod and x.ISOPvMatICMS_Flag = 'A')
and prd.ISOPrd_Flag = 'A'
and icmsSP.ISOPvMatICMS_UFOrigem = 'SP'
and icmsSP.ISOPvMatICMS_UFDestino = 'SP'
and icmsSP.ISOPvMatICMS_CatFiscalCod = 'COM'
and icmsSP.ISOPvMatICMS_NatOperaCod = '51'
and icmsSP.ISOPvMatICMS_EspecieCod = ''
--and icmsSP.ISOPvMatICMS_PrdOrigemCod = '1'
and icmsSP.ISOPvMatICMS_DestinacaoCod = 'S'
and icmsINTERNO.ISOPvMatICMS_CatFiscalCod = 'COM'
and icmsINTERNO.ISOPvMatICMS_NatOperaCod = '51'
and icmsINTERNO.ISOPvMatICMS_EspecieCod = ''
--and icmsINTERNO.ISOPvMatICMS_PrdOrigemCod = '1'
and icmsINTERNO.ISOPvMatICMS_DestinacaoCod = 'S'
--and ffi.isoprddadf_prdcodigo = '198164'
--and ffi.isoprddadf_prdcodigo = '410051'
--and icmsINTERNO.isopvmaticms_uforigem = 'SC'
--and icmsINTERNO.isopvmaticms_ufdestino  = 'SC'
--and substring(esp.isopvprel_chave,16,4) = '0152'
/*
GO

select * from ISOPvEstabelecimento
where isoemp_codigo = 11
and isopvestab_uf = 'PE'

select * from ISOPVPRDESTABELECIMENTO a, ISOPvEstabelecimento b
where
a.isoemp_codigo = b.isoemp_codigo

and a.isoemp_codigo = 11
and a.isoprd_codigo = '540413'


SELECT     ISOEmp_Codigo, ISOPvMatICMS_UFOrigem, ISOPvMatICMS_UFDestino, ISOPvMatICMS_NatOperaCod, ISOPvMatICMS_AgrupFiscalCod, ISOPvMatICMS_EspecieCod,
                      ISOPvMatICMS_CatFiscalCod, ISOPvMatICMS_PrdOrigemCod, ISOPvMatICMS_DestinacaoCod, ISOPvMatICMS_InicioVigencia, ISOPvMatICMS_AliquotaICMS
FROM         ISOPVMATRIZICMS a
WHERE     (ISOEmp_Codigo = 11) AND (ISOPvMatICMS_UFOrigem = 'SP') AND (ISOPvMatICMS_UFDestino = 'SP') AND (ISOPvMatICMS_NatOperaCod = '51') AND
                      (ISOPvMatICMS_CatFiscalCod = 'COM')
and ISOPvMatICMS_InicioVigencia = (select ISOPvMatICMS_InicioVigencia from ISOPVMATRIZICMS b where )

SELECT     ISOEmp_Codigo, ISOPvMatICMS_UFOrigem, ISOPvMatICMS_UFDestino, ISOPvMatICMS_NatOperaCod, ISOPvMatICMS_AgrupFiscalCod, ISOPvMatICMS_EspecieCod,
                      ISOPvMatICMS_CatFiscalCod, ISOPvMatICMS_PrdOrigemCod, ISOPvMatICMS_DestinacaoCod, ISOPvMatICMS_InicioVigencia, ISOPvMatICMS_AliquotaICMS,
                      ISOPvMatICMS_IncICMSIPI, ISOPvMatICMS_FatorMultBCICMS, ISOPvMatICMS_TributICMSCod, ISOPvMatICMS_SubTribICMSDocFis, ISOPvMatICMS_FatorMultICMS,
                      ISOPvMatICMS_AliqCargaMaxima, ISOPvMatICMS_BonifPIS, ISOPvMatICMS_BonifCOFINS, ISOPvMatICMS_DeduzICMSBCPISCOF, ISOPvMatICMS_ValorFiscalCod,
                      ISOPvMatICMS_Flag, ISOPvMatICMS_DataAlteracao, ISOPvMatICMS_UsuarioAlteracao
FROM         ISOPVMATRIZICMS
WHERE     (ISOEmp_Codigo = 11) AND (ISOPvMatICMS_UFOrigem = 'SP') AND (ISOPvMatICMS_UFDestino = 'SP') AND (ISOPvMatICMS_NatOperaCod = '51') AND
                      (ISOPvMatICMS_AgrupFiscalCod = 'TTS7AI') AND (ISOPvMatICMS_CatFiscalCod = 'COM')


SELECT     ISOEmp_Codigo, ISOPvMatICMS_UFOrigem, ISOPvMatICMS_UFDestino, ISOPvMatICMS_NatOperaCod, ISOPvMatICMS_AgrupFiscalCod, ISOPvMatICMS_EspecieCod,
                      ISOPvMatICMS_CatFiscalCod, ISOPvMatICMS_PrdOrigemCod, ISOPvMatICMS_DestinacaoCod, ISOPvMatICMS_InicioVigencia, ISOPvMatICMS_AliquotaICMS,
                      ISOPvMatICMS_IncICMSIPI, ISOPvMatICMS_FatorMultBCICMS, ISOPvMatICMS_TributICMSCod, ISOPvMatICMS_SubTribICMSDocFis, ISOPvMatICMS_FatorMultICMS,
                      ISOPvMatICMS_AliqCargaMaxima, ISOPvMatICMS_BonifPIS, ISOPvMatICMS_BonifCOFINS, ISOPvMatICMS_DeduzICMSBCPISCOF, ISOPvMatICMS_ValorFiscalCod,
                      ISOPvMatICMS_Flag, ISOPvMatICMS_DataAlteracao, ISOPvMatICMS_UsuarioAlteracao
FROM         ISOPVMATRIZICMS
WHERE     (ISOPvMatICMS_UFOrigem = 'PE') AND (ISOPvMatICMS_UFDestino = 'AL') AND (ISOPvMatICMS_NatOperaCod = '51') AND (ISOPvMatICMS_CatFiscalCod = 'COM') AND
                      (ISOPvMatICMS_AgrupFiscalCod = 'TTS1I')


sp_help isopvmatrizicms
sp_help isoprddadofiscal

select * from view_tabela_preco
where stufor = 'SP'
and stufde = 'SP'
and fiitem = '386776'
*/;


-- dbo.view_tabela_preco_3 source

CREATE VIEW [dbo].[view_tabela_preco_3]
as
select
UFOrigem.ISOEst_Sigla as stufor,
UFDestino.ISOEst_Sigla as stufde,
ffi.isoprddadf_prdcodigo as fiitem,
prd.isoprd_descricao as tvprodsc,
icmsINTERNO.ISOPvMatICMS_AgrupFiscalCod,
fst.isopvmatsubst_agrupfiscalcod as stagfi,
fst.isopvmatsubst_categfiscalcod as stcatf,
case when fti.isopvicms_substtributaria = 'S'
	then isnull((100*(1+(fst.isopvmatsubst_percmarlucrofix/100)))*fst.isopvmatsubst_fatormultipbc,0)
	else 0
end as base_iva,
case when fti.isopvicms_substtributaria = 'S'
	then isnull((100*(1+(fst.isopvmatsubst_percmarlucrofix/100))) * (fst.isopvmatsubst_aliqicmsdif /100),0)
	else 0
end as icms_da_st,
icmsINTERNO.ISOPvMatICMS_AliquotaICMS as ICMS_interno,
--icmsINTERNO.ISOPvMatICMS_FatorMultBCICMS as FatorICMSInterno,
icmsINTERNO.ISOPvMatICMS_FatorMultICMS as FatorICMSInterno,
icmsSP.ISOPvMatICMS_AliquotaICMS as ICMS_SP,
--icmsSP.ISOPvMatICMS_FatorMultBCICMS as FatorICMSSP,
icmsSP.ISOPvMatICMS_FatorMultICMS as FatorICMSSP,
fti.isopvicms_substtributaria,

(select top 1 IPI from (
	select 1 as seq, ISOPvMatIPI_AliquotaIPI as IPI from isopvmatrizipi a
		where
			a.ISOPvMatIPI_InicioVigencia =
				(select max(b.ISOPvMatIPI_InicioVigencia) from isopvmatrizipi b
					where
					a.ISOEmp_Codigo = b.ISOEmp_Codigo
					and a.ISOPvMatIPI_AgrupFiscalCod = b.ISOPvMatIPI_AgrupFiscalCod
					and a.ISOPvMatIPI_EspecieCod = b.ISOPvMatIPI_EspecieCod
					and a.ISOPvMatIPI_PrdOrigemCod = b.ISOPvMatIPI_PrdOrigemCod
					and a.ISOPvMatIPI_DestinacaoCod = b.ISOPvMatIPI_DestinacaoCod
					and a.ISOPvMatIPI_NatOperacaoCod = b.ISOPvMatIPI_NatOperacaoCod
					and a.ISOPvMatIPI_CategFiscalCod = b.ISOPvMatIPI_CategFiscalCod
					and b.ISOPvMatIPI_Flag = 'A')
					and a.ISOEmp_Codigo = ffi.ISOEmp_Codigo
					and a.ISOPvMatIPI_AgrupFiscalCod = ffi.ISOPrdDadF_CodAgrupFiscal
					and a.ISOPvMatIPI_EspecieCod = case when ffi.ISOPrdDadF_EspecieCod = '0' then '' else ffi.ISOPrdDadF_EspecieCod end
					and a.ISOPvMatIPI_PrdOrigemCod = ffi.ISOPrdDadF_CodOrigem
					and a.ISOPvMatIPI_DestinacaoCod = ffi.ISOPrdDadF_CodDestinacao
					and a.ISOPvMatIPI_CategFiscalCod = icmsINTERNO.ISOPvMatICMS_CatFiscalCod
					and a.isoemp_codigo = 11
					and a.ISOPvMatIPI_Flag = 'A'
					and a.ISOPvMatIPI_NatOperacaoCod = '51'
				union all
					select 2 as seq, ISOPvClassF_AliqIPI as IPI from isopvclassificacaofiscal a
					where
						a.ISOPvClassF_Codigo = ffi.ISOPrdDadF_CodClassFiscal
						and a.ISOPvClassF_Flag = 'A'
						and a.ISOPvClassF_InicioVigencia =
							(select max(ISOPvClassF_InicioVigencia) from isopvclassificacaofiscal b
								where
									a.ISOPvClassF_Codigo = b.ISOPvClassF_Codigo
									and b.ISOPvClassF_Flag = 'A')

				) as AliquotaIPI order by seq
) as aliquotaIPI,
ISNULL((select isopvmaticms_aliqcargamaxima from isopvmatrizicms w
			where w.isopvmaticms_uforigem = fst.isopvmatsubst_uforigem
			and w.isopvmaticms_ufdestino = fst.isopvmatsubst_ufdestino
			and w.isopvmaticms_agrupfiscalcod = fst.isopvmatsubst_agrupfiscalcod
			and w.isopvmaticms_catfiscalcod = fst.isopvmatsubst_categfiscalcod
			and w.isopvmaticms_natoperacod = '51'
			and w.isopvmaticms_prdorigemcod = icmsINTERNO.ISOPvMatICMS_PrdOrigemCod -- 1
			and w.isopvmaticms_destinacaocod = 'S'
			and w.isopvmaticms_iniciovigencia = (select max(a.isopvmaticms_iniciovigencia) from isopvmatrizicms as a where w.isopvmaticms_uforigem = a.isopvmaticms_uforigem and w.isopvmaticms_ufdestino = a.isopvmaticms_ufdestino and w.isopvmaticms_agrupfiscalcod = a.isopvmaticms_agrupfiscalcod and w.isopvmaticms_catfiscalcod = a.isopvmaticms_catfiscalcod and w.isopvmaticms_natoperacod = a.isopvmaticms_natoperacod and w.isopvmaticms_prdorigemcod = a.isopvmaticms_prdorigemcod and a.isopvmaticms_flag = 'A' )),0)
isopvmaticms_aliqcargamaxima,
icmsINTERNO.ISOPvMatICMS_PrdOrigemCod,
fst.isopvmatsubst_percmarlucrofix,
fst.isopvmatsubst_fatormultipbc,
fst.isopvmatsubst_aliqicmsdif,
case when fti.isopvicms_substtributaria = 'S'
	then isnull(
			((100 +

(select top 1 IPI from (
	select 1 as seq, ISOPvMatIPI_AliquotaIPI as IPI from isopvmatrizipi a
		where
			a.ISOPvMatIPI_InicioVigencia =
				(select max(b.ISOPvMatIPI_InicioVigencia) from isopvmatrizipi b
					where
					a.ISOEmp_Codigo = b.ISOEmp_Codigo
					and a.ISOPvMatIPI_AgrupFiscalCod = b.ISOPvMatIPI_AgrupFiscalCod
					and a.ISOPvMatIPI_EspecieCod = b.ISOPvMatIPI_EspecieCod
					and a.ISOPvMatIPI_PrdOrigemCod = b.ISOPvMatIPI_PrdOrigemCod
					and a.ISOPvMatIPI_DestinacaoCod = b.ISOPvMatIPI_DestinacaoCod
					and a.ISOPvMatIPI_NatOperacaoCod = b.ISOPvMatIPI_NatOperacaoCod
					and a.ISOPvMatIPI_CategFiscalCod = b.ISOPvMatIPI_CategFiscalCod
					and b.ISOPvMatIPI_Flag = 'A')
					and a.ISOEmp_Codigo = ffi.ISOEmp_Codigo
					and a.ISOPvMatIPI_AgrupFiscalCod = ffi.ISOPrdDadF_CodAgrupFiscal
					and a.ISOPvMatIPI_EspecieCod = case when ffi.ISOPrdDadF_EspecieCod = '0' then '' else ffi.ISOPrdDadF_EspecieCod end
					and a.ISOPvMatIPI_PrdOrigemCod = ffi.ISOPrdDadF_CodOrigem
					and a.ISOPvMatIPI_DestinacaoCod = ffi.ISOPrdDadF_CodDestinacao
					and a.ISOPvMatIPI_CategFiscalCod = icmsINTERNO.ISOPvMatICMS_CatFiscalCod
					and a.isoemp_codigo = 11
					and a.ISOPvMatIPI_Flag = 'A'
					and a.ISOPvMatIPI_NatOperacaoCod = '51'
				union all
					select 2 as seq, ISOPvClassF_AliqIPI as IPI from isopvclassificacaofiscal a
					where
						a.ISOPvClassF_Codigo = ffi.ISOPrdDadF_CodClassFiscal
						and a.ISOPvClassF_Flag = 'A'
						and a.ISOPvClassF_InicioVigencia =
							(select max(ISOPvClassF_InicioVigencia) from isopvclassificacaofiscal b
								where
									a.ISOPvClassF_Codigo = b.ISOPvClassF_Codigo
									and b.ISOPvClassF_Flag = 'A')

				) as AliquotaIPI order by seq
)

			)*

			(1+(fst.isopvmatsubst_percmarlucrofix/100))) *
			fst.isopvmatsubst_fatormultipbc *
			(fst.isopvmatsubst_aliqicmsdif /100) -
			((select isopvmaticms_aliqcargamaxima from isopvmatrizicms w where w.isopvmaticms_uforigem = fst.isopvmatsubst_uforigem and w.isopvmaticms_ufdestino = fst.isopvmatsubst_ufdestino and w.isopvmaticms_agrupfiscalcod = fst.isopvmatsubst_agrupfiscalcod and w.isopvmaticms_catfiscalcod = fst.isopvmatsubst_categfiscalcod and w.isopvmaticms_natoperacod = '51' and w.isopvmaticms_prdorigemcod = icmsINTERNO.ISOPvMatICMS_PrdOrigemCod and w.isopvmaticms_destinacaocod = 'S' and w.isopvmaticms_flag = 'A' and w.isopvmaticms_iniciovigencia = (select max(a.isopvmaticms_iniciovigencia) from isopvmatrizicms as a where w.isopvmaticms_uforigem = a.isopvmaticms_uforigem and w.isopvmaticms_ufdestino = a.isopvmaticms_ufdestino and w.isopvmaticms_agrupfiscalcod = a.isopvmaticms_agrupfiscalcod and w.isopvmaticms_catfiscalcod = a.isopvmaticms_catfiscalcod and w.isopvmaticms_natoperacod = a.isopvmaticms_natoperacod and w.isopvmaticms_prdorigemcod = a.isopvmaticms_prdorigemcod and a.isopvmaticms_flag = 'A' ))/100)
		* 100,0)
	else 0
end as perc_st,
ffi.ISOPrdDadF_CodClassFiscal,
case when isoprd_unidade <> 'CX'
	then (select isoprdundfatc_unddestino from ISOPRDUNDFATORCONVERSAO fator where fator.isoemp_codigo = prd.isoemp_codigo and fator.isoemp_codigo = 11 and fator.ISOPrdUndFatC_PrdCodigo = prd.isoprd_codigo and fator.ISOPrdUndFatC_UndOrigem = prd.isoprd_unidade and fator.ISOPrdUndFatC_UndDestino = 'CX')
	else isoprd_unidade
end as unidade,
(select top 1 IPI from (
	select 1 as seq, ISOPvMatIPI_AliquotaIPI as IPI from isopvmatrizipi a
		where
			a.ISOPvMatIPI_InicioVigencia =
				(select max(b.ISOPvMatIPI_InicioVigencia) from isopvmatrizipi b
					where
					a.ISOEmp_Codigo = b.ISOEmp_Codigo
					and a.ISOPvMatIPI_AgrupFiscalCod = b.ISOPvMatIPI_AgrupFiscalCod
					and a.ISOPvMatIPI_EspecieCod = b.ISOPvMatIPI_EspecieCod
					and a.ISOPvMatIPI_PrdOrigemCod = b.ISOPvMatIPI_PrdOrigemCod
					and a.ISOPvMatIPI_DestinacaoCod = b.ISOPvMatIPI_DestinacaoCod
					and a.ISOPvMatIPI_NatOperacaoCod = b.ISOPvMatIPI_NatOperacaoCod
					and a.ISOPvMatIPI_CategFiscalCod = b.ISOPvMatIPI_CategFiscalCod
					and b.ISOPvMatIPI_Flag = 'A')
					and a.ISOEmp_Codigo = ffi.ISOEmp_Codigo
					and a.ISOPvMatIPI_AgrupFiscalCod = ffi.ISOPrdDadF_CodAgrupFiscal
					and a.ISOPvMatIPI_EspecieCod = case when ffi.ISOPrdDadF_EspecieCod = '0' then '' else ffi.ISOPrdDadF_EspecieCod end
					and a.ISOPvMatIPI_PrdOrigemCod = ffi.ISOPrdDadF_CodOrigem
					and a.ISOPvMatIPI_DestinacaoCod = ffi.ISOPrdDadF_CodDestinacao
					and a.ISOPvMatIPI_CategFiscalCod = icmsINTERNO.ISOPvMatICMS_CatFiscalCod
					and a.isoemp_codigo = 11
					and a.ISOPvMatIPI_Flag = 'A'
					and a.ISOPvMatIPI_NatOperacaoCod = '51'
				union all
					select 2 as seq, ISOPvClassF_AliqIPI as IPI from isopvclassificacaofiscal a
					where
						a.ISOPvClassF_Codigo = ffi.ISOPrdDadF_CodClassFiscal
						and a.ISOPvClassF_Flag = 'A'
						and a.ISOPvClassF_InicioVigencia =
							(select max(ISOPvClassF_InicioVigencia) from isopvclassificacaofiscal b
								where
									a.ISOPvClassF_Codigo = b.ISOPvClassF_Codigo
									and b.ISOPvClassF_Flag = 'A')

				) as AliquotaIPI order by seq
) as perc_ipi,
substring(esp.isopvprel_chave,16,4) as tabela,
(select top 1 classe.isolin_codigo from isolinha as classe, isoprdlinha as plinha
		where plinha.isoemp_codigo = classe.isoemp_codigo
		and plinha.isolin_codigo = classe.isolin_codigo
		and prd.isoemp_codigo = plinha.isoemp_codigo
		and prd.isoprd_codigo = plinha.isoprd_codigo
		and classe.isolintip_codigo = 1
		and classe.isolin_flag = 'A')
 as CodClasse,
(select top 1 isolin_descricao from isolinha as classe, isoprdlinha as plinha
		where plinha.isoemp_codigo = classe.isoemp_codigo
		and plinha.isolin_codigo = classe.isolin_codigo
		and prd.isoemp_codigo = plinha.isoemp_codigo
		and prd.isoprd_codigo = plinha.isoprd_codigo
		and classe.isolintip_codigo = 1
		and classe.isolin_flag = 'A')
 as classe,
(select top 1 familia.isolin_codigo from isolinha as familia, isoprdlinha as plinha
		where plinha.isoemp_codigo = familia.isoemp_codigo
		and plinha.isolin_codigo = familia.isolin_codigo
		and prd.isoemp_codigo = plinha.isoemp_codigo
		and prd.isoprd_codigo = plinha.isoprd_codigo
		and familia.isolintip_codigo = 2
		and familia.isolin_flag = 'A')
 as CodFamilia,
(select top 1 isolin_descricao from isolinha as familia, isoprdlinha as plinha
		where plinha.isoemp_codigo = familia.isoemp_codigo
		and plinha.isolin_codigo = familia.isolin_codigo
		and prd.isoemp_codigo = plinha.isoemp_codigo
		and prd.isoprd_codigo = plinha.isoprd_codigo
		and familia.isolintip_codigo = 2
		and familia.isolin_flag = 'A')
 as familia,
case when icmsINTERNO.ISOPvMatICMS_AliquotaICMS is null
	then 0
	else
		case when isoprd_unidade <> 'CX'
			then esp.ISOPvPreL_preco * isnull((select top 1 ISOPrdUndFatC_FatorConversao from ISOPRDUNDFATORCONVERSAO fator where fator.isoemp_codigo = prd.isoemp_codigo and fator.isoemp_codigo = 11 and fator.ISOPrdUndFatC_PrdCodigo = prd.isoprd_codigo and fator.ISOPrdUndFatC_UndOrigem = prd.isoprd_unidade and fator.ISOPrdUndFatC_UndDestino = 'CX'),1)
			else esp.ISOPvPreL_preco
		end
end
as PrecoESP
from isoproduto as prd
	inner join isopvprecolista as esp
		on prd.isoprd_codigo = substring(esp.isopvprel_chave,1,6)
	inner join isoprddadofiscal as ffi
		on prd.isoprd_codigo = ffi.isoprddadf_prdcodigo
		and isoprddadf_flag = 'A'
	inner join isoprdattvalues as dad_comp
		on prd.isoemp_codigo = dad_comp.isoemp_codigo
		and prd.isoprd_codigo = dad_comp.isoprd_codigo
		and dad_comp.isoemp_codigo = 11
		and dad_comp.isoprdattid = 9
		and dad_comp.isoprdattvalueid = 1
	left join isoestado UFOrigem
		on UFOrigem.ISOPais_Codigo = 1
	left join isoestado UFDestino
		on UFDestino.ISOPais_Codigo = 1
	left join isopvmatrizicms icmsINTERNO
		on ffi.ISOPrdDadF_CodAgrupFiscal = icmsINTERNO.ISOPvMatICMS_AgrupFiscalCod
		and	(
				(icmsINTERNO.ISOPvMatICMS_PrdOrigemCod = (select top 1 isopvprdestab_origemcod from ISOPVPRDESTABELECIMENTO x, ISOPvEstabelecimento y
														where x.isoemp_codigo = prd.isoemp_codigo
															and x.isoprd_codigo = prd.isoprd_codigo
															and x.isoemp_codigo = y.isoemp_codigo
															and x.isopvestab_codigo = y.isopvestab_codigo
															and y.isopvestab_uf = icmsINTERNO.isopvmaticms_uforigem

															-- chamado 39256
--															and (((x.isopvestab_codigo = 9) and y.isopvestab_uf = 'SP') or ((x.isopvestab_codigo = 35) and y.isopvestab_uf = 'SC') )

															--and ( (1=1 and y.isopvestab_uf not in ('SP','SC')) or ((x.isopvestab_codigo = 9) and y.isopvestab_uf = 'SP')
															--		or ((x.isopvestab_codigo = 35) and y.isopvestab_uf = 'SC') )

															and isopvestab_flag = 'A'
															and isopvprdestab_flag = 'A') and
				((select count(*) from ISOPVPRDESTABELECIMENTO x, ISOPvEstabelecimento y where x.isoemp_codigo = prd.isoemp_codigo and x.isoprd_codigo = prd.isoprd_codigo and x.isoemp_codigo = y.isoemp_codigo and x.isopvestab_codigo = y.isopvestab_codigo and y.isopvestab_uf = icmsINTERNO.isopvmaticms_uforigem and isopvestab_flag = 'A' and isopvprdestab_flag = 'A') > 0))


				or (icmsINTERNO.ISOPvMatICMS_PrdOrigemCod = ffi.ISOPrdDadF_CodOrigem and
				((select count(*) from ISOPVPRDESTABELECIMENTO x, ISOPvEstabelecimento y where x.isoemp_codigo = prd.isoemp_codigo and x.isoprd_codigo = prd.isoprd_codigo and x.isoemp_codigo = y.isoemp_codigo and x.isopvestab_codigo = y.isopvestab_codigo and y.isopvestab_uf = icmsINTERNO.isopvmaticms_uforigem and isopvestab_flag = 'A' and isopvprdestab_flag = 'A') = 0))
			)

		and ISOPvMatICMS_Flag = 'A'

		and icmsINTERNO.isopvmaticms_uforigem = UFOrigem.ISOEst_Sigla
		and icmsINTERNO.isopvmaticms_ufdestino  = UFDestino.ISOEst_Sigla
and icmsINTERNO.ISOPvMatICMS_CatFiscalCod = 'COM'
and icmsINTERNO.ISOPvMatICMS_NatOperaCod = '51'
and icmsINTERNO.ISOPvMatICMS_EspecieCod = ''
and icmsINTERNO.ISOPvMatICMS_DestinacaoCod = 'S'
and icmsINTERNO.ISOPvMatICMS_InicioVigencia = (select max(x.ISOPvMatICMS_InicioVigencia) from isopvmatrizicms x where icmsINTERNO.ISOEmp_Codigo = x.ISOEmp_Codigo and icmsINTERNO.ISOPvMatICMS_UFOrigem = x.ISOPvMatICMS_UFOrigem and icmsINTERNO.ISOPvMatICMS_UFDestino = x.ISOPvMatICMS_UFDestino and icmsINTERNO.ISOPvMatICMS_NatOperaCod = x.ISOPvMatICMS_NatOperaCod and icmsINTERNO.ISOPvMatICMS_AgrupFiscalCod = x.ISOPvMatICMS_AgrupFiscalCod and icmsINTERNO.ISOPvMatICMS_EspecieCod = x.ISOPvMatICMS_EspecieCod and icmsINTERNO.ISOPvMatICMS_CatFiscalCod = x.ISOPvMatICMS_CatFiscalCod and icmsINTERNO.ISOPvMatICMS_PrdOrigemCod = x.ISOPvMatICMS_PrdOrigemCod and icmsINTERNO.ISOPvMatICMS_DestinacaoCod = x.ISOPvMatICMS_DestinacaoCod and x.ISOPvMatICMS_Flag = 'A')

	inner join isopvmatrizicms icmsSP
		on ffi.ISOPrdDadF_CodAgrupFiscal = icmsSP.ISOPvMatICMS_AgrupFiscalCod
		and icmsSP.ISOPvMatICMS_PrdOrigemCod = ffi.ISOPrdDadF_CodOrigem
	left join isopvicms fti
		on icmsInterno.isopvmaticms_tributicmscod = fti.isopvicms_codigo
	left join isopvmatrizsubsttributaria as fst
		on icmsINTERNO.isopvmaticms_uforigem = fst.isopvmatsubst_uforigem
			and icmsINTERNO.isopvmaticms_ufdestino = fst.isopvmatsubst_ufdestino
			and icmsINTERNO.ISOPvMatICMS_AgrupFiscalCod = fst.ISOPvMatSubsT_AgrupFiscalCod
			and icmsINTERNO.ISOPvMatICMS_CatFiscalCod = fst.ISOPvMatSubsT_CategFiscalCod
			and fst.isopvmatsubst_categfiscalcod = 'COM'
			and fst.isopvmatsubst_iniciovigencia = (select max(x.isopvmatsubst_iniciovigencia) from isopvmatrizsubsttributaria as x where fst.isopvmatsubst_uforigem = x.isopvmatsubst_uforigem and fst.isopvmatsubst_ufdestino = x.isopvmatsubst_ufdestino and fst.isopvmatsubst_categfiscalcod = x.isopvmatsubst_categfiscalcod and fst.isopvmatsubst_agrupfiscalcod = x.isopvmatsubst_agrupfiscalcod and x.isopvmatsubst_flag = 'A')
			and fst.isopvmatsubst_uforigem in ('SC', 'SP', 'RJ', 'BA', 'PE', 'CE', 'MG')
where
esp.isopvprel_metodo = 'B'
and esp.isopvprel_datainicio = (select max(z.isopvprel_datainicio) from isopvprecolista as z where esp.isoemp_codigo = z.isoemp_codigo and esp.isopvprel_chave = z.isopvprel_chave and esp.isopvprel_metodo = z.isopvprel_metodo)

-- comentado 04/07/2017 zagoto, não mostrava determinados produtos
and ffi.isoprddadf_iniciovigencia = (select max(y.isoprddadf_iniciovigencia) from isoprddadofiscal as y
		where
			ffi.isoprddadf_prdcodigo = y.isoprddadf_prdcodigo
--			and y.ISOPrdDadF_CodAgrupFiscal = icmsINTERNO.ISOPvMatICMS_AgrupFiscalCod
--			--and ffi.ISOPrdDadF_CodClassFiscal = y.ISOPrdDadF_CodClassFiscal
--			and y.ISOPrdDadF_CodOrigem = icmsINTERNO.ISOPvMatICMS_PrdOrigemCod
--			and y.ISOPrdDadF_CodDestinacao = icmsINTERNO.ISOPvMatICMS_DestinacaoCod
			and y.isoprddadf_flag = 'A')

and ffi.isoprddadf_iniciovigencia = (select max(y.isoprddadf_iniciovigencia) from isoprddadofiscal as y
		where
			ffi.isoprddadf_prdcodigo = y.isoprddadf_prdcodigo
			and ffi.ISOPrdDadF_CodAgrupFiscal = y.ISOPrdDadF_CodAgrupFiscal
			and ffi.ISOPrdDadF_CodClassFiscal = y.ISOPrdDadF_CodClassFiscal
			and ffi.ISOPrdDadF_CodOrigem = y.ISOPrdDadF_CodOrigem
			and ffi.ISOPrdDadF_CodDestinacao = y.ISOPrdDadF_CodDestinacao
			and y.isoprddadf_flag = 'A')

and icmsSP.ISOPvMatICMS_InicioVigencia = (select max(x.ISOPvMatICMS_InicioVigencia) from isopvmatrizicms x where icmsSP.ISOEmp_Codigo = x.ISOEmp_Codigo and icmsSP.ISOPvMatICMS_UFOrigem = x.ISOPvMatICMS_UFOrigem and icmsSP.ISOPvMatICMS_UFDestino = x.ISOPvMatICMS_UFDestino and icmsSP.ISOPvMatICMS_NatOperaCod = x.ISOPvMatICMS_NatOperaCod and icmsSP.ISOPvMatICMS_AgrupFiscalCod = x.ISOPvMatICMS_AgrupFiscalCod and icmsSP.ISOPvMatICMS_EspecieCod = x.ISOPvMatICMS_EspecieCod and icmsSP.ISOPvMatICMS_CatFiscalCod = x.ISOPvMatICMS_CatFiscalCod and icmsSP.ISOPvMatICMS_PrdOrigemCod = x.ISOPvMatICMS_PrdOrigemCod and icmsSP.ISOPvMatICMS_DestinacaoCod = x.ISOPvMatICMS_DestinacaoCod and x.ISOPvMatICMS_Flag = 'A')
and prd.ISOPrd_Flag = 'A'
and icmsSP.ISOPvMatICMS_UFOrigem = 'SP'
and icmsSP.ISOPvMatICMS_UFDestino = 'SP'
and icmsSP.ISOPvMatICMS_CatFiscalCod = 'COM'
and icmsSP.ISOPvMatICMS_NatOperaCod = '51'
and icmsSP.ISOPvMatICMS_EspecieCod = ''
and icmsSP.ISOPvMatICMS_DestinacaoCod = 'S';


-- dbo.view_tabela_preco_4 source

CREATE VIEW [dbo].[view_tabela_preco_4]
as
select
UFOrigem.ISOEst_Sigla as stufor,
UFDestino.ISOEst_Sigla as stufde,
ffi.isoprddadf_prdcodigo as fiitem,
prd.isoprd_descricao as tvprodsc,
icmsINTERNO.ISOPvMatICMS_AgrupFiscalCod,
fst.isopvmatsubst_agrupfiscalcod as stagfi,
fst.isopvmatsubst_categfiscalcod as stcatf,
case when fti.isopvicms_substtributaria = 'S'
	then isnull((100*(1+(fst.isopvmatsubst_percmarlucrofix/100)))*fst.isopvmatsubst_fatormultipbc,0)
	else 0
end as base_iva,
case when fti.isopvicms_substtributaria = 'S'
	then isnull((100*(1+(fst.isopvmatsubst_percmarlucrofix/100))) * (fst.isopvmatsubst_aliqicmsdif /100),0)
	else 0
end as icms_da_st,
icmsINTERNO.ISOPvMatICMS_AliquotaICMS as ICMS_interno,
--icmsINTERNO.ISOPvMatICMS_FatorMultBCICMS as FatorICMSInterno,
icmsINTERNO.ISOPvMatICMS_FatorMultICMS as FatorICMSInterno,
icmsSP.ISOPvMatICMS_AliquotaICMS as ICMS_SP,
--icmsSP.ISOPvMatICMS_FatorMultBCICMS as FatorICMSSP,
icmsSP.ISOPvMatICMS_FatorMultICMS as FatorICMSSP,
fti.isopvicms_substtributaria,

(select top 1 IPI from (
	select 1 as seq, ISOPvMatIPI_AliquotaIPI as IPI from isopvmatrizipi a
		where
			a.ISOPvMatIPI_InicioVigencia =
				(select max(b.ISOPvMatIPI_InicioVigencia) from isopvmatrizipi b
					where
					a.ISOEmp_Codigo = b.ISOEmp_Codigo
					and a.ISOPvMatIPI_AgrupFiscalCod = b.ISOPvMatIPI_AgrupFiscalCod
					and a.ISOPvMatIPI_EspecieCod = b.ISOPvMatIPI_EspecieCod
					and a.ISOPvMatIPI_PrdOrigemCod = b.ISOPvMatIPI_PrdOrigemCod
					and a.ISOPvMatIPI_DestinacaoCod = b.ISOPvMatIPI_DestinacaoCod
					and a.ISOPvMatIPI_NatOperacaoCod = b.ISOPvMatIPI_NatOperacaoCod
					and a.ISOPvMatIPI_CategFiscalCod = b.ISOPvMatIPI_CategFiscalCod
					and b.ISOPvMatIPI_Flag = 'A')
					and a.ISOEmp_Codigo = ffi.ISOEmp_Codigo
					and a.ISOPvMatIPI_AgrupFiscalCod = ffi.ISOPrdDadF_CodAgrupFiscal
					and a.ISOPvMatIPI_EspecieCod = case when ffi.ISOPrdDadF_EspecieCod = '0' then '' else ffi.ISOPrdDadF_EspecieCod end
					and a.ISOPvMatIPI_PrdOrigemCod = ffi.ISOPrdDadF_CodOrigem
					and a.ISOPvMatIPI_DestinacaoCod = ffi.ISOPrdDadF_CodDestinacao
					and a.ISOPvMatIPI_CategFiscalCod = icmsINTERNO.ISOPvMatICMS_CatFiscalCod
					and a.isoemp_codigo = 11
					and a.ISOPvMatIPI_Flag = 'A'
					and a.ISOPvMatIPI_NatOperacaoCod = '51'
				union all
					select 2 as seq, ISOPvClassF_AliqIPI as IPI from isopvclassificacaofiscal a
					where
						a.ISOPvClassF_Codigo = ffi.ISOPrdDadF_CodClassFiscal
						and a.ISOPvClassF_Flag = 'A'
						and a.ISOPvClassF_InicioVigencia =
							(select max(ISOPvClassF_InicioVigencia) from isopvclassificacaofiscal b
								where
									a.ISOPvClassF_Codigo = b.ISOPvClassF_Codigo
									and b.ISOPvClassF_Flag = 'A')

				) as AliquotaIPI order by seq
) as aliquotaIPI,
ISNULL((select isopvmaticms_aliqcargamaxima from isopvmatrizicms w
			where w.isopvmaticms_uforigem = fst.isopvmatsubst_uforigem
			and w.isopvmaticms_ufdestino = fst.isopvmatsubst_ufdestino
			and w.isopvmaticms_agrupfiscalcod = fst.isopvmatsubst_agrupfiscalcod
			and w.isopvmaticms_catfiscalcod = fst.isopvmatsubst_categfiscalcod
			and w.isopvmaticms_natoperacod = '51'
			and w.isopvmaticms_prdorigemcod = icmsINTERNO.ISOPvMatICMS_PrdOrigemCod -- 1
			and w.isopvmaticms_destinacaocod = 'S'
			and w.isopvmaticms_iniciovigencia = (select max(a.isopvmaticms_iniciovigencia) from isopvmatrizicms as a where w.isopvmaticms_uforigem = a.isopvmaticms_uforigem and w.isopvmaticms_ufdestino = a.isopvmaticms_ufdestino and w.isopvmaticms_agrupfiscalcod = a.isopvmaticms_agrupfiscalcod and w.isopvmaticms_catfiscalcod = a.isopvmaticms_catfiscalcod and w.isopvmaticms_natoperacod = a.isopvmaticms_natoperacod and w.isopvmaticms_prdorigemcod = a.isopvmaticms_prdorigemcod and a.isopvmaticms_flag = 'A' )),0)
isopvmaticms_aliqcargamaxima,
icmsINTERNO.ISOPvMatICMS_PrdOrigemCod,
fst.isopvmatsubst_percmarlucrofix,
fst.isopvmatsubst_fatormultipbc,
fst.isopvmatsubst_aliqicmsdif,
case when fti.isopvicms_substtributaria = 'S'
	then isnull(
			((100 +

(select top 1 IPI from (
	select 1 as seq, ISOPvMatIPI_AliquotaIPI as IPI from isopvmatrizipi a
		where
			a.ISOPvMatIPI_InicioVigencia =
				(select max(b.ISOPvMatIPI_InicioVigencia) from isopvmatrizipi b
					where
					a.ISOEmp_Codigo = b.ISOEmp_Codigo
					and a.ISOPvMatIPI_AgrupFiscalCod = b.ISOPvMatIPI_AgrupFiscalCod
					and a.ISOPvMatIPI_EspecieCod = b.ISOPvMatIPI_EspecieCod
					and a.ISOPvMatIPI_PrdOrigemCod = b.ISOPvMatIPI_PrdOrigemCod
					and a.ISOPvMatIPI_DestinacaoCod = b.ISOPvMatIPI_DestinacaoCod
					and a.ISOPvMatIPI_NatOperacaoCod = b.ISOPvMatIPI_NatOperacaoCod
					and a.ISOPvMatIPI_CategFiscalCod = b.ISOPvMatIPI_CategFiscalCod
					and b.ISOPvMatIPI_Flag = 'A')
					and a.ISOEmp_Codigo = ffi.ISOEmp_Codigo
					and a.ISOPvMatIPI_AgrupFiscalCod = ffi.ISOPrdDadF_CodAgrupFiscal
					and a.ISOPvMatIPI_EspecieCod = case when ffi.ISOPrdDadF_EspecieCod = '0' then '' else ffi.ISOPrdDadF_EspecieCod end
					and a.ISOPvMatIPI_PrdOrigemCod = ffi.ISOPrdDadF_CodOrigem
					and a.ISOPvMatIPI_DestinacaoCod = ffi.ISOPrdDadF_CodDestinacao
					and a.ISOPvMatIPI_CategFiscalCod = icmsINTERNO.ISOPvMatICMS_CatFiscalCod
					and a.isoemp_codigo = 11
					and a.ISOPvMatIPI_Flag = 'A'
					and a.ISOPvMatIPI_NatOperacaoCod = '51'
				union all
					select 2 as seq, ISOPvClassF_AliqIPI as IPI from isopvclassificacaofiscal a
					where
						a.ISOPvClassF_Codigo = ffi.ISOPrdDadF_CodClassFiscal
						and a.ISOPvClassF_Flag = 'A'
						and a.ISOPvClassF_InicioVigencia =
							(select max(ISOPvClassF_InicioVigencia) from isopvclassificacaofiscal b
								where
									a.ISOPvClassF_Codigo = b.ISOPvClassF_Codigo
									and b.ISOPvClassF_Flag = 'A')

				) as AliquotaIPI order by seq
)

			)*

			(1+(fst.isopvmatsubst_percmarlucrofix/100))) *
			fst.isopvmatsubst_fatormultipbc *
			(fst.isopvmatsubst_aliqicmsdif /100) -
			((select isopvmaticms_aliqcargamaxima from isopvmatrizicms w where w.isopvmaticms_uforigem = fst.isopvmatsubst_uforigem and w.isopvmaticms_ufdestino = fst.isopvmatsubst_ufdestino and w.isopvmaticms_agrupfiscalcod = fst.isopvmatsubst_agrupfiscalcod and w.isopvmaticms_catfiscalcod = fst.isopvmatsubst_categfiscalcod and w.isopvmaticms_natoperacod = '51' and w.isopvmaticms_prdorigemcod = icmsINTERNO.ISOPvMatICMS_PrdOrigemCod and w.isopvmaticms_destinacaocod = 'S' and w.isopvmaticms_flag = 'A' and w.isopvmaticms_iniciovigencia = (select max(a.isopvmaticms_iniciovigencia) from isopvmatrizicms as a where w.isopvmaticms_uforigem = a.isopvmaticms_uforigem and w.isopvmaticms_ufdestino = a.isopvmaticms_ufdestino and w.isopvmaticms_agrupfiscalcod = a.isopvmaticms_agrupfiscalcod and w.isopvmaticms_catfiscalcod = a.isopvmaticms_catfiscalcod and w.isopvmaticms_natoperacod = a.isopvmaticms_natoperacod and w.isopvmaticms_prdorigemcod = a.isopvmaticms_prdorigemcod and a.isopvmaticms_flag = 'A' ))/100)
		* 100,0)
	else 0
end as perc_st,
ffi.ISOPrdDadF_CodClassFiscal,
case when isoprd_unidade <> 'CX'
	then (select isoprdundfatc_unddestino from ISOPRDUNDFATORCONVERSAO fator where fator.isoemp_codigo = prd.isoemp_codigo and fator.isoemp_codigo = 11 and fator.ISOPrdUndFatC_PrdCodigo = prd.isoprd_codigo and fator.ISOPrdUndFatC_UndOrigem = prd.isoprd_unidade and fator.ISOPrdUndFatC_UndDestino = 'CX')
	else isoprd_unidade
end as unidade,
(select top 1 IPI from (
	select 1 as seq, ISOPvMatIPI_AliquotaIPI as IPI from isopvmatrizipi a
		where
			a.ISOPvMatIPI_InicioVigencia =
				(select max(b.ISOPvMatIPI_InicioVigencia) from isopvmatrizipi b
					where
					a.ISOEmp_Codigo = b.ISOEmp_Codigo
					and a.ISOPvMatIPI_AgrupFiscalCod = b.ISOPvMatIPI_AgrupFiscalCod
					and a.ISOPvMatIPI_EspecieCod = b.ISOPvMatIPI_EspecieCod
					and a.ISOPvMatIPI_PrdOrigemCod = b.ISOPvMatIPI_PrdOrigemCod
					and a.ISOPvMatIPI_DestinacaoCod = b.ISOPvMatIPI_DestinacaoCod
					and a.ISOPvMatIPI_NatOperacaoCod = b.ISOPvMatIPI_NatOperacaoCod
					and a.ISOPvMatIPI_CategFiscalCod = b.ISOPvMatIPI_CategFiscalCod
					and b.ISOPvMatIPI_Flag = 'A')
					and a.ISOEmp_Codigo = ffi.ISOEmp_Codigo
					and a.ISOPvMatIPI_AgrupFiscalCod = ffi.ISOPrdDadF_CodAgrupFiscal
					and a.ISOPvMatIPI_EspecieCod = case when ffi.ISOPrdDadF_EspecieCod = '0' then '' else ffi.ISOPrdDadF_EspecieCod end
					and a.ISOPvMatIPI_PrdOrigemCod = ffi.ISOPrdDadF_CodOrigem
					and a.ISOPvMatIPI_DestinacaoCod = ffi.ISOPrdDadF_CodDestinacao
					and a.ISOPvMatIPI_CategFiscalCod = icmsINTERNO.ISOPvMatICMS_CatFiscalCod
					and a.isoemp_codigo = 11
					and a.ISOPvMatIPI_Flag = 'A'
					and a.ISOPvMatIPI_NatOperacaoCod = '51'
				union all
					select 2 as seq, ISOPvClassF_AliqIPI as IPI from isopvclassificacaofiscal a
					where
						a.ISOPvClassF_Codigo = ffi.ISOPrdDadF_CodClassFiscal
						and a.ISOPvClassF_Flag = 'A'
						and a.ISOPvClassF_InicioVigencia =
							(select max(ISOPvClassF_InicioVigencia) from isopvclassificacaofiscal b
								where
									a.ISOPvClassF_Codigo = b.ISOPvClassF_Codigo
									and b.ISOPvClassF_Flag = 'A')

				) as AliquotaIPI order by seq
) as perc_ipi,
substring(esp.isopvprel_chave,16,4) as tabela,
(select top 1 classe.isolin_codigo from isolinha as classe, isoprdlinha as plinha
		where plinha.isoemp_codigo = classe.isoemp_codigo
		and plinha.isolin_codigo = classe.isolin_codigo
		and prd.isoemp_codigo = plinha.isoemp_codigo
		and prd.isoprd_codigo = plinha.isoprd_codigo
		and classe.isolintip_codigo = 1
		and classe.isolin_flag = 'A')
 as CodClasse,
(select top 1 isolin_descricao from isolinha as classe, isoprdlinha as plinha
		where plinha.isoemp_codigo = classe.isoemp_codigo
		and plinha.isolin_codigo = classe.isolin_codigo
		and prd.isoemp_codigo = plinha.isoemp_codigo
		and prd.isoprd_codigo = plinha.isoprd_codigo
		and classe.isolintip_codigo = 1
		and classe.isolin_flag = 'A')
 as classe,
(select top 1 familia.isolin_codigo from isolinha as familia, isoprdlinha as plinha
		where plinha.isoemp_codigo = familia.isoemp_codigo
		and plinha.isolin_codigo = familia.isolin_codigo
		and prd.isoemp_codigo = plinha.isoemp_codigo
		and prd.isoprd_codigo = plinha.isoprd_codigo
		and familia.isolintip_codigo = 2
		and familia.isolin_flag = 'A')
 as CodFamilia,
(select top 1 isolin_descricao from isolinha as familia, isoprdlinha as plinha
		where plinha.isoemp_codigo = familia.isoemp_codigo
		and plinha.isolin_codigo = familia.isolin_codigo
		and prd.isoemp_codigo = plinha.isoemp_codigo
		and prd.isoprd_codigo = plinha.isoprd_codigo
		and familia.isolintip_codigo = 2
		and familia.isolin_flag = 'A')
 as familia,
case when icmsINTERNO.ISOPvMatICMS_AliquotaICMS is null
	then 0
	else
		case when isoprd_unidade <> 'CX'
			then esp.ISOPvPreL_preco * isnull((select top 1 ISOPrdUndFatC_FatorConversao from ISOPRDUNDFATORCONVERSAO fator where fator.isoemp_codigo = prd.isoemp_codigo and fator.isoemp_codigo = 11 and fator.ISOPrdUndFatC_PrdCodigo = prd.isoprd_codigo and fator.ISOPrdUndFatC_UndOrigem = prd.isoprd_unidade and fator.ISOPrdUndFatC_UndDestino = 'CX'),1)
			else esp.ISOPvPreL_preco
		end
end
as PrecoESP
from isoproduto as prd
	inner join isopvprecolista as esp
		on prd.isoprd_codigo = substring(esp.isopvprel_chave,1,6)
	inner join isoprddadofiscal as ffi
		on prd.isoprd_codigo = ffi.isoprddadf_prdcodigo
		and isoprddadf_flag = 'A'
	inner join isoprdattvalues as dad_comp
		on prd.isoemp_codigo = dad_comp.isoemp_codigo
		and prd.isoprd_codigo = dad_comp.isoprd_codigo
		and dad_comp.isoemp_codigo = 11
		and dad_comp.isoprdattid = 9
		and dad_comp.isoprdattvalueid = 1
	left join isoestado UFOrigem
		on UFOrigem.ISOPais_Codigo = 1
	left join isoestado UFDestino
		on UFDestino.ISOPais_Codigo = 1
	left join isopvmatrizicms icmsINTERNO
		on ffi.ISOPrdDadF_CodAgrupFiscal = icmsINTERNO.ISOPvMatICMS_AgrupFiscalCod
		and	(
				(icmsINTERNO.ISOPvMatICMS_PrdOrigemCod = (select top 1 isopvprdestab_origemcod from ISOPVPRDESTABELECIMENTO x, ISOPvEstabelecimento y
														where x.isoemp_codigo = prd.isoemp_codigo
															and x.isoprd_codigo = prd.isoprd_codigo
															and x.isoemp_codigo = y.isoemp_codigo
															and x.isopvestab_codigo = y.isopvestab_codigo
															and y.isopvestab_uf = icmsINTERNO.isopvmaticms_uforigem

															-- chamado 39256
--															and (((x.isopvestab_codigo = 9) and y.isopvestab_uf = 'SP') or ((x.isopvestab_codigo = 35) and y.isopvestab_uf = 'SC') )

															--and ( (1=1 and y.isopvestab_uf not in ('SP','SC')) or ((x.isopvestab_codigo = 9) and y.isopvestab_uf = 'SP')
															--		or ((x.isopvestab_codigo = 35) and y.isopvestab_uf = 'SC') )

															and isopvestab_flag = 'A'
															and isopvprdestab_flag = 'A') and
				((select count(*) from ISOPVPRDESTABELECIMENTO x, ISOPvEstabelecimento y where x.isoemp_codigo = prd.isoemp_codigo and x.isoprd_codigo = prd.isoprd_codigo and x.isoemp_codigo = y.isoemp_codigo and x.isopvestab_codigo = y.isopvestab_codigo and y.isopvestab_uf = icmsINTERNO.isopvmaticms_uforigem and isopvestab_flag = 'A' and isopvprdestab_flag = 'A') > 0))


				or (icmsINTERNO.ISOPvMatICMS_PrdOrigemCod = ffi.ISOPrdDadF_CodOrigem and
				((select count(*) from ISOPVPRDESTABELECIMENTO x, ISOPvEstabelecimento y where x.isoemp_codigo = prd.isoemp_codigo and x.isoprd_codigo = prd.isoprd_codigo and x.isoemp_codigo = y.isoemp_codigo and x.isopvestab_codigo = y.isopvestab_codigo and y.isopvestab_uf = icmsINTERNO.isopvmaticms_uforigem and isopvestab_flag = 'A' and isopvprdestab_flag = 'A') = 0))
			)

		and ISOPvMatICMS_Flag = 'A'

		and icmsINTERNO.isopvmaticms_uforigem = UFOrigem.ISOEst_Sigla
		and icmsINTERNO.isopvmaticms_ufdestino  = UFDestino.ISOEst_Sigla
and icmsINTERNO.ISOPvMatICMS_CatFiscalCod = 'COM'
and icmsINTERNO.ISOPvMatICMS_NatOperaCod = '51'
and icmsINTERNO.ISOPvMatICMS_EspecieCod = ''
and icmsINTERNO.ISOPvMatICMS_DestinacaoCod = 'S'
and icmsINTERNO.ISOPvMatICMS_InicioVigencia = (select max(x.ISOPvMatICMS_InicioVigencia) from isopvmatrizicms x where icmsINTERNO.ISOEmp_Codigo = x.ISOEmp_Codigo and icmsINTERNO.ISOPvMatICMS_UFOrigem = x.ISOPvMatICMS_UFOrigem and icmsINTERNO.ISOPvMatICMS_UFDestino = x.ISOPvMatICMS_UFDestino and icmsINTERNO.ISOPvMatICMS_NatOperaCod = x.ISOPvMatICMS_NatOperaCod and icmsINTERNO.ISOPvMatICMS_AgrupFiscalCod = x.ISOPvMatICMS_AgrupFiscalCod and icmsINTERNO.ISOPvMatICMS_EspecieCod = x.ISOPvMatICMS_EspecieCod and icmsINTERNO.ISOPvMatICMS_CatFiscalCod = x.ISOPvMatICMS_CatFiscalCod and icmsINTERNO.ISOPvMatICMS_PrdOrigemCod = x.ISOPvMatICMS_PrdOrigemCod and icmsINTERNO.ISOPvMatICMS_DestinacaoCod = x.ISOPvMatICMS_DestinacaoCod and x.ISOPvMatICMS_Flag = 'A')

	inner join isopvmatrizicms icmsSP
		on ffi.ISOPrdDadF_CodAgrupFiscal = icmsSP.ISOPvMatICMS_AgrupFiscalCod
		and icmsSP.ISOPvMatICMS_PrdOrigemCod = ffi.ISOPrdDadF_CodOrigem
	left join isopvicms fti
		on icmsInterno.isopvmaticms_tributicmscod = fti.isopvicms_codigo
	left join isopvmatrizsubsttributaria as fst
		on icmsINTERNO.isopvmaticms_uforigem = fst.isopvmatsubst_uforigem
			and icmsINTERNO.isopvmaticms_ufdestino = fst.isopvmatsubst_ufdestino
			and icmsINTERNO.ISOPvMatICMS_AgrupFiscalCod = fst.ISOPvMatSubsT_AgrupFiscalCod
			and icmsINTERNO.ISOPvMatICMS_CatFiscalCod = fst.ISOPvMatSubsT_CategFiscalCod
			and fst.isopvmatsubst_categfiscalcod = 'COM'
			and fst.isopvmatsubst_iniciovigencia = (select max(x.isopvmatsubst_iniciovigencia) from isopvmatrizsubsttributaria as x where fst.isopvmatsubst_uforigem = x.isopvmatsubst_uforigem and fst.isopvmatsubst_ufdestino = x.isopvmatsubst_ufdestino and fst.isopvmatsubst_categfiscalcod = x.isopvmatsubst_categfiscalcod and fst.isopvmatsubst_agrupfiscalcod = x.isopvmatsubst_agrupfiscalcod and x.isopvmatsubst_flag = 'A')
			and fst.isopvmatsubst_uforigem in ('SC', 'SP', 'RJ', 'BA', 'PE', 'CE', 'MG')
where
esp.isopvprel_metodo = 'B'
and esp.isopvprel_datainicio = (select max(z.isopvprel_datainicio) from isopvprecolista as z where esp.isoemp_codigo = z.isoemp_codigo and esp.isopvprel_chave = z.isopvprel_chave and esp.isopvprel_metodo = z.isopvprel_metodo)

-- comentado 04/07/2017 zagoto, não mostrava determinados produtos
and ffi.isoprddadf_iniciovigencia = (select max(y.isoprddadf_iniciovigencia) from isoprddadofiscal as y
		where
			ffi.isoprddadf_prdcodigo = y.isoprddadf_prdcodigo
--			and y.ISOPrdDadF_CodAgrupFiscal = icmsINTERNO.ISOPvMatICMS_AgrupFiscalCod
--			--and ffi.ISOPrdDadF_CodClassFiscal = y.ISOPrdDadF_CodClassFiscal
--			and y.ISOPrdDadF_CodOrigem = icmsINTERNO.ISOPvMatICMS_PrdOrigemCod
--			and y.ISOPrdDadF_CodDestinacao = icmsINTERNO.ISOPvMatICMS_DestinacaoCod
			and y.isoprddadf_flag = 'A')

and ffi.isoprddadf_iniciovigencia = (select max(y.isoprddadf_iniciovigencia) from isoprddadofiscal as y
		where
			ffi.isoprddadf_prdcodigo = y.isoprddadf_prdcodigo
			and ffi.ISOPrdDadF_CodAgrupFiscal = y.ISOPrdDadF_CodAgrupFiscal
			and ffi.ISOPrdDadF_CodClassFiscal = y.ISOPrdDadF_CodClassFiscal
			and ffi.ISOPrdDadF_CodOrigem = y.ISOPrdDadF_CodOrigem
			and ffi.ISOPrdDadF_CodDestinacao = y.ISOPrdDadF_CodDestinacao
			and y.isoprddadf_flag = 'A')

and icmsSP.ISOPvMatICMS_InicioVigencia = (select max(x.ISOPvMatICMS_InicioVigencia) from isopvmatrizicms x where icmsSP.ISOEmp_Codigo = x.ISOEmp_Codigo and icmsSP.ISOPvMatICMS_UFOrigem = x.ISOPvMatICMS_UFOrigem and icmsSP.ISOPvMatICMS_UFDestino = x.ISOPvMatICMS_UFDestino and icmsSP.ISOPvMatICMS_NatOperaCod = x.ISOPvMatICMS_NatOperaCod and icmsSP.ISOPvMatICMS_AgrupFiscalCod = x.ISOPvMatICMS_AgrupFiscalCod and icmsSP.ISOPvMatICMS_EspecieCod = x.ISOPvMatICMS_EspecieCod and icmsSP.ISOPvMatICMS_CatFiscalCod = x.ISOPvMatICMS_CatFiscalCod and icmsSP.ISOPvMatICMS_PrdOrigemCod = x.ISOPvMatICMS_PrdOrigemCod and icmsSP.ISOPvMatICMS_DestinacaoCod = x.ISOPvMatICMS_DestinacaoCod and x.ISOPvMatICMS_Flag = 'A')
and prd.ISOPrd_Flag = 'A'
and icmsSP.ISOPvMatICMS_UFOrigem = 'SP'
and icmsSP.ISOPvMatICMS_UFDestino = 'SP'
and icmsSP.ISOPvMatICMS_CatFiscalCod = 'COM'
and icmsSP.ISOPvMatICMS_NatOperaCod = '51'
and icmsSP.ISOPvMatICMS_EspecieCod = ''
and icmsSP.ISOPvMatICMS_DestinacaoCod = 'S';


-- dbo.view_tabela_preco_5 source

CREATE VIEW [dbo].[view_tabela_preco5]
as
select
UFOrigem.ISOEst_Sigla as stufor,
UFDestino.ISOEst_Sigla as stufde,
ffi.isoprddadf_prdcodigo as fiitem,
prd.isoprd_descricao as tvprodsc,
icmsINTERNO.ISOPvMatICMS_AgrupFiscalCod,
fst.isopvmatsubst_agrupfiscalcod as stagfi,
fst.isopvmatsubst_categfiscalcod as stcatf,
case when fti.isopvicms_substtributaria = 'S'
	then isnull((100*(1+(fst.isopvmatsubst_percmarlucrofix/100)))*fst.isopvmatsubst_fatormultipbc,0)
	else 0
end as base_iva,
case when fti.isopvicms_substtributaria = 'S'
	then isnull((100*(1+(fst.isopvmatsubst_percmarlucrofix/100))) * (fst.isopvmatsubst_aliqicmsdif /100),0)
	else 0
end as icms_da_st,
icmsINTERNO.ISOPvMatICMS_AliquotaICMS as ICMS_interno,
--icmsINTERNO.ISOPvMatICMS_FatorMultBCICMS as FatorICMSInterno,
icmsINTERNO.ISOPvMatICMS_FatorMultICMS as FatorICMSInterno,
icmsSP.ISOPvMatICMS_AliquotaICMS as ICMS_SP,
--icmsSP.ISOPvMatICMS_FatorMultBCICMS as FatorICMSSP,
icmsSP.ISOPvMatICMS_FatorMultICMS as FatorICMSSP,
fti.isopvicms_substtributaria,

(select top 1 IPI from (
	select 1 as seq, ISOPvMatIPI_AliquotaIPI as IPI from isopvmatrizipi a
		where
			a.ISOPvMatIPI_InicioVigencia =
				(select max(b.ISOPvMatIPI_InicioVigencia) from isopvmatrizipi b
					where
					a.ISOEmp_Codigo = b.ISOEmp_Codigo
					and a.ISOPvMatIPI_AgrupFiscalCod = b.ISOPvMatIPI_AgrupFiscalCod
					and a.ISOPvMatIPI_EspecieCod = b.ISOPvMatIPI_EspecieCod
					and a.ISOPvMatIPI_PrdOrigemCod = b.ISOPvMatIPI_PrdOrigemCod
					and a.ISOPvMatIPI_DestinacaoCod = b.ISOPvMatIPI_DestinacaoCod
					and a.ISOPvMatIPI_NatOperacaoCod = b.ISOPvMatIPI_NatOperacaoCod
					and a.ISOPvMatIPI_CategFiscalCod = b.ISOPvMatIPI_CategFiscalCod
					and b.ISOPvMatIPI_Flag = 'A')
					and a.ISOEmp_Codigo = ffi.ISOEmp_Codigo
					and a.ISOPvMatIPI_AgrupFiscalCod = ffi.ISOPrdDadF_CodAgrupFiscal
					and a.ISOPvMatIPI_EspecieCod = case when ffi.ISOPrdDadF_EspecieCod = '0' then '' else ffi.ISOPrdDadF_EspecieCod end
					and a.ISOPvMatIPI_PrdOrigemCod = ffi.ISOPrdDadF_CodOrigem
					and a.ISOPvMatIPI_DestinacaoCod = ffi.ISOPrdDadF_CodDestinacao
					and a.ISOPvMatIPI_CategFiscalCod = icmsINTERNO.ISOPvMatICMS_CatFiscalCod
					and a.isoemp_codigo = 11
					and a.ISOPvMatIPI_Flag = 'A'
					and a.ISOPvMatIPI_NatOperacaoCod = '51'
				union all
					select 2 as seq, ISOPvClassF_AliqIPI as IPI from isopvclassificacaofiscal a
					where
						a.ISOPvClassF_Codigo = ffi.ISOPrdDadF_CodClassFiscal
						and a.ISOPvClassF_Flag = 'A'
						and a.ISOPvClassF_InicioVigencia =
							(select max(ISOPvClassF_InicioVigencia) from isopvclassificacaofiscal b
								where
									a.ISOPvClassF_Codigo = b.ISOPvClassF_Codigo
									and b.ISOPvClassF_Flag = 'A')

				) as AliquotaIPI order by seq
) as aliquotaIPI,
ISNULL((select isopvmaticms_aliqcargamaxima from isopvmatrizicms w
			where w.isopvmaticms_uforigem = fst.isopvmatsubst_uforigem
			and w.isopvmaticms_ufdestino = fst.isopvmatsubst_ufdestino
			and w.isopvmaticms_agrupfiscalcod = fst.isopvmatsubst_agrupfiscalcod
			and w.isopvmaticms_catfiscalcod = fst.isopvmatsubst_categfiscalcod
			and w.isopvmaticms_natoperacod = '51'
			and w.isopvmaticms_prdorigemcod = icmsINTERNO.ISOPvMatICMS_PrdOrigemCod -- 1
			and w.isopvmaticms_destinacaocod = 'S'
			and w.isopvmaticms_iniciovigencia = (select max(a.isopvmaticms_iniciovigencia) from isopvmatrizicms as a where w.isopvmaticms_uforigem = a.isopvmaticms_uforigem and w.isopvmaticms_ufdestino = a.isopvmaticms_ufdestino and w.isopvmaticms_agrupfiscalcod = a.isopvmaticms_agrupfiscalcod and w.isopvmaticms_catfiscalcod = a.isopvmaticms_catfiscalcod and w.isopvmaticms_natoperacod = a.isopvmaticms_natoperacod and w.isopvmaticms_prdorigemcod = a.isopvmaticms_prdorigemcod and a.isopvmaticms_flag = 'A' )),0)
isopvmaticms_aliqcargamaxima,
icmsINTERNO.ISOPvMatICMS_PrdOrigemCod,
fst.isopvmatsubst_percmarlucrofix,
fst.isopvmatsubst_fatormultipbc,
fst.isopvmatsubst_aliqicmsdif,
case when fti.isopvicms_substtributaria = 'S'
	then isnull(
			((100 +

(select top 1 IPI from (
	select 1 as seq, ISOPvMatIPI_AliquotaIPI as IPI from isopvmatrizipi a
		where
			a.ISOPvMatIPI_InicioVigencia =
				(select max(b.ISOPvMatIPI_InicioVigencia) from isopvmatrizipi b
					where
					a.ISOEmp_Codigo = b.ISOEmp_Codigo
					and a.ISOPvMatIPI_AgrupFiscalCod = b.ISOPvMatIPI_AgrupFiscalCod
					and a.ISOPvMatIPI_EspecieCod = b.ISOPvMatIPI_EspecieCod
					and a.ISOPvMatIPI_PrdOrigemCod = b.ISOPvMatIPI_PrdOrigemCod
					and a.ISOPvMatIPI_DestinacaoCod = b.ISOPvMatIPI_DestinacaoCod
					and a.ISOPvMatIPI_NatOperacaoCod = b.ISOPvMatIPI_NatOperacaoCod
					and a.ISOPvMatIPI_CategFiscalCod = b.ISOPvMatIPI_CategFiscalCod
					and b.ISOPvMatIPI_Flag = 'A')
					and a.ISOEmp_Codigo = ffi.ISOEmp_Codigo
					and a.ISOPvMatIPI_AgrupFiscalCod = ffi.ISOPrdDadF_CodAgrupFiscal
					and a.ISOPvMatIPI_EspecieCod = case when ffi.ISOPrdDadF_EspecieCod = '0' then '' else ffi.ISOPrdDadF_EspecieCod end
					and a.ISOPvMatIPI_PrdOrigemCod = ffi.ISOPrdDadF_CodOrigem
					and a.ISOPvMatIPI_DestinacaoCod = ffi.ISOPrdDadF_CodDestinacao
					and a.ISOPvMatIPI_CategFiscalCod = icmsINTERNO.ISOPvMatICMS_CatFiscalCod
					and a.isoemp_codigo = 11
					and a.ISOPvMatIPI_Flag = 'A'
					and a.ISOPvMatIPI_NatOperacaoCod = '51'
				union all
					select 2 as seq, ISOPvClassF_AliqIPI as IPI from isopvclassificacaofiscal a
					where
						a.ISOPvClassF_Codigo = ffi.ISOPrdDadF_CodClassFiscal
						and a.ISOPvClassF_Flag = 'A'
						and a.ISOPvClassF_InicioVigencia =
							(select max(ISOPvClassF_InicioVigencia) from isopvclassificacaofiscal b
								where
									a.ISOPvClassF_Codigo = b.ISOPvClassF_Codigo
									and b.ISOPvClassF_Flag = 'A')

				) as AliquotaIPI order by seq
)

			)*

			(1+(fst.isopvmatsubst_percmarlucrofix/100))) *
			fst.isopvmatsubst_fatormultipbc *
			(fst.isopvmatsubst_aliqicmsdif /100) -
			((select isopvmaticms_aliqcargamaxima from isopvmatrizicms w where w.isopvmaticms_uforigem = fst.isopvmatsubst_uforigem and w.isopvmaticms_ufdestino = fst.isopvmatsubst_ufdestino and w.isopvmaticms_agrupfiscalcod = fst.isopvmatsubst_agrupfiscalcod and w.isopvmaticms_catfiscalcod = fst.isopvmatsubst_categfiscalcod and w.isopvmaticms_natoperacod = '51' and w.isopvmaticms_prdorigemcod = icmsINTERNO.ISOPvMatICMS_PrdOrigemCod and w.isopvmaticms_destinacaocod = 'S' and w.isopvmaticms_flag = 'A' and w.isopvmaticms_iniciovigencia = (select max(a.isopvmaticms_iniciovigencia) from isopvmatrizicms as a where w.isopvmaticms_uforigem = a.isopvmaticms_uforigem and w.isopvmaticms_ufdestino = a.isopvmaticms_ufdestino and w.isopvmaticms_agrupfiscalcod = a.isopvmaticms_agrupfiscalcod and w.isopvmaticms_catfiscalcod = a.isopvmaticms_catfiscalcod and w.isopvmaticms_natoperacod = a.isopvmaticms_natoperacod and w.isopvmaticms_prdorigemcod = a.isopvmaticms_prdorigemcod and a.isopvmaticms_flag = 'A' ))/100)
		* 100,0)
	else 0
end as perc_st,
ffi.ISOPrdDadF_CodClassFiscal,
case when isoprd_unidade <> 'CX'
	then (select isoprdundfatc_unddestino from ISOPRDUNDFATORCONVERSAO fator where fator.isoemp_codigo = prd.isoemp_codigo and fator.isoemp_codigo = 11 and fator.ISOPrdUndFatC_PrdCodigo = prd.isoprd_codigo and fator.ISOPrdUndFatC_UndOrigem = prd.isoprd_unidade and fator.ISOPrdUndFatC_UndDestino = 'CX')
	else isoprd_unidade
end as unidade,
(select top 1 IPI from (
	select 1 as seq, ISOPvMatIPI_AliquotaIPI as IPI from isopvmatrizipi a
		where
			a.ISOPvMatIPI_InicioVigencia =
				(select max(b.ISOPvMatIPI_InicioVigencia) from isopvmatrizipi b
					where
					a.ISOEmp_Codigo = b.ISOEmp_Codigo
					and a.ISOPvMatIPI_AgrupFiscalCod = b.ISOPvMatIPI_AgrupFiscalCod
					and a.ISOPvMatIPI_EspecieCod = b.ISOPvMatIPI_EspecieCod
					and a.ISOPvMatIPI_PrdOrigemCod = b.ISOPvMatIPI_PrdOrigemCod
					and a.ISOPvMatIPI_DestinacaoCod = b.ISOPvMatIPI_DestinacaoCod
					and a.ISOPvMatIPI_NatOperacaoCod = b.ISOPvMatIPI_NatOperacaoCod
					and a.ISOPvMatIPI_CategFiscalCod = b.ISOPvMatIPI_CategFiscalCod
					and b.ISOPvMatIPI_Flag = 'A')
					and a.ISOEmp_Codigo = ffi.ISOEmp_Codigo
					and a.ISOPvMatIPI_AgrupFiscalCod = ffi.ISOPrdDadF_CodAgrupFiscal
					and a.ISOPvMatIPI_EspecieCod = case when ffi.ISOPrdDadF_EspecieCod = '0' then '' else ffi.ISOPrdDadF_EspecieCod end
					and a.ISOPvMatIPI_PrdOrigemCod = ffi.ISOPrdDadF_CodOrigem
					and a.ISOPvMatIPI_DestinacaoCod = ffi.ISOPrdDadF_CodDestinacao
					and a.ISOPvMatIPI_CategFiscalCod = icmsINTERNO.ISOPvMatICMS_CatFiscalCod
					and a.isoemp_codigo = 11
					and a.ISOPvMatIPI_Flag = 'A'
					and a.ISOPvMatIPI_NatOperacaoCod = '51'
				union all
					select 2 as seq, ISOPvClassF_AliqIPI as IPI from isopvclassificacaofiscal a
					where
						a.ISOPvClassF_Codigo = ffi.ISOPrdDadF_CodClassFiscal
						and a.ISOPvClassF_Flag = 'A'
						and a.ISOPvClassF_InicioVigencia =
							(select max(ISOPvClassF_InicioVigencia) from isopvclassificacaofiscal b
								where
									a.ISOPvClassF_Codigo = b.ISOPvClassF_Codigo
									and b.ISOPvClassF_Flag = 'A')

				) as AliquotaIPI order by seq
) as perc_ipi,
substring(esp.isopvprel_chave,16,4) as tabela,
(select top 1 classe.isolin_codigo from isolinha as classe, isoprdlinha as plinha
		where plinha.isoemp_codigo = classe.isoemp_codigo
		and plinha.isolin_codigo = classe.isolin_codigo
		and prd.isoemp_codigo = plinha.isoemp_codigo
		and prd.isoprd_codigo = plinha.isoprd_codigo
		and classe.isolintip_codigo = 1
		and classe.isolin_flag = 'A')
 as CodClasse,
(select top 1 isolin_descricao from isolinha as classe, isoprdlinha as plinha
		where plinha.isoemp_codigo = classe.isoemp_codigo
		and plinha.isolin_codigo = classe.isolin_codigo
		and prd.isoemp_codigo = plinha.isoemp_codigo
		and prd.isoprd_codigo = plinha.isoprd_codigo
		and classe.isolintip_codigo = 1
		and classe.isolin_flag = 'A')
 as classe,
(select top 1 familia.isolin_codigo from isolinha as familia, isoprdlinha as plinha
		where plinha.isoemp_codigo = familia.isoemp_codigo
		and plinha.isolin_codigo = familia.isolin_codigo
		and prd.isoemp_codigo = plinha.isoemp_codigo
		and prd.isoprd_codigo = plinha.isoprd_codigo
		and familia.isolintip_codigo = 2
		and familia.isolin_flag = 'A')
 as CodFamilia,
(select top 1 isolin_descricao from isolinha as familia, isoprdlinha as plinha
		where plinha.isoemp_codigo = familia.isoemp_codigo
		and plinha.isolin_codigo = familia.isolin_codigo
		and prd.isoemp_codigo = plinha.isoemp_codigo
		and prd.isoprd_codigo = plinha.isoprd_codigo
		and familia.isolintip_codigo = 2
		and familia.isolin_flag = 'A')
 as familia,
case when icmsINTERNO.ISOPvMatICMS_AliquotaICMS is null
	then 0
	else
		case when isoprd_unidade <> 'CX'
			then esp.ISOPvPreL_preco * isnull((select top 1 ISOPrdUndFatC_FatorConversao from ISOPRDUNDFATORCONVERSAO fator where fator.isoemp_codigo = prd.isoemp_codigo and fator.isoemp_codigo = 11 and fator.ISOPrdUndFatC_PrdCodigo = prd.isoprd_codigo and fator.ISOPrdUndFatC_UndOrigem = prd.isoprd_unidade and fator.ISOPrdUndFatC_UndDestino = 'CX'),1)
			else esp.ISOPvPreL_preco
		end
end
as PrecoESP
from isoproduto as prd
	inner join isopvprecolista as esp
		on prd.isoprd_codigo = substring(esp.isopvprel_chave,1,6)
	inner join isoprddadofiscal as ffi
		on prd.isoprd_codigo = ffi.isoprddadf_prdcodigo
		and isoprddadf_flag = 'A'
	inner join isoprdattvalues as dad_comp
		on prd.isoemp_codigo = dad_comp.isoemp_codigo
		and prd.isoprd_codigo = dad_comp.isoprd_codigo
		and dad_comp.isoemp_codigo = 11
		and dad_comp.isoprdattid = 9
		and dad_comp.isoprdattvalueid = 1
	left join isoestado UFOrigem
		on UFOrigem.ISOPais_Codigo = 1
	left join isoestado UFDestino
		on UFDestino.ISOPais_Codigo = 1
	left join isopvmatrizicms icmsINTERNO
		on ffi.ISOPrdDadF_CodAgrupFiscal = icmsINTERNO.ISOPvMatICMS_AgrupFiscalCod
		and	(
				(icmsINTERNO.ISOPvMatICMS_PrdOrigemCod = (select top 1 isopvprdestab_origemcod from ISOPVPRDESTABELECIMENTO x, ISOPvEstabelecimento y
														where x.isoemp_codigo = prd.isoemp_codigo
															and x.isoprd_codigo = prd.isoprd_codigo
															and x.isoemp_codigo = y.isoemp_codigo
															and x.isopvestab_codigo = y.isopvestab_codigo
															and y.isopvestab_uf = icmsINTERNO.isopvmaticms_uforigem

															-- chamado 39256
--															and (((x.isopvestab_codigo = 9) and y.isopvestab_uf = 'SP') or ((x.isopvestab_codigo = 35) and y.isopvestab_uf = 'SC') )

															--and ( (1=1 and y.isopvestab_uf not in ('SP','SC')) or ((x.isopvestab_codigo = 9) and y.isopvestab_uf = 'SP')
															--		or ((x.isopvestab_codigo = 35) and y.isopvestab_uf = 'SC') )

															and isopvestab_flag = 'A'
															and isopvprdestab_flag = 'A') and
				((select count(*) from ISOPVPRDESTABELECIMENTO x, ISOPvEstabelecimento y where x.isoemp_codigo = prd.isoemp_codigo and x.isoprd_codigo = prd.isoprd_codigo and x.isoemp_codigo = y.isoemp_codigo and x.isopvestab_codigo = y.isopvestab_codigo and y.isopvestab_uf = icmsINTERNO.isopvmaticms_uforigem and isopvestab_flag = 'A' and isopvprdestab_flag = 'A') > 0))


				or (icmsINTERNO.ISOPvMatICMS_PrdOrigemCod = ffi.ISOPrdDadF_CodOrigem and
				((select count(*) from ISOPVPRDESTABELECIMENTO x, ISOPvEstabelecimento y where x.isoemp_codigo = prd.isoemp_codigo and x.isoprd_codigo = prd.isoprd_codigo and x.isoemp_codigo = y.isoemp_codigo and x.isopvestab_codigo = y.isopvestab_codigo and y.isopvestab_uf = icmsINTERNO.isopvmaticms_uforigem and isopvestab_flag = 'A' and isopvprdestab_flag = 'A') = 0))
			)

		and ISOPvMatICMS_Flag = 'A'

		and icmsINTERNO.isopvmaticms_uforigem = UFOrigem.ISOEst_Sigla
		and icmsINTERNO.isopvmaticms_ufdestino  = UFDestino.ISOEst_Sigla
and icmsINTERNO.ISOPvMatICMS_CatFiscalCod = 'COM'
and icmsINTERNO.ISOPvMatICMS_NatOperaCod = '51'
and icmsINTERNO.ISOPvMatICMS_EspecieCod = ''
and icmsINTERNO.ISOPvMatICMS_DestinacaoCod = 'S'
and icmsINTERNO.ISOPvMatICMS_InicioVigencia = (select max(x.ISOPvMatICMS_InicioVigencia) from isopvmatrizicms x where icmsINTERNO.ISOEmp_Codigo = x.ISOEmp_Codigo and icmsINTERNO.ISOPvMatICMS_UFOrigem = x.ISOPvMatICMS_UFOrigem and icmsINTERNO.ISOPvMatICMS_UFDestino = x.ISOPvMatICMS_UFDestino and icmsINTERNO.ISOPvMatICMS_NatOperaCod = x.ISOPvMatICMS_NatOperaCod and icmsINTERNO.ISOPvMatICMS_AgrupFiscalCod = x.ISOPvMatICMS_AgrupFiscalCod and icmsINTERNO.ISOPvMatICMS_EspecieCod = x.ISOPvMatICMS_EspecieCod and icmsINTERNO.ISOPvMatICMS_CatFiscalCod = x.ISOPvMatICMS_CatFiscalCod and icmsINTERNO.ISOPvMatICMS_PrdOrigemCod = x.ISOPvMatICMS_PrdOrigemCod and icmsINTERNO.ISOPvMatICMS_DestinacaoCod = x.ISOPvMatICMS_DestinacaoCod and x.ISOPvMatICMS_Flag = 'A')

	inner join isopvmatrizicms icmsSP
		on ffi.ISOPrdDadF_CodAgrupFiscal = icmsSP.ISOPvMatICMS_AgrupFiscalCod
		and icmsSP.ISOPvMatICMS_PrdOrigemCod = ffi.ISOPrdDadF_CodOrigem
	left join isopvicms fti
		on icmsInterno.isopvmaticms_tributicmscod = fti.isopvicms_codigo
	left join isopvmatrizsubsttributaria as fst
		on icmsINTERNO.isopvmaticms_uforigem = fst.isopvmatsubst_uforigem
			and icmsINTERNO.isopvmaticms_ufdestino = fst.isopvmatsubst_ufdestino
			and icmsINTERNO.ISOPvMatICMS_AgrupFiscalCod = fst.ISOPvMatSubsT_AgrupFiscalCod
			and icmsINTERNO.ISOPvMatICMS_CatFiscalCod = fst.ISOPvMatSubsT_CategFiscalCod
			and fst.isopvmatsubst_categfiscalcod = 'COM'
			and fst.isopvmatsubst_iniciovigencia = (select max(x.isopvmatsubst_iniciovigencia) from isopvmatrizsubsttributaria as x where fst.isopvmatsubst_uforigem = x.isopvmatsubst_uforigem and fst.isopvmatsubst_ufdestino = x.isopvmatsubst_ufdestino and fst.isopvmatsubst_categfiscalcod = x.isopvmatsubst_categfiscalcod and fst.isopvmatsubst_agrupfiscalcod = x.isopvmatsubst_agrupfiscalcod and x.isopvmatsubst_flag = 'A')
			and fst.isopvmatsubst_uforigem in ('SC', 'SP', 'RJ', 'BA', 'PE', 'CE', 'MG')
where
esp.isopvprel_metodo = 'B'
and esp.isopvprel_datainicio = (select max(z.isopvprel_datainicio) from isopvprecolista as z where esp.isoemp_codigo = z.isoemp_codigo and esp.isopvprel_chave = z.isopvprel_chave and esp.isopvprel_metodo = z.isopvprel_metodo)

-- comentado 04/07/2017 zagoto, não mostrava determinados produtos
and ffi.isoprddadf_iniciovigencia = (select max(y.isoprddadf_iniciovigencia) from isoprddadofiscal as y
		where
			ffi.isoprddadf_prdcodigo = y.isoprddadf_prdcodigo
			and y.ISOPrdDadF_CodAgrupFiscal = icmsINTERNO.ISOPvMatICMS_AgrupFiscalCod
			and ffi.ISOPrdDadF_CodClassFiscal = y.ISOPrdDadF_CodClassFiscal
			and y.ISOPrdDadF_CodOrigem = icmsINTERNO.ISOPvMatICMS_PrdOrigemCod
			and y.ISOPrdDadF_CodDestinacao = icmsINTERNO.ISOPvMatICMS_DestinacaoCod
			and y.isoprddadf_flag = 'A')

and ffi.isoprddadf_iniciovigencia = (select max(y.isoprddadf_iniciovigencia) from isoprddadofiscal as y
		where
			ffi.isoprddadf_prdcodigo = y.isoprddadf_prdcodigo
			and ffi.ISOPrdDadF_CodAgrupFiscal = y.ISOPrdDadF_CodAgrupFiscal
			and ffi.ISOPrdDadF_CodClassFiscal = y.ISOPrdDadF_CodClassFiscal
			and ffi.ISOPrdDadF_CodOrigem = y.ISOPrdDadF_CodOrigem
			and ffi.ISOPrdDadF_CodDestinacao = y.ISOPrdDadF_CodDestinacao
			and y.isoprddadf_flag = 'A')

and icmsSP.ISOPvMatICMS_InicioVigencia = (select max(x.ISOPvMatICMS_InicioVigencia) from isopvmatrizicms x where icmsSP.ISOEmp_Codigo = x.ISOEmp_Codigo and icmsSP.ISOPvMatICMS_UFOrigem = x.ISOPvMatICMS_UFOrigem and icmsSP.ISOPvMatICMS_UFDestino = x.ISOPvMatICMS_UFDestino and icmsSP.ISOPvMatICMS_NatOperaCod = x.ISOPvMatICMS_NatOperaCod and icmsSP.ISOPvMatICMS_AgrupFiscalCod = x.ISOPvMatICMS_AgrupFiscalCod and icmsSP.ISOPvMatICMS_EspecieCod = x.ISOPvMatICMS_EspecieCod and icmsSP.ISOPvMatICMS_CatFiscalCod = x.ISOPvMatICMS_CatFiscalCod and icmsSP.ISOPvMatICMS_PrdOrigemCod = x.ISOPvMatICMS_PrdOrigemCod and icmsSP.ISOPvMatICMS_DestinacaoCod = x.ISOPvMatICMS_DestinacaoCod and x.ISOPvMatICMS_Flag = 'A')
and prd.ISOPrd_Flag = 'A'
and icmsSP.ISOPvMatICMS_UFOrigem = 'SP'
and icmsSP.ISOPvMatICMS_UFDestino = 'SP'
and icmsSP.ISOPvMatICMS_CatFiscalCod = 'COM'
and icmsSP.ISOPvMatICMS_NatOperaCod = '51'
and icmsSP.ISOPvMatICMS_EspecieCod = ''
and icmsSP.ISOPvMatICMS_DestinacaoCod = 'S';


-- dbo.view_tabela_preco_6 source

CREATE VIEW [dbo].[view_tabela_preco_6]
as
select
UFOrigem.ISOEst_Sigla as stufor,
UFDestino.ISOEst_Sigla as stufde,
ffi.isoprddadf_prdcodigo as fiitem,
prd.isoprd_descricao as tvprodsc,
icmsINTERNO.ISOPvMatICMS_AgrupFiscalCod,
fst.isopvmatsubst_agrupfiscalcod as stagfi,
fst.isopvmatsubst_categfiscalcod as stcatf,
case when fti.isopvicms_substtributaria = 'S'
	then isnull((100*(1+(fst.isopvmatsubst_percmarlucrofix/100)))*fst.isopvmatsubst_fatormultipbc,0)
	else 0
end as base_iva,
case when fti.isopvicms_substtributaria = 'S'
	then isnull((100*(1+(fst.isopvmatsubst_percmarlucrofix/100))) * (fst.isopvmatsubst_aliqicmsdif /100),0)
	else 0
end as icms_da_st,
icmsINTERNO.ISOPvMatICMS_AliquotaICMS as ICMS_interno,
--icmsINTERNO.ISOPvMatICMS_FatorMultBCICMS as FatorICMSInterno,
icmsINTERNO.ISOPvMatICMS_FatorMultICMS as FatorICMSInterno,
icmsSP.ISOPvMatICMS_AliquotaICMS as ICMS_SP,
--icmsSP.ISOPvMatICMS_FatorMultBCICMS as FatorICMSSP,
icmsSP.ISOPvMatICMS_FatorMultICMS as FatorICMSSP,
fti.isopvicms_substtributaria,

(select top 1 IPI from (
	select 1 as seq, ISOPvMatIPI_AliquotaIPI as IPI from isopvmatrizipi a
		where
			a.ISOPvMatIPI_InicioVigencia =
				(select max(b.ISOPvMatIPI_InicioVigencia) from isopvmatrizipi b
					where
					a.ISOEmp_Codigo = b.ISOEmp_Codigo
					and a.ISOPvMatIPI_AgrupFiscalCod = b.ISOPvMatIPI_AgrupFiscalCod
					and a.ISOPvMatIPI_EspecieCod = b.ISOPvMatIPI_EspecieCod
					and a.ISOPvMatIPI_PrdOrigemCod = b.ISOPvMatIPI_PrdOrigemCod
					and a.ISOPvMatIPI_DestinacaoCod = b.ISOPvMatIPI_DestinacaoCod
					and a.ISOPvMatIPI_NatOperacaoCod = b.ISOPvMatIPI_NatOperacaoCod
					and a.ISOPvMatIPI_CategFiscalCod = b.ISOPvMatIPI_CategFiscalCod
					and b.ISOPvMatIPI_Flag = 'A')
					and a.ISOEmp_Codigo = ffi.ISOEmp_Codigo
					and a.ISOPvMatIPI_AgrupFiscalCod = ffi.ISOPrdDadF_CodAgrupFiscal
					and a.ISOPvMatIPI_EspecieCod = case when ffi.ISOPrdDadF_EspecieCod = '0' then '' else ffi.ISOPrdDadF_EspecieCod end
					and a.ISOPvMatIPI_PrdOrigemCod = ffi.ISOPrdDadF_CodOrigem
					and a.ISOPvMatIPI_DestinacaoCod = ffi.ISOPrdDadF_CodDestinacao
					and a.ISOPvMatIPI_CategFiscalCod = icmsINTERNO.ISOPvMatICMS_CatFiscalCod
					and a.isoemp_codigo = 11
					and a.ISOPvMatIPI_Flag = 'A'
					and a.ISOPvMatIPI_NatOperacaoCod = '51'
				union all
					select 2 as seq, ISOPvClassF_AliqIPI as IPI from isopvclassificacaofiscal a
					where
						a.ISOPvClassF_Codigo = ffi.ISOPrdDadF_CodClassFiscal
						and a.ISOPvClassF_Flag = 'A'
						and a.ISOPvClassF_InicioVigencia =
							(select max(ISOPvClassF_InicioVigencia) from isopvclassificacaofiscal b
								where
									a.ISOPvClassF_Codigo = b.ISOPvClassF_Codigo
									and b.ISOPvClassF_Flag = 'A')

				) as AliquotaIPI order by seq
) as aliquotaIPI,
ISNULL((select isopvmaticms_aliqcargamaxima from isopvmatrizicms w
			where w.isopvmaticms_uforigem = fst.isopvmatsubst_uforigem
			and w.isopvmaticms_ufdestino = fst.isopvmatsubst_ufdestino
			and w.isopvmaticms_agrupfiscalcod = fst.isopvmatsubst_agrupfiscalcod
			and w.isopvmaticms_catfiscalcod = fst.isopvmatsubst_categfiscalcod
			and w.isopvmaticms_natoperacod = '51'
			and w.isopvmaticms_prdorigemcod = icmsINTERNO.ISOPvMatICMS_PrdOrigemCod -- 1
			and w.isopvmaticms_destinacaocod = 'S'
			and w.isopvmaticms_iniciovigencia = (select max(a.isopvmaticms_iniciovigencia) from isopvmatrizicms as a where w.isopvmaticms_uforigem = a.isopvmaticms_uforigem and w.isopvmaticms_ufdestino = a.isopvmaticms_ufdestino and w.isopvmaticms_agrupfiscalcod = a.isopvmaticms_agrupfiscalcod and w.isopvmaticms_catfiscalcod = a.isopvmaticms_catfiscalcod and w.isopvmaticms_natoperacod = a.isopvmaticms_natoperacod and w.isopvmaticms_prdorigemcod = a.isopvmaticms_prdorigemcod and a.isopvmaticms_flag = 'A' )),0)
isopvmaticms_aliqcargamaxima,
icmsINTERNO.ISOPvMatICMS_PrdOrigemCod,
fst.isopvmatsubst_percmarlucrofix,
fst.isopvmatsubst_fatormultipbc,
fst.isopvmatsubst_aliqicmsdif,
case when fti.isopvicms_substtributaria = 'S'
	then isnull(
			((100 +

(select top 1 IPI from (
	select 1 as seq, ISOPvMatIPI_AliquotaIPI as IPI from isopvmatrizipi a
		where
			a.ISOPvMatIPI_InicioVigencia =
				(select max(b.ISOPvMatIPI_InicioVigencia) from isopvmatrizipi b
					where
					a.ISOEmp_Codigo = b.ISOEmp_Codigo
					and a.ISOPvMatIPI_AgrupFiscalCod = b.ISOPvMatIPI_AgrupFiscalCod
					and a.ISOPvMatIPI_EspecieCod = b.ISOPvMatIPI_EspecieCod
					and a.ISOPvMatIPI_PrdOrigemCod = b.ISOPvMatIPI_PrdOrigemCod
					and a.ISOPvMatIPI_DestinacaoCod = b.ISOPvMatIPI_DestinacaoCod
					and a.ISOPvMatIPI_NatOperacaoCod = b.ISOPvMatIPI_NatOperacaoCod
					and a.ISOPvMatIPI_CategFiscalCod = b.ISOPvMatIPI_CategFiscalCod
					and b.ISOPvMatIPI_Flag = 'A')
					and a.ISOEmp_Codigo = ffi.ISOEmp_Codigo
					and a.ISOPvMatIPI_AgrupFiscalCod = ffi.ISOPrdDadF_CodAgrupFiscal
					and a.ISOPvMatIPI_EspecieCod = case when ffi.ISOPrdDadF_EspecieCod = '0' then '' else ffi.ISOPrdDadF_EspecieCod end
					and a.ISOPvMatIPI_PrdOrigemCod = ffi.ISOPrdDadF_CodOrigem
					and a.ISOPvMatIPI_DestinacaoCod = ffi.ISOPrdDadF_CodDestinacao
					and a.ISOPvMatIPI_CategFiscalCod = icmsINTERNO.ISOPvMatICMS_CatFiscalCod
					and a.isoemp_codigo = 11
					and a.ISOPvMatIPI_Flag = 'A'
					and a.ISOPvMatIPI_NatOperacaoCod = '51'
				union all
					select 2 as seq, ISOPvClassF_AliqIPI as IPI from isopvclassificacaofiscal a
					where
						a.ISOPvClassF_Codigo = ffi.ISOPrdDadF_CodClassFiscal
						and a.ISOPvClassF_Flag = 'A'
						and a.ISOPvClassF_InicioVigencia =
							(select max(ISOPvClassF_InicioVigencia) from isopvclassificacaofiscal b
								where
									a.ISOPvClassF_Codigo = b.ISOPvClassF_Codigo
									and b.ISOPvClassF_Flag = 'A')

				) as AliquotaIPI order by seq
)

			)*

			(1+(fst.isopvmatsubst_percmarlucrofix/100))) *
			fst.isopvmatsubst_fatormultipbc *
			(fst.isopvmatsubst_aliqicmsdif /100) -
			((select isopvmaticms_aliqcargamaxima from isopvmatrizicms w where w.isopvmaticms_uforigem = fst.isopvmatsubst_uforigem and w.isopvmaticms_ufdestino = fst.isopvmatsubst_ufdestino and w.isopvmaticms_agrupfiscalcod = fst.isopvmatsubst_agrupfiscalcod and w.isopvmaticms_catfiscalcod = fst.isopvmatsubst_categfiscalcod and w.isopvmaticms_natoperacod = '51' and w.isopvmaticms_prdorigemcod = icmsINTERNO.ISOPvMatICMS_PrdOrigemCod and w.isopvmaticms_destinacaocod = 'S' and w.isopvmaticms_flag = 'A' and w.isopvmaticms_iniciovigencia = (select max(a.isopvmaticms_iniciovigencia) from isopvmatrizicms as a where w.isopvmaticms_uforigem = a.isopvmaticms_uforigem and w.isopvmaticms_ufdestino = a.isopvmaticms_ufdestino and w.isopvmaticms_agrupfiscalcod = a.isopvmaticms_agrupfiscalcod and w.isopvmaticms_catfiscalcod = a.isopvmaticms_catfiscalcod and w.isopvmaticms_natoperacod = a.isopvmaticms_natoperacod and w.isopvmaticms_prdorigemcod = a.isopvmaticms_prdorigemcod and a.isopvmaticms_flag = 'A' ))/100)
		* 100,0)
	else 0
end as perc_st,
ffi.ISOPrdDadF_CodClassFiscal,
case when isoprd_unidade <> 'CX'
	then (select isoprdundfatc_unddestino from ISOPRDUNDFATORCONVERSAO fator where fator.isoemp_codigo = prd.isoemp_codigo and fator.isoemp_codigo = 11 and fator.ISOPrdUndFatC_PrdCodigo = prd.isoprd_codigo and fator.ISOPrdUndFatC_UndOrigem = prd.isoprd_unidade and fator.ISOPrdUndFatC_UndDestino = 'CX')
	else isoprd_unidade
end as unidade,
(select top 1 IPI from (
	select 1 as seq, ISOPvMatIPI_AliquotaIPI as IPI from isopvmatrizipi a
		where
			a.ISOPvMatIPI_InicioVigencia =
				(select max(b.ISOPvMatIPI_InicioVigencia) from isopvmatrizipi b
					where
					a.ISOEmp_Codigo = b.ISOEmp_Codigo
					and a.ISOPvMatIPI_AgrupFiscalCod = b.ISOPvMatIPI_AgrupFiscalCod
					and a.ISOPvMatIPI_EspecieCod = b.ISOPvMatIPI_EspecieCod
					and a.ISOPvMatIPI_PrdOrigemCod = b.ISOPvMatIPI_PrdOrigemCod
					and a.ISOPvMatIPI_DestinacaoCod = b.ISOPvMatIPI_DestinacaoCod
					and a.ISOPvMatIPI_NatOperacaoCod = b.ISOPvMatIPI_NatOperacaoCod
					and a.ISOPvMatIPI_CategFiscalCod = b.ISOPvMatIPI_CategFiscalCod
					and b.ISOPvMatIPI_Flag = 'A')
					and a.ISOEmp_Codigo = ffi.ISOEmp_Codigo
					and a.ISOPvMatIPI_AgrupFiscalCod = ffi.ISOPrdDadF_CodAgrupFiscal
					and a.ISOPvMatIPI_EspecieCod = case when ffi.ISOPrdDadF_EspecieCod = '0' then '' else ffi.ISOPrdDadF_EspecieCod end
					and a.ISOPvMatIPI_PrdOrigemCod = ffi.ISOPrdDadF_CodOrigem
					and a.ISOPvMatIPI_DestinacaoCod = ffi.ISOPrdDadF_CodDestinacao
					and a.ISOPvMatIPI_CategFiscalCod = icmsINTERNO.ISOPvMatICMS_CatFiscalCod
					and a.isoemp_codigo = 11
					and a.ISOPvMatIPI_Flag = 'A'
					and a.ISOPvMatIPI_NatOperacaoCod = '51'
				union all
					select 2 as seq, ISOPvClassF_AliqIPI as IPI from isopvclassificacaofiscal a
					where
						a.ISOPvClassF_Codigo = ffi.ISOPrdDadF_CodClassFiscal
						and a.ISOPvClassF_Flag = 'A'
						and a.ISOPvClassF_InicioVigencia =
							(select max(ISOPvClassF_InicioVigencia) from isopvclassificacaofiscal b
								where
									a.ISOPvClassF_Codigo = b.ISOPvClassF_Codigo
									and b.ISOPvClassF_Flag = 'A')

				) as AliquotaIPI order by seq
) as perc_ipi,
substring(esp.isopvprel_chave,16,4) as tabela,
(select top 1 classe.isolin_codigo from isolinha as classe, isoprdlinha as plinha
		where plinha.isoemp_codigo = classe.isoemp_codigo
		and plinha.isolin_codigo = classe.isolin_codigo
		and prd.isoemp_codigo = plinha.isoemp_codigo
		and prd.isoprd_codigo = plinha.isoprd_codigo
		and classe.isolintip_codigo = 1
		and classe.isolin_flag = 'A')
 as CodClasse,
(select top 1 isolin_descricao from isolinha as classe, isoprdlinha as plinha
		where plinha.isoemp_codigo = classe.isoemp_codigo
		and plinha.isolin_codigo = classe.isolin_codigo
		and prd.isoemp_codigo = plinha.isoemp_codigo
		and prd.isoprd_codigo = plinha.isoprd_codigo
		and classe.isolintip_codigo = 1
		and classe.isolin_flag = 'A')
 as classe,
(select top 1 familia.isolin_codigo from isolinha as familia, isoprdlinha as plinha
		where plinha.isoemp_codigo = familia.isoemp_codigo
		and plinha.isolin_codigo = familia.isolin_codigo
		and prd.isoemp_codigo = plinha.isoemp_codigo
		and prd.isoprd_codigo = plinha.isoprd_codigo
		and familia.isolintip_codigo = 2
		and familia.isolin_flag = 'A')
 as CodFamilia,
(select top 1 isolin_descricao from isolinha as familia, isoprdlinha as plinha
		where plinha.isoemp_codigo = familia.isoemp_codigo
		and plinha.isolin_codigo = familia.isolin_codigo
		and prd.isoemp_codigo = plinha.isoemp_codigo
		and prd.isoprd_codigo = plinha.isoprd_codigo
		and familia.isolintip_codigo = 2
		and familia.isolin_flag = 'A')
 as familia,
case when icmsINTERNO.ISOPvMatICMS_AliquotaICMS is null
	then 0
	else
		case when isoprd_unidade <> 'CX'
			then esp.ISOPvPreL_preco * isnull((select top 1 ISOPrdUndFatC_FatorConversao from ISOPRDUNDFATORCONVERSAO fator where fator.isoemp_codigo = prd.isoemp_codigo and fator.isoemp_codigo = 11 and fator.ISOPrdUndFatC_PrdCodigo = prd.isoprd_codigo and fator.ISOPrdUndFatC_UndOrigem = prd.isoprd_unidade and fator.ISOPrdUndFatC_UndDestino = 'CX'),1)
			else esp.ISOPvPreL_preco
		end
end
as PrecoESP

from isoproduto as prd
	inner join isopvprecolista as esp
		on prd.isoprd_codigo = substring(esp.isopvprel_chave,1,6)
	inner join isoprddadofiscal as ffi
		on prd.isoprd_codigo = ffi.isoprddadf_prdcodigo
		and isoprddadf_flag = 'A'
	inner join isoprdattvalues as dad_comp
		on prd.isoemp_codigo = dad_comp.isoemp_codigo
		and prd.isoprd_codigo = dad_comp.isoprd_codigo
		and dad_comp.isoemp_codigo = 11
		and dad_comp.isoprdattid = 9
		and dad_comp.isoprdattvalueid = 1
	left join isoestado UFOrigem
		on UFOrigem.ISOPais_Codigo = 1
	left join isoestado UFDestino
		on UFDestino.ISOPais_Codigo = 1
	left join isopvmatrizicms icmsINTERNO
		on ffi.ISOPrdDadF_CodAgrupFiscal = icmsINTERNO.ISOPvMatICMS_AgrupFiscalCod
		and	(
				(icmsINTERNO.ISOPvMatICMS_PrdOrigemCod = (select top 1 isopvprdestab_origemcod from ISOPVPRDESTABELECIMENTO x, ISOPvEstabelecimento y
														where x.isoemp_codigo = prd.isoemp_codigo
															and x.isoprd_codigo = prd.isoprd_codigo
															and x.isoemp_codigo = y.isoemp_codigo
															and x.isopvestab_codigo = y.isopvestab_codigo
															and y.isopvestab_uf = icmsINTERNO.isopvmaticms_uforigem

															-- chamado 39256
--															and (((x.isopvestab_codigo = 9) and y.isopvestab_uf = 'SP') or ((x.isopvestab_codigo = 35) and y.isopvestab_uf = 'SC') )

															--and ( (1=1 and y.isopvestab_uf not in ('SP','SC')) or ((x.isopvestab_codigo = 9) and y.isopvestab_uf = 'SP')
															--		or ((x.isopvestab_codigo = 35) and y.isopvestab_uf = 'SC') )

															and isopvestab_flag = 'A'
															and isopvprdestab_flag = 'A') and
				((select count(*) from ISOPVPRDESTABELECIMENTO x, ISOPvEstabelecimento y where x.isoemp_codigo = prd.isoemp_codigo and x.isoprd_codigo = prd.isoprd_codigo and x.isoemp_codigo = y.isoemp_codigo and x.isopvestab_codigo = y.isopvestab_codigo and y.isopvestab_uf = icmsINTERNO.isopvmaticms_uforigem and isopvestab_flag = 'A' and isopvprdestab_flag = 'A') > 0))


				or (icmsINTERNO.ISOPvMatICMS_PrdOrigemCod = ffi.ISOPrdDadF_CodOrigem and
				((select count(*) from ISOPVPRDESTABELECIMENTO x, ISOPvEstabelecimento y where x.isoemp_codigo = prd.isoemp_codigo and x.isoprd_codigo = prd.isoprd_codigo and x.isoemp_codigo = y.isoemp_codigo and x.isopvestab_codigo = y.isopvestab_codigo and y.isopvestab_uf = icmsINTERNO.isopvmaticms_uforigem and isopvestab_flag = 'A' and isopvprdestab_flag = 'A') = 0))
			)

		and ISOPvMatICMS_Flag = 'A'

		and icmsINTERNO.isopvmaticms_uforigem = UFOrigem.ISOEst_Sigla
		and icmsINTERNO.isopvmaticms_ufdestino  = UFDestino.ISOEst_Sigla
and icmsINTERNO.ISOPvMatICMS_CatFiscalCod = 'COM'
and icmsINTERNO.ISOPvMatICMS_NatOperaCod = '51'
and icmsINTERNO.ISOPvMatICMS_EspecieCod = ''
and icmsINTERNO.ISOPvMatICMS_DestinacaoCod = 'S'
and icmsINTERNO.ISOPvMatICMS_InicioVigencia = (select max(x.ISOPvMatICMS_InicioVigencia) from isopvmatrizicms x where icmsINTERNO.ISOEmp_Codigo = x.ISOEmp_Codigo and icmsINTERNO.ISOPvMatICMS_UFOrigem = x.ISOPvMatICMS_UFOrigem and icmsINTERNO.ISOPvMatICMS_UFDestino = x.ISOPvMatICMS_UFDestino and icmsINTERNO.ISOPvMatICMS_NatOperaCod = x.ISOPvMatICMS_NatOperaCod and icmsINTERNO.ISOPvMatICMS_AgrupFiscalCod = x.ISOPvMatICMS_AgrupFiscalCod and icmsINTERNO.ISOPvMatICMS_EspecieCod = x.ISOPvMatICMS_EspecieCod and icmsINTERNO.ISOPvMatICMS_CatFiscalCod = x.ISOPvMatICMS_CatFiscalCod and icmsINTERNO.ISOPvMatICMS_PrdOrigemCod = x.ISOPvMatICMS_PrdOrigemCod and icmsINTERNO.ISOPvMatICMS_DestinacaoCod = x.ISOPvMatICMS_DestinacaoCod and x.ISOPvMatICMS_Flag = 'A')

	inner join isopvmatrizicms icmsSP
		on ffi.ISOPrdDadF_CodAgrupFiscal = icmsSP.ISOPvMatICMS_AgrupFiscalCod
		and icmsSP.ISOPvMatICMS_PrdOrigemCod = ffi.ISOPrdDadF_CodOrigem
	left join isopvicms fti
		on icmsInterno.isopvmaticms_tributicmscod = fti.isopvicms_codigo
	left join isopvmatrizsubsttributaria as fst
		on icmsINTERNO.isopvmaticms_uforigem = fst.isopvmatsubst_uforigem
			and icmsINTERNO.isopvmaticms_ufdestino = fst.isopvmatsubst_ufdestino
			and icmsINTERNO.ISOPvMatICMS_AgrupFiscalCod = fst.ISOPvMatSubsT_AgrupFiscalCod
			and icmsINTERNO.ISOPvMatICMS_CatFiscalCod = fst.ISOPvMatSubsT_CategFiscalCod
			and fst.isopvmatsubst_categfiscalcod = 'COM'
			and fst.isopvmatsubst_iniciovigencia = (select max(x.isopvmatsubst_iniciovigencia) from isopvmatrizsubsttributaria as x where fst.isopvmatsubst_uforigem = x.isopvmatsubst_uforigem and fst.isopvmatsubst_ufdestino = x.isopvmatsubst_ufdestino and fst.isopvmatsubst_categfiscalcod = x.isopvmatsubst_categfiscalcod and fst.isopvmatsubst_agrupfiscalcod = x.isopvmatsubst_agrupfiscalcod and x.isopvmatsubst_flag = 'A')
			and fst.isopvmatsubst_uforigem in ('SC', 'SP', 'RJ', 'BA', 'PE', 'CE', 'MG')
where
esp.isopvprel_metodo = 'B'
and esp.isopvprel_datainicio = (select max(z.isopvprel_datainicio) from isopvprecolista as z where esp.isoemp_codigo = z.isoemp_codigo and esp.isopvprel_chave = z.isopvprel_chave and esp.isopvprel_metodo = z.isopvprel_metodo)

-- comentado 04/07/2017 zagoto, não mostrava determinados produtos
and ((ffi.isoprddadf_iniciovigencia = (select max(y.isoprddadf_iniciovigencia) from isoprddadofiscal as y
		where
			ffi.isoprddadf_prdcodigo = y.isoprddadf_prdcodigo
			and y.ISOPrdDadF_CodAgrupFiscal = icmsINTERNO.ISOPvMatICMS_AgrupFiscalCod
			and ffi.ISOPrdDadF_CodClassFiscal = y.ISOPrdDadF_CodClassFiscal
			and y.ISOPrdDadF_CodOrigem = icmsINTERNO.ISOPvMatICMS_PrdOrigemCod
			and y.ISOPrdDadF_CodDestinacao = icmsINTERNO.ISOPvMatICMS_DestinacaoCod
			and y.isoprddadf_flag = 'A')) and
			((select count(*) from ISOPVPRDESTABELECIMENTO x, ISOPvEstabelecimento y where x.isoemp_codigo = prd.isoemp_codigo and x.isoprd_codigo = prd.isoprd_codigo and x.isoemp_codigo = y.isoemp_codigo and x.isopvestab_codigo = y.isopvestab_codigo and y.isopvestab_uf = icmsINTERNO.isopvmaticms_uforigem and isopvestab_flag = 'A' and isopvprdestab_flag = 'A') = 0)

or ffi.isoprddadf_iniciovigencia = (select max(y.isoprddadf_iniciovigencia) from isoprddadofiscal as y
		where
			ffi.isoprddadf_prdcodigo = y.isoprddadf_prdcodigo
			and ffi.ISOPrdDadF_CodAgrupFiscal = y.ISOPrdDadF_CodAgrupFiscal
			and ffi.ISOPrdDadF_CodClassFiscal = y.ISOPrdDadF_CodClassFiscal
			and ffi.ISOPrdDadF_CodOrigem = y.ISOPrdDadF_CodOrigem
			and ffi.ISOPrdDadF_CodDestinacao = y.ISOPrdDadF_CodDestinacao
			and y.isoprddadf_flag = 'A'))

and icmsSP.ISOPvMatICMS_InicioVigencia = (select max(x.ISOPvMatICMS_InicioVigencia) from isopvmatrizicms x where icmsSP.ISOEmp_Codigo = x.ISOEmp_Codigo and icmsSP.ISOPvMatICMS_UFOrigem = x.ISOPvMatICMS_UFOrigem and icmsSP.ISOPvMatICMS_UFDestino = x.ISOPvMatICMS_UFDestino and icmsSP.ISOPvMatICMS_NatOperaCod = x.ISOPvMatICMS_NatOperaCod and icmsSP.ISOPvMatICMS_AgrupFiscalCod = x.ISOPvMatICMS_AgrupFiscalCod and icmsSP.ISOPvMatICMS_EspecieCod = x.ISOPvMatICMS_EspecieCod and icmsSP.ISOPvMatICMS_CatFiscalCod = x.ISOPvMatICMS_CatFiscalCod and icmsSP.ISOPvMatICMS_PrdOrigemCod = x.ISOPvMatICMS_PrdOrigemCod and icmsSP.ISOPvMatICMS_DestinacaoCod = x.ISOPvMatICMS_DestinacaoCod and x.ISOPvMatICMS_Flag = 'A')
and prd.ISOPrd_Flag = 'A'
and icmsSP.ISOPvMatICMS_UFOrigem = 'SP'
and icmsSP.ISOPvMatICMS_UFDestino = 'SP'
and icmsSP.ISOPvMatICMS_CatFiscalCod = 'COM'
and icmsSP.ISOPvMatICMS_NatOperaCod = '51'
and icmsSP.ISOPvMatICMS_EspecieCod = ''
and icmsSP.ISOPvMatICMS_DestinacaoCod = 'S';


-- dbo.view_tabela_preco_7 source

--USE [ISOWEB]
--GO

--/****** Object:  View [dbo].[view_tabela_preco]    Script Date: 01/08/2020 10:00:16 ******/
--SET ANSI_NULLS ON
--GO

--SET QUOTED_IDENTIFIER ON
--GO


CREATE VIEW [dbo].[view_tabela_preco_7]
AS
select
UFOrigem.ISOEst_Sigla as stufor,
UFDestino.ISOEst_Sigla as stufde,
ffi.isoprddadf_prdcodigo as fiitem,
prd.isoprd_descricao as tvprodsc,
icmsINTERNO.ISOPvMatICMS_AgrupFiscalCod,
fst.isopvmatsubst_agrupfiscalcod as stagfi,
fst.isopvmatsubst_categfiscalcod as stcatf,
case when fti.isopvicms_substtributaria = 'S'
	then isnull((100*(1+(fst.isopvmatsubst_percmarlucrofix/100)))*fst.isopvmatsubst_fatormultipbc,0)
	else 0
end as base_iva,
case when fti.isopvicms_substtributaria = 'S'
	then isnull((100*(1+(fst.isopvmatsubst_percmarlucrofix/100))) * (fst.isopvmatsubst_aliqicmsdif /100),0)
	else 0
end as icms_da_st,
icmsINTERNO.ISOPvMatICMS_AliquotaICMS as ICMS_interno,
--icmsINTERNO.ISOPvMatICMS_FatorMultBCICMS as FatorICMSInterno,
icmsINTERNO.ISOPvMatICMS_FatorMultICMS as FatorICMSInterno,
icmsSP.ISOPvMatICMS_AliquotaICMS as ICMS_SP,
--icmsSP.ISOPvMatICMS_FatorMultBCICMS as FatorICMSSP,
icmsSP.ISOPvMatICMS_FatorMultICMS as FatorICMSSP,
fti.isopvicms_substtributaria,

(select top 1 IPI from (
	select 1 as seq, ISOPvMatIPI_AliquotaIPI as IPI from isopvmatrizipi a
		where
			a.ISOPvMatIPI_InicioVigencia =
				(select max(b.ISOPvMatIPI_InicioVigencia) from isopvmatrizipi b
					where
					a.ISOEmp_Codigo = b.ISOEmp_Codigo
					and a.ISOPvMatIPI_AgrupFiscalCod = b.ISOPvMatIPI_AgrupFiscalCod
					and a.ISOPvMatIPI_EspecieCod = b.ISOPvMatIPI_EspecieCod
					and a.ISOPvMatIPI_PrdOrigemCod = b.ISOPvMatIPI_PrdOrigemCod
					and a.ISOPvMatIPI_DestinacaoCod = b.ISOPvMatIPI_DestinacaoCod
					and a.ISOPvMatIPI_NatOperacaoCod = b.ISOPvMatIPI_NatOperacaoCod
					and a.ISOPvMatIPI_CategFiscalCod = b.ISOPvMatIPI_CategFiscalCod
					and b.ISOPvMatIPI_Flag = 'A')
					and a.ISOEmp_Codigo = ffi.ISOEmp_Codigo
					and a.ISOPvMatIPI_AgrupFiscalCod = ffi.ISOPrdDadF_CodAgrupFiscal
					and a.ISOPvMatIPI_EspecieCod = case when ffi.ISOPrdDadF_EspecieCod = '0' then '' else ffi.ISOPrdDadF_EspecieCod end
					and a.ISOPvMatIPI_PrdOrigemCod = ffi.ISOPrdDadF_CodOrigem
					and a.ISOPvMatIPI_DestinacaoCod = ffi.ISOPrdDadF_CodDestinacao
					and a.ISOPvMatIPI_CategFiscalCod = icmsINTERNO.ISOPvMatICMS_CatFiscalCod
					and a.isoemp_codigo = 11
					and a.ISOPvMatIPI_Flag = 'A'
					and a.ISOPvMatIPI_NatOperacaoCod = '51'
				union all
					select 2 as seq, ISOPvClassF_AliqIPI as IPI from isopvclassificacaofiscal a
					where
						a.ISOPvClassF_Codigo = ffi.ISOPrdDadF_CodClassFiscal
						and a.ISOPvClassF_Flag = 'A'
						and a.ISOPvClassF_InicioVigencia =
							(select max(ISOPvClassF_InicioVigencia) from isopvclassificacaofiscal b
								where
									a.ISOPvClassF_Codigo = b.ISOPvClassF_Codigo
									and b.ISOPvClassF_Flag = 'A')

				) as AliquotaIPI order by seq
) as aliquotaIPI,
ISNULL((select isopvmaticms_aliqcargamaxima from isopvmatrizicms w
			where w.isopvmaticms_uforigem = fst.isopvmatsubst_uforigem
			and w.isopvmaticms_ufdestino = fst.isopvmatsubst_ufdestino
			and w.isopvmaticms_agrupfiscalcod = fst.isopvmatsubst_agrupfiscalcod
			and w.isopvmaticms_catfiscalcod = fst.isopvmatsubst_categfiscalcod
			and w.isopvmaticms_natoperacod = '51'
			and w.isopvmaticms_prdorigemcod = icmsINTERNO.ISOPvMatICMS_PrdOrigemCod -- 1
			and w.isopvmaticms_destinacaocod = 'S'
			and w.isopvmaticms_iniciovigencia = (select max(a.isopvmaticms_iniciovigencia) from isopvmatrizicms as a where w.isopvmaticms_uforigem = a.isopvmaticms_uforigem and w.isopvmaticms_ufdestino = a.isopvmaticms_ufdestino and w.isopvmaticms_agrupfiscalcod = a.isopvmaticms_agrupfiscalcod and w.isopvmaticms_catfiscalcod = a.isopvmaticms_catfiscalcod and w.isopvmaticms_natoperacod = a.isopvmaticms_natoperacod and w.isopvmaticms_prdorigemcod = a.isopvmaticms_prdorigemcod and a.isopvmaticms_flag = 'A' )),0)
isopvmaticms_aliqcargamaxima,

ISNULL((select ISOPvPrdEstab_OrigemCod from ISOPVPRDESTABELECIMENTO x, ISOPvEstabelecimento y where x.isoemp_codigo = prd.isoemp_codigo and x.isoprd_codigo = prd.isoprd_codigo and x.isoemp_codigo = y.isoemp_codigo and x.isopvestab_codigo = y.isopvestab_codigo and y.isopvestab_uf = icmsINTERNO.isopvmaticms_uforigem and isopvestab_flag = 'A' and isopvprdestab_flag = 'A'
		and
			(
				(y.isopvestab_uf = 'SC' and x.ISOPvEstab_Codigo = 35) or
				(y.isopvestab_uf = 'SP' and x.ISOPvEstab_Codigo = 9) or
				(y.isopvestab_uf = 'MG' and x.ISOPvEstab_Codigo = 12) or
				(y.isopvestab_uf = 'PE' and x.ISOPvEstab_Codigo = 28) or
				(y.isopvestab_uf = 'CE' and x.ISOPvEstab_Codigo = 13)
			)
		 ),icmsINTERNO.ISOPvMatICMS_PrdOrigemCod) ISOPvMatICMS_PrdOrigemCod,  -- TROCAR
fst.isopvmatsubst_percmarlucrofix,
fst.isopvmatsubst_fatormultipbc,
fst.isopvmatsubst_aliqicmsdif,
case when fti.isopvicms_substtributaria = 'S'
	then isnull(
			((100 +

(select top 1 IPI from (
	select 1 as seq, ISOPvMatIPI_AliquotaIPI as IPI from isopvmatrizipi a
		where
			a.ISOPvMatIPI_InicioVigencia =
				(select max(b.ISOPvMatIPI_InicioVigencia) from isopvmatrizipi b
					where
					a.ISOEmp_Codigo = b.ISOEmp_Codigo
					and a.ISOPvMatIPI_AgrupFiscalCod = b.ISOPvMatIPI_AgrupFiscalCod
					and a.ISOPvMatIPI_EspecieCod = b.ISOPvMatIPI_EspecieCod
					and a.ISOPvMatIPI_PrdOrigemCod = b.ISOPvMatIPI_PrdOrigemCod
					and a.ISOPvMatIPI_DestinacaoCod = b.ISOPvMatIPI_DestinacaoCod
					and a.ISOPvMatIPI_NatOperacaoCod = b.ISOPvMatIPI_NatOperacaoCod
					and a.ISOPvMatIPI_CategFiscalCod = b.ISOPvMatIPI_CategFiscalCod
					and b.ISOPvMatIPI_Flag = 'A')
					and a.ISOEmp_Codigo = ffi.ISOEmp_Codigo
					and a.ISOPvMatIPI_AgrupFiscalCod = ffi.ISOPrdDadF_CodAgrupFiscal
					and a.ISOPvMatIPI_EspecieCod = case when ffi.ISOPrdDadF_EspecieCod = '0' then '' else ffi.ISOPrdDadF_EspecieCod end
					and a.ISOPvMatIPI_PrdOrigemCod = ffi.ISOPrdDadF_CodOrigem
					and a.ISOPvMatIPI_DestinacaoCod = ffi.ISOPrdDadF_CodDestinacao
					and a.ISOPvMatIPI_CategFiscalCod = icmsINTERNO.ISOPvMatICMS_CatFiscalCod
					and a.isoemp_codigo = 11
					and a.ISOPvMatIPI_Flag = 'A'
					and a.ISOPvMatIPI_NatOperacaoCod = '51'
				union all
					select 2 as seq, ISOPvClassF_AliqIPI as IPI from isopvclassificacaofiscal a
					where
						a.ISOPvClassF_Codigo = ffi.ISOPrdDadF_CodClassFiscal
						and a.ISOPvClassF_Flag = 'A'
						and a.ISOPvClassF_InicioVigencia =
							(select max(ISOPvClassF_InicioVigencia) from isopvclassificacaofiscal b
								where
									a.ISOPvClassF_Codigo = b.ISOPvClassF_Codigo
									and b.ISOPvClassF_Flag = 'A')

				) as AliquotaIPI order by seq
)

			)*

			(1+(fst.isopvmatsubst_percmarlucrofix/100))) *
			fst.isopvmatsubst_fatormultipbc *
			(fst.isopvmatsubst_aliqicmsdif /100) -
			((select isopvmaticms_aliqcargamaxima from isopvmatrizicms w where w.isopvmaticms_uforigem = fst.isopvmatsubst_uforigem and w.isopvmaticms_ufdestino = fst.isopvmatsubst_ufdestino and w.isopvmaticms_agrupfiscalcod = fst.isopvmatsubst_agrupfiscalcod and w.isopvmaticms_catfiscalcod = fst.isopvmatsubst_categfiscalcod and w.isopvmaticms_natoperacod = '51' and w.isopvmaticms_prdorigemcod = icmsINTERNO.ISOPvMatICMS_PrdOrigemCod and w.isopvmaticms_destinacaocod = 'S' and w.isopvmaticms_flag = 'A' and w.isopvmaticms_iniciovigencia = (select max(a.isopvmaticms_iniciovigencia) from isopvmatrizicms as a where w.isopvmaticms_uforigem = a.isopvmaticms_uforigem and w.isopvmaticms_ufdestino = a.isopvmaticms_ufdestino and w.isopvmaticms_agrupfiscalcod = a.isopvmaticms_agrupfiscalcod and w.isopvmaticms_catfiscalcod = a.isopvmaticms_catfiscalcod and w.isopvmaticms_natoperacod = a.isopvmaticms_natoperacod and w.isopvmaticms_prdorigemcod = a.isopvmaticms_prdorigemcod and a.isopvmaticms_flag = 'A' ))/100)
		* 100,0)
	else 0
end as perc_st,
ffi.ISOPrdDadF_CodClassFiscal,
case when isoprd_unidade <> 'CX'
	then (select isoprdundfatc_unddestino
					from ISOPRDUNDFATORCONVERSAO fator
					where fator.isoemp_codigo = prd.isoemp_codigo and
						fator.ISOPrdUndFatC_PrdCodigo = prd.isoprd_codigo and
						fator.ISOPrdUndFatC_UndOrigem = prd.isoprd_unidade and
						-- 08/01/2020
						-- Zagoto: Incluído filtro para escluir registros em que o código do armazem seja diferente de ''
						-- Chamado: I2001-599
						-- 08/01/2020
						fator.ISOPrdUndFatC_Armazem = '' and
						fator.ISOPrdUndFatC_UndDestino = 'CX'
						and fator.ISOPrdUndFatC_Flag = 'A')
	else isoprd_unidade
end as unidade,
(select top 1 IPI from (
	select 1 as seq, ISOPvMatIPI_AliquotaIPI as IPI from isopvmatrizipi a
		where
			a.ISOPvMatIPI_InicioVigencia =
				(select max(b.ISOPvMatIPI_InicioVigencia) from isopvmatrizipi b
					where
					a.ISOEmp_Codigo = b.ISOEmp_Codigo
					and a.ISOPvMatIPI_AgrupFiscalCod = b.ISOPvMatIPI_AgrupFiscalCod
					and a.ISOPvMatIPI_EspecieCod = b.ISOPvMatIPI_EspecieCod
					and a.ISOPvMatIPI_PrdOrigemCod = b.ISOPvMatIPI_PrdOrigemCod
					and a.ISOPvMatIPI_DestinacaoCod = b.ISOPvMatIPI_DestinacaoCod
					and a.ISOPvMatIPI_NatOperacaoCod = b.ISOPvMatIPI_NatOperacaoCod
					and a.ISOPvMatIPI_CategFiscalCod = b.ISOPvMatIPI_CategFiscalCod
					and b.ISOPvMatIPI_Flag = 'A')
					and a.ISOEmp_Codigo = ffi.ISOEmp_Codigo
					and a.ISOPvMatIPI_AgrupFiscalCod = ffi.ISOPrdDadF_CodAgrupFiscal
					and a.ISOPvMatIPI_EspecieCod = case when ffi.ISOPrdDadF_EspecieCod = '0' then '' else ffi.ISOPrdDadF_EspecieCod end
					and a.ISOPvMatIPI_PrdOrigemCod = ffi.ISOPrdDadF_CodOrigem
					and a.ISOPvMatIPI_DestinacaoCod = ffi.ISOPrdDadF_CodDestinacao
					and a.ISOPvMatIPI_CategFiscalCod = icmsINTERNO.ISOPvMatICMS_CatFiscalCod
					and a.isoemp_codigo = 11
					and a.ISOPvMatIPI_Flag = 'A'
					and a.ISOPvMatIPI_NatOperacaoCod = '51'
				union all
					select 2 as seq, ISOPvClassF_AliqIPI as IPI from isopvclassificacaofiscal a
					where
						a.ISOPvClassF_Codigo = ffi.ISOPrdDadF_CodClassFiscal
						and a.ISOPvClassF_Flag = 'A'
						and a.ISOPvClassF_InicioVigencia =
							(select max(ISOPvClassF_InicioVigencia) from isopvclassificacaofiscal b
								where
									a.ISOPvClassF_Codigo = b.ISOPvClassF_Codigo
									and b.ISOPvClassF_Flag = 'A')

				) as AliquotaIPI order by seq
) as perc_ipi,
substring(esp.isopvprel_chave,16,4) as tabela,
(select top 1 classe.isolin_codigo from isolinha as classe, isoprdlinha as plinha
		where plinha.isoemp_codigo = classe.isoemp_codigo
		and plinha.isolin_codigo = classe.isolin_codigo
		and prd.isoemp_codigo = plinha.isoemp_codigo
		and prd.isoprd_codigo = plinha.isoprd_codigo
		and classe.isolintip_codigo = 1
		and classe.isolin_flag = 'A')
 as CodClasse,
(select top 1 isolin_descricao from isolinha as classe, isoprdlinha as plinha
		where plinha.isoemp_codigo = classe.isoemp_codigo
		and plinha.isolin_codigo = classe.isolin_codigo
		and prd.isoemp_codigo = plinha.isoemp_codigo
		and prd.isoprd_codigo = plinha.isoprd_codigo
		and classe.isolintip_codigo = 1
		and classe.isolin_flag = 'A')
 as classe,
(select top 1 familia.isolin_codigo from isolinha as familia, isoprdlinha as plinha
		where plinha.isoemp_codigo = familia.isoemp_codigo
		and plinha.isolin_codigo = familia.isolin_codigo
		and prd.isoemp_codigo = plinha.isoemp_codigo
		and prd.isoprd_codigo = plinha.isoprd_codigo
		and familia.isolintip_codigo = 2
		and familia.isolin_flag = 'A')
 as CodFamilia,
(select top 1 isolin_descricao from isolinha as familia, isoprdlinha as plinha
		where plinha.isoemp_codigo = familia.isoemp_codigo
		and plinha.isolin_codigo = familia.isolin_codigo
		and prd.isoemp_codigo = plinha.isoemp_codigo
		and prd.isoprd_codigo = plinha.isoprd_codigo
		and familia.isolintip_codigo = 2
		and familia.isolin_flag = 'A')
 as familia,
case when icmsINTERNO.ISOPvMatICMS_AliquotaICMS is null
	then 0
	else
		case when isoprd_unidade <> 'CX'
			then esp.ISOPvPreL_preco * isnull((select top 1 ISOPrdUndFatC_FatorConversao from ISOPRDUNDFATORCONVERSAO fator where fator.isoemp_codigo = prd.isoemp_codigo and fator.isoemp_codigo = 11 and fator.ISOPrdUndFatC_PrdCodigo = prd.isoprd_codigo and fator.ISOPrdUndFatC_UndOrigem = prd.isoprd_unidade and fator.ISOPrdUndFatC_UndDestino = 'CX'),1)
			else esp.ISOPvPreL_preco
		end
end
as PrecoESP

--'---',

--ffi.isoprddadf_prdcodigo,
--ffi.ISOPrdDadF_CodClassFiscal,
--icmsINTERNO.ISOPvMatICMS_AgrupFiscalCod,
--icmsINTERNO.ISOPvMatICMS_PrdOrigemCod,
--icmsINTERNO.ISOPvMatICMS_DestinacaoCod


from isoproduto as prd
	inner join isopvprecolista as esp
		on prd.isoprd_codigo = substring(esp.isopvprel_chave,1,6)

	left join isoprddadofiscal as ffi
		on prd.isoprd_codigo = ffi.isoprddadf_prdcodigo
		and ffi.isoprddadf_iniciovigencia = (select max(y.isoprddadf_iniciovigencia) from isoprddadofiscal as y
				where
					ffi.isoemp_codigo = y.isoemp_codigo and
					ffi.isoprddadf_prdcodigo = y.isoprddadf_prdcodigo and
					-- zagoto 08/01/2020
					-- deve ser considerado apenas o registro vigente, utilizando a chave empresa, produto (max) da data
					-- zagoto 08/01/2020
					--and ffi.ISOPrdDadF_CodAgrupFiscal = y.ISOPrdDadF_CodAgrupFiscal
					--and ffi.ISOPrdDadF_CodClassFiscal = y.ISOPrdDadF_CodClassFiscal
					--and ffi.ISOPrdDadF_CodDestinacao = y.ISOPrdDadF_CodDestinacao
					y.isoprddadf_flag = 'A')
		and isoprddadf_flag = 'A'

	inner join isoprdattvalues as dad_comp
		on prd.isoemp_codigo = dad_comp.isoemp_codigo
		and prd.isoprd_codigo = dad_comp.isoprd_codigo
		and dad_comp.isoemp_codigo = 11
		and dad_comp.isoprdattid = 9
		and dad_comp.isoprdattvalueid = 1
	left join isoestado UFOrigem
		on UFOrigem.ISOPais_Codigo = 1
	left join isoestado UFDestino
		on UFDestino.ISOPais_Codigo = 1
	left join isopvmatrizicms icmsINTERNO
		on ffi.ISOPrdDadF_CodAgrupFiscal = icmsINTERNO.ISOPvMatICMS_AgrupFiscalCod
		and	(
				(icmsINTERNO.ISOPvMatICMS_PrdOrigemCod = (select top 1 isopvprdestab_origemcod from ISOPVPRDESTABELECIMENTO x, ISOPvEstabelecimento y
														where x.isoemp_codigo = prd.isoemp_codigo
															and x.isoprd_codigo = prd.isoprd_codigo
															and x.isoemp_codigo = y.isoemp_codigo
															and x.isopvestab_codigo = y.isopvestab_codigo
															and y.isopvestab_uf = icmsINTERNO.isopvmaticms_uforigem

															-- chamado 39256
--															and (((x.isopvestab_codigo = 9) and y.isopvestab_uf = 'SP') or ((x.isopvestab_codigo = 35) and y.isopvestab_uf = 'SC') )

															--and ( (1=1 and y.isopvestab_uf not in ('SP','SC')) or ((x.isopvestab_codigo = 9) and y.isopvestab_uf = 'SP')
															--		or ((x.isopvestab_codigo = 35) and y.isopvestab_uf = 'SC') )

															and isopvestab_flag = 'A'
															and isopvprdestab_flag = 'A') and
				((select count(*) from ISOPVPRDESTABELECIMENTO x, ISOPvEstabelecimento y where x.isoemp_codigo = prd.isoemp_codigo and x.isoprd_codigo = prd.isoprd_codigo and x.isoemp_codigo = y.isoemp_codigo and x.isopvestab_codigo = y.isopvestab_codigo and y.isopvestab_uf = icmsINTERNO.isopvmaticms_uforigem and isopvestab_flag = 'A' and isopvprdestab_flag = 'A') > 0))


				or (icmsINTERNO.ISOPvMatICMS_PrdOrigemCod = ffi.ISOPrdDadF_CodOrigem and
				((select count(*) from ISOPVPRDESTABELECIMENTO x, ISOPvEstabelecimento y where x.isoemp_codigo = prd.isoemp_codigo and x.isoprd_codigo = prd.isoprd_codigo and x.isoemp_codigo = y.isoemp_codigo and x.isopvestab_codigo = y.isopvestab_codigo and y.isopvestab_uf = icmsINTERNO.isopvmaticms_uforigem and isopvestab_flag = 'A' and isopvprdestab_flag = 'A') = 0))
			)

		and ISOPvMatICMS_Flag = 'A'

		and icmsINTERNO.isopvmaticms_uforigem = UFOrigem.ISOEst_Sigla
		and icmsINTERNO.isopvmaticms_ufdestino  = UFDestino.ISOEst_Sigla
and icmsINTERNO.ISOPvMatICMS_CatFiscalCod = 'COM'
and icmsINTERNO.ISOPvMatICMS_NatOperaCod = '51'
and icmsINTERNO.ISOPvMatICMS_EspecieCod = ''
and icmsINTERNO.ISOPvMatICMS_DestinacaoCod = 'S'
and icmsINTERNO.ISOPvMatICMS_InicioVigencia = (select max(x.ISOPvMatICMS_InicioVigencia) from isopvmatrizicms x where icmsINTERNO.ISOEmp_Codigo = x.ISOEmp_Codigo and icmsINTERNO.ISOPvMatICMS_UFOrigem = x.ISOPvMatICMS_UFOrigem and icmsINTERNO.ISOPvMatICMS_UFDestino = x.ISOPvMatICMS_UFDestino and icmsINTERNO.ISOPvMatICMS_NatOperaCod = x.ISOPvMatICMS_NatOperaCod and icmsINTERNO.ISOPvMatICMS_AgrupFiscalCod = x.ISOPvMatICMS_AgrupFiscalCod and icmsINTERNO.ISOPvMatICMS_EspecieCod = x.ISOPvMatICMS_EspecieCod and icmsINTERNO.ISOPvMatICMS_CatFiscalCod = x.ISOPvMatICMS_CatFiscalCod and icmsINTERNO.ISOPvMatICMS_PrdOrigemCod = x.ISOPvMatICMS_PrdOrigemCod and icmsINTERNO.ISOPvMatICMS_DestinacaoCod = x.ISOPvMatICMS_DestinacaoCod and x.ISOPvMatICMS_Flag = 'A')

	inner join isopvmatrizicms icmsSP
		on ffi.ISOPrdDadF_CodAgrupFiscal = icmsSP.ISOPvMatICMS_AgrupFiscalCod
		and icmsSP.ISOPvMatICMS_PrdOrigemCod = ffi.ISOPrdDadF_CodOrigem
	left join isopvicms fti
		on icmsInterno.isopvmaticms_tributicmscod = fti.isopvicms_codigo
	left join isopvmatrizsubsttributaria as fst
		on icmsINTERNO.isopvmaticms_uforigem = fst.isopvmatsubst_uforigem
			and icmsINTERNO.isopvmaticms_ufdestino = fst.isopvmatsubst_ufdestino
			and icmsINTERNO.ISOPvMatICMS_AgrupFiscalCod = fst.ISOPvMatSubsT_AgrupFiscalCod
			and icmsINTERNO.ISOPvMatICMS_CatFiscalCod = fst.ISOPvMatSubsT_CategFiscalCod
			and fst.isopvmatsubst_categfiscalcod = 'COM'
			and fst.isopvmatsubst_iniciovigencia = (select max(x.isopvmatsubst_iniciovigencia) from isopvmatrizsubsttributaria as x where fst.isopvmatsubst_uforigem = x.isopvmatsubst_uforigem and fst.isopvmatsubst_ufdestino = x.isopvmatsubst_ufdestino and fst.isopvmatsubst_categfiscalcod = x.isopvmatsubst_categfiscalcod and fst.isopvmatsubst_agrupfiscalcod = x.isopvmatsubst_agrupfiscalcod and x.isopvmatsubst_flag = 'A')
			and fst.isopvmatsubst_uforigem in ('SC', 'SP', 'PE', 'CE', 'MG')
where
esp.isopvprel_metodo = 'B' and
esp.isopvprel_datainicio = (select max(z.isopvprel_datainicio) from isopvprecolista as z where esp.isoemp_codigo = z.isoemp_codigo and esp.isopvprel_chave = z.isopvprel_chave and esp.isopvprel_metodo = z.isopvprel_metodo)

-- comentado 04/07/2017 zagoto, não mostrava determinados produtos
and ((ffi.isoprddadf_iniciovigencia = (select max(y.isoprddadf_iniciovigencia) from isoprddadofiscal as y
		where
			ffi.isoprddadf_prdcodigo = y.isoprddadf_prdcodigo
			and y.ISOPrdDadF_CodAgrupFiscal = icmsINTERNO.ISOPvMatICMS_AgrupFiscalCod
			and ffi.ISOPrdDadF_CodClassFiscal = y.ISOPrdDadF_CodClassFiscal
			and y.ISOPrdDadF_CodOrigem = icmsINTERNO.ISOPvMatICMS_PrdOrigemCod
			and y.ISOPrdDadF_CodDestinacao = icmsINTERNO.ISOPvMatICMS_DestinacaoCod
			and y.isoprddadf_flag = 'A')) and
			((select count(*) from ISOPVPRDESTABELECIMENTO x, ISOPvEstabelecimento y where x.isoemp_codigo = prd.isoemp_codigo and x.isoprd_codigo = prd.isoprd_codigo and x.isoemp_codigo = y.isoemp_codigo and x.isopvestab_codigo = y.isopvestab_codigo and y.isopvestab_uf = icmsINTERNO.isopvmaticms_uforigem and isopvestab_flag = 'A' and isopvprdestab_flag = 'A') = 0)
or ffi.isoprddadf_iniciovigencia = (select max(y.isoprddadf_iniciovigencia) from isoprddadofiscal as y
		where
			ffi.isoprddadf_prdcodigo = y.isoprddadf_prdcodigo
			--and ffi.ISOPrdDadF_CodAgrupFiscal = y.ISOPrdDadF_CodAgrupFiscal
			--and ffi.ISOPrdDadF_CodClassFiscal = y.ISOPrdDadF_CodClassFiscal
			--and ffi.ISOPrdDadF_CodOrigem = y.ISOPrdDadF_CodOrigem
			--and ffi.ISOPrdDadF_CodDestinacao = y.ISOPrdDadF_CodDestinacao
			and y.isoprddadf_flag = 'A'))

and icmsSP.ISOPvMatICMS_InicioVigencia = (select max(x.ISOPvMatICMS_InicioVigencia) from isopvmatrizicms x where icmsSP.ISOEmp_Codigo = x.ISOEmp_Codigo and icmsSP.ISOPvMatICMS_UFOrigem = x.ISOPvMatICMS_UFOrigem and icmsSP.ISOPvMatICMS_UFDestino = x.ISOPvMatICMS_UFDestino and icmsSP.ISOPvMatICMS_NatOperaCod = x.ISOPvMatICMS_NatOperaCod and icmsSP.ISOPvMatICMS_AgrupFiscalCod = x.ISOPvMatICMS_AgrupFiscalCod and icmsSP.ISOPvMatICMS_EspecieCod = x.ISOPvMatICMS_EspecieCod and icmsSP.ISOPvMatICMS_CatFiscalCod = x.ISOPvMatICMS_CatFiscalCod and icmsSP.ISOPvMatICMS_PrdOrigemCod = x.ISOPvMatICMS_PrdOrigemCod and icmsSP.ISOPvMatICMS_DestinacaoCod = x.ISOPvMatICMS_DestinacaoCod and x.ISOPvMatICMS_Flag = 'A')
and prd.ISOPrd_Flag = 'A'
and icmsSP.ISOPvMatICMS_UFOrigem = 'SP'
and icmsSP.ISOPvMatICMS_UFDestino = 'SP'
and icmsSP.ISOPvMatICMS_CatFiscalCod = 'COM'
and icmsSP.ISOPvMatICMS_NatOperaCod = '51'
and icmsSP.ISOPvMatICMS_EspecieCod = ''
and icmsSP.ISOPvMatICMS_DestinacaoCod = 'S'

--------------

--and UFOrigem.ISOEst_Sigla = 'SC'
--and UFDestino.ISOEst_Sigla = 'SC'
--and ffi.isoprddadf_prdcodigo in ('539387','622669','156775','156911')

--and substring(esp.isopvprel_chave,16,4) = '0152'

--and ffi.isoprddadf_prdcodigo = '350142'

--and ffi.isoprddadf_prdcodigo between '350141' and '350141';


-- dbo.view_tabela_preco_new source

CREATE VIEW view_tabela_preco_new
as
select prd.isoemp_codigo, prd.isoprd_codigo,ct.UFOrigem , ct.UFDestino,ct.ISOPrd_Descricao,ct.Codigo_Agrupamento_Fiscal,ct.Codigo_Categoria_Fiscal,ct.CodClasse ,ct.Classe ,ct.CodFamilia ,ct.Familia ,ct.Base_IVA ,ct.ICMS_da_ST ,ct.Preco_Lista ,ct.AliquotaIPI ,ct.Percentual_ST ,ct.Substituicao_Tributaria ,ct.Aliquota_Carga_Maxima ,ct.Fator_Multi_BC ,ct.Aliquota_ICMS_Dif ,ct.Percentual_Lucro_Fixo ,ct.Log
 from isoproduto prd
	inner join isoestado uf_origem on prd.isoemp_codigo = uf_origem.isoest_empcodigo and uf_origem.isopais_codigo = 1
	inner join isoestado uf_destino on prd.isoemp_codigo = uf_destino.isoest_empcodigo and uf_destino.isopais_codigo = 1
	cross apply Consulta_Tabela_Preco(prd.isoemp_codigo,prd.isoprd_codigo,uf_origem.isoest_sigla,uf_destino.isoest_sigla) ct
	--cross apply Consulta_Tabela_Preco(prd.isoemp_codigo,prd.isoprd_codigo,'SC','SC') ct
 where prd.isoemp_codigo = 11 and ct.UFOrigem <> '' and ct.UFDestino <> '';


-- dbo.view_tabela_preco_teste source

CREATE VIEW [dbo].[view_tabela_preco_teste]
AS
select
fti.isopvicms_codigo,
UFOrigem.ISOEst_Sigla as stufor,
UFDestino.ISOEst_Sigla as stufde,
ffi.isoprddadf_prdcodigo as fiitem,
prd.isoprd_descricao as tvprodsc,
icmsINTERNO.ISOPvMatICMS_AgrupFiscalCod,
fst.isopvmatsubst_agrupfiscalcod as stagfi,
fst.isopvmatsubst_categfiscalcod as stcatf,
case when fti.isopvicms_substtributaria = 'S'
	then isnull((100*(1+(fst.isopvmatsubst_percmarlucrofix/100)))*fst.isopvmatsubst_fatormultipbc,0)
	else 0
end as base_iva,
case when fti.isopvicms_substtributaria = 'S'
	then isnull((100*(1+(fst.isopvmatsubst_percmarlucrofix/100))) * (fst.isopvmatsubst_aliqicmsdif /100),0)
	else 0
end as icms_da_st,
icmsINTERNO.ISOPvMatICMS_AliquotaICMS as ICMS_interno,
--icmsINTERNO.ISOPvMatICMS_FatorMultBCICMS as FatorICMSInterno,
icmsINTERNO.ISOPvMatICMS_FatorMultICMS as FatorICMSInterno,
icmsSP.ISOPvMatICMS_AliquotaICMS as ICMS_SP,
--icmsSP.ISOPvMatICMS_FatorMultBCICMS as FatorICMSSP,
icmsSP.ISOPvMatICMS_FatorMultICMS as FatorICMSSP,
fti.isopvicms_substtributaria,

(select top 1 IPI from (
	select 1 as seq, ISOPvMatIPI_AliquotaIPI as IPI from isopvmatrizipi a
		where
			a.ISOPvMatIPI_InicioVigencia =
				(select max(b.ISOPvMatIPI_InicioVigencia) from isopvmatrizipi b
					where
					a.ISOEmp_Codigo = b.ISOEmp_Codigo
					and a.ISOPvMatIPI_AgrupFiscalCod = b.ISOPvMatIPI_AgrupFiscalCod
					and a.ISOPvMatIPI_EspecieCod = b.ISOPvMatIPI_EspecieCod
					and a.ISOPvMatIPI_PrdOrigemCod = b.ISOPvMatIPI_PrdOrigemCod
					and a.ISOPvMatIPI_DestinacaoCod = b.ISOPvMatIPI_DestinacaoCod
					and a.ISOPvMatIPI_NatOperacaoCod = b.ISOPvMatIPI_NatOperacaoCod
					and a.ISOPvMatIPI_CategFiscalCod = b.ISOPvMatIPI_CategFiscalCod
					and b.ISOPvMatIPI_Flag = 'A')
					and a.ISOEmp_Codigo = ffi.ISOEmp_Codigo
					and a.ISOPvMatIPI_AgrupFiscalCod = ffi.ISOPrdDadF_CodAgrupFiscal
					and a.ISOPvMatIPI_EspecieCod = case when ffi.ISOPrdDadF_EspecieCod = '0' then '' else ffi.ISOPrdDadF_EspecieCod end
					and a.ISOPvMatIPI_PrdOrigemCod = ffi.ISOPrdDadF_CodOrigem
					and a.ISOPvMatIPI_DestinacaoCod = ffi.ISOPrdDadF_CodDestinacao
					and a.ISOPvMatIPI_CategFiscalCod = icmsINTERNO.ISOPvMatICMS_CatFiscalCod
					and a.isoemp_codigo = 11
					and a.ISOPvMatIPI_Flag = 'A'
					and a.ISOPvMatIPI_NatOperacaoCod = '51'
				union all
					select 2 as seq, ISOPvClassF_AliqIPI as IPI from isopvclassificacaofiscal a
					where
						a.ISOPvClassF_Codigo = ffi.ISOPrdDadF_CodClassFiscal
						and a.ISOPvClassF_Flag = 'A'
						and a.ISOPvClassF_InicioVigencia =
							(select max(ISOPvClassF_InicioVigencia) from isopvclassificacaofiscal b
								where
									a.ISOPvClassF_Codigo = b.ISOPvClassF_Codigo
									and b.ISOPvClassF_Flag = 'A')

				) as AliquotaIPI order by seq
) as aliquotaIPI,
ISNULL((select isopvmaticms_aliqcargamaxima from isopvmatrizicms w
			where w.isopvmaticms_uforigem = fst.isopvmatsubst_uforigem
			and w.isopvmaticms_ufdestino = fst.isopvmatsubst_ufdestino
			and w.isopvmaticms_agrupfiscalcod = fst.isopvmatsubst_agrupfiscalcod
			and w.isopvmaticms_catfiscalcod = fst.isopvmatsubst_categfiscalcod
			and w.isopvmaticms_natoperacod = '51'
			and w.isopvmaticms_prdorigemcod = icmsINTERNO.ISOPvMatICMS_PrdOrigemCod -- 1
			and w.isopvmaticms_destinacaocod = 'S'
			and w.isopvmaticms_iniciovigencia = (select max(a.isopvmaticms_iniciovigencia) from isopvmatrizicms as a where w.isopvmaticms_uforigem = a.isopvmaticms_uforigem and w.isopvmaticms_ufdestino = a.isopvmaticms_ufdestino and w.isopvmaticms_agrupfiscalcod = a.isopvmaticms_agrupfiscalcod and w.isopvmaticms_catfiscalcod = a.isopvmaticms_catfiscalcod and w.isopvmaticms_natoperacod = a.isopvmaticms_natoperacod and w.isopvmaticms_prdorigemcod = a.isopvmaticms_prdorigemcod and a.isopvmaticms_flag = 'A' )),0)
isopvmaticms_aliqcargamaxima,

ISNULL((select ISOPvPrdEstab_OrigemCod from ISOPVPRDESTABELECIMENTO x, ISOPvEstabelecimento y where x.isoemp_codigo = prd.isoemp_codigo and x.isoprd_codigo = prd.isoprd_codigo and x.isoemp_codigo = y.isoemp_codigo and x.isopvestab_codigo = y.isopvestab_codigo and y.isopvestab_uf = icmsINTERNO.isopvmaticms_uforigem and isopvestab_flag = 'A' and isopvprdestab_flag = 'A'
		and
			(
				(y.isopvestab_uf = 'SC' and x.ISOPvEstab_Codigo = 35) or
				(y.isopvestab_uf = 'SP' and x.ISOPvEstab_Codigo = 9) or
				(y.isopvestab_uf = 'MG' and x.ISOPvEstab_Codigo = 12) or
				(y.isopvestab_uf = 'PE' and x.ISOPvEstab_Codigo = 28) or
				(y.isopvestab_uf = 'CE' and x.ISOPvEstab_Codigo = 13)
			)
		 ),icmsINTERNO.ISOPvMatICMS_PrdOrigemCod) ISOPvMatICMS_PrdOrigemCod,  -- TROCAR
fst.isopvmatsubst_percmarlucrofix,
fst.isopvmatsubst_fatormultipbc,
fst.isopvmatsubst_aliqicmsdif,
case when fti.isopvicms_substtributaria = 'S'
	then isnull(
			((100 +

(select top 1 IPI from (
	select 1 as seq, ISOPvMatIPI_AliquotaIPI as IPI from isopvmatrizipi a
		where
			a.ISOPvMatIPI_InicioVigencia =
				(select max(b.ISOPvMatIPI_InicioVigencia) from isopvmatrizipi b
					where
					a.ISOEmp_Codigo = b.ISOEmp_Codigo
					and a.ISOPvMatIPI_AgrupFiscalCod = b.ISOPvMatIPI_AgrupFiscalCod
					and a.ISOPvMatIPI_EspecieCod = b.ISOPvMatIPI_EspecieCod
					and a.ISOPvMatIPI_PrdOrigemCod = b.ISOPvMatIPI_PrdOrigemCod
					and a.ISOPvMatIPI_DestinacaoCod = b.ISOPvMatIPI_DestinacaoCod
					and a.ISOPvMatIPI_NatOperacaoCod = b.ISOPvMatIPI_NatOperacaoCod
					and a.ISOPvMatIPI_CategFiscalCod = b.ISOPvMatIPI_CategFiscalCod
					and b.ISOPvMatIPI_Flag = 'A')
					and a.ISOEmp_Codigo = ffi.ISOEmp_Codigo
					and a.ISOPvMatIPI_AgrupFiscalCod = ffi.ISOPrdDadF_CodAgrupFiscal
					and a.ISOPvMatIPI_EspecieCod = case when ffi.ISOPrdDadF_EspecieCod = '0' then '' else ffi.ISOPrdDadF_EspecieCod end
					and a.ISOPvMatIPI_PrdOrigemCod = ffi.ISOPrdDadF_CodOrigem
					and a.ISOPvMatIPI_DestinacaoCod = ffi.ISOPrdDadF_CodDestinacao
					and a.ISOPvMatIPI_CategFiscalCod = icmsINTERNO.ISOPvMatICMS_CatFiscalCod
					and a.isoemp_codigo = 11
					and a.ISOPvMatIPI_Flag = 'A'
					and a.ISOPvMatIPI_NatOperacaoCod = '51'
				union all
					select 2 as seq, ISOPvClassF_AliqIPI as IPI from isopvclassificacaofiscal a
					where
						a.ISOPvClassF_Codigo = ffi.ISOPrdDadF_CodClassFiscal
						and a.ISOPvClassF_Flag = 'A'
						and a.ISOPvClassF_InicioVigencia =
							(select max(ISOPvClassF_InicioVigencia) from isopvclassificacaofiscal b
								where
									a.ISOPvClassF_Codigo = b.ISOPvClassF_Codigo
									and b.ISOPvClassF_Flag = 'A')

				) as AliquotaIPI order by seq
)

			)*

			(1+(fst.isopvmatsubst_percmarlucrofix/100))) *
			fst.isopvmatsubst_fatormultipbc *
			(fst.isopvmatsubst_aliqicmsdif /100) -
			((select isopvmaticms_aliqcargamaxima from isopvmatrizicms w where w.isopvmaticms_uforigem = fst.isopvmatsubst_uforigem and w.isopvmaticms_ufdestino = fst.isopvmatsubst_ufdestino and w.isopvmaticms_agrupfiscalcod = fst.isopvmatsubst_agrupfiscalcod and w.isopvmaticms_catfiscalcod = fst.isopvmatsubst_categfiscalcod and w.isopvmaticms_natoperacod = '51' and w.isopvmaticms_prdorigemcod = icmsINTERNO.ISOPvMatICMS_PrdOrigemCod and w.isopvmaticms_destinacaocod = 'S' and w.isopvmaticms_flag = 'A' and w.isopvmaticms_iniciovigencia = (select max(a.isopvmaticms_iniciovigencia) from isopvmatrizicms as a where w.isopvmaticms_uforigem = a.isopvmaticms_uforigem and w.isopvmaticms_ufdestino = a.isopvmaticms_ufdestino and w.isopvmaticms_agrupfiscalcod = a.isopvmaticms_agrupfiscalcod and w.isopvmaticms_catfiscalcod = a.isopvmaticms_catfiscalcod and w.isopvmaticms_natoperacod = a.isopvmaticms_natoperacod and w.isopvmaticms_prdorigemcod = a.isopvmaticms_prdorigemcod and a.isopvmaticms_flag = 'A' ))/100)
		* 100,0)
	else 0
end as perc_st,
ffi.ISOPrdDadF_CodClassFiscal,
case when isoprd_unidade <> 'CX'
	then (select isoprdundfatc_unddestino from ISOPRDUNDFATORCONVERSAO fator where fator.isoemp_codigo = prd.isoemp_codigo and fator.isoemp_codigo = 11 and fator.ISOPrdUndFatC_PrdCodigo = prd.isoprd_codigo and fator.ISOPrdUndFatC_UndOrigem = prd.isoprd_unidade and fator.ISOPrdUndFatC_UndDestino = 'CX')
	else isoprd_unidade
end as unidade,
(select top 1 IPI from (
	select 1 as seq, ISOPvMatIPI_AliquotaIPI as IPI from isopvmatrizipi a
		where
			a.ISOPvMatIPI_InicioVigencia =
				(select max(b.ISOPvMatIPI_InicioVigencia) from isopvmatrizipi b
					where
					a.ISOEmp_Codigo = b.ISOEmp_Codigo
					and a.ISOPvMatIPI_AgrupFiscalCod = b.ISOPvMatIPI_AgrupFiscalCod
					and a.ISOPvMatIPI_EspecieCod = b.ISOPvMatIPI_EspecieCod
					and a.ISOPvMatIPI_PrdOrigemCod = b.ISOPvMatIPI_PrdOrigemCod
					and a.ISOPvMatIPI_DestinacaoCod = b.ISOPvMatIPI_DestinacaoCod
					and a.ISOPvMatIPI_NatOperacaoCod = b.ISOPvMatIPI_NatOperacaoCod
					and a.ISOPvMatIPI_CategFiscalCod = b.ISOPvMatIPI_CategFiscalCod
					and b.ISOPvMatIPI_Flag = 'A')
					and a.ISOEmp_Codigo = ffi.ISOEmp_Codigo
					and a.ISOPvMatIPI_AgrupFiscalCod = ffi.ISOPrdDadF_CodAgrupFiscal
					and a.ISOPvMatIPI_EspecieCod = case when ffi.ISOPrdDadF_EspecieCod = '0' then '' else ffi.ISOPrdDadF_EspecieCod end
					and a.ISOPvMatIPI_PrdOrigemCod = ffi.ISOPrdDadF_CodOrigem
					and a.ISOPvMatIPI_DestinacaoCod = ffi.ISOPrdDadF_CodDestinacao
					and a.ISOPvMatIPI_CategFiscalCod = icmsINTERNO.ISOPvMatICMS_CatFiscalCod
					and a.isoemp_codigo = 11
					and a.ISOPvMatIPI_Flag = 'A'
					and a.ISOPvMatIPI_NatOperacaoCod = '51'
				union all
					select 2 as seq, ISOPvClassF_AliqIPI as IPI from isopvclassificacaofiscal a
					where
						a.ISOPvClassF_Codigo = ffi.ISOPrdDadF_CodClassFiscal
						and a.ISOPvClassF_Flag = 'A'
						and a.ISOPvClassF_InicioVigencia =
							(select max(ISOPvClassF_InicioVigencia) from isopvclassificacaofiscal b
								where
									a.ISOPvClassF_Codigo = b.ISOPvClassF_Codigo
									and b.ISOPvClassF_Flag = 'A')

				) as AliquotaIPI order by seq
) as perc_ipi,
substring(esp.isopvprel_chave,16,4) as tabela,
(select top 1 classe.isolin_codigo from isolinha as classe, isoprdlinha as plinha
		where plinha.isoemp_codigo = classe.isoemp_codigo
		and plinha.isolin_codigo = classe.isolin_codigo
		and prd.isoemp_codigo = plinha.isoemp_codigo
		and prd.isoprd_codigo = plinha.isoprd_codigo
		and classe.isolintip_codigo = 1
		and classe.isolin_flag = 'A')
 as CodClasse,
(select top 1 isolin_descricao from isolinha as classe, isoprdlinha as plinha
		where plinha.isoemp_codigo = classe.isoemp_codigo
		and plinha.isolin_codigo = classe.isolin_codigo
		and prd.isoemp_codigo = plinha.isoemp_codigo
		and prd.isoprd_codigo = plinha.isoprd_codigo
		and classe.isolintip_codigo = 1
		and classe.isolin_flag = 'A')
 as classe,
(select top 1 familia.isolin_codigo from isolinha as familia, isoprdlinha as plinha
		where plinha.isoemp_codigo = familia.isoemp_codigo
		and plinha.isolin_codigo = familia.isolin_codigo
		and prd.isoemp_codigo = plinha.isoemp_codigo
		and prd.isoprd_codigo = plinha.isoprd_codigo
		and familia.isolintip_codigo = 2
		and familia.isolin_flag = 'A')
 as CodFamilia,
(select top 1 isolin_descricao from isolinha as familia, isoprdlinha as plinha
		where plinha.isoemp_codigo = familia.isoemp_codigo
		and plinha.isolin_codigo = familia.isolin_codigo
		and prd.isoemp_codigo = plinha.isoemp_codigo
		and prd.isoprd_codigo = plinha.isoprd_codigo
		and familia.isolintip_codigo = 2
		and familia.isolin_flag = 'A')
 as familia,
case when icmsINTERNO.ISOPvMatICMS_AliquotaICMS is null
	then 0
	else
		case when isoprd_unidade <> 'CX'
			then esp.ISOPvPreL_preco * isnull((select top 1 ISOPrdUndFatC_FatorConversao from ISOPRDUNDFATORCONVERSAO fator where fator.isoemp_codigo = prd.isoemp_codigo and fator.isoemp_codigo = 11 and fator.ISOPrdUndFatC_PrdCodigo = prd.isoprd_codigo and fator.ISOPrdUndFatC_UndOrigem = prd.isoprd_unidade and fator.ISOPrdUndFatC_UndDestino = 'CX'),1)
			else esp.ISOPvPreL_preco
		end
end
as PrecoESP

--'---',

--ffi.isoprddadf_prdcodigo,
--ffi.ISOPrdDadF_CodClassFiscal,
--icmsINTERNO.ISOPvMatICMS_AgrupFiscalCod,
--icmsINTERNO.ISOPvMatICMS_PrdOrigemCod,
--icmsINTERNO.ISOPvMatICMS_DestinacaoCod


from isoproduto as prd
	inner join isopvprecolista as esp
		on prd.isoprd_codigo = substring(esp.isopvprel_chave,1,6)

	left join isoprddadofiscal as ffi
		on prd.isoprd_codigo = ffi.isoprddadf_prdcodigo
		and ffi.isoprddadf_iniciovigencia = (select max(y.isoprddadf_iniciovigencia) from isoprddadofiscal as y
				where
					ffi.isoprddadf_prdcodigo = y.isoprddadf_prdcodigo
					and ffi.ISOPrdDadF_CodAgrupFiscal = y.ISOPrdDadF_CodAgrupFiscal
					and ffi.ISOPrdDadF_CodClassFiscal = y.ISOPrdDadF_CodClassFiscal
					and ffi.ISOPrdDadF_CodDestinacao = y.ISOPrdDadF_CodDestinacao
					and y.isoprddadf_flag = 'A')
		and isoprddadf_flag = 'A'

	inner join isoprdattvalues as dad_comp
		on prd.isoemp_codigo = dad_comp.isoemp_codigo
		and prd.isoprd_codigo = dad_comp.isoprd_codigo
		and dad_comp.isoemp_codigo = 11
		and dad_comp.isoprdattid = 9
		and dad_comp.isoprdattvalueid = 1
	left join isoestado UFOrigem
		on UFOrigem.ISOPais_Codigo = 1
	left join isoestado UFDestino
		on UFDestino.ISOPais_Codigo = 1
	left join isopvmatrizicms icmsINTERNO
		on ffi.ISOPrdDadF_CodAgrupFiscal = icmsINTERNO.ISOPvMatICMS_AgrupFiscalCod
		and	(
				(icmsINTERNO.ISOPvMatICMS_PrdOrigemCod = (select top 1 isopvprdestab_origemcod from ISOPVPRDESTABELECIMENTO x, ISOPvEstabelecimento y
														where x.isoemp_codigo = prd.isoemp_codigo
															and x.isoprd_codigo = prd.isoprd_codigo
															and x.isoemp_codigo = y.isoemp_codigo
															and x.isopvestab_codigo = y.isopvestab_codigo
															and y.isopvestab_uf = icmsINTERNO.isopvmaticms_uforigem

															-- chamado 39256
--															and (((x.isopvestab_codigo = 9) and y.isopvestab_uf = 'SP') or ((x.isopvestab_codigo = 35) and y.isopvestab_uf = 'SC') )

															--and ( (1=1 and y.isopvestab_uf not in ('SP','SC')) or ((x.isopvestab_codigo = 9) and y.isopvestab_uf = 'SP')
															--		or ((x.isopvestab_codigo = 35) and y.isopvestab_uf = 'SC') )

															and isopvestab_flag = 'A'
															and isopvprdestab_flag = 'A') and
				((select count(*) from ISOPVPRDESTABELECIMENTO x, ISOPvEstabelecimento y where x.isoemp_codigo = prd.isoemp_codigo and x.isoprd_codigo = prd.isoprd_codigo and x.isoemp_codigo = y.isoemp_codigo and x.isopvestab_codigo = y.isopvestab_codigo and y.isopvestab_uf = icmsINTERNO.isopvmaticms_uforigem and isopvestab_flag = 'A' and isopvprdestab_flag = 'A') > 0))


				or (icmsINTERNO.ISOPvMatICMS_PrdOrigemCod = ffi.ISOPrdDadF_CodOrigem and
				((select count(*) from ISOPVPRDESTABELECIMENTO x, ISOPvEstabelecimento y where x.isoemp_codigo = prd.isoemp_codigo and x.isoprd_codigo = prd.isoprd_codigo and x.isoemp_codigo = y.isoemp_codigo and x.isopvestab_codigo = y.isopvestab_codigo and y.isopvestab_uf = icmsINTERNO.isopvmaticms_uforigem and isopvestab_flag = 'A' and isopvprdestab_flag = 'A') = 0))
			)

		and ISOPvMatICMS_Flag = 'A'

		and icmsINTERNO.isopvmaticms_uforigem = UFOrigem.ISOEst_Sigla
		and icmsINTERNO.isopvmaticms_ufdestino  = UFDestino.ISOEst_Sigla
and icmsINTERNO.ISOPvMatICMS_CatFiscalCod = 'COM'
and icmsINTERNO.ISOPvMatICMS_NatOperaCod = '51'
and icmsINTERNO.ISOPvMatICMS_EspecieCod = ''
and icmsINTERNO.ISOPvMatICMS_DestinacaoCod = 'S'
and icmsINTERNO.ISOPvMatICMS_InicioVigencia = (select max(x.ISOPvMatICMS_InicioVigencia) from isopvmatrizicms x where icmsINTERNO.ISOEmp_Codigo = x.ISOEmp_Codigo and icmsINTERNO.ISOPvMatICMS_UFOrigem = x.ISOPvMatICMS_UFOrigem and icmsINTERNO.ISOPvMatICMS_UFDestino = x.ISOPvMatICMS_UFDestino and icmsINTERNO.ISOPvMatICMS_NatOperaCod = x.ISOPvMatICMS_NatOperaCod and icmsINTERNO.ISOPvMatICMS_AgrupFiscalCod = x.ISOPvMatICMS_AgrupFiscalCod and icmsINTERNO.ISOPvMatICMS_EspecieCod = x.ISOPvMatICMS_EspecieCod and icmsINTERNO.ISOPvMatICMS_CatFiscalCod = x.ISOPvMatICMS_CatFiscalCod and icmsINTERNO.ISOPvMatICMS_PrdOrigemCod = x.ISOPvMatICMS_PrdOrigemCod and icmsINTERNO.ISOPvMatICMS_DestinacaoCod = x.ISOPvMatICMS_DestinacaoCod and x.ISOPvMatICMS_Flag = 'A')

	inner join isopvmatrizicms icmsSP
		on ffi.ISOPrdDadF_CodAgrupFiscal = icmsSP.ISOPvMatICMS_AgrupFiscalCod
		and icmsSP.ISOPvMatICMS_PrdOrigemCod = ffi.ISOPrdDadF_CodOrigem
	left join isopvicms fti
		on icmsInterno.isopvmaticms_tributicmscod = fti.isopvicms_codigo
	left join isopvmatrizsubsttributaria as fst
		on icmsINTERNO.isopvmaticms_uforigem = fst.isopvmatsubst_uforigem
			and icmsINTERNO.isopvmaticms_ufdestino = fst.isopvmatsubst_ufdestino
			and icmsINTERNO.ISOPvMatICMS_AgrupFiscalCod = fst.ISOPvMatSubsT_AgrupFiscalCod
			and icmsINTERNO.ISOPvMatICMS_CatFiscalCod = fst.ISOPvMatSubsT_CategFiscalCod
			and fst.isopvmatsubst_categfiscalcod = 'COM'
			and fst.isopvmatsubst_iniciovigencia = (select max(x.isopvmatsubst_iniciovigencia) from isopvmatrizsubsttributaria as x where fst.isopvmatsubst_uforigem = x.isopvmatsubst_uforigem and fst.isopvmatsubst_ufdestino = x.isopvmatsubst_ufdestino and fst.isopvmatsubst_categfiscalcod = x.isopvmatsubst_categfiscalcod and fst.isopvmatsubst_agrupfiscalcod = x.isopvmatsubst_agrupfiscalcod and x.isopvmatsubst_flag = 'A')
			and fst.isopvmatsubst_uforigem in ('SC', 'SP', 'PE', 'CE', 'MG')
where
esp.isopvprel_metodo = 'B' and
esp.isopvprel_datainicio = (select max(z.isopvprel_datainicio) from isopvprecolista as z where esp.isoemp_codigo = z.isoemp_codigo and esp.isopvprel_chave = z.isopvprel_chave and esp.isopvprel_metodo = z.isopvprel_metodo)

-- comentado 04/07/2017 zagoto, não mostrava determinados produtos
and ((ffi.isoprddadf_iniciovigencia = (select max(y.isoprddadf_iniciovigencia) from isoprddadofiscal as y
		where
			ffi.isoprddadf_prdcodigo = y.isoprddadf_prdcodigo
			and y.ISOPrdDadF_CodAgrupFiscal = icmsINTERNO.ISOPvMatICMS_AgrupFiscalCod
			and ffi.ISOPrdDadF_CodClassFiscal = y.ISOPrdDadF_CodClassFiscal
			and y.ISOPrdDadF_CodOrigem = icmsINTERNO.ISOPvMatICMS_PrdOrigemCod
			and y.ISOPrdDadF_CodDestinacao = icmsINTERNO.ISOPvMatICMS_DestinacaoCod
			and y.isoprddadf_flag = 'A')) and
			((select count(*) from ISOPVPRDESTABELECIMENTO x, ISOPvEstabelecimento y where x.isoemp_codigo = prd.isoemp_codigo and x.isoprd_codigo = prd.isoprd_codigo and x.isoemp_codigo = y.isoemp_codigo and x.isopvestab_codigo = y.isopvestab_codigo and y.isopvestab_uf = icmsINTERNO.isopvmaticms_uforigem and isopvestab_flag = 'A' and isopvprdestab_flag = 'A') = 0)
or ffi.isoprddadf_iniciovigencia = (select max(y.isoprddadf_iniciovigencia) from isoprddadofiscal as y
		where
			ffi.isoprddadf_prdcodigo = y.isoprddadf_prdcodigo
			--and ffi.ISOPrdDadF_CodAgrupFiscal = y.ISOPrdDadF_CodAgrupFiscal
			--and ffi.ISOPrdDadF_CodClassFiscal = y.ISOPrdDadF_CodClassFiscal
			--and ffi.ISOPrdDadF_CodOrigem = y.ISOPrdDadF_CodOrigem
			--and ffi.ISOPrdDadF_CodDestinacao = y.ISOPrdDadF_CodDestinacao
			and y.isoprddadf_flag = 'A'))

and icmsSP.ISOPvMatICMS_InicioVigencia = (select max(x.ISOPvMatICMS_InicioVigencia) from isopvmatrizicms x where icmsSP.ISOEmp_Codigo = x.ISOEmp_Codigo and icmsSP.ISOPvMatICMS_UFOrigem = x.ISOPvMatICMS_UFOrigem and icmsSP.ISOPvMatICMS_UFDestino = x.ISOPvMatICMS_UFDestino and icmsSP.ISOPvMatICMS_NatOperaCod = x.ISOPvMatICMS_NatOperaCod and icmsSP.ISOPvMatICMS_AgrupFiscalCod = x.ISOPvMatICMS_AgrupFiscalCod and icmsSP.ISOPvMatICMS_EspecieCod = x.ISOPvMatICMS_EspecieCod and icmsSP.ISOPvMatICMS_CatFiscalCod = x.ISOPvMatICMS_CatFiscalCod and icmsSP.ISOPvMatICMS_PrdOrigemCod = x.ISOPvMatICMS_PrdOrigemCod and icmsSP.ISOPvMatICMS_DestinacaoCod = x.ISOPvMatICMS_DestinacaoCod and x.ISOPvMatICMS_Flag = 'A')
and prd.ISOPrd_Flag = 'A'
and icmsSP.ISOPvMatICMS_UFOrigem = 'SP'
and icmsSP.ISOPvMatICMS_UFDestino = 'SP'
and icmsSP.ISOPvMatICMS_CatFiscalCod = 'COM'
and icmsSP.ISOPvMatICMS_NatOperaCod = '51'
and icmsSP.ISOPvMatICMS_EspecieCod = ''
and icmsSP.ISOPvMatICMS_DestinacaoCod = 'S'


CREATE VIEW [ConexaoISO].[BI103_TarefaContrato] as


Select
		T01.ISOEmp_Codigo            as DM_103_CodEmpresa,        -- Código da Empresa
		T01.ISOCtt_Codigo            as DM_103_CodContrato,       -- Número do contrato
		T01.ISOCttMod_Codigo,
		T10.ISOCttMod_Descricao,

		T01.ISOCttSit_Codigo,
		T11.ISOCttSit_Descricao,

		T02.ISOWFTrf_Ctt_PrcCodigo   as DM_103_CodProcCtrt,           -- Código do Procedimento do Contrato
		T02.ISOWFTrf_Ctt_TrfCodigo   as DM_103_CodTarefaCtrt,        -- Código da tarefa do Contrato

		T03.ISOWFTrf_Descricao       as DM_103_DscTarefaCtrt,         -- Descrição da tarefa do Contrato
		T03.ISOWFTrf_PrzExecucao     as DM_103_PrzExecTrfCtrt,        -- Prazo de execução da tarefa do Contrato
		T03.ISOWFTrf_PrzUnidade      as DM_103_PrzUnidTrfCtrt,        -- Unidade de Tempo
		T03.ISOWFTrf_DataRecebimento as DM_103_DtaRecebTrfCtrt,       -- Data de recebimento da tarefa
		T03.ISOWFTrf_DataSolucao     as DM_103_DtaSolucaoTrfCtrt,     -- Data da solução da tarefa do Contrato
		T03.ISOWFTrf_Solucao         as DM_103_DscSolucaoTrfCtrt,     -- Solução da tarefa
		T03.ISOWFTrf_DataLimite      as DM_103_DtaLimiteTrfCtrt,      -- Data Limite para conclusão
		T03.ISOWFTrfPad_Codigo       as DM_103_CodTarefaPadCtrt,      -- Código da tarefa padrão
		T03.ISOWFTrfPadSit_Codigo    as DM_103_CodSituacaoTrfCtrt,    -- Código da situação da tarefa

		T05.ISOWFTrfPadSit_Descricao as DM_103_DscSituacaoTrfCtrt,    -- Descrição da situação da tarefa
		T04.ISOWFPrcPad_Codigo       as DM_103_CodProcPadCtrt,        -- Código do procedimento padrão
		T06.ISOEnt_Codigo            as DM_103_CodUsuAltCtrt,         -- Código do usuário de alteração do Contrato
		T06.ISOEnt_Nome              as DM_103_NomUsuAltCtrt,         -- Nome do usuário de alteração do Contrato
		T07.ISOEnt_Codigo            as DM_103_CodRespTrfCtrt,        -- Código do Responsável do Contrato
		T07.ISOEnt_Nome              as DM_103_NomRespTrfCtrt,        -- Nome do responsável do Contrato
		T08.ISOEnt_Codigo            as DM_103_CodRespExecTrfCtrt,    -- Código do Responsável Executor do Contrato
		T08.ISOEnt_Nome              as DM_103_NomRespExecTrfCtrt,    -- Nome do responsável Executor do Contrato
		T09.ISOEnt_Codigo            as DM_103_CodRespResCtrt,        -- Código do Responsável de reserva do Contrato
		T09.ISOEnt_Nome              as DM_103_NomRespResCtrt         -- Nome do responsável de reserva do Contrato


   From ISOCTCONTRATO T01              (Nolock)
		Left Join ISOWFTrf_Contrato T02        (Nolock)
			On  T02.ISOEmp_Codigo         = T01.ISOEmp_Codigo
			And T02.ISOCtt_Codigo       = T01.ISOCtt_Codigo

		Left Join ISOWFTarefa T03         (nolock)
			On  T03.ISOEmp_Codigo         = T02.ISOEmp_Codigo
			And T03.ISOWFPrc_Codigo       = T02.ISOWFTrf_Ctt_PrcCodigo
			And T03.ISOWFTrf_Codigo       = T02.ISOWFTrf_Ctt_TrfCodigo

	    Left Join ISOWFProcedimento T04   (Nolock)
			On  T04.ISOEmp_Codigo         = T01.ISOEmp_Codigo
			And T04.ISOWFPrc_Codigo       = T02.ISOWFTrf_Ctt_PrcCodigo

			Left Join ISOWFTrfPadSituacao T05 (Nolock)
			On  T05.ISOEmp_Codigo         = T01.ISOEmp_Codigo
			And T05.ISOWFPrcPad_Codigo    = T04.ISOWFPrcPad_Codigo
			And T05.ISOWFTrfPad_Codigo    = T03.ISOWFTrfPad_Codigo
			And T05.ISOWFTrfPadSit_Codigo = T03.ISOWFTrfPadSit_Codigo

		Left Join ISOEntidade T06         (Nolock)
			On  T06.ISOEnt_Codigo         = T03.ISOWFTrf_UsuarioAlteracao
		Left Join ISOEntidade T07         (Nolock)
			On  T07.ISOEnt_Codigo         = T03.ISOWFTrf_RspCodigo
		Left Join ISOEntidade T08         (Nolock)
			On  T08.ISOEnt_Codigo         = T03.ISOWFTrf_RspExe_RspCodigo
		Left Join ISOEntidade T09         (Nolock)
			On  T09.ISOEnt_Codigo         = T03.ISOWFTrf_RspRes_RspCodigo

		Left join ISOCTCttModalidade T10
			On T10.ISOEmp_Codigo			= T01.ISOEmp_Codigo
			and T10.ISOCttMod_Codigo		= T01.ISOCttMod_Codigo

		Left join ISOCTCttSituacao	T11
			On T11.ISOEmp_Codigo			= T01.ISOEmp_Codigo
			and T11.ISOCttSit_Codigo		= T01.ISOCttSit_Codigo;


-- ConexaoISO.BI50_Clientes_Responsavel source

CREATE VIEW BI50_Clientes_Responsavel as
Select
	A.ISOEmp_Codigo						As BI50_Empresa,
	A.ISOEnt_Codigo	                         		As BI50_Codigo,
	J.ISOEntClaP_Codigo					As BI50_ClaPCodigo,
	K.ISOEntClaP_Descricao					As BI50_ClaPDescricao,
	P.ISOEntClaPEsp_Codigo					As BI50_ClaPEspCodigo,
	P.ISOEntClaPEsp_Descricao				As BI50_ClaPEspDescricao,
	A2.ISOEntRsp_Codigo					As BI50_RspCodigo,
	N2.ISOEnt_Nome	                         		As BI50_RspNome,
	A2.ISOEntNivRsp_Codigo					As BI50_NivCodigo,
	O.ISOEntNivRsp_Descricao				As BI50_NivDescricao,
	LTRIM(upper(N.ISOEnt_Nome))		         	As BI50_Nome,
    Case
           When C.ISOEntPes_Codigo is null  Then 'O'
           When V.ISOEntOrg_Codigo is null  Then 'P'
           Else                                  'N'
    End						                As BI50_Tipo,
	Case
           When C.ISOEntpes_CPF is null		Then V.ISOEntOrg_CNPJ
           When V.ISOEntOrg_CNPJ is null	Then C.ISOEntpes_CPF
           Else                                  0
    End						                As BI50_CPFCNPJ,
	Case
           When C.ISOEntPes_RG is null		Then V.ISOEntOrg_InscEstadual
           When V.ISOEntOrg_InscEstadual is null Then C.ISOEntPes_RG
           Else                                  ''
    End						                As BI50_Documento,
	D.ISOEntTel_Codigo					As BI50_TelCodigo,
	D.ISOEntTel_ddd				             	As BI50_DDD,
	D.ISOEntTel_telefone			         	As BI50_Telefone,
	H.ISOEntEct_Codigo					As BI50_EctCodigo,
	H.ISOEntEct_econtact			         	As BI50_Email,
	E.ISOEntEnd_Codigo					As BI50_EndCodigo,
	E.ISOEntEnd_Titulo					As BI50_TitLogradouro,
	E.ISOEntEnd_Logradouro					As BI50_Logradouro,
	E.ISOEntEnd_Numero					As BI50_Numero,
	E.ISOEntEnd_Complemento					As BI50_Complemento,
	E.ISOEntEnd_Bairro					As BI50_Bairro,
	E.ISOEntEnd_CEP						As BI50_CEP,
	E.ISOLoc_Codigo						As BI50_CodCidade,
	F.ISOLoc_Descricao				        As BI50_Cidade,
	G.ISOEst_Codigo						As BI50_CodEstado,
	G.ISOEst_Sigla					        As BI50_UF,
	J.ISOEntCli_Flag                         		As BI50_Ativo,
	E.ISOEntEnd_Latitude					As BI50_Latitude,
	E.ISOEntEnd_Longitude					As BI50_Longitude,
	(6371 * acos( cos( radians(convert(float, cast(LTRIM(Q.ISOEntUsu_CheckinLatitude) AS money))) )
 * cos( radians( E.ISOEntEnd_Latitude ) )
 * cos( radians( E.ISOEntEnd_Longitude ) - radians(convert(float, cast(LTRIM(Q.ISOEntUsu_CheckinLongitude) AS money))) )
 + sin( radians(convert(float, cast(LTRIM(Q.ISOEntUsu_CheckinLatitude) AS money))) )
 * sin( radians( E.ISOEntEnd_Latitude ) ) ) ) AS BI50_Distancia,
	J.ISOEntCli_CodigoExt					as BI50_CodigoExt
	From ISOEmp_Entidade A
	    left Join ISOENTRSP_CLIENTES A2
		  On A2.ISOEntCli_Codigo         = A.ISOEnt_Codigo
        Left Join ISOENTPESSOA C
          On A.ISOEnt_Codigo         = C.isoentpes_Codigo
        Left join ISOENTORGANIZACAO V
          On A.ISOEnt_Codigo         = V.ISOEntOrg_Codigo
        Left Join ISOEntTelefone D
          On A.ISOEnt_Codigo         = D.ISOEnt_Codigo
         And D.ISOEntTel_Flag           = 'A'
		 And D.ISOEntTel_Principal		= 'S'
        Left Join ISOEntEndereco E
          On A.ISOEnt_Codigo         = E.ISOEnt_Codigo
         And E.ISOEntEnd_Flag           = 'A'
		 And E.ISOEntEnd_Principal		= 'S'
        Left Join ISOLocalidade F
          On E.ISOLoc_Codigo            = F.ISOLoc_Codigo
        Left Join ISOEstado G
          On F.ISOPais_Codigo           = G.ISOPais_Codigo
         And F.ISOEst_Codigo            = G.ISOEst_Codigo
        Left Join ISOPAIS B
		  On F.ISOPais_Codigo           = B.ISOPais_Codigo
        Left Join ISOEntEcontact H
          On A.ISOEnt_Codigo         = H.ISOEnt_Codigo
         And H.ISOEntEml_Flag           = 'A'
		 And H.ISOEntEctTip_Principal	= 'S'
        Left Join ISOEntCliente J
	      On J.ISOEntCli_Codigo         = A.ISOEnt_Codigo
	     And A.ISOEmp_Codigo            = J.ISOEmp_Codigo
        Left join ISOEntClassificacaoPapel K
          On K.ISOEmp_Codigo            = J.ISOEmp_Codigo
         And K.ISOEntClaP_Codigo        = J.ISOEntClaP_Codigo
        Left join ISOEntCliSituacao L
          On L.ISOEmp_Codigo            = J.ISOEmp_Codigo
         And L.ISOEntCliSit_Codigo      = J.ISOEntCliSit_Codigo
		Left join ISOENTIDADE N
		  On N.ISOEnt_Codigo			= A.ISOEnt_Codigo
	    Left join ISOENTIDADE N2
		  On N2.ISOEnt_Codigo			= A2.ISOEntRsp_Codigo
		Left Join ISOEntNivResponsabilidade O
		  On O.ISOEmp_Codigo 			= J.ISOEmp_Codigo
		  And O.ISOEntNivRsp_Codigo 	= A2.ISOEntNivRsp_Codigo
		Left Join ISOEntClaPEspecialidade P
		  On P.ISOEmp_Codigo            = J.ISOEmp_Codigo
         And P.ISOEntClaP_Codigo        = J.ISOEntClaP_Codigo
		 And P.ISOEntClaPEsp_Codigo     = J.ISOEntClaPEsp_Codigo
		Left Join ISOENTUSU_CHECKIN Q
		  On Q.ISOEntUsu_Codigo			= A2.ISOEntRsp_Codigo
		 And ISOEntUsu_CheckCodigo = (select max(ISOEntUsu_CheckCodigo) from ISOENTUSU_CHECKIN where ISOEntUsu_Codigo = Q.ISOEntUsu_Codigo)

UNION
SELECT
	BI50_Empresa,
	BI50_Codigo,
	BI50_ClaPCodigo,
	BI50_ClaPDescricao,
	BI50_ClaPEspCodigo,
	BI50_ClaPEspDescricao,
	BI50_RspCodigo,
	BI50_RspNome,
	BI50_NivCodigo,
	BI50_NivDescricao,
	BI50_Nome,
	BI50_Tipo,
	BI50_CPFCNPJ,
	BI50_Documento,
	BI50_TelCodigo,
	BI50_DDD,
	BI50_Telefone,
	BI50_EctCodigo,
	BI50_Email,
	BI50_EndCodigo,
	BI50_TitLogradouro,
	BI50_Logradouro,
	BI50_Numero,
	BI50_Complemento,
	BI50_Bairro,
	BI50_CEP,
	BI50_CodCidade,
	BI50_Cidade,
	BI50_CodEstado,
	BI50_UF,
	BI50_Ativo,
	BI50_Latitude,
	BI50_Longitude,
	BI50_Distancia,
	BI50_CodigoExt
FROM BI50_Clientes_Responsavel_B;


-- ConexaoISO.BI50_Clientes_Responsavel_B source

CREATE VIEW BI50_Clientes_Responsavel_B as
Select distinct
	A.ISOEmp_Codigo						As BI50_Empresa,
	A.ISOEnt_Codigo	                         		As BI50_Codigo,
	J.ISOEntClaP_Codigo					As BI50_ClaPCodigo,
	K.ISOEntClaP_Descricao					As BI50_ClaPDescricao,
	P.ISOEntClaPEsp_Codigo					As BI50_ClaPEspCodigo,
	P.ISOEntClaPEsp_Descricao				As BI50_ClaPEspDescricao,
	null							As BI50_RspCodigo,
	''							As BI50_RspNome,
	null							As BI50_NivCodigo,
	''							As BI50_NivDescricao,
	LTRIM(upper(N.ISOEnt_Nome))		         As BI50_Nome,
    Case
           When C.ISOEntPes_Codigo is null  Then 'O'
           When V.ISOEntOrg_Codigo is null  Then 'P'
           Else                                  'N'
    End						                As BI50_Tipo,
	Case
           When C.ISOEntpes_CPF is null		Then V.ISOEntOrg_CNPJ
           When V.ISOEntOrg_CNPJ is null	Then C.ISOEntpes_CPF
           Else                                  0
    End						                As BI50_CPFCNPJ,
	Case
           When C.ISOEntPes_RG is null		Then V.ISOEntOrg_InscEstadual
           When V.ISOEntOrg_InscEstadual is null Then C.ISOEntPes_RG
           Else                                  ''
    End						                As BI50_Documento,
	D.ISOEntTel_Codigo					As BI50_TelCodigo,
	D.ISOEntTel_ddd				        	As BI50_DDD,
	D.ISOEntTel_telefone			         	As BI50_Telefone,
	H.ISOEntEct_Codigo					As BI50_EctCodigo,
	H.ISOEntEct_econtact			         	As BI50_Email,
	E.ISOEntEnd_Codigo					As BI50_EndCodigo,
	E.ISOEntEnd_Titulo					As BI50_TitLogradouro,
	E.ISOEntEnd_Logradouro					As BI50_Logradouro,
	E.ISOEntEnd_Numero					As BI50_Numero,
	E.ISOEntEnd_Complemento					As BI50_Complemento,
	E.ISOEntEnd_Bairro					As BI50_Bairro,
	E.ISOEntEnd_CEP						As BI50_CEP,
	E.ISOLoc_Codigo						As BI50_CodCidade,
	F.ISOLoc_Descricao				        As BI50_Cidade,
	G.ISOEst_Codigo						As BI50_CodEstado,
	G.ISOEst_Sigla					        As BI50_UF,
	J.ISOEntCli_Flag                         		As BI50_Ativo,
	E.ISOEntEnd_Latitude					As BI50_Latitude,
	E.ISOEntEnd_Longitude					As BI50_Longitude,
	null							AS BI50_Distancia,
	J.iSOEntCli_CodigoExt					as BI50_CodigoExt
	From ISOEmp_Entidade A
	    Left Join ISOENTRSP_CLIENTES A2
		  On A2.ISOEntCli_Codigo         = A.ISOEnt_Codigo
        Left Join ISOENTPESSOA C
          On A.ISOEnt_Codigo         = C.isoentpes_Codigo
        Left join ISOENTORGANIZACAO V
          On A.ISOEnt_Codigo         = V.ISOEntOrg_Codigo
        Left Join ISOEntTelefone D
          On A.ISOEnt_Codigo         = D.ISOEnt_Codigo
         And D.ISOEntTel_Flag           = 'A'
		 And D.ISOEntTel_Principal		= 'S'
        Left Join ISOEntEndereco E
          On A.ISOEnt_Codigo         = E.ISOEnt_Codigo
         And E.ISOEntEnd_Flag           = 'A'
		 And E.ISOEntEnd_Principal		= 'S'
        Left Join ISOLocalidade F
          On E.ISOLoc_Codigo            = F.ISOLoc_Codigo
        Left Join ISOEstado G
          On F.ISOPais_Codigo           = G.ISOPais_Codigo
         And F.ISOEst_Codigo            = G.ISOEst_Codigo
        Left Join ISOPAIS B
		  On F.ISOPais_Codigo           = B.ISOPais_Codigo
        Left Join ISOEntEcontact H
          On A.ISOEnt_Codigo         = H.ISOEnt_Codigo
         And H.ISOEntEml_Flag           = 'A'
		 And H.ISOEntEctTip_Principal	= 'S'
        Left Join ISOEntCliente J
	      On J.ISOEntCli_Codigo         = A.ISOEnt_Codigo
	     And A.ISOEmp_Codigo            = J.ISOEmp_Codigo
        Left join ISOEntClassificacaoPapel K
          On K.ISOEmp_Codigo            = J.ISOEmp_Codigo
         And K.ISOEntClaP_Codigo        = J.ISOEntClaP_Codigo
        Left join ISOEntCliSituacao L
          On L.ISOEmp_Codigo            = J.ISOEmp_Codigo
         And L.ISOEntCliSit_Codigo      = J.ISOEntCliSit_Codigo
		Left join ISOENTIDADE N
		  On N.ISOEnt_Codigo			= A.ISOEnt_Codigo
		Left Join ISOEntClaPEspecialidade P
		  On P.ISOEmp_Codigo            = J.ISOEmp_Codigo
         And P.ISOEntClaP_Codigo        = J.ISOEntClaP_Codigo
		 And P.ISOEntClaPEsp_Codigo     = J.ISOEntClaPEsp_Codigo
		WHERE A2.ISOEntRsp_Codigo  is not null;


-- ConexaoISO.BI62A_ISOSAAtendimentoDC source

CREATE VIEW BI62A_ISOSAAtendimentoDC as
Select T01.ISOEmp_Codigo                          as BI62A_CodEmpresa,
       T01.ISOAtvPrj_Codigo                       as BI62A_CodProjeto,
	   T03.ISOAtvPrj_Descricao                    as BI62A_DscProjeto,
       T01.ISOAtvAtv_Codigo                       as BI62A_CodAtividade,
	   T01.ISORspAtv_Prioridade                   as BI62A_CodPriorAtividade,
       T01.ISORspAtv_Codigo                       as BI62A_CodApontamento,
       T01.ISORspAtv_RspCodigo                    as BI62A_CodResponsavel,
	   T01.ISORspAtv_SAC                          as BI62A_CodAtendimento,
	   T01.ISORspAtv_Concluido                    as BI62A_Concluido,
	   T01.ISORspAtv_QtdeHorasPrevistas           as BI62A_QtdeHraPrev,
	   T01.ISOAtvCls_Codigo                       as BI62A_CodClassificacao,
	   Cast(Sum(T02.ISORspAtvDet_TotalHorasDecimal) as decimal(15,2))
	                                              as BI62A_TotHraAtend
  From ISORSPAtividade T01
        Left Join ISORSPATVDETALHE T02
          On T02.ISOEmp_Codigo    = T01.ISOEmp_Codigo
         And T02.ISORspAtv_Codigo = T01.ISORspAtv_Codigo
		-- And T02.ISORspAtvDet_Inicio >= '2017-10-09'
       Inner Join ISOAtvProjeto T03
          On T03.ISOEmp_Codigo    = T01.ISOEmp_Codigo
         And T03.ISOAtvPrj_Codigo = T01.ISOAtvPrj_Codigo
 Group By T01.ISOEmp_Codigo, T01.ISOAtvPrj_Codigo, T03.ISOAtvPrj_Descricao, T01.ISOAtvAtv_Codigo, T01.ISORspAtv_Prioridade, T01.ISORspAtv_Codigo, T01.ISORspAtv_RspCodigo, T01.ISORspAtv_SAC, T01.ISORspAtv_Concluido, T01.ISORspAtv_QtdeHorasPrevistas, T01.ISOAtvCls_Codigo;


-- ConexaoISO.BI62_ISOSAAtendimentoDC source

CREATE VIEW BI62_ISOSAAtendimentoDC AS

Select  Distinct
        T01.ISOEmp_Codigo                   as BI62_CodEmpresa,          -- Cï¿½digo da Empresa
        T01.ISOSAAte_Codigo                 as BI62_CodAtendimento,      -- Nï¿½mero do atendimento
        T01.ISOSAAte_DataAbertura           as BI62_DataAbertAtend,      -- Data de abertura do SAC
        T01.ISOSAAte_DataFechamento         as BI62_DataFechamentoAtend, -- Data de Fechamento do SAC
		    T02.ISOSAAteDet_Descricao
		                                    as BI62_DescricaoAtend,
		    T02.ISOSAAteDet_Resposta
		                                    as BI62_RespostaAtend,
        T03.ISOEnt_Codigo                   as BI62_CodUsuAbertAtend,    -- Cï¿½digo do usuï¿½rio de abertura
        RTrim(T03.ISOEnt_Nome)              as BI62_NomeUsuAbertAtend,   -- Usuï¿½rio de Abertura do SAC
		Substring(T03.ISOEnt_Nome, 1, PATINDEX('% %', T03.ISOEnt_Nome)-1)
		                                    as BI62_NomeCUsuAbertAtend,  -- Nome curto usuï¿½rio de abertura SAC
        T04.ISOEnt_Codigo                   as BI62_CodUsuAltAtend,      -- Cï¿½digo do Usurio de alteraï¿½ï¿½o do SAC
        RTrim(T04.ISOEnt_Nome)              as BI62_NomeUsuAltAtend,     -- Usuï¿½rio de alteraï¿½ï¿½o do SAC
		Substring(T04.ISOEnt_Nome, 1, PATINDEX('% %', T04.ISOEnt_Nome)-1)
		                                    as BI62_NomeCUsuAltAtend,    -- Nome curto usuï¿½rio de Alteraï¿½ï¿½o SAC
        T05.ISOEnt_Codigo                   as BI62_CodEntidadeAtend,    -- Cï¿½digo da Entidade do SAC
        RTrim(T05.ISOEnt_Nome)              as BI62_NomeEntidadeAtend,   -- Nome da Entidade do SAC
        T06.ISOSASit_Codigo                 as BI62_CodSituacaoAtend,    -- Cï¿½digo da Situaï¿½ï¿½o SAC
        RTrim(T06.ISOSASit_Descricao)       as BI62_DscSituacaoAtend,    -- Descriï¿½ï¿½o da Situaï¿½ï¿½o SAC
        T06.ISOSASit_Situacao               as BI62_SitSituacao,         -- Situaï¿½ï¿½o interna
        T07.ISOEmpCan_Codigo                as BI62_CodCanalAtend,       -- Cï¿½digo do Canal de comunicaï¿½ï¿½o
        RTrim(T07.ISOEmpCan_Descricao)      as BI62_DscCanalAtend,       -- Descriï¿½ï¿½o do Canal de Comunicaï¿½ï¿½o
        T08.ISOSAMot_Codigo                 as BI62_CodMotivoAtend,      -- Cï¿½digo do Motivo
        RTrim(T08.ISOSAMot_Descricao)       as BI62_DscMotivoAtend,      -- Descriï¿½ï¿½o do Motivo
        T09.ISOSAMotOcrCau_Codigo           as BI62_CodCausaAtend,       -- Cï¿½digo da Causa
        RTrim(T09.ISOSAMotOcrCau_Descricao) as BI62_DscCausaAtend,       -- Descriï¿½ï¿½o da Causa
        T10.ISOSAMotOcr_Codigo              as BI62_CodOcorrenciaAtend,  -- Cï¿½digo da Ocorrï¿½ncia
        RTrim(T10.ISOSAMotOcr_Descricao)    as BI62_DscOcorrenciaAtend,  -- Descriï¿½ï¿½o da Ocorï¿½rncia
        T11.ISOEnt_Codigo                   as BI62_CodUnidadeAtend,     -- Cï¿½digo da Unidade
        RTrim(T11.ISOEnt_Nome)              as BI62_DscUnidadeAtend,     -- Nome da Unidade
		Case
           When T27.ISOEntPes_Codigo is null  Then 'Organizacao'
           When T28.ISOEntOrg_Codigo is null  Then 'Pessoa'
           Else 'Nao definido'
		End	                                as BI62_TipoEntidadeAtend,    -- Tipo de Entidade
		Case
           When T27.ISOEntPes_Codigo is null  Then T28.ISOEntOrg_Estrangeiro
           When T28.ISOEntOrg_Codigo is null  Then T27.ISOEntPes_Estrangeiro
		End							        as BI62_EntidadeEstrangeiroAtend, -- Estrangeiro?
		Case
           When T27.ISOEntPes_Codigo is null  Then T28.ISOEntOrg_CNPJ
           When T28.ISOEntOrg_Codigo is null  Then T27.ISOEntPes_CPF
		End							        as BI62_EntidadeCPFCNPJ,          -- CPF/CNPJ
		T31.ISOSAAtendimentoAttValue        as BI62_PrevisaoEntrega,
		Cast(T32.ISOSAAtendimentoAttValue   as decimal(18,2))      as BI62_QtdeHoras,
		Cast(T33.ISOSAAtendimentoAttValue   as decimal(3,0))       as BI62_PrioridadeOrdem,
		T34.ISOSAAtendimentoAttValue        as BI62_NomeResponsavel,
		Cast(T35.ISOSAAtendimentoAttValue   as decimal(3,0))       as BI62_PrioridadeSprint,
		T36.BI62A_TotHraAtend               as BI62_QtdeHraRealiz,
		T36.BI62A_QtdeHraPrev               as BI62_QtdeHraPrev,
		Case
		    When T36.BI62A_CodPriorAtividade <= 5 Then 'Previsto'
			Else 'Nï¿½o Previsto'
		End                                 as BI62_SprintPrevisto,
		T36.BI62A_CodResponsavel            as BI62_CodRespSprint,
		T38.ISOEnt_Nome                     as BI62_NomeRespSprint,
		Substring(T38.ISOEnt_Nome, 1, PATINDEX('% %', T38.ISOEnt_Nome) -1)
		                                    as BI62_NomeCRespSprint,
        T40.ISOSAAtendimentoAttValue        as BI62_OrdemExecucao,
		T36.BI62A_CodApontamento            as BI62_CodApontamento,
		T36.BI62A_CodAtividade              as BI62_CodAtividade,
		RTrim(T37.ISOAtvAtv_Descricao)      as BI62_DscAtividade,
		T36.BI62A_Concluido                 as BI62_AtvConcluido,
		T36.BI62A_CodProjeto                as BI62_CodProjeto,
		T36.BI62A_DscProjeto                as BI62_DscProjeto,
		T36.BI62A_CodPriorAtividade         as BI62_PriorAtividade,
		T36.BI62A_CodClassificacao          as BI62_CodClassificacao,
		Rtrim(T39.ISOAtvCls_Descricao)      as BI62_DscClassificacao
  From  ISOSAAtendimento T01
       	Left Join ISOSAAteDetalhe T02
          On T02.ISOEmp_Codigo          = T01.ISOEmp_Codigo
         And T02.ISOSAAte_Codigo        = T01.ISOSAAte_Codigo
		 And T02.ISOSAAteDet_Codigo     = 1
        Left Join ISOEntidade T03
          On T03.ISOEnt_Codigo          = T01.ISOSAAte_UsuCodigo
        Left Join ISOEntidade T04
          On T04.ISOEnt_Codigo          = T01.ISOSAAte_UsuarioAlteracao
        Left Join ISOEntidade T05
          On T05.ISOEnt_Codigo          = T01.ISOSAAte_EntCodigo
        Left Join ISOSASituacao T06
          On T06.ISOEmp_Codigo          = T01.ISOEmp_Codigo
         And T06.ISOSASit_Codigo        = T01.ISOSASit_Codigo
        Left Join ISOEmpCanal T07
          On T07.ISOEmp_Codigo          = T01.ISOEmp_Codigo
         And T07.ISOEmpCan_Codigo       = T02.ISOEmpCan_Codigo
        Left Join ISOSAMotivo T08
          On T08.ISOEmp_Codigo          = T01.ISOEmp_Codigo
         And T08.ISOSAMot_Codigo        = T01.ISOSAMot_Codigo
        Left Join ISOSAMotOcrCausa T09
          On T09.ISOEmp_Codigo          = T01.ISOEmp_Codigo
         And T09.ISOSAMot_Codigo        = T01.ISOSAMot_Codigo
         And T09.ISOSAMotOcr_Codigo     = T01.ISOSAMotOcr_Codigo
         And T09.ISOSAMotOcrCau_Codigo  = T01.ISOSAMotOcrCau_Codigo
        Left Join ISOSAMotOcorrencia T10
          On T10.ISOEmp_Codigo          = T01.ISOEmp_Codigo
         And T10.ISOSAMot_Codigo        = T01.ISOSAMot_Codigo
         And T10.ISOSAMotOcr_Codigo     = T01.ISOSAMotOcr_Codigo
        Left Join ISOEntidade T11
          On T11.ISOEnt_Codigo          = T01.ISOEntUnd_Codigo

        Left Join ISOEntCliente T17
          On T17.ISOEntCli_Codigo       = T05.ISOEnt_Codigo
        Left Join ISOEntidade T20
          On T20.ISOEnt_Codigo          = T02.ISOSAAte_EntContato
        Left Join ISOEntPessoa T27
          On T27.ISOEntPes_Codigo       = T01.ISOSAAte_EntCodigo
        Left Join ISOEntOrganizacao T28
          On T28.ISOEntOrg_Codigo       = T01.ISOSAAte_EntCodigo

        Left Join ISOSAAtendimentoAttValues T31
          On T31.ISOSAAte_Codigo            = T01.ISOSAAte_Codigo
		 and T31.ISOSAAtendimentoAttId      = 22
		Left Join ISOSAAtendimentoAttValues T32
          On T32.ISOSAAte_Codigo            = T01.ISOSAAte_Codigo
		 and T32.ISOSAAtendimentoAttId      = 23
		Left Join ISOSAAtendimentoAttValues T33
          On T33.ISOSAAte_Codigo            = T01.ISOSAAte_Codigo
		 and T33.ISOSAAtendimentoAttId      = 24
		Left Join ISOSAAtendimentoAttValues T34
          On T34.ISOSAAte_Codigo            = T01.ISOSAAte_Codigo
		 and T34.ISOSAAtendimentoAttId      = 25
		Left Join ISOSAAtendimentoAttValues T35
          On T35.ISOSAAte_Codigo            = T01.ISOSAAte_Codigo
		 and T35.ISOSAAtendimentoAttId      = 26
        Left Join BI62A_ISOSAAtendimentoDC T36
          On T36.BI62A_CodEmpresa           = T01.ISOEmp_Codigo
         And T36.BI62A_CodAtendimento       = T01.ISOSAAte_Codigo
        Left Join ISOATVATIVIDADE T37
          On T37.ISOEmp_Codigo              = T01.ISOEmp_Codigo
         And T37.ISOAtvAtv_Codigo           = T36.BI62A_CodAtividade
        Left Join ISOEntidade T38
          On T38.ISOEnt_Codigo              = T36.BI62A_CodResponsavel
        Left Join ISOATVCLASSIFICACAO T39
          On T39.ISOEmp_Codigo              = T36.BI62A_CodEmpresa
         And T39.ISOAtvCls_Codigo           = T36.BI62A_CodClassificacao
		Left Join ISOSAAtendimentoAttValues T40
          On T40.ISOSAAte_Codigo            = T01.ISOSAAte_Codigo
		 and T40.ISOSAAtendimentoAttId      = 27
        --Left Join ISOSAAtendimentoATT T33
        --  on T33.ISOSAAtendimentoAttId      = T31.ISOSAAtendimentoAttId
        --Left Join ISOSAAtendimentoFormDef T35
        --  On T35.ISOSAAtendimentoFormDefId  = T33.ISOSAAtendimentoFormDefId
        --Left Join ISOSAATENDIMENTOATT1 T37
        --  On T37.ISOSAAtendimentoAttId      = T31.ISOSAAtendimentoAttId
        -- And T37.ISOSAAtendimentoAttOptId   = T31.ISOSAAtendimentoAttOptId;


-- ConexaoISO.BI_001_isoCDS_PessoaOrganizacao source

CREATE VIEW BI_001_isoCDS_PessoaOrganizacao as
Select
       T01.ISOEntPes_Codigo		                 as DM_001_Codigo ,
       T01.ISOEntPes_NomeCompleto                as DM_001_Nome ,
	   ''                                        as DM_001_NomeFantasia,
       T01.ISOEntPes_DataCadastro                as DM_001_DataCadastro,
	   DATEPART(YEAR, T01.ISOEntPes_DataCadastro)
	                                             as DM_001_AnoCadastro,
	   DATEPART(MONTH, T01.ISOEntPes_DataCadastro)
	                                             as DM_001_MesCadastro,
	   T01.ISOEntPes_CPF                         as DM_001_CPF_CNPJ,
	   NULL                                      as DM_001_RamoDeAtividade,
	   T01.ISOEntPes_Estrangeiro                 as DM_001_Estrangeiro,
	   T01.ISOEntPes_Sexo                        as DM_001_Sexo,
	   T15.ISOEstCiv_Descricao                   as DM_001_EstadoCivil,
	   T16.ISONivEsc_Descricao                   as DM_001_NivelDeEscolaridade,
	   T17.ISOProf_Descricao                     as DM_001_Profissao,
       T09.ISOEntSeg_Descricao                   as DM_001_Segmento,
	   T02.ISOEntEnd_Logradouro                  as DM_001_Endereco,
       T02.ISOEntEnd_Numero                      as DM_001_EndNumero,
       T02.ISOEntEnd_Bairro                      as DM_001_Bairro,
       T02.ISOEntEnd_CEP                         as DM_001_CEP,
	   T02.ISOEntEnd_Complemento                 as DM_001_Complemento,
       T03.ISOLoc_Descricao                      as DM_001_Localidade,
       T04.ISOEst_Sigla                          as DM_001_UF,
       RTrim(T05.ISOPais_Descricao)              as DM_001_Pais,
       Case
           When T07.ISOEntCli_Codigo = T01.ISOEntPes_Codigo Then 'S'
           Else 'N'
       End                                       as DM_001_PapelCliente,
       Case
           When T22.ISOEntPar_Codigo = T01.ISOEntPes_Codigo Then 'S'
           Else 'N'
       End                                       as DM_001_PapelParceiro,
       Case
           When T23.ISOEntFrn_Codigo = T01.ISOEntPes_Codigo Then 'S'
           Else 'N'
       End                                       as DM_001_PapelFornecedor,
       Case
           When T24.ISOEntUsu_Codigo = T01.ISOEntPes_Codigo Then 'S'
           Else 'N'
       End                                       as DM_001_PapelUsuario,
       Case
           When T25.ISOEntRsp_Codigo = T01.ISOEntPes_Codigo Then 'S'
           Else 'N'
       End                                       as DM_001_PapelResponsavel,
	   T10.ISOEntCla_Descricao		             as DM_001_ClassificacaoEntidade,
	   T11.ISOEntClaEsp_Descricao                as DM_001_EspecialidadeEntidade,
       T08.ISOEntClaP_Descricao                  as DM_001_ClassificacaoPapel,
	   T12.ISOEntClaPEsp_Descricao	             as DM_001_EspecialidadePapel,
	   T14.ISOEntCliSit_Descricao	             as DM_001_Situacao,
       'F'                                       as DM_001_TipoPessoa,
       T01.ISOEntPes_Flag                        as DM_001_Ativo,
       T18.ISOEntTel_DDD                         as DM_001_DDD,
       T18.ISOEntTel_Telefone                    as DM_001_Telefone,
       T18.ISOEntTel_Principal                   as DM_001_TelefonePrincipal,
       T19.ISOTelTip_Descricao                   as DM_001_TelefoneTipo,
       T20.ISOEntEct_econtact                    as DM_001_EContact,
       T21.ISOEntEctTip_Descricao                as DM_001_EContactTipo,
       T20.ISOEntEctTip_Principal                as DM_001_EContactPrincipal,
	   T01.ISOEntPes_DataAlteracao               as DM_001_DtAlteracao,
	   T01.ISOEntPes_UsuarioAlteracao            as DM_001_UsuAlteracao,
	   T26.ISOEntRlc_Codigo                      as DM_001_CodCntCom,
       RTrim(T27.ISOEnt_Nome)                    as DM_001_NomeCntCom,
       Rtrim(T28.ISOEntRlcTip_Descricao)         as DM_001_DscTipRlcCom,
       RTRIM(T29.ISOEntRlcTipNiv_Descricao)    as DM_001_DscTipNivRlcCom,
       RTrim(T31.ISOEmpOri_Descricao)            as DM_001_DscOrigem,
	   T30.ISOEmpEnt_Ori_Codigo                  as DM_001_CodExterno,
	   T26.ISOEnt_Rlc_Principal					 as DM_001_Ent_Rlc_Principal,

       1						                 as MT_001_QtdeEntidades,
       'V_006'                                   as DM_001_VersaoVW
  From ISOEntPessoa T01
       Left Join ISOEntEndereco T02
         On T02.ISOEnt_Codigo          = T01.ISOEntPes_Codigo
        And T02.ISOEntEnd_Principal    = 'S'
       Left Join ISOLocalidade T03
         On T03.ISOLoc_Codigo          = T02.ISOLoc_Codigo
        Left Join ISOPAIS T05
          On T05.ISOPais_Codigo        = T03.ISOPais_Codigo
       Left JOin ISOEstado T04
         On T04.ISOEst_Codigo          = T03.ISOEst_Codigo
        And T04.ISOPais_Codigo         = T05.ISOPais_Codigo
       Left join isoentcliente T07
	     On T01.ISOEntPes_Codigo       = T07.ISOEntCli_Codigo
       Left Join ISOEntClassificacaoPapel T08
         On T08.ISOEmp_Codigo          = T07.ISOEmp_Codigo
	    And T08.ISOEntClaP_Codigo      = T07.ISOEntClaP_Codigo
       Left Join ISOEntSegmento T09
         On T09.ISOEntSeg_Codigo       = T01.ISOEntSeg_Codigo
	   Left join ISOEntClassificacao T10
         On T10.ISOEmp_Codigo          = T07.ISOEmp_Codigo
	    and T10.ISOEntCla_Codigo       = T07.ISOEntCla_Codigo
        and T10.ISOEntCla_Flag         = 'A'
	   Left join ISOEntClaEspecialidade T11
	     On T11.ISOEmp_codigo          = T07.ISOEmp_Codigo
	    And T11.ISOEntCla_Codigo       = T07.ISOEntCla_Codigo
        And T11.ISOEntClaEsp_codigo    = T07.ISOEntClaEsp_Codigo
	   Left join ISOEntClaPEspecialidade T12
	     On T12.ISOEmp_Codigo          = T07.ISOEmp_Codigo
	    And T12.ISOEntClaP_Codigo      = T07.ISOEntClaP_Codigo
	    And T12.ISOEntClaPEsp_Codigo   = T07.ISOEntClaPEsp_Codigo
       Left join ISOEntCliSituacao T14
         On T14.ISOEmp_Codigo          = T07.ISOEmp_Codigo
        And T14.ISOEntCliSit_Codigo    = T07.ISOEntCliSit_Codigo
       Left Join ISOEstCivil T15
         On T15.ISOEstCiv_Codigo       = T01.ISOEstCiv_Codigo
       Left Join ISONivEscolaridade T16
         On T16.ISONivEsc_Codigo       = T01.ISONivEsc_Codigo
       Left Join ISOProfissao T17
         ON T17.ISOProf_Codigo         = T01.ISOProf_Codigo
       Left Join ISOENTTELEFONE T18
         On T18.ISOEnt_Codigo          = T01.ISOEntPes_Codigo
       Left Join ISOTELTIPO T19
         On T19.ISOTelTip_Codigo       = T18.ISOTelTip_Codigo
       Left Join ISOENTECONTACT T20
         On T20.ISOEnt_Codigo          = T01.ISOEntPes_Codigo
       Left Join ISOENTECTTIPO T21
         On T21.ISOEntEctTip_Codigo    = T20.ISOEntEctTip_Codigo
       Left Join ISOEntParceiro T22
	     On T22.ISOEntPar_Codigo       = T01.ISOEntPes_Codigo
	   Left Join ISOEntFornecedor T23
	     On T23.ISOEntFrn_Codigo       = T01.ISOEntPes_Codigo
	   Left Join ISOEntUsuario T24
	     On T24.ISOEntUsu_Codigo       = T01.ISOEntPes_Codigo
	   Left Join ISOEntResponsavel T25
	     On T25.ISOEntRsp_Codigo       = T01.ISOEntPes_Codigo
       Left Join ISOENT_RELACAO T26
         On T26.ISOEntRle_Codigo       = T01.ISOEntPes_Codigo
       Left Join ISOENTIDADE T27
         On T27.ISOEnt_Codigo          = T26.ISOEntRlc_Codigo
       Left Join ISOENTRLCTIPO T28
         On T28.ISOEntRlcTip_Codigo    = T26.ISOEntRlcTip_Codigo
       Left Join ISOENTRLCTIPNIVEL T29
         On T29.ISOEntRlcTip_Codigo    = T28.ISOEntRlcTip_Codigo
        And T29.ISOEntRlcTipNiv_Codigo = T26.ISOEntRlcTipNiv_Codigo
       Left Join ISOEMPENT_ORIGEM T30
         On T30.ISOEmpEnt_EntCodigo    = T01.ISOEntPes_Codigo
       Left Join ISOEMPORIGEM T31
         On T31.ISOEmp_Codigo          = T30.ISOEmp_Codigo
        And T31.ISOEmpOri_Codigo       = T30.ISOEmpOri_Codigo

Union

Select
       T01.ISOEntOrg_Codigo                      as DM_001_Codigo,
       T01.ISOEntOrg_RazaoSocial                 as DM_001_Nome,
	   T01.ISOEntOrg_NomeFantasia                as DM_001_NomeFantasia,
       T01.ISOEntOrg_DataCadastro                as DM_001_DataCadastro,
	   DATEPART(YEAR, T01.ISOEntOrg_DataCadastro)
	                                             as DM_001_AnoCadastro,
	   DATEPART(MONTH, T01.ISOEntOrg_DataCadastro)
	                                             as DM_001_MesCadastro,
	   T01.ISOEntOrg_CNPJ                        as DM_001_CPF_CNPJ,
	   T13.ISOEntRamAtv_Descricao	             as DM_001_RamoDeAtividade,
	   T01.ISOEntOrg_Estrangeiro                 as DM_001_Estrangeiro,
	   Null                                      as DM_001_Sexo,
	   Null                                      as DM_001_EstadoCivil,
	   Null                                      as DM_001_NivelDeEscolaridade,
	   Null                                      as DM_001_Profissao,
       T09.ISOEntSeg_Descricao                   as DM_001_Segmento,
	   T02.ISOEntEnd_Logradouro                  as DM_001_Endereco,
       T02.ISOEntEnd_Numero                      as DM_001_EndNumero,
       T02.ISOEntEnd_Bairro                      as DM_001_Bairro,
       T02.ISOEntEnd_CEP                         as DM_001_CEP,
	   T02.ISOEntEnd_Complemento                 as DM_001_Complemento,
       T03.ISOLoc_Descricao                      as DM_001_Localidade,
       T04.ISOEst_Sigla                          as DM_001_UF,
       RTrim(T05.ISOPais_Descricao)              as DM_001_Pais,
       Case
           When T07.ISOEntCli_Codigo = T01.ISOEntOrg_Codigo Then 'S'
           Else 'N'
       End                                       as DM_001_PapelCliente,
       Case
           When T19.ISOEntPar_Codigo = T01.ISOEntOrg_Codigo Then 'S'
           Else 'N'
       End                                       as DM_001_PapelParceiro,
       Case
           When T20.ISOEntFrn_Codigo = T01.ISOEntOrg_Codigo Then 'S'
           Else 'N'
       End                                       as DM_001_PapelFornecedor,
       Case
           When T21.ISOEntUsu_Codigo = T01.ISOEntOrg_Codigo Then 'S'
           Else 'N'
       End                                       as DM_001_PapelUsuario,
       Case
           When T22.ISOEntRsp_Codigo = T01.ISOEntOrg_Codigo Then 'S'
           Else 'N'
       End                                       as DM_001_PapelResponsavel,
       T10.ISOEntCla_Descricao		             as DM_001_ClassificacaoEntidade,
	   T11.ISOEntClaEsp_Descricao                as DM_001_EspecialidadeEntidade,
       T08.ISOEntClaP_Descricao                  as DM_001_ClassificacaoPapel,
	   T12.ISOEntClaPEsp_Descricao	             as DM_001_EspecialidadePapel,
	   T14.ISOEntCliSit_Descricao	             as DM_001_Situacao,
       'J'                                       as DM_001_TipoPessoa,
       T01.ISOEntOrg_Flag                        as DM_001_Ativo,
       T15.ISOEntTel_DDD                         as DM_001_DDD,
       T15.ISOEntTel_Telefone                    as DM_001_Telefone,
       T15.ISOEntTel_Principal                   as DM_001_TelefonePrincipal,
       T16.ISOTelTip_Descricao                   as DM_001_TelefoneTipo,
       T17.ISOEntEct_econtact                    as DM_001_EContact,
       T18.ISOEntEctTip_Descricao                as DM_001_EContactTipo,
       T17.ISOEntEctTip_Principal                as DM_001_EContactPrincipal,
	   T01.ISOEntOrg_DataAlteracao               as DM_001_DtAlteracao,
	   T01.ISOEntOrg_UsuarioAlteracao            as DM_001_UsuAlteracao,
	   T23.ISOEntRlc_Codigo                      as DM_001_CodCntCom,
       RTrim(T24.ISOEnt_Nome)                    as DM_001_NomeCntCom,
       Rtrim(T25.ISOEntRlcTip_Descricao)         as DM_001_DscTipRlcCom,
       RTRIM(T26.ISOEntRlcTipNiv_Descricao)      as DM_001_DscTipNivRlcCom,
       RTrim(T31.ISOEmpOri_Descricao)            as DM_001_DscOrigem,
       T30.ISOEmpEnt_Ori_Codigo         as DM_001_CodExterno,
	   T23.ISOEnt_Rlc_Principal					 as DM_001_Ent_Rlc_Principal,

       1						       as MT_001_QtdeEntidades,
       'V_006'                         as DM_001_VersaoVW
  From ISOEntOrganizacao T01
        left Join ISOEntEndereco T02
          On T02.ISOEnt_Codigo         = T01.ISOEntOrg_Codigo
         And T02.ISOEntEnd_Principal   = 'S'
        Left Join ISOLocalidade T03
          On T03.ISOLoc_Codigo         = T02.ISOLoc_Codigo
        Left Join ISOPAIS T05
          On T05.ISOPais_Codigo        = T03.ISOPais_Codigo
        left JOin ISOEstado T04
          On T04.ISOEst_Codigo         = T03.ISOEst_Codigo
         And T04.ISOPais_Codigo        = T05.ISOPais_Codigo
        Left join isoentcliente T07
		  On T01.ISOEntOrg_Codigo      = T07.ISOEntCli_Codigo
        Left Join ISOEntClassificacaoPapel T08
          On T08.ISOEmp_Codigo         = T07.ISOEmp_Codigo
         and T08.ISOEntClaP_Codigo     = T07.ISOEntClaP_Codigo
        Left Join ISOEntSegmento T09
          On T09.ISOEntSeg_Codigo      = T01.ISOEntSeg_Codigo
		Left join ISOEntClassificacao T10
          On T10.ISOEmp_Codigo         = T07.ISOEmp_Codigo
		 and T10.ISOEntCla_Codigo      = T07.ISOEntCla_Codigo
		 and T10.ISOEntCla_Flag = 'A'
		Left join ISOEntClaEspecialidade T11
		  On T11.ISOEmp_codigo         = T07.ISOEmp_Codigo
		 And T11.ISOEntCla_Codigo      = T07.ISOEntCla_Codigo
         and T11.ISOEntClaEsp_codigo   = T07.ISOEntClaEsp_Codigo
		Left join ISOEntClaPEspecialidade T12
		  On T12.ISOEmp_Codigo         = T07.ISOEmp_Codigo
		 And T12.ISOEntClaP_Codigo     = T07.ISOEntClaP_Codigo
		 And T12.ISOEntClaPEsp_Codigo  = T07.ISOEntClaPEsp_Codigo
		Left Join ISOEntRamoAtividade T13
          on T13.ISOEntRamAtv_Codigo   = T01.ISOEntRamAtv_Codigo
		Left join ISOEntCliSituacao T14
		  On T14.ISOEmp_Codigo         = T07.ISOEmp_Codigo
		 And T14.ISOEntCliSit_Codigo   = T07.ISOEntCliSit_Codigo
        Left Join ISOENTTELEFONE T15
          On T15.ISOEnt_Codigo         = T01.ISOEntOrg_Codigo
        Left Join ISOTELTIPO T16
          On T16.ISOTelTip_Codigo      = T15.ISOTelTip_Codigo
        Left Join ISOENTECONTACT T17
          On T17.ISOEnt_Codigo         = T01.ISOEntOrg_Codigo
        Left Join ISOENTECTTIPO T18
          On T18.ISOEntEctTip_Codigo   = T17.ISOEntEctTip_Codigo
	   Left Join ISOEntParceiro T19
	     On T19.ISOEntPar_Codigo       = T01.ISOEntOrg_Codigo
	   Left Join ISOEntFornecedor T20
	     On T20.ISOEntFrn_Codigo       = T01.ISOEntOrg_Codigo
	   Left Join ISOEntUsuario T21
	     On T21.ISOEntUsu_Codigo       = T01.ISOEntOrg_Codigo
	   Left Join ISOEntResponsavel T22
	     On T22.ISOEntRsp_Codigo       = T01.ISOEntOrg_Codigo
       Left Join ISOENT_RELACAO T23
         On T23.ISOEntRle_Codigo       = T01.ISOEntOrg_Codigo
       Left Join ISOENTIDADE T24
         On T24.ISOEnt_Codigo          = T23.ISOEntRlc_Codigo
       Left Join ISOENTRLCTIPO T25
         On T25.ISOEntRlcTip_Codigo    = T23.ISOEntRlcTip_Codigo
       Left Join ISOENTRLCTIPNIVEL T26
         On T26.ISOEntRlcTip_Codigo    = T25.ISOEntRlcTip_Codigo
        And T26.ISOEntRlcTipNiv_Codigo = T23.ISOEntRlcTipNiv_Codigo
       Left Join ISOEMPENT_ORIGEM T30
         On T30.ISOEmpEnt_EntCodigo    = T01.ISOEntOrg_Codigo
       Left Join ISOEMPORIGEM T31
         On T31.ISOEmp_Codigo          = T30.ISOEmp_Codigo
        And T31.ISOEmpOri_Codigo       = T30.ISOEmpOri_Codigo;


-- ConexaoISO.BI_002_isoATN_Atendimentos source

CREATE VIEW BI_002_isoATN_Atendimentos as
Select
       T01.ISOSAAte_Codigo                        as DM_002_CodigoAtendimento,
       Datepart(Year, T01.ISOSAAte_DataAbertura)  as DM_002_AnoAbertura,
	   Case
		When Month(T01.ISOSAAte_DataAbertura) =  1 Then '01.Jan'
		When Month(T01.ISOSAAte_DataAbertura) =  2 Then '02.Fev'
		When Month(T01.ISOSAAte_DataAbertura) =  3 Then '03.Mar'
		When Month(T01.ISOSAAte_DataAbertura) =  4 Then '04.Abr'
		When Month(T01.ISOSAAte_DataAbertura) =  5 Then '05.Mai'
		When Month(T01.ISOSAAte_DataAbertura) =  6 Then '06.Jun'
		When Month(T01.ISOSAAte_DataAbertura) =  7 Then '07.Jul'
		When Month(T01.ISOSAAte_DataAbertura) =  8 Then '08.Ago'
		When Month(T01.ISOSAAte_DataAbertura) =  9 Then '09.Set'
		When Month(T01.ISOSAAte_DataAbertura) = 10 Then '10.Out'
		When Month(T01.ISOSAAte_DataAbertura) = 11 Then '11.Nov'
		When Month(T01.ISOSAAte_DataAbertura) = 12 Then '12.Dez'
	   End										  as DM_002_MesAbertura,
	   Day(T01.ISOSAAte_DataAbertura)             as DM_002_DiaAbertura,
	   T01.ISOSAAte_DataAbertura                  as DM_002_DataAbertura,
	   T01.ISOSAAte_DataFechamento                as DM_002_DataFechamento,
	   T02.ISOEnt_Codigo                          as DM_002_CodigoCliente,
       T02.ISOEnt_Nome                            as DM_002_Entidade,
       T03.ISOSAAteDet_DataRecebimento            as DM_002_DataRecebimento,
       T04.ISOEmpCan_Descricao                    as DM_002_Canal,
       T05.ISOSAMot_Descricao                     as DM_002_Motivo,
       T06.ISOSAMotOcr_Descricao                  as DM_002_Ocorrencia,
       T07.ISOSAMotOcrCau_Descricao               as DM_002_Causa,
	   1                                          as MT_001_QtdeEntidades,
       T08.ISOSASit_Descricao                     as DM_002_SituacaoAtendimento,
       Case
	       When T03.ISOSAAteDet_AtivoReceptivo = 'R' Then 'Receptivo'
	       When T03.ISOSAAteDet_AtivoReceptivo = 'A' Then 'Ativo'
	       Else                                   Null
       End                                        as DM_002_AtivoReceptivo,
       Case
          When T08.ISOSASit_Situacao = 1 Then 'Aberto'
          When T08.ISOSASit_Situacao = 2 Then 'Fechado'
          When T08.ISOSASit_Situacao = 3 Then 'Encaminhar para WorkFlow'
          When T08.ISOSASit_Situacao = 9 Then 'Cancelado'
          Else                                 Null
       End                                        as DM_002_SituacaoTabulada,
       T09.ISOEnt_Nome                            as DM_002_Unidade,
       T10.ISOEnt_Nome                            as DM_002_UsuarioAbertura,
       T01.ISOSAAteEst_Sigla                      as DM_002_UF,
       T01.ISOSAAteLoc_Descricao                  as DM_002_Localidade,
       Case
	       When T25.ISOEntPes_Codigo Is Not Null Then T26.ISOEntSeg_Descricao
		   Else T28.ISOEntSeg_Descricao
	   End                                        as DM_002_Segmento,
       Case
	       When T27.ISOEntORg_Codigo Is Not Null Then T29.ISOEntRamAtv_Descricao
		   Else Null
	   End                                       as DM_002_RamoAtividade,
       T11.ISOEntPes_Sexo                        as DM_002_Sexo,
       T12.ISOProf_Descricao                     as DM_002_Profissao,
       T13.ISONivEsc_Descricao                   as DM_002_NivelEscolaridade,
       T14.ISOEstCiv_Descricao                   as DM_002_EstadoCivil,
	   ----------------
	   Case
           When T30.ISOEntRsp_Codigo = T11.ISOEntPes_Codigo Then 'S'
           Else 'N'
       End										 as DM_002_PapelResponsavel,

	   T17.ISOEntCla_Descricao					 as DM_002_Classificacao,
	   T18.ISOEntClaEsp_Descricao				 as DM_002_Especialidade,
       T16.ISOEntClaP_Descricao					 as DM_002_ClassificacaoPapel,
	   T19.ISOEntClaPEsp_Descricao			     as DM_002_EspecialidadePapel,

	   T20.ISOEntCliSit_Descricao				 as DM_002_SituacaoCliente,
	   Case
			When T11.ISOEntPes_Codigo = T02.ISOEnt_Codigo Then 'P'
			Else 'O'
	   End										 as DM_002_TipoPessoa,
	   (Select COUNT(*)
	      From ISOSAATENDIMENTO TY1
		 Where TY1.ISOEmp_Codigo = T01.ISOEmp_Codigo
		   And TY1.ISOSAAte_Codigo = T01.ISOSAAte_Codigo)
		                                         as DM_002_QtdeDet,
       T31.ISOEmpEnt_Ori_Codigo                  as DM_002_CodExtCli,
	   T32.ISOEmpOri_Descricao                   as DM_002_DscOriCodExtCli,
       RTrim(T33.ISOEntEct_econtact)             as DM_002_DscEContact,
       T34.ISOEntTel_DDD                         as DM_002_DDDCli,
	   T34.ISOEntTel_Telefone                    as DM_002_TelCli,
	   Case
            When T11.ISOEntPes_CPF Is Null Then T27.ISOEntOrg_CNPJ
            Else T11.ISOEntPes_CPF
       End                                       as DM_002_CPJCNPJCli,
       'V.004'                                   as DM_002_VersaoView
  From ISOSAAtendimento T01
       Inner Join ISOEntidade T02 -- Cliente do Atendimento
          On T02.ISOEnt_Codigo        = T01.ISOSAAte_EntCodigo
        Left Join ISOSAAteDetalhe T03
          On T03.ISOEmp_Codigo        = T01.ISOEmp_Codigo
         And T03.ISOSAAte_Codigo      = T01.ISOSAAte_Codigo
         And T03.ISOSAAteDet_Codigo   = (Select Min(TA3.ISOSAAteDet_Codigo)
                                           From ISOSAAteDetalhe TA3
                                          Where TA3.ISOEmp_Codigo   = T03.ISOEmp_Codigo
                                            And TA3.ISOSAAte_Codigo = T03.ISOSAAte_Codigo)
        Left Join ISOEmpCanal T04
          On T04.ISOEmp_Codigo          = T03.ISOEmp_Codigo
         And T04.ISOEmpCan_Codigo       = T03.ISOEmpCan_Codigo
        Left Join ISOSAMotivo T05
          On T05.ISOSAMot_Codigo        = T01.ISOSAMot_Codigo
        Left Join ISOSAMotOcorrencia T06
          On T06.ISOEmp_Codigo          = T05.ISOEmp_Codigo
         And T06.ISOSAMot_Codigo        = T05.ISOSAMot_Codigo
         And T06.ISOSAMotOcr_Codigo     = T01.ISOSAMotOcr_Codigo
        Left Join ISOSAMotOcrCausa T07
          On T07.ISOEmp_Codigo          = T06.ISOEmp_Codigo
         And T07.ISOSAMot_Codigo        = T06.ISOSAMot_Codigo
         And T07.ISOSAMotOcr_Codigo     = T06.ISOSAMotOcr_Codigo
         And T07.ISOSAMotOcrCau_Codigo  = T01.ISOSAMotOcrCau_Codigo
        Left Join ISOSASituacao T08
          On T08.ISOEmp_Codigo          = T01.ISOEmp_Codigo
         And T08.ISOSASit_Codigo        = T01.ISOSASit_Codigo
        Left Join ISOEntidade T09  -- Unidade
          On T09.ISOEnt_Codigo          = T01.ISOEntUnd_Codigo
        Left Join ISOEntidade T10 -- Usuário de abertura
          On T10.ISOEnt_Codigo          = T01.ISOSAAte_UsuCodigo
        Left Join ISOEntPessoa T11
          On T11.ISOEntPes_Codigo       = T01.ISOSAAte_EntCodigo
        Left Join ISOProfissao T12
          On T12.ISOProf_Codigo         = T11.ISOProf_Codigo
        Left Join ISONivEscolaridade T13
          On T13.ISONivEsc_Codigo       = T11.ISONivEsc_Codigo
        Left Join ISOEstCivil T14
          On T14.ISOEstCiv_Codigo       = T11.ISOEstCiv_Codigo
		Left join isoentcliente T15
		  On T01.ISOSAAte_EntCodigo     = T15.ISOEntCli_Codigo
		Left Join ISOEntClassificacaoPapel T16
          On T16.ISOEmp_Codigo          = T15.ISOEmp_Codigo
	     And T16.ISOEntClaP_Codigo      = T15.ISOEntClaP_Codigo
		Left join ISOEntClassificacao T17
          On T17.ISOEmp_Codigo          = T15.ISOEmp_Codigo
	     and T17.ISOEntCla_Codigo       = T15.ISOEntCla_Codigo
         and T17.ISOEntCla_Flag         = 'A'
	    Left join ISOEntClaEspecialidade T18
	      On T18.ISOEmp_codigo          = T15.ISOEmp_Codigo
	     And T18.ISOEntCla_Codigo       = T15.ISOEntCla_Codigo
         And T18.ISOEntClaEsp_codigo    = T15.ISOEntClaEsp_Codigo
	    Left join ISOEntClaPEspecialidade T19
	      On T19.ISOEmp_Codigo          = T15.ISOEmp_Codigo
	     And T19.ISOEntClaP_Codigo      = T15.ISOEntClaP_Codigo
	     And T19.ISOEntClaPEsp_Codigo   = T15.ISOEntClaPEsp_Codigo
        Left join ISOEntCliSituacao T20
          On T20.ISOEmp_Codigo          = T15.ISOEmp_Codigo
         And T20.ISOEntCliSit_Codigo    = T15.ISOEntCliSit_Codigo
	    Left Join ISOEntClassificacaoPapel T21
          On T21.ISOEmp_Codigo          = T15.ISOEmp_Codigo
	     And T21.ISOEntClaP_Codigo      = T15.ISOEntClaP_Codigo
		Left join ISOEntClassificacao T22
          On T22.ISOEmp_Codigo          = T15.ISOEmp_Codigo
	     and T22.ISOEntCla_Codigo       = T15.ISOEntCla_Codigo
         and T22.ISOEntCla_Flag         = 'A'
	    Left join ISOEntClaEspecialidade T23
	      On T23.ISOEmp_codigo          = T15.ISOEmp_Codigo
	     And T23.ISOEntCla_Codigo       = T15.ISOEntCla_Codigo
         And T23.ISOEntClaEsp_codigo    = T15.ISOEntClaEsp_Codigo
	    Left join ISOEntClaPEspecialidade T24
	      On T24.ISOEmp_Codigo          = T15.ISOEmp_Codigo
	     And T24.ISOEntClaP_Codigo      = T15.ISOEntClaP_Codigo
	     And T24.ISOEntClaPEsp_Codigo   = T15.ISOEntClaPEsp_Codigo
        Left Join ISOENTPESSOA T25
	      On T25.ISOEntPes_Codigo       = T01.ISOSAAte_EntCodigo
	    Left Join ISOENTSEGMENTO T26
	      On T26.ISOEntSeg_Codigo       = T25.ISOEntSeg_Codigo
        Left Join ISOENTOrganizacao T27
	      On T27.ISOEntOrg_Codigo       = T01.ISOSAAte_EntCodigo
	    Left Join ISOENTSEGMENTO T28
	      On T28.ISOEntSeg_Codigo       = T27.ISOEntSeg_Codigo
        Left Join ISOEntRamoAtividade T29
	      On T29.ISOEntRamAtv_Codigo    = T27.ISOEntRamAtv_Codigo
	    Left Join ISOENTRESPONSAVEL T30
	      On T30.ISOEntRsp_Codigo       = T11.ISOEntPes_Codigo
        Left Join ISOEMPENT_ORIGEM T31
          On T31.ISOEmp_Codigo          = T01.ISOEmp_Codigo
         And T31.ISOEmpEnt_EntCodigo    = T01.ISOSAAte_EntCodigo
        Left Join ISOEMPORIGEM T32
          On T32.ISOEmp_Codigo          = T31.ISOEmp_Codigo
         And T32.ISOEmpOri_Codigo       = T31.ISOEmpOri_Codigo
        Left Join ISOENTECONTACT T33
          On T33.ISOEnt_Codigo          = T01.ISOSAAte_EntCodigo
         And T33.ISOEntEctTip_Principal = 'S'
        Left JOin ISOENTTELEFONE T34
          On T34.ISOEnt_Codigo          = T01.ISOSAAte_EntCodigo
		 And T34.ISOEntTel_Principal    = 'S';


-- ConexaoISO.BI_005_isoMKT_Campanha source

CREATE VIEW BI_005_isoMKT_Campanha as
/*
Autor      :


Alteraï¿½ï¿½o  : Edison
Data       : 06/05/2014
Atendimento: 11070

Alteraï¿½ï¿½o  : Diogo
Data       : 13/04/2015
Atendimento: 13028

Alteraï¿½ï¿½o  : Edison
Data       : 16/08/2016
Atendimento: 15686

Alteraï¿½ï¿½o  : Edison
Data       : 26/03/2019
Atendimento: 29091

*/
Select T01.ISOMKAteCmp_Codigo                    as DM_005_CampCodigo,
       T01.ISOMKAteCmp_Descricao                 as DM_005_Campanha,
       T02.ISOMkDiv_Descricao                    as DM_005_FormaDeDivulgacao,
       T03.ISOMKFin_Descricao                    as DM_005_Finalidade,
	   T05.ISOEnt_Codigo                         as DM_005_CodEntidade,
       RTrim(T05.ISOEnt_Nome)                    as DM_005_Entidade,
       Case
           When T04.ISOMkAteCmpCnt_Prioridade = 1 Then 'ALTA'
           When T04.ISOMkAteCmpCnt_Prioridade = 2 Then 'Mï¿½DIA'
           When T04.ISOMkAteCmpCnt_Prioridade = 3 Then 'BAIXA'
           Else                                        'Nï¿½O DEFINIDA'
       End                                       as DM_005_Prioridade,
       Case
           When T06.ISOEntSeg_Codigo Is Not Null Then T07.ISOEntSeg_Descricao
           When T08.ISOEntSeg_Codigo Is Not Null Then T09.ISOEntSeg_Descricao
           Else                                  'Nï¿½O INFORMADO'
       End                                       as DM_005_Segmento,
       T10.ISOEntRamAtv_Descricao                as DM_005_RamoDeAtividade,
       Case
           When T08.ISOEntPes_Sexo = 'M' Then 'MASCULINO'
           When T08.ISOEntPes_Sexo = 'F' Then 'FEMININO'
           When T08.ISOEntPes_Sexo = 'N' Then 'Nï¿½O INFORMADO'
           Else                                Null
       End                                       as DM_005_Sexo,
       RTrim(T11.ISOProf_Descricao)              as DM_005_Profissao,
       RTRIM(T12.ISONivEsc_Descricao)            as DM_005_NivelEscolaridade,
       RTRIM(T13.ISOEstCiv_Descricao)            as DM_005_EstadoCivil,
	   T14.ISOMKCntSit_Codigo                    as DM_005_CodSituacao,
       RTRIM(T14.ISOMKCntSit_Descricao)          as DM_005_Situacao,
	   T14.ISOMkCntSit_SituacaoTabulada          as DM_005_CodSitTabulada,
	   Case T14.ISOMkCntSit_SituacaoTabulada
	       When 0 Then 'Encaminhado'
		   When 1 Then 'Concluï¿½do'
		   When 2 Then 'Em Atendimento'
		   When 3 Then 'Encaminhar para WorkFlow'
		   When 9 Then 'Cancelado'
		   Else 'Nï¿½o Informado'
	   End                                       as DM_005_DscSitTabulada,
       RTRIM(T16.ISOMKFinRsl_Descricao)          as DM_005_Resultado,
       RTRIM(T17.ISOMKFinCla_Descricao)          as DM_005_Classificacao,
       RTRIM(T18.ISOEnt_Nome)                    as DM_005_Agente,
       T15.ISOMKAteCmpCntDet_DataAlteraca        as DM_005_DataUltimoContato,
       Year(T15.ISOMKAteCmpCntDet_DataAlteraca)  as DM_005_AnoUltimoContato,
       Month(T15.ISOMKAteCmpCntDet_DataAlteraca) as DM_005_MesUltimoContato,
	   RTrim(T19.ISOEnt_Nome)                    as DM_005_Responsavel,
	   RTrim(T20.ISOEnt_Nome)                    as DM_005_UsuarioAlteracao,
	   T05.ISOEnt_DataCadastro                   as DM_005_DataCadastroContato,
	   Year(T05.ISOEnt_DataCadastro)             as DM_005_AnoCadastroContato,
       Month(T05.ISOEnt_DataCadastro)            as DM_005_MesCadastroContato,
	   T15.ISOMkAteCmpCntDet_DataInicialR        as DM_005_DataIniReagContato,
	   Year(T15.ISOMkAteCmpCntDet_DataInicialR)  as DM_005_AnoIniReagContato,
       Month(T15.ISOMkAteCmpCntDet_DataInicialR) as DM_005_MesIniReagContato,
	   T15.ISOMkAteCmpCntDet_DataFinalRea        as DM_005_DataFinalReagContato,
	   Year(T15.ISOMkAteCmpCntDet_DataFinalRea)  as DM_005_AnoFinalReagContato,
       Month(T15.ISOMkAteCmpCntDet_DataFinalRea) as DM_005_MesFinalReagContato,

       1                                         as MT_005_QuantidadeContatos,
       'V.003'                          as DM_005_VersaoVW
  From ISOMKAteCampanha T01
       Inner Join ISOMKDIVULGACAO T02
          On T02.ISOEmp_Codigo               = T01.ISOEmp_Codigo
         And T02.ISOMkDiv_Codigo             = T01.ISOMkDiv_Codigo
       Inner Join ISOMKFINALIDADE T03
          On T03.ISOEmp_Codigo               = T01.ISOEmp_Codigo
         And T03.ISOMkFin_Codigo             = T01.ISOMkFin_Codigo
       Inner Join ISOMKATECMPCONTATO T04
          On T04.ISOEmp_Codigo               = T01.ISOEmp_Codigo
         And T04.ISOMkAteCmp_Codigo          = T01.ISOMkAteCmp_Codigo
       Inner Join ISOEntidade T05 -- Entidade Contatada
          On T05.ISOEnt_Codigo               = T04.ISOMkAteCmpCnt_EntCodigo
        Left Join ISOENTORGANIZACAO T06
          On T06.ISOEntOrg_Codigo            = T04.ISOMkAteCmpCnt_EntCodigo
        Left Join ISOENTSEGMENTO T07
          On T07.ISOEntSeg_Codigo            = T06.ISOEntSeg_Codigo
        Left Join ISOENTPESSOA T08
          On T08.ISOEntPes_Codigo            = T04.ISOMkAteCmpCnt_EntCodigo
        Left Join ISOENTSEGMENTO T09
          On T09.ISOEntSeg_Codigo            = T08.ISOEntSeg_Codigo
        Left Join ISOENTRAMOATIVIDADE T10
          On T10.ISOEntRamAtv_Codigo         = T06.ISOEntRamAtv_Codigo
        Left Join ISOPROFISSAO T11
          On T11.ISOProf_Codigo              = T08.ISOProf_Codigo
        Left Join ISONIVESCOLARIDADE T12
          On T12.ISONivEsc_Codigo            = T08.ISONivEsc_Codigo
        Left Join ISOESTCIVIL T13
          On T13.ISOEstCiv_Codigo            = T08.ISOEstCiv_Codigo
        Left Join ISOMKCNTSITUACAO T14
          On T14.ISOMkCntSit_Codigo          = T04.ISOMkCntSit_Codigo
        Left Join ISOMKATECMPCNTDETALHE T15
          On T15.ISOEmp_Codigo               = T04.ISOEmp_Codigo
         And T15.ISOMkAteCmp_Codigo          = T04.ISOMkAteCmp_Codigo
         And T15.ISOMkAteCmpCnt_Sequencia    = T04.ISOMkAteCmpCnt_Sequencia
         And T15.ISOMkAteCmpCntDet_Sequencia = (Select MAX(TA1.ISOMKAteCmpCntDet_Sequencia)
                                                  From ISOMKATECMPCNTDETALHE TA1
                                                 Where TA1.ISOEmp_Codigo            = T15.ISOEmp_Codigo
                                                   And TA1.ISOMkAteCmp_Codigo       = T15.ISOMkAteCmp_Codigo
                                                   And TA1.ISOMkAteCmpCnt_Sequencia = T15.ISOMkAteCmpCnt_Sequencia)
        Left Join ISOMKFINRESULTADO T16
          On T16.ISOEmp_Codigo               = T03.ISOEmp_Codigo
         And T16.ISOMkFin_Codigo             = T03.ISOMkFin_Codigo
         And T16.ISOMkFinRsl_Codigo          = T15.ISOMkFinRsl_Codigo
        Left Join ISOMKFINCLASSIFICACAO T17
          On T17.ISOEmp_Codigo               = T03.ISOEmp_Codigo
         And T17.ISOMkFin_Codigo             = T03.ISOMkFin_Codigo
         And T17.ISOMkFinCla_Codigo          = T15.ISOMkFinCla_Codigo
        Left Join ISOENTIDADE T18 -- Agente
          On T18.ISOEnt_Codigo               = T15.ISOMkAteCmpCntDet_CodigoAgente
        Left Join ISOEntidade T19 -- Responsï¿½vel
		  On T19.ISOEnt_Codigo               = T15.ISOMkAteCmpCntDet_CodigoRespon
	    Left Join ISOEntidade T20 -- Usuï¿½rio de alteraï¿½ï¿½o
		  On T20.ISOEnt_Codigo               = T15.ISOMkAteCmpCntDet_UsuarioAlter;


-- ConexaoISO.BI_010_isoPQ_Pesquisa source

CREATE VIEW BI_010_isoPQ_Pesquisa as -- Para alterar
Select T01.ISOEmp_Codigo                     as DM_Empresa,
       T03.ISOPQPes_Descricao                as DM_DescPesq,
       T04.ISOPQAtendimentoAttName           as DM_DescPergunta,
       T04.ISOPQAtendimentoAttCategory       as DM_DescCategoria,
       Case
           When T04.ISOPQAtendimentoAttType = 0 Or T04.ISOPQAtendimentoAttType = 1 Or T04.ISOPQAtendimentoAttType = 2 Or T04.ISOPQAtendimentoAttType = 3
                Then T01.ISOPQAtendimentoAttValue
           When T04.ISOPQAtendimentoAttType = 5
                Then T01.ISOPQAtendimentoAttValueLong
           When T04.ISOPQAtendimentoAttType = 4
                Then T12.ISOPQAtendimentoAttOptValue
       End                                   as DM_Resposta,
       T01.ISOPQAtendimentoAttOtherValue     as DM_RespOutroValor,
       T06.ISOEnt_Nome                       as DM_NomeEntidade,
       T07.ISOEntEct_econtact                as DM_EmailEntidade,
       T08.ISOEntTel_DDD                     as DM_DDDTelefone,
       T08.ISOEntTel_Telefone                as DM_Telefone,
       T09.ISOPQCntSit_Descricao             as DM_DescrSituacao,
       T11.ISOPQPnt_Descricao                as DM_DescPontuacao,
       T04.ISOPQAtendimentoAttCategoryOrd    as DM_CategoriaOrdem,
       T04.ISOPQAtendimentoAttPosId          as DM_PerguntaPosicao,
       'V.002'                               as DM_Versao,
       1                                     as MT_Qtde,
       T10.ISOPQAtePnt_Pontucao              as MT_QtdePontos
  From ISOPQATENDIMENTOATTVALUES T01
       Inner join ISOPQATENDIMENTO T02
          On T02.ISOEmp_Codigo            = T01.ISOEmp_Codigo
         And T02.ISOPQAte_Codigo          = T01.ISOPQAte_Codigo
       Inner Join ISOPQPESQUISA T03
          On T03.ISOEmp_Codigo            = T01.ISOEmp_Codigo
         And T03.ISOPQPes_Codigo          = T02.ISOPQPes_Codigo
       Inner Join ISOPQATENDIMENTOATT T04
          On T04.ISOPQAtendimentoAttId    = T01.ISOPQAtendimentoAttId
        Left Join ISOPQATENDIMENTOATTLEVEL1 T05
          On T05.ISOPQAtendimentoAttId    = T04.ISOPQAtendimentoAttId
         And T05.ISOPQAtendimentoAttOptId = T01.ISOPQAtendimentoAttOptId
       Inner Join ISOENTIDADE T06
          On T06.ISOEnt_Codigo            = T02.ISOEntCli_Codigo
        Left Join ISOEntEContact T07
          On T07.ISOEnt_Codigo            = T06.ISOEnt_Codigo
         And T07.ISOEntEctTip_Principal   = 'S'
        Left Join ISOENTTELEFONE T08
          On T08.ISOEnt_Codigo            = T06.ISOEnt_Codigo
         And T08.ISOEntTel_Principal      = 'S'
       Inner Join ISOPQCNTSITUACAO T09
          On T09.ISOEmp_Codigo            = T02.ISOEmp_Codigo
         And T09.ISOPQCntSit_Codigo       = T02.ISOPQCntSit_Codigo
        Left Join ISOPQATEPONTUACAO T10
          On T10.ISOPQAtendimentoAttId    = T01.ISOPQAtendimentoAttId
         And T10.ISOPQAtendimentoAttOptId = T01.ISOPQAtendimentoAttOptId
        Left Join ISOPQPONTUACAO T11
          On T11.ISOEmp_Codigo            = T02.ISOEmp_Codigo
         And T11.ISOPQPnt_Codigo          = T10.ISOPQAtePnt_Codigo
        Left Join ISOPQATENDIMENTOATTLEVEL1 T12
          On T12.ISOPQAtendimentoAttId    = T01.ISOPQAtendimentoAttId
         And T12.ISOPQAtendimentoAttOptId = T01.ISOPQAtendimentoAttOptId;


-- ConexaoISO.BI_011_isoPQ_Campanha source

CREATE VIEW BI_011_isoPQ_Campanha as
Select T01.ISOEmp_Codigo                           as DM_Empresa,
       T01.ISOMkAteCmp_Descricao                   as DM_Campanha,
       T04.ISOPQAtendimentoAttCategory             as DM_Categoria,
       T06.ISOEnt_Nome                             as DM_NomeCliente,
       T07.ISOEntTel_DDD                           as DM_DDDTelefone,
       T07.ISOEntTel_Telefone                      as DM_Telefone,
       T13.ISOMKCntSit_Descricao                   as DM_Situacao,
       Case
           When T09.ISOMkFinCla_Codigo > 0
                Then T10.ISOMkFinCla_Descricao
           When T09.ISOMkFinRsl_Codigo > 0
                Then T11.ISOMkFinRsl_Descricao
           Else 'Sem Resultado/Classificaï¿½ï¿½o'
       End                                         as DM_FinResultadoClassificacao,
       T04.ISOPQAtendimentoAttName                 as DM_Pergunta,
       Case
           When T04.ISOPQAtendimentoAttType = 0 Or
                T04.ISOPQAtendimentoAttType = 1 Or
                T04.ISOPQAtendimentoAttType = 2 Or
                T04.ISOPQAtendimentoAttType = 3
                Then T03.ISOPQAtendimentoAttValue
           When T04.ISOPQAtendimentoAttType = 5
                Then T03.ISOPQAtendimentoAttValueLong
           When T04.ISOPQAtendimentoAttType = 4
                Then T12.ISOPQAtendimentoAttOptValue
       End                                         as DM_Resposta,
       T14.ISOMkDiv_Descricao                      as DM_Divulgacao,
       T08.ISOMkFin_Descricao                      as DM_Finalidade,
       T04.ISOPQAtendimentoAttCategoryOrd          as DM_CategoriaOrdem,
       T04.ISOPQAtendimentoAttPosId                as DM_PerguntaPosicao,
       'V.002'									   as DM_Versao,
       1                                           as MT_Qtde
  From ISOMKAteCampanha T01
       Inner Join ISOPQAtendimento T02
          On T02.ISOEmp_Codigo            = T01.ISOEmp_Codigo
         And T02.ISOPQPes_Codigo          = T01.ISOPQPes_Codigo
       Inner Join ISOPQATENDIMENTOATTVALUES T03
          On T03.ISOEmp_Codigo            = T02.ISOEmp_Codigo
         And T03.ISOPQAte_Codigo          = T02.ISOPQAte_Codigo
       Inner Join ISOPQATENDIMENTOATT T04
          On T04.ISOPQAtendimentoAttId    = T03.ISOPQAtendimentoAttId
        Left Join ISOMKATECMPCONTATO T05
          On T05.ISOEmp_Codigo            = T01.ISOEmp_Codigo
         And T05.ISOMkAteCmp_Codigo       = T01.ISOMkAteCmp_Codigo
        Left Join ISOENTIDADE T06
          On T06.ISOEnt_Codigo            = T05.ISOMkAteCmpCnt_EntCodigo
        Left Join ISOENTTELEFONE T07
          On T07.ISOEnt_Codigo            = T06.ISOEnt_Codigo
         And T07.ISOEntTel_Principal      = 'S'
        Left Join ISOMKFINALIDADE T08
          On T08.ISOEmp_Codigo            = T01.ISOEmp_Codigo
         And T08.ISOMkFin_Codigo          = T01.ISOMkFin_Codigo
        Left Join ISOMKATECMPCNTDETALHE T09
          On T09.ISOEmp_Codigo            = T05.ISOEmp_Codigo
         And T09.ISOMkAteCmp_Codigo       = T05.ISOMkAteCmp_Codigo
         And T09.ISOMkAteCmpCnt_Sequencia = T05.ISOMkAteCmpCnt_Sequencia
        Left Join ISOMKFINCLASSIFICACAO T10
          On T10.ISOEmp_Codigo            = T08.ISOEmp_Codigo
         And T10.ISOMkFin_Codigo          = T08.ISOMkFin_Codigo
         And T10.ISOMkFinCla_Codigo       = T09.ISOMkFinCla_Codigo
        Left Join ISOMKFINRESULTADO T11
          On T11.ISOEmp_Codigo            = T08.ISOEmp_Codigo
         And T11.ISOMkFin_Codigo          = T08.ISOMkFin_Codigo
         And T11.ISOMkFinRsl_Codigo       = T09.ISOMkFinRsl_Codigo
        Left Join ISOPQATENDIMENTOATTLEVEL1 T12
          On T12.ISOPQAtendimentoAttId    = T03.ISOPQAtendimentoAttId
         And T12.ISOPQAtendimentoAttOptId = T03.ISOPQAtendimentoAttOptId
        Left Join ISOMKCNTSITUACAO T13
          On T13.ISOEmp_Codigo            = T05.ISOEmp_Codigo
         And T13.ISOMkCntSit_Codigo       = T05.ISOMkCntSit_Codigo
       Inner Join ISOMKDIVULGACAO T14
          On T14.ISOEmp_Codigo            = T01.ISOEmp_Codigo
         And T14.ISOMkDiv_Codigo          = T01.ISOMkDiv_Codigo;


-- ConexaoISO.BI_012_AtendimentosSACporhora source

CREATE VIEW BI_012_AtendimentosSACporhora as
/*
Autor        : Diogo
Data Criação :

Alteração    : Edison T Washimi
Data         : 26/12/2013
Atendimento  : 10152

Alteração    : Edison T Washimi
Data         : 26/02/2014
Atendimento  : 10525

Alteração    : Edison T Washimi
Data         : 03/04/2014
Atendimento  : 10718

Alteração    : Edison T Washimi
Data         : 18/09/2018
Atendimento  : 28022

Alteração    : Edison T Washimi
Data         : 18/06/2019
Atendimento  : 29697

*/
Select
       T01.ISOEmp_Codigo                          as DM_012_CodEmpresa,
       Year(T01.ISOSAAte_DataAbertura)            as DM_012_AnoAbertura,
       Case Month(T01.ISOSAAte_DataAbertura)
           When  1 Then '01.Jan'
           When  2 Then '02.Fev'
           When  3 Then '03.Mar'
           When  4 Then '04.Abr'
           When  5 Then '05.Mai'
           When  6 Then '06.Jun'
           When  7 Then '07.Jul'
           When  8 Then '08.Ago'
           When  9 Then '09.Set'
           When 10 Then '10.Out'
           When 11 Then '11.Nov'
           When 12 Then '12.Dez'
       End                                        as DM_012_MesAbertura,
       T02.ISOEnt_Nome                            as DM_012_Entidade,
       T01.ISOSAAte_Codigo						  as DM_012_NumeroAtendimento,
       T01.ISOSAAte_DataAbertura                  as DM_012_DataAbertura,
       T03.ISOSAAteDet_DataRecebimento            as DM_012_DataRecebimento,
--       CONVERT(INTEGER,CONVERT(VARCHAR(2),T01.ISOSAAte_DataAbertura,114)) as DM_012_Hora,
       DATEPART(Hour,T01.ISOSAAte_DataAbertura)   as DM_012_Hora,
       Case
	      When T01.ISOSAAte_DataFechamento = '1753-01-01 00:00:00.000' Then NULL
	      When T01.ISOSAAte_DataFechamento IS NULL                     Then NULL
	      When T01.ISOSAAte_DataAbertura   = '1753-01-01 00:00:00.000' Then NULL
	      When T01.ISOSAAte_DataAbertura   IS NULL                     Then NULL
	      Else convert(decimal,right(datediff(SECOND,  T01.ISOSAAte_DataAbertura, T01.ISOSAAte_DataFechamento),10))/86400

	   End										  as MT_012_DiasDecimal,
       Case
	      When T01.ISOSAAte_DataFechamento = '1753-01-01 00:00:00.000' Then NULL
	      When T01.ISOSAAte_DataFechamento IS NULL                     Then NULL
	      When T01.ISOSAAte_DataAbertura   = '1753-01-01 00:00:00.000' Then NULL
	      When T01.ISOSAAte_DataAbertura   IS NULL                     Then NULL
	      Else convert(decimal,right(datediff(SECOND,  T01.ISOSAAte_DataAbertura, T01.ISOSAAte_DataFechamento),10))/3600
	   End										  as MT_012_HorasDecimal,
       T04.ISOEmpCan_Descricao                    as DM_012_Canal,
       T05.ISOSAMot_Descricao                     as DM_012_Motivo,
       T06.ISOSAMotOcr_Descricao                  as DM_012_Ocorrencia,
       T07.ISOSAMotOcrCau_Descricao               as DM_012_Causa,
       T08.ISOSASit_Descricao                     as DM_012_SituacaoSac,
       Case
          When T08.ISOSASit_Situacao = 1 Then 'Aberto'
          When T08.ISOSASit_Situacao = 2 Then 'Fechado'
          When T08.ISOSASit_Situacao = 3 Then 'Encaminhar para WorkFlow'
          When T08.ISOSASit_Situacao = 9 Then 'Cancelado'
          Else                                 Null
       End                                        as DM_012_SituacaoTabulada,
       T09.ISOEnt_Nome                            as DM_012_Unidade,
       T10.ISOEnt_Nome                            as DM_012_UsuarioAbertura,
       T01.ISOSAAteEst_Sigla                      as DM_012_UF,
       T01.ISOSAAteLoc_Descricao                  as DM_012_Localidade,
       T02.ISOEnt_Codigo                          as DM_012_CodigoEntidade,
       Case
           When T18.ISOEntOrg_Codigo = T01.ISOSAAte_EntCodigo Then T19.ISOEntSeg_Descricao
           When T11.ISOEntPes_Codigo = T01.ISOSAAte_EntCodigo Then T20.ISOEntSeg_Descricao
           Else Null
       End           as DM_012_Segmento,
       Case
           When T18.ISOEntOrg_Codigo = T01.ISOSAAte_EntCodigo Then T21.ISOEntRamAtv_Descricao
           Else Null
       End                                        as DM_012_RamoAtividade,
       T11.ISOEntPes_Sexo                         as DM_012_Sexo,
       T12.ISOProf_Descricao                      as DM_012_Profissao,
       T13.ISONivEsc_Descricao                    as DM_012_NivelEscolaridade,
       T14.ISOEstCiv_Descricao                    as DM_012_EstadoCivil,
       Case
           When T01.ISOSAAte_DataFechamento = '1753-01-01' Then Null
           When Month(T01.ISOSAAte_DataFechamento)=  1 Then '01.Jan'
           When Month(T01.ISOSAAte_DataFechamento)=  2 Then '02.Fev'
           When Month(T01.ISOSAAte_DataFechamento)=  3 Then '03.Mar'
           When Month(T01.ISOSAAte_DataFechamento)=  4 Then '04.Abr'
           When Month(T01.ISOSAAte_DataFechamento)=  5 Then '05.Mai'
           When Month(T01.ISOSAAte_DataFechamento)=  6 Then '06.Jun'
           When Month(T01.ISOSAAte_DataFechamento)=  7 Then '07.Jul'
           When Month(T01.ISOSAAte_DataFechamento)=  8 Then '08.Ago'
           When Month(T01.ISOSAAte_DataFechamento)=  9 Then '09.Set'
           When Month(T01.ISOSAAte_DataFechamento)= 10 Then '10.Out'
           When Month(T01.ISOSAAte_DataFechamento)= 11 Then '11.Nov'
           When Month(T01.ISOSAAte_DataFechamento)= 12 Then '12.Dez'
           Else Null
       End                                       as DM_012_MesEncerramento,
       Case
            When T01.ISOSAAte_DataFechamento = '1753-01-01' Then Null
            Else T01.ISOSAAte_DataFechamento
       End                                       as DM_012_DataEncerramento,
       T16.ISOSA_PvIte_PedCodigo                 As DM_012_NrPedido,
	   Case
	       When T01.ISOSAAte_DataFechamento = '1753-01-01' Or T01.ISOSAAte_DataFechamento Is null Then 0
		   Else DATEDIFF(Day, T01.ISOSAAte_DataAbertura, T01.ISOSAAte_DataFechamento)
	   End                                       As DM_012_DiasAberto,
	   T17.ISOPvPed_CodigoExterno                as DM_012_NumPedidoExterno,


       (Select COUNT(*) From ISOSAATEDETALHE TQtde
         Where TQtde.ISOEmp_Codigo   = T01.ISOEmp_Codigo
           And TQtde.ISOSAAte_Codigo = T01.ISOSAAte_Codigo)
                                                 as MT_012_NumLigacoes,
       T22.ISOEnt_Nome                           as DM_012_NomeLocCompra,
	   T01.ISOSAAte_LocalCompra                  as DM_012_CodLocCompra,
	   T01.ISOSAAte_LocCmpEndereco               as DM_012_LocCmpEndereco,
	   T01.ISOSAAte_LocCmpTelefone               as DM_012_LocCmpTelefone,
	   T15.ISOEntClaP_Codigo                     as DM_012_CodClaPapel,
	   T23.ISOEntClaP_Descricao                  as DM_012_DscClaPapel,
	   Replicate('0', 2-Len(RTrim(Cast(DatePart(Hour, ISOSAAte_DataAbertura) as char(2))))) + RTrim(Cast(DatePart(Hour, ISOSAAte_DataAbertura) as char(2))) + ':' + Replicate('0', 2-Len(RTrim(Cast(DatePart(MINUTE, ISOSAAte_DataAbertura) as char(2))))) + RTrim(Cast(DatePart(MINUTE, ISOSAAte_DataAbertura) as char(2)))
	                                             as DM_012_HR,
       1                                         as MT_012_Qtde_Quantidade,

       'V.005'                                   as DM_012_VersaoView
  From ISOSAAtendimento T01
       Inner Join ISOEntidade T02
          On T02.ISOEnt_Codigo       = T01.ISOSAAte_EntCodigo
        Left Join ISOSAAteDetalhe T03
          On T03.ISOEmp_Codigo       = T01.ISOEmp_Codigo
         And T03.ISOSAAte_Codigo     = T01.ISOSAAte_Codigo
         And T03.ISOSAAteDet_Codigo  = (Select Min(TA3.ISOSAAteDet_Codigo)
                                          From ISOSAAteDetalhe TA3
                                         Where TA3.ISOEmp_Codigo       = T03.ISOEmp_Codigo
                                           And TA3.ISOSAAte_Codigo     = T03.ISOSAAte_Codigo)
        Left Join ISOEmpCanal T04
          On T04.ISOEmp_Codigo         = T03.ISOEmp_Codigo
         And T04.ISOEmpCan_Codigo      = T03.ISOEmpCan_Codigo
        Left Join ISOSAMotivo T05
          On T05.ISOSAMot_Codigo       = T01.ISOSAMot_Codigo
        Left Join ISOSAMotOcorrencia T06
          On T06.ISOEmp_Codigo         = T05.ISOEmp_Codigo
         And T06.ISOSAMot_Codigo       = T05.ISOSAMot_Codigo
         And T06.ISOSAMotOcr_Codigo    = T01.ISOSAMotOcr_Codigo
        Left Join ISOSAMotOcrCausa T07
          On T07.ISOEmp_Codigo         = T06.ISOEmp_Codigo
         And T07.ISOSAMot_Codigo       = T06.ISOSAMot_Codigo
         And T07.ISOSAMotOcr_Codigo    = T06.ISOSAMotOcr_Codigo
         And T07.ISOSAMotOcrCau_Codigo = T01.ISOSAMotOcrCau_Codigo
        Left Join ISOSASituacao T08
          On T08.ISOEmp_Codigo         = T01.ISOEmp_Codigo
         And T08.ISOSASit_Codigo       = T01.ISOSASit_Codigo
        Left Join ISOEntidade T09
          On T09.ISOEnt_Codigo         = T01.ISOEntUnd_Codigo
        Left Join ISOEntidade T10
          On T10.ISOEnt_Codigo         = T01.ISOSAAte_UsuCodigo
        Left Join ISOEntPessoa T11
          On T11.ISOEntPes_Codigo      = T01.ISOSAAte_EntCodigo
        Left Join ISOProfissao T12
          On T12.ISOProf_Codigo        = T11.ISOProf_Codigo
        Left Join ISONivEscolaridade T13
          On T13.ISONivEsc_Codigo      = T11.ISONivEsc_Codigo
        Left Join ISOEstCivil T14
          On T14.ISOEstCiv_Codigo      = T11.ISOEstCiv_Codigo
		Left join isoentcliente T15
		  On T01.ISOSAAte_EntCodigo    = T15.ISOEntCli_Codigo
        Left Join ISOSA_PVItem T16
          On T16.ISOEmp_Codigo            = T01.ISOEmp_Codigo
         And T16.ISOSA_PvIte_AteCodigo    = T01.ISOSAAte_Codigo
        Left Join ISOPvPedido T17
		  ON T17.ISOEmp_Codigo          = T16.ISOEmp_Codigo
         And T17.ISOPvPed_Codigo        = T16.ISOSA_PvIte_PedCodigo
	    Left Join ISOENTORGANIZACAO T18
		  On T18.ISOEntOrg_Codigo       = T01.ISOSAAte_EntCodigo
		Left Join ISOENTSEGMENTO T19
		  On T19.ISOEntSeg_Codigo       = T18.ISOEntSeg_Codigo
		Left JOin ISOENTSEGMENTO T20
		  ON T20.ISOEntSeg_Codigo       = T11.ISOEntSeg_Codigo
		Left Join ISOENTRAMOATIVIDADE T21
		  On T21.ISOEntRamAtv_Codigo    = T18.ISOEntRamAtv_Codigo
        Left Join ISOENTIDADE T22 -- Local de Compra
		  On T22.ISOEnt_Codigo          = T01.ISOSAAte_LocalCompra
        Left Join ISOENTCLASSIFICACAOPAPEL T23
          On T23.ISOEmp_Codigo          = T15.ISOEmp_Codigo
         And T23.ISOEntClaP_Codigo      = T15.ISOEntClaP_Codigo;


-- ConexaoISO.BI_013_isoAtvDet_Apontamentos source

CREATE VIEW BI_013_isoAtvDet_Apontamentos as -- Para Alterar a view

Select T4.isoatvatv_descricao            as DM_Atividade,
       T3.isoatvprj_descricao            as DM_Projeto,
       T2.isorspatv_sac                  as DM_NrAtendimento,
       T5.isoent_nome                    as DM_Cliente,
       T6.isoent_nome                    as DM_Responsavel,
       T1.isorspatvdet_inicio            as DM_DataInicial,
       T1.isorspatvdet_fim               as DM_DataFinal,
       Year(t1.isorspatvdet_inicio)      as DM_AnoInicial,
       Month(t1.isorspatvdet_inicio)     as DM_MesInicial,
	   T2.ISOAtvCls_Codigo               as DM_AtvClassifCodigo,
	   t7.ISOAtvCls_Descricao            as DM_AtvClassifDescricao,
       T1.isorspatvdet_totalhorasdecimal as MT_QtdeHoras,
	   T2.ISORspAtv_QtdeHorasPrevistas / (select count(*) from isorspatvdetalhe where ISOEmp_Codigo = T2.ISOEmp_Codigo AND ISORspAtv_Codigo = T2.ISORspAtv_Codigo) as MT_HorasPrevistas
  From isorspatvdetalhe t1
       inner join isorspatividade t2
          on t1.isoemp_codigo        = t2.isoemp_codigo
         and t1.isorspatv_codigo     = t2.isorspatv_codigo
       inner join isoatvprojeto t3
          on t1.isoemp_codigo        = t3.isoemp_codigo
         and t2.isoatvprj_codigo     = t3.isoatvprj_codigo
       inner join isoatvatividade t4
          on t1.isoemp_codigo        = t4.isoemp_codigo
         and t2.isoatvatv_codigo     = t4.isoatvatv_codigo
       inner join isoentidade t5
          on  t2.isorspatv_clicodigo = t5.isoent_codigo
       inner join isoentidade t6
          on t2.isorspatv_rspcodigo  = t6.isoent_codigo
	   left join ISOAtvClassificacao t7
		  on t7.ISOAtvCls_Codigo = T2.ISOAtvCls_Codigo;


-- ConexaoISO.BI_014A_isoAtv_Apontamentos source

CREATE VIEW BI_014A_isoAtv_Apontamentos as -- Para criar a view

Select T02.isorspatv_sac                  as DM_014_SacCodigo,
       T07.isosaatedet_descricao          as DM_014_SacDescricao,
       T04.isoatvatv_descricao            as DM_014_Atividade,
       T03.isoatvprj_descricao            as DM_014_Projeto,
       Substring( T05.isoent_nome, 1, CHARINDEX(' ', T05.isoent_nome) ) as DM_014_Cliente,
       T06.isoent_nome                    as DM_014_Responsavel,
       T01.isorspatvdet_inicio            as DM_014_DataInicial,
       Substring(Convert(Char(25), T01.isorspatvdet_inicio, 121), 11, 12) as DM_014_Hora,
       Year(T01.isorspatvdet_inicio)      as DM_014_AnoInicial,
       Month(T01.isorspatvdet_inicio)     as DM_014_MesInicial,
	   T09.ISOSAMot_Descricao             as DM_014_Motivo,
	   Case T10.ISOSASit_Situacao
	        When 1 Then 'Aberto'
			When 2 Then 'Fechado'
			When 3 Then 'Encaminhar para Work Flow'
			When 9 Then 'Cancelado'
			Else 'Nï¿½o informado'
	   End                                as DM_014_SitInterna,
       T01.isorspatvdet_totalhorasdecimal as MT_014_QtdeHoras,
	   1                                  as MT_014_Qtde,
case (select count(*) from isorspatvdetalhe T101
			 Inner join isorspatividade T102
			    On T101.isoemp_codigo       = T102.isoemp_codigo and
					T101.isorspatv_codigo    = T102.isorspatv_codigo
			   Left Join ISOSAAtendimento T108
			     On T108.ISOEmp_Codigo       = T102.ISOEmp_Codigo
				And T108.ISOSAAte_Codigo     = T102.isorspatv_sac
			where T102.isorspatv_sac = T02.isorspatv_sac )
		when 0 then T02.ISORspAtv_QtdeHorasPrevistas
		else

	(select sum(T102.ISORspAtv_QtdeHorasPrevistas) from isorspatividade T102
					   Left Join ISOSAAtendimento T108
					    On T108.ISOEmp_Codigo       = T102.ISOEmp_Codigo
						And T108.ISOSAAte_Codigo     = T102.isorspatv_sac
					where T102.isorspatv_sac = T02.isorspatv_sac and T102.ISORspAtv_QtdeHorasPrevistas <> 0) /
	(select count(*) from isorspatvdetalhe T101
			 Inner join isorspatividade T102
			    On T101.isoemp_codigo       = T102.isoemp_codigo and
					T101.isorspatv_codigo    = T102.isorspatv_codigo
			   Left Join ISOSAAtendimento T108
			     On T108.ISOEmp_Codigo       = T102.ISOEmp_Codigo
				And T108.ISOSAAte_Codigo     = T102.isorspatv_sac
			where T102.isorspatv_sac = T02.isorspatv_sac )
	end
		as MT_014_HorasPrevistas,
		T13.ISOWFTrf_Descricao                   as DM_DscTarefaWF,         -- Descriï¿½ï¿½o da tarefa do WF
		T13.ISOWFTrf_PrzExecucao                 as DM_PrzExecTrfWF,        -- Prazo de execuï¿½ï¿½o da tarefa do WF
		T13.ISOWFTrf_PrzUnidade                  as DM_PrzUnidTrfWF,        -- Unidade de Tempo
		T13.ISOWFTrf_DataRecebimento             as DM_DtaRecebTrfWF,       -- Data de recebimento da tarefa
		T13.ISOWFTrf_DataSolucao                 as DM_DtaSolucaoTrfWF,     -- Data da soluï¿½ï¿½o da tarefa do WF
		T13.ISOWFTrf_Solucao                     as DM_DscSolucaoTrfWF,     -- Soluï¿½ï¿½o da tarefa
		T13.ISOWFTrf_DataLimite                  as DM_DtaLimiteTrfWF,      -- Data Limite para conclusï¿½o
       RTrim(T14.ISOEnt_Nome)                    as DM_NomeRespResWF
From isorspatvdetalhe T01
      Inner join isorspatividade T02
         On T01.isoemp_codigo       = T02.isoemp_codigo and
            T01.isorspatv_codigo    = T02.isorspatv_codigo
      inner join isoatvprojeto T03
         on T01.isoemp_codigo       = T03.isoemp_codigo and
            T02.isoatvprj_codigo    = T03.isoatvprj_codigo
      inner join isoatvatividade T04
         on T01.isoemp_codigo       = T04.isoemp_codigo and
            T02.isoatvatv_codigo    = T04.isoatvatv_codigo
      inner join isoentidade T05
         on T02.isorspatv_clicodigo = T05.isoent_codigo
      inner join isoentidade T06
         on T02.isorspatv_rspcodigo = T06.isoent_codigo
       left join isosaatedetalhe T07
         on T02.isoemp_codigo       = T07.isoemp_codigo
        and T02.isorspatv_sac       = T07.isosaate_codigo
        and T07.isosaatedet_codigo  = 1
	   Left Join ISOSAAtendimento T08
	     On T08.ISOEmp_Codigo       = T07.ISOEmp_Codigo
		And T08.ISOSAAte_Codigo     = T07.ISOSAAte_Codigo
	   Left Join ISOSAMotivo T09
	     On T09.ISOEmp_Codigo       = T08.ISOEmp_Codigo
		And T09.ISOSAMot_Codigo     = T08.ISOSAMot_Codigo
	   Left Join ISOSASituacao T10
	     On T10.ISOEmp_Codigo       = T09.ISOEmp_Codigo
		And T10.ISOSASit_Codigo     = T08.ISOSASit_Codigo
        Left Join ISOWFTarefa T13
          On T13.ISOEmp_Codigo           = T01.ISOEmp_Codigo
         And T13.ISOWFtrf_CodModulo      = T02.isorspatv_sac
         And T13.ISOWFTrf_Automatica     = 0
         And (T13.ISOWFTrf_SitInterna     = 'Enc' Or T13.ISOWFTrf_SitInterna     = 'Res')
        Left Join ISOEntidade T14 -- Responsï¿½vel da Reserva
          On T14.ISOEnt_Codigo           = T13.ISOWFTrf_RspRes_RspCodigo;


-- ConexaoISO.BI_014_isoAtv_Apontamentos source

CREATE VIEW BI_014_isoAtv_Apontamentos as -- Para Alterar a view

Select T02.isorspatv_sac                  as DM_014_SacCodigo,
       T07.isosaatedet_descricao          as DM_014_SacDescricao,
       T04.isoatvatv_descricao            as DM_014_Atividade,
       T03.isoatvprj_descricao            as DM_014_Projeto,
       Substring( T05.isoent_nome, 1, CHARINDEX(' ', T05.isoent_nome) ) as DM_014_Cliente,
       T06.isoent_nome                    as DM_014_Responsavel,
       T01.isorspatvdet_inicio            as DM_014_DataInicial,
       Substring(Convert(Char(25), T01.isorspatvdet_inicio, 121), 11, 12) as DM_014_Hora,
       Year(T01.isorspatvdet_inicio)      as DM_014_AnoInicial,
       Month(T01.isorspatvdet_inicio)     as DM_014_MesInicial,
	   T09.ISOSAMot_Descricao             as DM_014_Motivo,
	   Case T10.ISOSASit_Situacao
	        When 1 Then 'Aberto'
			When 2 Then 'Fechado'
			When 3 Then 'Encaminhar para Work Flow'
			When 9 Then 'Cancelado'
			Else 'Nï¿½o informado'
	   End                                as DM_014_SitInterna,
       T01.isorspatvdet_totalhorasdecimal as MT_014_QtdeHoras,
	   1                                  as MT_014_Qtde,
	   T02.ISORspAtv_QtdeHorasPrevistas / (select count(*) from isorspatvdetalhe where ISOEmp_Codigo = T02.ISOEmp_Codigo AND ISORspAtv_Codigo = T02.ISORspAtv_Codigo) as MT_014_HorasPrevistas,
	   T02.ISOAtvCls_Codigo               as DM_014_AtvClassifCodigo,
	   t11.ISOAtvCls_Descricao            as DM_014_AtvClassifDescricao
From isorspatvdetalhe T01
      Inner join isorspatividade T02
         On T01.isoemp_codigo       = T02.isoemp_codigo and
            T01.isorspatv_codigo    = T02.isorspatv_codigo
      inner join isoatvprojeto T03
         on T01.isoemp_codigo       = T03.isoemp_codigo and
            T02.isoatvprj_codigo    = T03.isoatvprj_codigo
      inner join isoatvatividade T04
         on T01.isoemp_codigo       = T04.isoemp_codigo and
            T02.isoatvatv_codigo    = T04.isoatvatv_codigo
      inner join isoentidade T05
         on T02.isorspatv_clicodigo = T05.isoent_codigo
      inner join isoentidade T06
         on T02.isorspatv_rspcodigo = T06.isoent_codigo
       left join isosaatedetalhe T07
         on T02.isoemp_codigo       = T07.isoemp_codigo
        and T02.isorspatv_sac       = T07.isosaate_codigo
        and T07.isosaatedet_codigo  = 1
	   Left Join ISOSAAtendimento T08
	     On T08.ISOEmp_Codigo       = T07.ISOEmp_Codigo
		And T08.ISOSAAte_Codigo     = T07.ISOSAAte_Codigo
	   Left Join ISOSAMotivo T09
	     On T09.ISOEmp_Codigo       = T08.ISOEmp_Codigo
		And T09.ISOSAMot_Codigo     = T08.ISOSAMot_Codigo
	   Left Join ISOSASituacao T10
	     On T10.ISOEmp_Codigo       = T09.ISOEmp_Codigo
		And T10.ISOSASit_Codigo     = T08.ISOSASit_Codigo
		left join ISOAtvClassificacao t11
		  on T11.ISOAtvCls_Codigo = T02.ISOAtvCls_Codigo;


-- ConexaoISO.BI_016_isoPQ_Campanha source

CREATE VIEW BI_016_isoPQ_Campanha as
/*
Autor: Edison

Alteraï¿½ï¿½o     : Edison
Data Alteraï¿½ï¿½o: 25/02/2014

Alteraï¿½ï¿½o     : Edison
Data Alteraï¿½ï¿½o: 06/05/2014
Atendimento   : 11077
*/
Select T01.ISOEmp_Codigo                           as DM_Empresa,
	   T01.ISOMkAteCmp_Codigo                      as DM_CodCampanha,
       T01.ISOMkAteCmp_Descricao                   as DM_Campanha,
	   T02.ISOPQPes_Codigo		                   as DM_CodPesquisa,
	   T15.ISOPQPes_Descricao                      as DM_Pesquisa,
       T04.ISOPQAtendimentoAttCategory             as DM_Categoria,
       T06.ISOEnt_Nome                             as DM_NomeCliente,
       T07.ISOEntTel_DDD                           as DM_DDDTelefone,
       T07.ISOEntTel_Telefone                      as DM_Telefone,
       T13.ISOMKCntSit_Descricao                   as DM_Situacao,
       Case
           When T09.ISOMkFinCla_Codigo > 0
                Then T10.ISOMkFinCla_Descricao
           When T09.ISOMkFinRsl_Codigo > 0
                Then T11.ISOMkFinRsl_Descricao
           Else 'Sem Resultado/Classificaï¿½ï¿½o'
       End                                        as DM_FinResultadoClassificacao,
       T04.ISOPQAtendimentoAttName                as DM_Pergunta,
       Case
           When T04.ISOPQAtendimentoAttType = 0 Or
                T04.ISOPQAtendimentoAttType = 1 Or
                T04.ISOPQAtendimentoAttType = 2 Or
                T04.ISOPQAtendimentoAttType = 3
                Then T03.ISOPQAtendimentoAttValue
           When T04.ISOPQAtendimentoAttType = 5
                Then T03.ISOPQAtendimentoAttValueLong
           When T04.ISOPQAtendimentoAttType = 4
                Then T12.ISOPQAtendimentoAttOptValue
       End                                        as DM_Resposta,
	   RTrim(T03.ISOPQAtendimentoAttOtherValue)   as DM_RespOutros,
       T14.ISOMkDiv_Descricao                     as DM_Divulgacao,
       T08.ISOMkFin_Descricao                     as DM_Finalidade,
       T04.ISOPQAtendimentoAttCategoryOrd         as DM_CategoriaOrdem,
       T04.ISOPQAtendimentoAttPosId               as DM_PerguntaPosicao,
       'V.004'									  as DM_Versao,

	   T01.ISOMkAteCmp_DataInicio                 as DM_DataInicioCampanha,
       Year(T01.ISOMkAteCmp_DataInicio)           as DM_AnoInicioCampanha,
	   Case
		When Month(T01.ISOMkAteCmp_DataInicio) = 1  Then '01.Jan'
		When Month(T01.ISOMkAteCmp_DataInicio) = 2  Then '02.Fev'
		When Month(T01.ISOMkAteCmp_DataInicio) = 3  Then '03.Mar'
		When Month(T01.ISOMkAteCmp_DataInicio) = 4  Then '04.Abr'
		When Month(T01.ISOMkAteCmp_DataInicio) = 5  Then '05.Mai'
		When Month(T01.ISOMkAteCmp_DataInicio) = 6  Then '06.Jun'
		When Month(T01.ISOMkAteCmp_DataInicio) = 7  Then '07.Jul'
		When Month(T01.ISOMkAteCmp_DataInicio) = 8  Then '08.Ago'
		When Month(T01.ISOMkAteCmp_DataInicio) = 9  Then '09.Set'
		When Month(T01.ISOMkAteCmp_DataInicio) = 10 Then '10.Out'
		When Month(T01.ISOMkAteCmp_DataInicio) = 11 Then '11.Nov'
		When Month(T01.ISOMkAteCmp_DataInicio) = 12 Then '12.Dez'
	   End									      as DM_MesInicioCampanha,

	   T09.ISOMkAteCmpCntDet_InicioContat         as DM_DataInicioContato,
       Year(T09.ISOMkAteCmpCntDet_InicioContat)   as DM_AnoInicioContato,
	   Case
		When Month(T09.ISOMkAteCmpCntDet_InicioContat) = 1  Then '01.Jan'
		When Month(T09.ISOMkAteCmpCntDet_InicioContat) = 2  Then '02.Fev'
		When Month(T09.ISOMkAteCmpCntDet_InicioContat) = 3  Then '03.Mar'
		When Month(T09.ISOMkAteCmpCntDet_InicioContat) = 4  Then '04.Abr'
		When Month(T09.ISOMkAteCmpCntDet_InicioContat) = 5  Then '05.Mai'
		When Month(T09.ISOMkAteCmpCntDet_InicioContat) = 6  Then '06.Jun'
		When Month(T09.ISOMkAteCmpCntDet_InicioContat) = 7  Then '07.Jul'
		When Month(T09.ISOMkAteCmpCntDet_InicioContat) = 8  Then '08.Ago'
		When Month(T09.ISOMkAteCmpCntDet_InicioContat) = 9  Then '09.Set'
		When Month(T09.ISOMkAteCmpCntDet_InicioContat) = 10 Then '10.Out'
		When Month(T09.ISOMkAteCmpCntDet_InicioContat) = 11 Then '11.Nov'
		When Month(T09.ISOMkAteCmpCntDet_InicioContat) = 12 Then '12.Dez'
	   End									      as DM_MesInicioContato,

	   T09.ISOMkAteCmpCntDet_FinalContato         as DM_DataFinalContato,
       Year(T09.ISOMkAteCmpCntDet_FinalContato)   as DM_AnoFinalContato,
	   Case
		When Month(T09.ISOMkAteCmpCntDet_FinalContato) = 1  Then '01.Jan'
		When Month(T09.ISOMkAteCmpCntDet_FinalContato) = 2  Then '02.Fev'
		When Month(T09.ISOMkAteCmpCntDet_FinalContato) = 3  Then '03.Mar'
		When Month(T09.ISOMkAteCmpCntDet_FinalContato) = 4  Then '04.Abr'
		When Month(T09.ISOMkAteCmpCntDet_FinalContato) = 5  Then '05.Mai'
		When Month(T09.ISOMkAteCmpCntDet_FinalContato) = 6  Then '06.Jun'
		When Month(T09.ISOMkAteCmpCntDet_FinalContato) = 7  Then '07.Jul'
		When Month(T09.ISOMkAteCmpCntDet_FinalContato) = 8  Then '08.Ago'
		When Month(T09.ISOMkAteCmpCntDet_FinalContato) = 9  Then '09.Set'
		When Month(T09.ISOMkAteCmpCntDet_FinalContato) = 10 Then '10.Out'
		When Month(T09.ISOMkAteCmpCntDet_FinalContato) = 11 Then '11.Nov'
		When Month(T09.ISOMkAteCmpCntDet_FinalContato) = 12 Then '12.Dez'
	   End									      as DM_MesFinalContato,

       1                                          as MT_Qtde
  From ISOMKAteCampanha T01
       Inner Join ISOPQAtendimento T02
          On T02.ISOEmp_Codigo            = T01.ISOEmp_Codigo
         And T02.ISOPQPes_Codigo          = T01.ISOPQPes_Codigo
       Inner Join ISOPQATENDIMENTOATTVALUES T03
          On T03.ISOEmp_Codigo            = T02.ISOEmp_Codigo
         And T03.ISOPQAte_Codigo          = T02.ISOPQAte_Codigo
       Inner Join ISOPQATENDIMENTOATT T04
          On T04.ISOPQAtendimentoAttId    = T03.ISOPQAtendimentoAttId
        Left Join ISOMKATECMPCONTATO T05
          On T05.ISOEmp_Codigo            = T01.ISOEmp_Codigo
         And T05.ISOMkAteCmp_Codigo       = T01.ISOMkAteCmp_Codigo
		 And T05.ISOMkAteCmpCnt_EntCodigo = T02.ISOEntCli_Codigo
        Left Join ISOENTIDADE T06
          On T06.ISOEnt_Codigo            = T05.ISOMkAteCmpCnt_EntCodigo
        Left Join ISOENTTELEFONE T07
          On T07.ISOEnt_Codigo            = T06.ISOEnt_Codigo
         And T07.ISOEntTel_Principal      = 'S'
        Left Join ISOMKFINALIDADE T08
          On T08.ISOEmp_Codigo            = T01.ISOEmp_Codigo
         And T08.ISOMkFin_Codigo          = T01.ISOMkFin_Codigo
        Left Join ISOMKATECMPCNTDETALHE T09
          On T09.ISOEmp_Codigo            = T05.ISOEmp_Codigo
         And T09.ISOMkAteCmp_Codigo       = T05.ISOMkAteCmp_Codigo
         And T09.ISOMkAteCmpCnt_Sequencia = T05.ISOMkAteCmpCnt_Sequencia
        Left Join ISOMKFINCLASSIFICACAO T10
          On T10.ISOEmp_Codigo            = T08.ISOEmp_Codigo
         And T10.ISOMkFin_Codigo          = T08.ISOMkFin_Codigo
         And T10.ISOMkFinCla_Codigo       = T09.ISOMkFinCla_Codigo
        Left Join ISOMKFINRESULTADO T11
          On T11.ISOEmp_Codigo            = T08.ISOEmp_Codigo
         And T11.ISOMkFin_Codigo          = T08.ISOMkFin_Codigo
         And T11.ISOMkFinRsl_Codigo       = T09.ISOMkFinRsl_Codigo
        Left Join ISOPQATENDIMENTOATTLEVEL1 T12
          On T12.ISOPQAtendimentoAttId    = T03.ISOPQAtendimentoAttId
         And T12.ISOPQAtendimentoAttOptId = T03.ISOPQAtendimentoAttOptId
        Left Join ISOMKCNTSITUACAO T13
          On T13.ISOEmp_Codigo            = T05.ISOEmp_Codigo
         And T13.ISOMkCntSit_Codigo       = T05.ISOMkCntSit_Codigo
       Inner Join ISOMKDIVULGACAO T14
          On T14.ISOEmp_Codigo            = T01.ISOEmp_Codigo
         And T14.ISOMkDiv_Codigo          = T01.ISOMkDiv_Codigo
	   Inner Join ISOPQPesquisa T15
	      On T15.ISOEmp_Codigo            = T01.ISOEmp_Codigo
         And T15.ISOPQPes_Codigo          = T01.ISOPQPes_Codigo;


-- ConexaoISO.BI_017_ATPDCMP_AteSACDadoComp source

CREATE VIEW BI_017_ATPDCMP_AteSACDadoComp as

/*
Autor       : Edison T Washimi
Data criaï¿½ï¿½o: 22/11/2013

Alteraï¿½ï¿½o   : Edison T Washimi
Data        : 24/12/2013
Atendimento : 9974

Alteraï¿½ï¿½o   : Edison T Washimi
Data        : 11/03/2014
Atendimento : 10580
*/
Select
       T01.ISOSAAte_Codigo                        as DM_017_CodigoAtendimento,
       Year(T01.ISOSAAte_DataAbertura)            as DM_017_AnoAbertura,
	   Case
		When Month(T01.ISOSAAte_DataAbertura) = 1  Then '01.Jan'
		When Month(T01.ISOSAAte_DataAbertura) = 2  Then '02.Fev'
		When Month(T01.ISOSAAte_DataAbertura) = 3  Then '03.Mar'
		When Month(T01.ISOSAAte_DataAbertura) = 4  Then '04.Abr'
		When Month(T01.ISOSAAte_DataAbertura) = 5  Then '05.Mai'
		When Month(T01.ISOSAAte_DataAbertura) = 6  Then '06.Jun'
		When Month(T01.ISOSAAte_DataAbertura) = 7  Then '07.Jul'
		When Month(T01.ISOSAAte_DataAbertura) = 8  Then '08.Ago'
		When Month(T01.ISOSAAte_DataAbertura) = 9  Then '09.Set'
		When Month(T01.ISOSAAte_DataAbertura) = 10 Then '10.Out'
		When Month(T01.ISOSAAte_DataAbertura) = 11 Then '11.Nov'
		When Month(T01.ISOSAAte_DataAbertura) = 12 Then '12.Dez'
	   End									      as DM_017_MesAbertura,
	   Day(T01.ISOSAAte_DataAbertura)             as DM_017_DiaAbertura,
	   T02.ISOEnt_Codigo                          as DM_017_CodigoCliente,
       T02.ISOEnt_Nome                            as DM_017_Entidade,
       T03.ISOSAAteDet_DataRecebimento            as DM_017_DataRecebimento,
       T04.ISOEmpCan_Descricao                    as DM_017_Canal,
       T05.ISOSAMot_Descricao                     as DM_017_Motivo,
       T06.ISOSAMotOcr_Descricao                  as DM_017_Ocorrencia,
       T07.ISOSAMotOcrCau_Descricao               as DM_017_Causa,
       T08.ISOSASit_Descricao                     as DM_017_Situacao,
       Case
	       When T03.ISOSAAteDet_AtivoReceptivo = 'R' Then 'Receptivo'
	       When T03.ISOSAAteDet_AtivoReceptivo = 'A' Then 'Ativo'
	       Else                                   Null
       End                                        as DM_017_AtivoReceptivo,
       Case
          When T08.ISOSASit_Situacao = 1 Then 'Aberto'
          When T08.ISOSASit_Situacao = 2 Then 'Fechado'
          When T08.ISOSASit_Situacao = 3 Then 'Encaminhar para WorkFlow'
          When T08.ISOSASit_Situacao = 9 Then 'Cancelado'
          Else                                 Null
       End                                        as DM_017_SituacaoTabulada,
       T09.ISOEnt_Nome                            as DM_017_Unidade,
       T10.ISOEnt_Nome                            as DM_017_UsuarioAbertura,
       T01.ISOSAAteEst_Sigla                      as DM_017_UF,
       T01.ISOSAAteLoc_Descricao                  as DM_017_Localidade,
       T01.ISOSAAte_EntCodigo					  as DM_017_EntSAC,
       Case
           When T39.ISOEntOrg_Codigo = T01.ISOSAAte_EntCodigo Then T40.ISOEntSeg_Descricao
           When T11.ISOEntPes_Codigo = T01.ISOSAAte_EntCodigo Then T41.ISOEntSeg_Descricao
           Else Null
       End                                        as DM_017_Segmento,
       Case
           When T39.ISOEntOrg_Codigo = T01.ISOSAAte_EntCodigo Then T42.ISOEntRamAtv_Descricao
           Else Null
       End                                       as DM_017_RamoAtividade,
       T11.ISOEntPes_Sexo                        as DM_017_Sexo,
       T12.ISOProf_Descricao                     as DM_017_Profissao,
       T13.ISONivEsc_Descricao                   as DM_017_NivelEscolaridade,
       T14.ISOEstCiv_Descricao                   as DM_017_EstadoCivil,
	   ----------------
	   Case
           When T43.ISOEntRsp_Codigo = T11.ISOEntPes_Codigo Then 'S'
           Else 'N'
       End										as DM_017_PapelResponsavel,

	   T17.ISOEntCla_Descricao					as DM_017_ClassificacaoEntidade,
	   T18.ISOEntClaEsp_Descricao               as DM_017_EspecialidadeEntidade,
       T16.ISOEntClaP_Descricao					as DM_017_ClassificacaoPapel,
	   T19.ISOEntClaPEsp_Descricao              as DM_017_EspecialidadePapel,

	   T20.ISOEntCliSit_Descricao				as DM_017_SituacaoCliente,
	   Case
			When T11.ISOEntPes_Codigo = T02.ISOEnt_Codigo Then 'P'
			When T39.ISOEntOrg_Codigo = T02.ISOEnt_Codigo Then 'O'
			Else ''
	   End										as DM_017_TipoPessoa,
       T11.ISOEntPes_Flag						as DM_017_Ativo,
       T26.ISOPvPed_CodigoExterno               as DM_017_NumPedido,
       T27.ISOPvPedIte_NrNotaFiscal             as DM_017_NumNF,
       T28.ISOPrd_Codigo                        as DM_017_CodProduto,
       T28.ISOPrd_Descricao                     as DM_017_DescProduto,
       T30.ISOSAAtendimentoAttName              as DM_017_Pergunta,
       Case
           When T30.ISOSAAtendimentoAttType = 0 Or
                T30.ISOSAAtendimentoAttType = 2 Or
                T30.ISOSAAtendimentoAttType = 3
                Then T29.ISOSAAtendimentoAttValue
           When T30.ISOSAAtendimentoAttType = 5
                Then T29.ISOSAAtendimentoAttValueLong
           When T30.ISOSAAtendimentoAttType = 4
                Then T31.ISOSAAtendimentoAttOptValue
       End                                      as DM_017_Resposta,
       Case
           When T01.ISOSAAte_DataFechamento > '1753-01-01'
               Then Year(T01.ISOSAAte_DataFechamento)
           Else Null
       End                                      as DM_017_AnoFechamento,
       Case
           When T01.ISOSAAte_DataFechamento > '1753-01-01' Then
			    Case
					When Month(T01.ISOSAAte_DataFechamento) = 1  Then '01.Jan'
					When Month(T01.ISOSAAte_DataFechamento) = 2  Then '02.Fev'
					When Month(T01.ISOSAAte_DataFechamento) = 3  Then '03.Mar'
					When Month(T01.ISOSAAte_DataFechamento) = 4  Then '04.Abr'
					When Month(T01.ISOSAAte_DataFechamento) = 5  Then '05.Mai'
					When Month(T01.ISOSAAte_DataFechamento) = 6  Then '06.Jun'
					When Month(T01.ISOSAAte_DataFechamento) = 7  Then '07.Jul'
					When Month(T01.ISOSAAte_DataFechamento) = 8  Then '08.Ago'
					When Month(T01.ISOSAAte_DataFechamento) = 9  Then '09.Set'
					When Month(T01.ISOSAAte_DataFechamento) = 10 Then '10.Out'
					When Month(T01.ISOSAAte_DataFechamento) = 11 Then '11.Nov'
					When Month(T01.ISOSAAte_DataFechamento) = 12 Then '12.Dez'
			    End
			Else Null
	   End									    as DM_017_MesFechamento,
	   Case
	       When T01.ISOSAAte_DataFechamento > '1753-01-01'
                Then T01.ISOSAAte_DataFechamento
                Else Null
       End                                      as DM_017_DataFechamento,
       T26.ISOPVPed_DtaSolEntrega               as DM_017_DataFaturamento,
       T33.ISOPVPedItemAttName                  as DM_017_DadoComplementar,
       Case
           When T32.ISOPVPedItemAttValue = '' Then T34.ISOPVPedItemAttOptValue
           Else T32.ISOPVPedItemAttValue
	   End                                      As DM_017_DadoComplValor,
	   T35.ISOMrc_Codigo                        as DM_017_MrcCodigo,
       T35.ISOMrc_Descricao                     as DM_017_MarcaDescricao,
	   T36.ISOEntFab_Codigo                     as DM_017_FabrCodigo,
	   T37.ISOEnt_Nome                          as DM_017_FabrNome,
	   T26.ISOPvPed_CodVendedorCD               as DM_017_CodVendedor,
	   T38.ISOEnt_Nome                          as DM_017_NomeVendedor,
	   T27.ISOPvPedIte_Codigo                   as DM_017_ItemCodigo,

       Case
           When T30.ISOSAAtendimentoAttType = 1
                Then Convert(Decimal(18,2), T29.ISOSAAtendimentoAttValue)
       End                                      as MT_017_ValorPergunta,
       T27.ISOPvPedIte_Quantidade               as MT_017_Qtdeprodcomprada,
       Case
           When T01.ISOSAAte_DataFechamento > '1753-01-01'
                Then DATEDIFF(MINUTE, T01.ISOSAAte_DataAbertura, T01.ISOSAAte_DataFechamento)
           Else 0
       End            as MT_017_TempodeResolucao,
	   TA2.QtdeLigacoes                         as MT_017_NumLigacoes,
	   /*
       (Select COUNT(*) From ISOSAATEDETALHE TQtde
         Where TQtde.ISOEmp_Codigo   = T01.ISOEmp_Codigo
           And TQtde.ISOSAAte_Codigo = T01.ISOSAAte_Codigo)
                                                as MT_017_NumLigacoes,
		*/
	   1                                        as MT_001_QtdeEntidades,

       'V.006'                                  as DM_017_VersaoView
  From ISOSAAtendimento T01 (Nolock)
       Inner Join ISOEntidade T02 (Nolock) -- Cliente do Atendimento
          On T02.ISOEnt_Codigo         = T01.ISOSAAte_EntCodigo
        Left Join ISOSAAteDetalhe T03
          On T03.ISOEmp_Codigo         = T01.ISOEmp_Codigo
         And T03.ISOSAAte_Codigo       = T01.ISOSAAte_Codigo
         And T03.ISOSAAteDet_Codigo    = (Select Min(TA3.ISOSAAteDet_Codigo)
                                            From ISOSAAteDetalhe TA3  (Nolock)
                                           Where TA3.ISOEmp_Codigo       = T03.ISOEmp_Codigo
                                             And TA3.ISOSAAte_Codigo     = T03.ISOSAAte_Codigo)
        Left Join ISOEmpCanal T04 (Nolock)
          On T04.ISOEmp_Codigo         = T03.ISOEmp_Codigo
         And T04.ISOEmpCan_Codigo      = T03.ISOEmpCan_Codigo
        Left Join ISOSAMotivo T05 (Nolock)
          On T05.ISOSAMot_Codigo       = T01.ISOSAMot_Codigo
        Left Join ISOSAMotOcorrencia T06 (Nolock)
          On T06.ISOEmp_Codigo         = T05.ISOEmp_Codigo
         And T06.ISOSAMot_Codigo       = T05.ISOSAMot_Codigo
         And T06.ISOSAMotOcr_Codigo    = T01.ISOSAMotOcr_Codigo
        Left Join ISOSAMotOcrCausa T07 (Nolock)
          On T07.ISOEmp_Codigo         = T06.ISOEmp_Codigo
         And T07.ISOSAMot_Codigo       = T06.ISOSAMot_Codigo
         And T07.ISOSAMotOcr_Codigo    = T06.ISOSAMotOcr_Codigo
         And T07.ISOSAMotOcrCau_Codigo = T01.ISOSAMotOcrCau_Codigo
        Left Join ISOSASituacao T08 (Nolock)
          On T08.ISOEmp_Codigo         = T01.ISOEmp_Codigo
         And T08.ISOSASit_Codigo       = T01.ISOSASit_Codigo
        Left Join ISOEntidade T09 (Nolock)  -- Unidade
          On T09.ISOEnt_Codigo         = T01.ISOEntUnd_Codigo
        Left Join ISOEntidade T10 (Nolock) -- Usuï¿½rio de abertura
          On T10.ISOEnt_Codigo         = T01.ISOSAAte_UsuCodigo
        Left Join ISOEntPessoa T11 (Nolock)
          On T11.ISOEntPes_Codigo      = T01.ISOSAAte_EntCodigo
        Left Join ISOProfissao T12 (Nolock)
          On T12.ISOProf_Codigo        = T11.ISOProf_Codigo
        Left Join ISONivEscolaridade T13 (Nolock)
          On T13.ISONivEsc_Codigo      = T11.ISONivEsc_Codigo
        Left Join ISOEstCivil T14 (Nolock)
          On T14.ISOEstCiv_Codigo      = T11.ISOEstCiv_Codigo
		Left join isoentcliente T15 (Nolock)
		  On T01.ISOSAAte_EntCodigo    = T15.ISOEntCli_Codigo
		Left Join ISOEntClassificacaoPapel T16 (Nolock)
          On T16.ISOEmp_Codigo         = T15.ISOEmp_Codigo
	     And T16.ISOEntClaP_Codigo     = T15.ISOEntClaP_Codigo
        Left join ISOEntClassificacao T17 (Nolock)
          On T17.ISOEmp_Codigo          = T15.ISOEmp_Codigo
	     and T17.ISOEntCla_Codigo       = T15.ISOEntCla_Codigo
         and T17.ISOEntCla_Flag         = 'A'
	    Left join ISOEntClaEspecialidade T18 (Nolock)
          On T18.ISOEmp_codigo          = T15.ISOEmp_Codigo
	     And T18.ISOEntCla_Codigo       = T15.ISOEntCla_Codigo
         And T18.ISOEntClaEsp_codigo    = T15.ISOEntClaEsp_Codigo
	    Left join ISOEntClaPEspecialidade T19 (Nolock)
	      On T19.ISOEmp_Codigo          = T15.ISOEmp_Codigo
	     And T19.ISOEntClaP_Codigo      = T15.ISOEntClaP_Codigo
	     And T19.ISOEntClaPEsp_Codigo   = T15.ISOEntClaPEsp_Codigo
        Left join ISOEntCliSituacao T20 (Nolock)
          On T20.ISOEmp_Codigo          = T15.ISOEmp_Codigo
         And T20.ISOEntCliSit_Codigo    = T15.ISOEntCliSit_Codigo
	    Left Join ISOEntClassificacaoPapel T21 (Nolock)
          On T21.ISOEmp_Codigo         = T15.ISOEmp_Codigo
         And T21.ISOEntClaP_Codigo     = T15.ISOEntClaP_Codigo
	    Left join ISOEntClassificacao T22 (Nolock)
          On T22.ISOEmp_Codigo          = T15.ISOEmp_Codigo
	     and T22.ISOEntCla_Codigo       = T15.ISOEntCla_Codigo
         and T22.ISOEntCla_Flag         = 'A'
	    Left join ISOEntClaEspecialidade T23 (Nolock)
	      On T23.ISOEmp_codigo          = T15.ISOEmp_Codigo
	     And T23.ISOEntCla_Codigo       = T15.ISOEntCla_Codigo
         And T23.ISOEntClaEsp_codigo    = T15.ISOEntClaEsp_Codigo
	    Left join ISOEntClaPEspecialidade T24 (Nolock)
	      On T24.ISOEmp_Codigo          = T15.ISOEmp_Codigo
	     And T24.ISOEntClaP_Codigo      = T15.ISOEntClaP_Codigo
	     And T24.ISOEntClaPEsp_Codigo   = T15.ISOEntClaPEsp_Codigo
        Left Join ISOSA_PVITEM T25 (Nolock)
          On T25.ISOEmp_Codigo          = T01.ISOEmp_Codigo
         And T25.ISOSA_PvIte_AteCodigo  = T01.ISOSAAte_Codigo
         And T25.ISOSA_PvIte_PedIteCodigo = (Select MIN(TA25.ISOSA_PVIte_PedIteCodigo)
                                               From ISOSA_PVITEM TA25 (Nolock)
                                              Where TA25.ISOEmp_Codigo = T25.ISOEmp_Codigo
                                                And TA25.ISOSA_PvIte_AteCodigo = T25.ISOSA_PvIte_AteCodigo
                                                And TA25.ISOSA_PvIte_PedCodigo = T25.ISOSA_PvIte_PedCodigo)
        Left Join ISOPVPEDIDO T26 (Nolock)
          On T26.ISOEmp_Codigo            = T25.ISOEmp_Codigo
         And T26.ISOPvPed_Codigo          = T25.ISOSA_PvIte_PedCodigo
        Left Join ISOPVPEDITEM T27 (Nolock)
          On T27.ISOEmp_Codigo            = T26.ISOEmp_Codigo
         And T27.ISOPvPed_Codigo          = T26.ISOPvPed_Codigo
         And T27.ISOPvPedIte_Codigo       = T25.ISOSA_PvIte_PedIteCodigo
        Left Join ISOPRODUTO T28
          On T28.ISOEmp_Codigo            = T27.ISOEmp_Codigo
         And T28.ISOPrd_Codigo            = T27.ISOPrd_Codigo
        Left Join ISOSAATENDIMENTOATTVALUES T29 (Nolock)
          On T29.ISOEmp_Codigo            = T01.ISOEmp_Codigo
         And T29.ISOSAAte_Codigo          = T01.ISOSAAte_Codigo
        Left Join ISOSAATENDIMENTOATT T30 (Nolock)
          On T30.ISOSAAtendimentoAttId    = T29.ISOSAAtendimentoAttId
        Left Join ISOSAATENDIMENTOATT1 T31 (Nolock)
          On T31.ISOSAAtendimentoAttId    = T29.ISOSAAtendimentoAttId
         And T31.ISOSAAtendimentoAttOptId = T29.ISOSAAtendimentoAttOptId
        Left Join ISOPVPedItemAttValues T32 (Nolock)
          On T32.ISOEmp_Codigo            = T27.ISOEmp_Codigo
         And T32.ISOPVPed_Codigo          = T27.ISOPvPed_Codigo
         And T32.ISOPVPedIte_Codigo       = T27.ISOPvPedIte_Codigo
        Left Join ISOPVPedItemAtt T33 (Nolock)
          On T33.ISOEmp_Codigo            = T32.ISOEmp_Codigo
         And T33.ISOPVPedItemAttId        = T32.ISOPVPedItemAttId
        Left Join ISOPVPedItemAttLevel1 T34 (Nolock)
          On T34.ISOEmp_Codigo            = T33.ISOEmp_Codigo
         And T34.ISOPVPedItemAttId        = T33.ISOPVPedItemAttId
        Left Join ISOMarcas T35 (Nolock)
		  On T35.ISOEmp_Codigo            = T28.ISOEmp_Codigo
		 And T35.ISOMrc_Codigo            = T28.ISOMrc_Codigo
        Left Join ISOENTFABRICANTE T36 (Nolock)
		  On T36.ISOEntFab_Codigo         = T35.ISOEntFab_Codigo
		Left Join ISOEntidade T37 (Nolock)
		  On T37.ISOEnt_Codigo            = T36.ISOEntFab_Codigo
		Left Join ISOEntidade T38 (nolock)
		  On T38.ISOEnt_Codigo            = T26.ISOPvPed_CodVendedorCD
		Left Join ISOENTORGANIZACAO T39 (nolock)
		  On T39.ISOEntOrg_Codigo         = T01.ISOSAAte_EntCodigo
		Left Join ISOENTSEGMENTO T40 (Nolock)
		  On T40.ISOEntSeg_Codigo         = T39.ISOEntSeg_Codigo
		Left Join ISOENTSEGMENTO T41 (Nolock)
		  On T41.ISOEntSeg_Codigo         = T11.ISOEntSeg_Codigo
		Left Join ISOENTRAMOATIVIDADE T42 (Nolock)
		  On T42.ISOEntRamAtv_Codigo      = T39.ISOEntRamAtv_Codigo
		Left Join ISOENTRESPONSAVEL T43 (NOlock)
		  On T43.ISOEmp_Codigo            = T01.ISOEmp_Codigo
		 And T43.ISOEntRsp_Codigo         = T11.ISOEntPes_Codigo
		Left Join (Select TA1.ISOEmp_Codigo, TA1.ISOSAAte_Codigo, COUNT(*) as QtdeLigacoes
		             From ISOSAATEDETALHE TA1
					Group By TA1.ISOEmp_Codigo, TA1.ISOSAAte_Codigo) TA2
	      On TA2.ISOEmp_Codigo            = T01.ISOEmp_Codigo
		 And TA2.ISOSAAte_Codigo          = T01.ISOSAAte_Codigo;


-- ConexaoISO.BI_018_ISOPv_VendasTipoPedido source

CREATE VIEW BI_018_ISOPv_VendasTipoPedido as

/*
Autor: Edison T Washimi
Data: 29/11/2013
Atendimento: 10035
*/
-- Select Para Dï¿½bitos
Select T02.ISOPVPedTip_Descricao          as DM_018_Tipo,
       T01.ISOPvPed_Codigo                as DM_018_Pedido,
       Year(T01.ISOPvPed_DtaPedido )      as DM_018_Ano,
       Month(T01.ISOPvPed_DtaPedido )     as DM_018_Mes,
       T03.ISOPrd_Codigo                  as DM_018_CodigoProduto,
       T04.ISOPrd_Descricao               as DM_018_DescricaoProduto,
       T03.ISOPvPedIte_Quantidade         as DM_018_Quantidade,
       T03.ISOPvPedIte_UnidadeOrigem      as DM_018_Unidade,
       T03.ISOPvPedIte_ValorUnitario * -1 as DM_018_ValorItem,
       T03.ISOPvPedIte_Quantidade * T03.ISOPvPedIte_ValorUnitario * -1 as DM_018_ValorTotalItem,
       T05.ISOPvPedIteSit_Descricao       as DM_018_SituacaoItem,
       'Dï¿½bito'                           as DM_018_DebitoCredito,
       1                                  As MT_018_Qtde,
       'V.001'                            as DM_018_VersaoView
  From ISOPVPedido T01
       Inner Join ISOPVPedTipo T02
          On T02.ISOEmp_Codigo         = T01.ISOEmp_Codigo
         And T02.ISOPVPedTip_Codigo    = T01.ISOPVPedTip_Codigo
       Inner Join ISOPVPedItem T03
          On T03.ISOEmp_Codigo         = T01.ISOEmp_Codigo
         And T03.ISOPVPed_Codigo       = T01.ISOPVPed_Codigo
       Inner Join ISOProduto T04
          On T04.ISOEmp_Codigo         = T03.ISOEmp_Codigo
         And T04.ISOPrd_Codigo         = T03.ISOPrd_Codigo
       Inner Join ISOPVPedIteSituacao T05
          On T05.ISOEmp_Codigo         = T03.ISOEmp_Codigo
         And T05.ISOPvPedIteSit_Codigo = T03.ISOPvPedIteSit_Codigo
       Inner Join ISOEntidade T06
          On T06.ISOEnt_Codigo         = T01.ISOPVPed_CliCodigo
  Where T05.ISOPvPedIteSit_Situacao <> 9
    And T01.ISOPVPedTip_Codigo In (Select TA1.ISOEmpPrm_GrpUsuDet_Valor
                                     From ISOEmpPrm_GrpUsuDetalhe TA1
                                    Where TA1.ISOEmp_Codigo = T01.ISOEmp_Codigo
                                      And TA1.ISOEmpPrm_Codigo = 'ISOTIPOPEDIDODEBITO')


Union
-- Select Para Crï¿½ditos
Select T02.ISOPVPedTip_Descricao          as DM_018_Tipo,
       T01.ISOPvPed_Codigo                as DM_018_Pedido,
       Year(T01.ISOPvPed_DtaPedido )      as DM_018_Ano,
       Month(T01.ISOPvPed_DtaPedido )     as DM_018_Mes,
       T03.ISOPrd_Codigo                  as DM_018_CodigoProduto,
       T04.ISOPrd_Descricao               as DM_018_DescricaoProduto,
       T03.ISOPvPedIte_Quantidade         as DM_018_Quantidade,
       T03.ISOPvPedIte_UnidadeOrigem      as DM_018_Unidade,
       T03.ISOPvPedIte_ValorUnitario      as DM_018_ValorItem,
       T03.ISOPvPedIte_Quantidade * T03.ISOPvPedIte_ValorUnitario as DM_018_ValorTotalItem,
       T05.ISOPvPedIteSit_Descricao       as DM_018_SituacaoItem,
       'Crï¿½dito'                          as DM_018_DebitoCredito,
       1                                  As MT_018_Qtde,
       'V.001'                            as DM_018_VersaoView
  From ISOPVPedido T01
       Inner Join ISOPVPedTipo T02
          On T02.ISOEmp_Codigo         = T01.ISOEmp_Codigo
         And T02.ISOPVPedTip_Codigo    = T01.ISOPVPedTip_Codigo
       Inner Join ISOPVPedItem T03
          On T03.ISOEmp_Codigo         = T01.ISOEmp_Codigo
         And T03.ISOPVPed_Codigo       = T01.ISOPVPed_Codigo
       Inner Join ISOProduto T04
          On T04.ISOEmp_Codigo         = T03.ISOEmp_Codigo
         And T04.ISOPrd_Codigo         = T03.ISOPrd_Codigo
       Inner Join ISOPVPedIteSituacao T05
          On T05.ISOEmp_Codigo         = T03.ISOEmp_Codigo
         And T05.ISOPvPedIteSit_Codigo = T03.ISOPvPedIteSit_Codigo
       Inner Join ISOEntidade T06
          On T06.ISOEnt_Codigo         = T01.ISOPVPed_CliCodigo
  Where T05.ISOPvPedIteSit_Situacao <> 9
    And T01.ISOPVPedTip_Codigo In (Select TA1.ISOEmpPrm_GrpUsuDet_Valor
                                     From ISOEmpPrm_GrpUsuDetalhe TA1
                                    Where TA1.ISOEmp_Codigo = T01.ISOEmp_Codigo
                                      And TA1.ISOEmpPrm_Codigo = 'ISOTIPOPEDIDOCREDITO');


-- ConexaoISO.BI_019_WF_SAC_DcSAC_Pedido source

/*
Autor      : Edison T Washimi
Atendimento: 10.018
Data       : 20/03/2014
Regras     : Deverï¿½o ser listadas somente as tarefas MANUAIS que estiverem na situaï¿½ï¿½o ENC, somente as tarefa que estiverem aguardando soluï¿½ï¿½o.

Observaï¿½ï¿½o : Favor alterar nï¿½mero da versï¿½o da view quando a mesma sofrer alteraï¿½ï¿½es. Colocar tambï¿½m o nï¿½mero do atendimento relacionado ï¿½ alteraï¿½ï¿½o feita.
*/
CREATE VIEW BI_019_WF_SAC_DcSAC_Pedido as

Select T01.ISOEmp_Codigo                      as DM_019_CodigoEmpresa,
       T01.ISOSAAte_Codigo                    as DM_019_CodigoAtendimento,
	   T01.ISOSAMot_Codigo                    as DM_019_CodigoMotivo,
	   RTrim(T02.ISOSAMot_Descricao)          as DM_019_Motivo,
	   T01.ISOSAMotOcr_Codigo                 as DM_019_CodigoOcorrencia,
	   RTrim(T03.ISOSAMotOcr_Descricao)       as DM_019_Ocorrencia,
	   T01.ISOSAMotOcrCau_Codigo              as DM_019_CodigoCausa,
	   RTrim(T04.ISOSAMotOcrCau_Descricao)    as DM_019_Causa,
	   T01.ISOEntUnd_Codigo                   as DM_019_CodigoUnidade,
	   RTrim(T05.ISOEnt_Nome)                 as DM_019_Unidade,
	   T01.ISOSASit_Codigo                    as DM_019_CodigoSituacaoSAC,
	   RTrim(T06.ISOSASit_Descricao)          as DM_019_SituacaoDoSAC,
	   RTrim(T07.ISOSAAteDet_Descricao)       as DM_019_DescrAtendimento,
	   T07.ISOEmpCan_Codigo                   as DM_019_CodigoCanal,
	   RTrim(T08.ISOEmpCan_Descricao)         as DM_019_DescrCanal,
	   T01.ISOSAAte_EntCodigo                 as DM_019_CodigoCliente,
	   RTrim(T09.ISOEnt_Nome)                 as DM_019_NomeDoCliente,
	   T12.ISOSAAtendimentoFormDefId          as DM_019_CodigoFormulario,
	   RTrim(T12.ISOSAAtendimentoFormDefName) as DM_019_DescrFormulario,
	   T11.ISOSAAtendimentoAttId              as DM_019_CodigoDCSac,
	   RTrim(T11.ISOSAAtendimentoAttName)     as DM_019_PerguntaDCSac,
	   Case
	        When T11.ISOSAAtendimentoAttType <> 4 And T11.ISOSAAtendimentoAttType <> 5 And T11.ISOSAAtendimentoAttType <> 6
			     Then RTrim(T10.ISOSAAtendimentoAttValue)
		    When T11.ISOSAAtendimentoAttType  = 4
			     Then RTrim(T13.ISOSAAtendimentoAttOptValue)
		    When T11.ISOSAAtendimentoAttType  = 5
			     Then RTrim(T10.ISOSAAtendimentoAttValueLong)
	   End                                    as DM_019_RespostaDCSac,
	   T16.ISOWFPrc_Codigo                    as DM_019_CodigoProcedimento,
	   RTrim(T16.ISOWFPrc_Descricao)          as DM_019_NomeDoProcedimento,
	   T14.ISOWFTrf_Codigo                    as DM_019_CodigoTarefa,
	   RTrim(T14.ISOWFTrf_Descricao)          as DM_019_Tarefa,
	   T14.ISOWFTrf_DataRecebimento           as DM_019_DataRecebimentoTrf,
	   T14.ISOWFTrf_DataLimite                as DM_019_DataLimiteSolucao,
	   T14.ISOWFTrf_RspCodigo                 as DM_019_CodigoResponsavel,
	   RTrim(T17.ISOEnt_Nome)                 as DM_019_NomeResponsavel,
	   T14.ISOWFTrf_RspRes_RspCodigo          as DM_019_CodigoRspReserva,
	   RTrim(T18.ISOEnt_Nome)                 as DM_019_NomeRspReserva,
	   RTrim(T21.ISOPVPed_CodigoExterno)      as DM_019_NumeroPedExterno,
	   RTrim(T20.ISOPrd_Codigo)               as DM_019_CodigoDoItem,
	   RTrim(T22.ISOPrd_Descricao)            as DM_019_DescricaoDoItem,
	   T20.ISOPVPedIte_Quantidade             as DM_019_QuantidadeComprada,

	   -- Metricas
	   1                                      as MT_019_Qtde,
	   Case
	        When T11.ISOSAAtendimentoAttType = 1
			     Then Cast(T10.ISOSAAtendimentoAttValue as float)
		    Else Null
	   End                                    as MT_019_RespostaValor,
	   'V.001'                                as DM_019_Versao
  From ISOSAAtendimento T01 (Nolock) -- Atendimento
       Inner Join ISOSAMotivo               T02 (Nolock) -- Motivo
	      On T02.ISOEmp_Codigo              = T01.ISOEmp_Codigo
		 And T02.ISOSAMot_Codigo            = T01.ISOSAMot_Codigo
	   Inner Join ISOSAMotOcorrencia        T03 (Nolock) -- Ocorrï¿½ncia
	      On T03.ISOEmp_Codigo              = T02.ISOEmp_Codigo
		 And T03.ISOSAMot_Codigo            = T02.ISOSAMot_Codigo
		 And T03.ISOSAMotOcr_Codigo         = T01.ISOSAMotOcr_Codigo
	   Inner Join ISOSAMOTOCRCAUSA          T04 (Nolock) -- Causa
	      On T04.ISOEmp_Codigo              = T03.ISOEmp_Codigo
		 And T04.ISOSAMot_Codigo            = T03.ISOSAMot_Codigo
		 And T04.ISOSAMotOcr_Codigo         = T03.ISOSAMotOcr_Codigo
		 And T04.ISOSAMotOcrCau_Codigo      = T01.ISOSAMotOcrCau_Codigo
	   Inner Join ISOENTIDADE               T05 (Nolock) -- Unidade
	      On T05.ISOEnt_Codigo              = T01.ISOEntUnd_Codigo
       Inner Join ISOSASITUACAO             T06 (Nolock) -- Situaï¿½ï¿½o do atendimento
	      On T06.ISOEmp_Codigo              = T01.ISOEmp_Codigo
		 And T06.ISOSASit_Codigo            = T01.ISOSASit_Codigo
	    Left Join ISOSAAteDetalhe           T07 (nolock) -- Detalhe do Atendimento
	      On T07.ISOEmp_Codigo              = T06.ISOEmp_Codigo
		 And T07.ISOSAAte_Codigo            = T01.ISOSAAte_Codigo
        Left Join ISOEmpCanal               T08 (Nolock) -- Canal de comunicaï¿½ï¿½o
		  On T08.ISOEmp_Codigo              = T07.ISOEmp_Codigo
         And T08.ISOEmpCan_Codigo           = T07.ISOEmpCan_Codigo
		Left Join ISOEntidade               T09 (Nolock) -- Nome do Cliente
		  On T09.ISOEnt_Codigo              = T01.ISOSAAte_EntCodigo
		Left Join ISOSAAtendimentoAttValues T10 (Nolock) -- Respostas do dado complementar do SAC
		  On T10.ISOEmp_Codigo              = T08.ISOEmp_Codigo
         And T10.ISOSAAte_Codigo            = T01.ISOSAAte_Codigo
		Left Join ISOSAAtendimentoAtt       T11 (Nolock) -- Perguntas do dado complementar do SAC
		  On T11.ISOSAAtendimentoAttId      = T10.ISOSAAtendimentoAttId
        Left Join ISOSAAtendimentoFormDef   T12 (nolock) -- Formulï¿½rio de dado complementar do SAC
		  On T12.ISOSAAtendimentoFormDefId  = T11.ISOSAAtendimentoFormDefId
        Left Join ISOSAAtendimentoAtt1      T13 (Nolock) -- Respostas Vï¿½lidas de DC do sac
		  On T13.ISOSAAtendimentoAttId      = T11.ISOSAAtendimentoAttId
		 And T13.ISOSAAtendimentoAttOptId   = T10.ISOSAAtendimentoAttOptId
        Left Join ISOWFTarefa               T14 (Nolock) -- Tarefas do WF vinculado ao SAC
		  On T14.ISOEmp_Codigo              = T01.ISOEmp_Codigo
         And T14.ISOWFTrf_CodModulo         = T01.ISOSAAte_Codigo
		 And T14.ISOWFTrf_SitInterna        = 'Enc'
		 And T14.ISOWFTrf_Automatica        = 0
        Left Join ISOWFTrfPadrao            T15 (Nolock) -- Tarefa Padrï¿½o do WF
		  On T15.ISOEmp_Codigo              = T14.ISOEmp_Codigo
         And T15.ISOWFTrfPad_Codigo         = T14.ISOWFTrfPad_Codigo
		Left Join ISOWFProcedimento         T16 (Nolock) -- Procedimentos da tarefa do WF
		  On T16.ISOEmp_Codigo              = T15.ISOEmp_Codigo
		 And T16.ISOWFPrc_Codigo            = T14.ISOWFPrc_Codigo
        Left Join ISOEntidade               T17 (Nolock) -- Entidade Responsï¿½vel da tarefa
		  On T17.ISOEnt_Codigo              = T14.ISOWFTrf_RspCodigo
        Left Join ISOEntidade               T18 (Nolock) -- Entidade Responsï¿½vel Reserva da tarefa
		  On T18.ISOEnt_Codigo              = T14.ISOWFTrf_RspRes_RspCodigo
		Left Join ISOSA_PVItem              T19 (Nolock) -- Pedidos do Atendimento SAC
		  On T19.ISOEmp_Codigo              = T01.ISOEmp_Codigo
         And T19.ISOSA_PvIte_AteCodigo      = T01.ISOSAAte_Codigo
        Left Join ISOPVPedItem              T20 (Nolock) -- Itens do Pedido
		  On T20.ISOEmp_Codigo              = T19.ISOEmp_Codigo
         And T20.ISOPVPed_Codigo            = T19.ISOSA_PvIte_PedCodigo
		 And T20.ISOPVPedIte_Codigo         = T19.ISOSA_PvIte_PedIteCodigo
        Left Join ISOPVPedido               T21 (Nolock) -- Pedido
		  On T21.ISOEmp_Codigo              = T20.ISOEmp_Codigo
         And T21.ISOPVPed_Codigo            = T20.ISOPVPed_Codigo
        Left Join ISOProduto                T22 (Nolock) -- Produtos do Pedido
          On T22.ISOEmp_Codigo              = T20.ISOEmp_Codigo
		 And T22.ISOPrd_Codigo              = T20.ISOPrd_Codigo;


-- ConexaoISO.BI_020_isoCDS_DC_PessoaOrganizacao source

CREATE VIEW BI_020_isoCDS_DC_PessoaOrganizacao as
Select
       T01.ISOEntPes_Codigo		       as DM_020_Codigo ,
       T01.ISOEntPes_NomeCompleto      as DM_020_Nome ,
	   ''                              as DM_020_NomeFantasia,
       T01.ISOEntPes_DataCadastro      as DM_020_DataCadastro,
	   DATEPART(YEAR, T01.ISOEntPes_DataCadastro)
	                                   as DM_020_AnoCadastro,
	   DATEPART(MONTH, T01.ISOEntPes_DataCadastro)
	                                   as DM_020_MesCadastro,
	   T01.ISOEntPes_CPF               as DM_020_CPF_CNPJ,
	   NULL                            as DM_020_RamoDeAtividade,
	   T01.ISOEntPes_Estrangeiro       as DM_020_Estrangeiro,
	   T01.ISOEntPes_Sexo              as DM_020_Sexo,
	   T15.ISOEstCiv_Descricao         as DM_020_EstadoCivil,
	   T16.ISONivEsc_Descricao         as DM_020_NivelDeEscolaridade,
	   T17.ISOProf_Descricao           as DM_020_Profissao,
       T09.ISOEntSeg_Descricao         as DM_020_Segmento,
	   T02.ISOEntEnd_Logradouro        as DM_020_Endereco,
       T02.ISOEntEnd_Numero            as DM_020_EndNumero,
       T02.ISOEntEnd_Bairro            as DM_020_Bairro,
       T02.ISOEntEnd_CEP               as DM_020_CEP,
	   T02.ISOEntEnd_Complemento       as DM_020_Complemento,
       T03.ISOLoc_Descricao            as DM_020_Localidade,
       T04.ISOEst_Sigla                as DM_020_UF,
       RTrim(T05.ISOPais_Descricao)    as DM_020_Pais,
       Case
           When T07.ISOEntCli_Codigo = T01.ISOEntPes_Codigo Then 'S'
           Else 'N'
       End                             as DM_020_PapelCliente,
       Case
           When T22.ISOEntPar_Codigo = T01.ISOEntPes_Codigo Then 'S'
           Else 'N'
       End                             as DM_020_PapelParceiro,
       Case
           When T23.ISOEntFrn_Codigo = T01.ISOEntPes_Codigo Then 'S'
           Else 'N'
       End                             as DM_020_PapelFornecedor,
       Case
           When T24.ISOEntUsu_Codigo = T01.ISOEntPes_Codigo Then 'S'
           Else 'N'
       End                             as DM_020_PapelUsuario,
       Case
           When T25.ISOEntRsp_Codigo = T01.ISOEntPes_Codigo Then 'S'
           Else 'N'
       End                             as DM_020_PapelResponsavel,
	   T10.ISOEntCla_Descricao	       as DM_020_ClassificacaoEntidade,
	   T11.ISOEntClaEsp_Descricao      as DM_020_EspecialidadeEntidade,
       T08.ISOEntClaP_Descricao        as DM_020_ClassificacaoPapel,
	   T12.ISOEntClaPEsp_Descricao	   as DM_020_EspecialidadePapel,
	   T14.ISOEntCliSit_Descricao	   as DM_020_Situacao,
       'F'                             as DM_020_TipoPessoa,
       T01.ISOEntPes_Flag              as DM_020_Ativo,
       T18.ISOEntTel_DDD               as DM_020_DDD,
       T18.ISOEntTel_Telefone          as DM_020_Telefone,
       T18.ISOEntTel_Principal         as DM_020_TelefonePrincipal,
       T19.ISOTelTip_Descricao         as DM_020_TelefoneTipo,
       T20.ISOEntEct_econtact          as DM_020_EContact,
       T21.ISOEntEctTip_Descricao      as DM_020_EContactTipo,
       T20.ISOEntEctTip_Principal      as DM_020_EContactPrincipal,
	   T01.ISOEntPes_DataAlteracao     as DM_020_DtAlteracao,
	   T01.ISOEntPes_UsuarioAlteracao  as DM_020_UsuAlteracao,
       T28.ISOEntPessoaAttName         as DM_020_NomeDadoCompl,
       Case
           When T27.ISOEntPessoaAttOptId Is Null Or T27.ISOEntPessoaAttOptId = 0 Then T26.ISOEntPessoaAttValue
           Else T27.ISOEntPessoaAttOptValue
       End                             as DM_020_RespDadoCompl,
       RTrim(T30.ISOEmpOri_Descricao)  as DM_020_DscOrigem,
       T29.ISOEmpEnt_Ori_Codigo        as DM_020_CodExterno,

       1						       as MT_020_QtdeEntidades,
       'V_006'                         as DM_020_VersaoVW
  From ISOEntPessoa T01
       Left Join ISOEntEndereco T02
         On T02.ISOEnt_Codigo        = T01.ISOEntPes_Codigo
        And T02.ISOEntEnd_Principal  = 'S'
       Left Join ISOLocalidade T03
         On T03.ISOLoc_Codigo        = T02.ISOLoc_Codigo
        Left Join ISOPAIS T05
          On T05.ISOPais_Codigo      = T03.ISOPais_Codigo
       Left JOin ISOEstado T04
         On T04.ISOEst_Codigo        = T03.ISOEst_Codigo
        And T04.ISOPais_Codigo       = T05.ISOPais_Codigo
       Left join isoentcliente T07
	     On T01.ISOEntPes_Codigo     = T07.ISOEntCli_Codigo
       Left Join ISOEntClassificacaoPapel T08
         On T08.ISOEmp_Codigo        = T07.ISOEmp_Codigo
	    And T08.ISOEntClaP_Codigo    = T07.ISOEntClaP_Codigo
       Left Join ISOEntSegmento T09
         On T09.ISOEntSeg_Codigo     = T01.ISOEntSeg_Codigo
	   Left join ISOEntClassificacao T10
         On T10.ISOEmp_Codigo        = T07.ISOEmp_Codigo
	    and T10.ISOEntCla_Codigo     = T07.ISOEntCla_Codigo
        and T10.ISOEntCla_Flag       = 'A'
	   Left join ISOEntClaEspecialidade T11
	     On T11.ISOEmp_codigo        = T07.ISOEmp_Codigo
	    And T11.ISOEntCla_Codigo     = T07.ISOEntCla_Codigo
        And T11.ISOEntClaEsp_codigo  = T07.ISOEntClaEsp_Codigo
	   Left join ISOEntClaPEspecialidade T12
	     On T12.ISOEmp_Codigo        = T07.ISOEmp_Codigo
	    And T12.ISOEntClaP_Codigo    = T07.ISOEntClaP_Codigo
	    And T12.ISOEntClaPEsp_Codigo = T07.ISOEntClaPEsp_Codigo
       Left join ISOEntCliSituacao T14
         On T14.ISOEmp_Codigo        = T07.ISOEmp_Codigo
        And T14.ISOEntCliSit_Codigo  = T07.ISOEntCliSit_Codigo
       Left Join ISOEstCivil T15
         On T15.ISOEstCiv_Codigo     = T01.ISOEstCiv_Codigo
       Left Join ISONivEscolaridade T16
         On T16.ISONivEsc_Codigo     = T01.ISONivEsc_Codigo
       Left Join ISOProfissao T17
         ON T17.ISOProf_Codigo        = T01.ISOProf_Codigo
       Left Join ISOENTTELEFONE T18
         On T18.ISOEnt_Codigo        = T01.ISOEntPes_Codigo
       Left Join ISOTELTIPO T19
         On T19.ISOTelTip_Codigo     = T18.ISOTelTip_Codigo
       Left Join ISOENTECONTACT T20
         On T20.ISOEnt_Codigo        = T01.ISOEntPes_Codigo
       Left Join ISOENTECTTIPO T21
         On T21.ISOEntEctTip_Codigo  = T20.ISOEntEctTip_Codigo
       Left Join ISOEntParceiro T22
	     On T22.ISOEntPar_Codigo     = T01.ISOEntPes_Codigo
	   Left Join ISOEntFornecedor T23
	     On T23.ISOEntFrn_Codigo     = T01.ISOEntPes_Codigo
	   Left Join ISOEntUsuario T24
	     On T24.ISOEntUsu_Codigo     = T01.ISOEntPes_Codigo
	   Left Join ISOEntResponsavel T25
	     On T25.ISOEntRsp_Codigo     = T01.ISOEntPes_Codigo
       Left Join ISOENTPESSOAATTVALUES T26
         On T26.ISOEntPes_Codigo     = T01.ISOEntPes_Codigo
       Left Join ISOENTPESSOAATTLEVEL1 T27
         On T27.ISOEntPessoaAttId    = T26.ISOEntPessoaAttId
        And T27.ISOEntPessoaAttOptId = T26.ISOEntPessoaAttOptId
       Left Join ISOENTPESSOAATT T28
         On T28.ISOEntPessoaAttId    = T26.ISOEntPessoaAttId
       Left Join ISOEMPENT_ORIGEM T29
         On T29.ISOEmpEnt_EntCodigo  = T01.ISOEntPes_Codigo
       Left Join ISOEMPORIGEM T30
         On T30.ISOEmp_Codigo        = T29.ISOEmp_Codigo
        And T30.ISOEmpOri_Codigo     = T29.ISOEmpOri_Codigo
Union

Select
       T01.ISOEntOrg_Codigo            as DM_020_Codigo,
       T01.ISOEntOrg_RazaoSocial       as DM_020_Nome,
	   T01.ISOEntOrg_NomeFantasia      as DM_020_NomeFantasia,
       T01.ISOEntOrg_DataCadastro      as DM_020_DataCadastro,
	   DATEPART(YEAR, T01.ISOEntOrg_DataCadastro)
	                                   as DM_020_AnoCadastro,
	   DATEPART(MONTH, T01.ISOEntOrg_DataCadastro)
	                                   as DM_020_MesCadastro,
	   T01.ISOEntOrg_CNPJ              as DM_020_CPF_CNPJ,
	   T13.ISOEntRamAtv_Descricao	   as DM_020_RamoDeAtividade,
	   T01.ISOEntOrg_Estrangeiro       as DM_020_Estrangeiro,
	   Null                            as DM_020_Sexo,
	   Null                            as DM_020_EstadoCivil,
	   Null                            as DM_020_NivelDeEscolaridade,
	   Null                            as DM_020_Profissao,
       T09.ISOEntSeg_Descricao         as DM_020_Segmento,
	   T02.ISOEntEnd_Logradouro        as DM_020_Endereco,
       T02.ISOEntEnd_Numero            as DM_020_EndNumero,
       T02.ISOEntEnd_Bairro            as DM_020_Bairro,
       T02.ISOEntEnd_CEP               as DM_020_CEP,
	   T02.ISOEntEnd_Complemento       as DM_020_Complemento,
       T03.ISOLoc_Descricao            as DM_020_Localidade,
       T04.ISOEst_Sigla                as DM_020_UF,
       RTrim(T05.ISOPais_Descricao)    as DM_020_Pais,
       Case
           When T07.ISOEntCli_Codigo = T01.ISOEntOrg_Codigo Then 'S'
           Else 'N'
       End                             as DM_020_PapelCliente,
       Case
           When T19.ISOEntPar_Codigo = T01.ISOEntOrg_Codigo Then 'S'
           Else 'N'
       End                             as DM_020_PapelParceiro,
       Case
           When T20.ISOEntFrn_Codigo = T01.ISOEntOrg_Codigo Then 'S'
           Else 'N'
       End                             as DM_020_PapelFornecedor,
       Case
           When T21.ISOEntUsu_Codigo = T01.ISOEntOrg_Codigo Then 'S'
           Else 'N'
       End                             as DM_020_PapelUsuario,
       Case
           When T22.ISOEntRsp_Codigo = T01.ISOEntOrg_Codigo Then 'S'
           Else 'N'
       End                             as DM_020_PapelResponsavel,
       T10.ISOEntCla_Descricao		   as DM_020_ClassificacaoEntidade,
	   T11.ISOEntClaEsp_Descricao      as DM_020_EspecialidadeEntidade,
       T08.ISOEntClaP_Descricao        as DM_020_ClassificacaoPapel,
	   T12.ISOEntClaPEsp_Descricao	   as DM_020_EspecialidadePapel,
	   T14.ISOEntCliSit_Descricao	   as DM_020_Situacao,
       'J'                             as DM_020_TipoPessoa,
       T01.ISOEntOrg_Flag              as DM_020_Ativo,
       T15.ISOEntTel_DDD               as DM_020_DDD,
       T15.ISOEntTel_Telefone          as DM_020_Telefone,
       T15.ISOEntTel_Principal         as DM_020_TelefonePrincipal,
       T16.ISOTelTip_Descricao         as DM_020_TelefoneTipo,
       T17.ISOEntEct_econtact          as DM_020_EContact,
       T18.ISOEntEctTip_Descricao      as DM_020_EContactTipo,
       T17.ISOEntEctTip_Principal      as DM_020_EContactPrincipal,
	   T01.ISOEntOrg_DataAlteracao     as DM_020_DtAlteracao,
	   T01.ISOEntOrg_UsuarioAlteracao  as DM_020_UsuAlteracao,
       T28.ISOEntOrganizacaoAttName    as DM_020_NomeDadoCompl,
       Case
           When T27.ISOEntOrganizacaoAttOptId Is Null Or T27.ISOEntOrganizacaoAttOptId = 0 Then T26.ISOEntOrganizacaoAttValue
           Else T27.ISOEntOrganizacaoAttOptValue
       End                             as DM_020_RespDadoCompl,
       RTrim(T30.ISOEmpOri_Descricao)  as DM_020_DscOrigem,
       T29.ISOEmpEnt_Ori_Codigo        as DM_020_CodExterno,

       1						       as MT_020_QtdeEntidades,
       'V_006'                         as DM_020_VersaoVW

  From ISOEntOrganizacao T01
        left Join ISOEntEndereco T02
          On T02.ISOEnt_Codigo        = T01.ISOEntOrg_Codigo
         And T02.ISOEntEnd_Principal  = 'S'
        Left Join ISOLocalidade T03
          On T03.ISOLoc_Codigo        = T02.ISOLoc_Codigo
        Left Join ISOPAIS T05
          On T05.ISOPais_Codigo       = T03.ISOPais_Codigo
        Left Join ISOEstado T04
          On T04.ISOEst_Codigo        = T03.ISOEst_Codigo
         And T04.ISOPais_Codigo       = T05.ISOPais_Codigo
        Left join isoentcliente T07
		  On T01.ISOEntOrg_Codigo     = T07.ISOEntCli_Codigo
        Left Join ISOEntClassificacaoPapel T08
          On T08.ISOEmp_Codigo        = T07.ISOEmp_Codigo
         and T08.ISOEntClaP_Codigo    = T07.ISOEntClaP_Codigo
        Left Join ISOEntSegmento T09
          On T09.ISOEntSeg_Codigo     = T01.ISOEntSeg_Codigo
		Left join ISOEntClassificacao T10
          On T10.ISOEmp_Codigo        = T07.ISOEmp_Codigo
		 and T10.ISOEntCla_Codigo     = T07.ISOEntCla_Codigo
		 and T10.ISOEntCla_Flag = 'A'
		Left join ISOEntClaEspecialidade T11
		  On T11.ISOEmp_codigo        = T07.ISOEmp_Codigo
		 And T11.ISOEntCla_Codigo     = T07.ISOEntCla_Codigo
         and T11.ISOEntClaEsp_codigo  = T07.ISOEntClaEsp_Codigo
		Left join ISOEntClaPEspecialidade T12
		  On T12.ISOEmp_Codigo        = T07.ISOEmp_Codigo
		 And T12.ISOEntClaP_Codigo    = T07.ISOEntClaP_Codigo
		 And T12.ISOEntClaPEsp_Codigo = T07.ISOEntClaPEsp_Codigo
		Left Join ISOEntRamoAtividade T13
          on T13.ISOEntRamAtv_Codigo  = T01.ISOEntRamAtv_Codigo
		Left join ISOEntCliSituacao T14
		  On T14.ISOEmp_Codigo        = T07.ISOEmp_Codigo
		 And T14.ISOEntCliSit_Codigo  = T07.ISOEntCliSit_Codigo
        Left Join ISOENTTELEFONE T15
          On T15.ISOEnt_Codigo        = T01.ISOEntOrg_Codigo
        Left Join ISOTELTIPO T16
          On T16.ISOTelTip_Codigo     = T15.ISOTelTip_Codigo
        Left Join ISOENTECONTACT T17
          On T17.ISOEnt_Codigo        = T01.ISOEntOrg_Codigo
        Left Join ISOENTECTTIPO T18
          On T18.ISOEntEctTip_Codigo  = T17.ISOEntEctTip_Codigo
	   Left Join ISOEntParceiro T19
	     On T19.ISOEntPar_Codigo     = T01.ISOEntOrg_Codigo
	   Left Join ISOEntFornecedor T20
	     On T20.ISOEntFrn_Codigo     = T01.ISOEntOrg_Codigo
	   Left Join ISOEntUsuario T21
	     On T21.ISOEntUsu_Codigo     = T01.ISOEntOrg_Codigo
	   Left Join ISOEntResponsavel T22
	     On T22.ISOEntRsp_Codigo     = T01.ISOEntOrg_Codigo
       Left Join ISOENTOrganizacaoATTVALUES T26
         On T26.ISOEntOrg_Codigo     = T01.ISOEntOrg_Codigo
       Left Join ISOENTOrganizacaoATTLEVEL1 T27
         On T27.ISOEntOrganizacaoAttId    = T26.ISOEntOrganizacaoAttId
        And T27.ISOEntOrganizacaoAttOptId = T26.ISOEntOrganizacaoAttOptId
       Left Join ISOENTOrganizacaoATT T28
         On T28.ISOEntOrganizacaoAttId    = T26.ISOEntOrganizacaoAttId
       Left Join ISOEMPENT_ORIGEM T29
         On T29.ISOEmpEnt_EntCodigo  = T01.ISOEntOrg_Codigo
       Left Join ISOEMPORIGEM T30
         On T30.ISOEmp_Codigo        = T29.ISOEmp_Codigo
        And T30.ISOEmpOri_Codigo     = T29.ISOEmpOri_Codigo;


-- ConexaoISO.BI_021_PedNotaFiscal source

CREATE VIEW BI_021_PedNotaFiscal as
Select T01.ISOEmp_Codigo                   as MT_021_Empresa,
       T01.ISOPvPed_Codigo                 as MT_021_CodPedido,
	   T01.ISOPvPedIte_Codigo              as MT_021_CodPedItem,
	   T02.ISOPvPed_CliCodigo              as MT_021_CodCliente,
	   T03.ISOEnt_Nome                     as MT_021_NomeCliente,
	   T04.ISOEntCli_CodigoExt             as MT_021_CodExtCliente,
	   T02.ISOPvPed_CodigoExterno          as MT_021_CodExtPedido,
	   T01.ISOPrd_Codigo                   as MT_021_CodProduto,
	   T05.ISOPrd_Descricao                as MT_021_DscProduto,
	   T01.ISOPvPedIte_Quantidade          as MT_021_Qtde,
       T06.ISOPvPedItemAttValue            as MT_021_Referencia,
	   T13.ISOEntCliNotaFiscalAttValue     as MT_021_Redespacho,
	   --T07.ISOPvPedidoAttValue             as MT_021_Redespacho,
	   NULL                                as MT_021_CodTransportadora,
	   T14.ISOEntCliNotaFiscalAttValue     as MT_021_DscTransportadora,
	   --T02.ISOPvTrp_Codigo                 as MT_021_CodTransportadora,
	   --T08.ISOPvTrp_Descricao              as MT_021_DscTransportadora,
	   T09.ISOEntCliNF_Numero              as MT_021_NrNotaFiscal,
	   T10.ISOEntCliNF_Data                as MT_021_DtEmissaoNF,
	    Case
	       When T11.ISOEntCliNotaFiscalAttValue = '' Then '1753-01-01'
		   Else T11.ISOEntCliNotaFiscalAttValue
	   End							       as MT_021_DataSaida,
	   T09.ISOEntCliNFItem_Quantidade      as MT_021_QtdeFaturada,
	   T02.ISOPvPed_CodVendedorCD          as MT_021_CodVendedorCD,
	   T01.ISOPvPedIte_DtaSolEntrega       as MT_021_DtaEntrega,
	   T12.ISOPvPedIteSit_Situacao         as MT_021_SitInterna,
	   T02.ISOPvPed_Alcada                 as MT_021_PedAlcada

  From ISOPvPedItem T01
       Inner Join ISOPvPedido T02
	      On T02.ISOEmp_Codigo            = T01.ISOEmp_Codigo
		 And T02.ISOPvPed_Codigo          = T01.ISOPvPed_Codigo
       Inner Join ISOEntidade T03
	      On T03.ISOEnt_Codigo            = T02.ISOPvPed_CliCodigo
       Inner Join ISOEntCliente T04
	      On T04.ISOEmp_Codigo            = T01.ISOEmp_Codigo
		 And T04.ISOEntCli_Codigo         = T03.ISOEnt_Codigo
       Inner Join ISOPRODUTO T05
	      On T05.ISOEmp_Codigo            = T01.ISOEmp_Codigo
		 And T05.ISOPrd_Codigo            = T01.ISOPrd_Codigo
        Left Join ISOPvPedItemAttValues T06 -- Referencia
	      On T06.ISOEmp_Codigo            = T01.ISOEmp_Codigo
		 And T06.ISOPvPed_Codigo          = T01.ISOPvPed_Codigo
		 And T06.ISOPvPedIte_Codigo       = T01.ISOPvPedIte_Codigo
		 And T06.ISOPvPedItemAttId        = 1
        /*Left Join ISOPvPedidoAttValues T07 -- Redespacho
		  On T07.ISOEmp_Codigo            = T01.ISOEmp_Codigo
		 And T07.ISOPvPed_Codigo          = T01.ISOPvPed_Codigo
		 And T07.ISOPvPedidoAttId         = 1*/
		Left Join ISOPVTRANSPORTADORA T08
		  On T08.ISOPvTrp_Codigo          = T02.ISOPvTrp_Codigo
		Left Join ISOEntCliNFItem T09
		  On T09.ISOEmp_Codigo            = T01.ISOEmp_Codigo
		 And T09.ISOEntCliNfItem_Pedido   = T01.ISOPvPed_Codigo
		 And T09.ISOEntCliNFItem_PedItem  = T01.ISOPvPedIte_Codigo
		Left Join ISOEntCliNotaFiscal T10
		  On T10.ISOEmp_Codigo            = T09.ISOEmp_Codigo
		 And T10.ISOEntCliNF_RefFiscal    = T09.ISOEntCliNF_RefFiscal
		 And T10.ISOEntCliNF_Serie        = T09.ISOEntCliNF_Serie
		 And T10.ISOEntCliNF_Numero       = T09.ISOEntCliNF_Numero
		Left Join ISOENTCLINOTAFISCALATTVALUES T11
		  On T11.ISOEmp_Codigo            = T10.ISOEmp_Codigo
		 And T11.ISOEntCliNF_RefFiscal    = T10.ISOEntCliNF_RefFiscal
		 And T11.ISOEntCliNF_Serie        = T10.ISOEntCliNF_Serie
		 And T11.ISOEntCliNF_Numero       = T10.ISOEntCliNF_Numero
		 And T11.ISOEntCliNotaFiscalAttId = 1
		Left Join ISOPVPedIteSituacao T12
		  On T12.ISOEmp_Codigo            = T01.ISOEmp_Codigo
		 And T12.ISOPvPedIteSit_Codigo    = T01.ISOPvPedIteSit_Codigo
		Left Join ISOENTCLINOTAFISCALATTVALUES T13
		  On T13.ISOEmp_Codigo           = T10.ISOEmp_Codigo
		 And T13.ISOEntCliNF_RefFiscal    = T10.ISOEntCliNF_RefFiscal
		 And T13.ISOEntCliNF_Serie        = T10.ISOEntCliNF_Serie
		 And T13.ISOEntCliNF_Numero       = T10.ISOEntCliNF_Numero
		 And T13.ISOEntCliNotaFiscalAttId = 2
	    Left Join ISOENTCLINOTAFISCALATTVALUES T14
		  On T14.ISOEmp_Codigo            = T10.ISOEmp_Codigo
		 And T14.ISOEntCliNF_RefFiscal    = T10.ISOEntCliNF_RefFiscal
		 And T14.ISOEntCliNF_Serie        = T10.ISOEntCliNF_Serie
		 And T14.ISOEntCliNF_Numero       = T10.ISOEntCliNF_Numero
		 And T14.ISOEntCliNotaFiscalAttId = 3;


-- ConexaoISO.BI_022_PedIteAbeFatParcial source

/*
Select * from ISOPVPEDITEORDPRODUCAO where isopvped_codigo = 45173
and ISOPvPedIteOrd_OrdemProd = 870757
*/
CREATE VIEW BI_022_PedIteAbeFatParcial as
Select T01.ISOEmp_Codigo              as DM_022_Empresa,
       T02.ISOPvPed_CliCodigo         as DM_022_CliCodISO,
	   T04.ISOEntCli_CodigoExt        as DM_022_CliCodExt,
	   T03.ISOEnt_Nome                as DM_022_CliNome,
	   T02.ISOPvPed_Codigo            as DM_022_PedCodISO,
	   T02.ISOPvPed_CodigoExterno     as DM_022_PedCodExt,
	   T01.ISOPrd_Codigo              as DM_022_PrdCod,
	   T05.ISOPrd_Descricao           as DM_022_PrdDsc,
	   CASE
	       --T01.ISOPvPedIte_Quantidade
		   WHEN	T06.ISOPvPedIteOrd_OrdemProd is NULL THEN

		       CASE
				 WHEN (Select sum(TA.ISOPvPedIteOrd_QtdeAlocada)
						From ISOPVPEDITEORDPRODUCAO TA
						Where TA.ISOEmp_Codigo = T01.ISOEmp_Codigo
							and TA.ISOPvPed_Codigo = T01.ISOPvPed_Codigo
							and TA.ISOPvPedIte_Codigo = T01.ISOPvPedIte_Codigo
							And TA.ISOPvPedIteOrd_Flag = 'A') IS NULL
				     THEN T01.ISOPvPedIte_Quantidade
				 ELSE T01.ISOPvPedIte_Quantidade - (Select sum(TA.ISOPvPedIteOrd_QtdeAlocada)
						From ISOPVPEDITEORDPRODUCAO TA
						Where TA.ISOEmp_Codigo = T01.ISOEmp_Codigo
							and TA.ISOPvPed_Codigo = T01.ISOPvPed_Codigo
							and TA.ISOPvPedIte_Codigo = T01.ISOPvPedIte_Codigo
							And TA.ISOPvPedIteOrd_Flag = 'A')
		        END
		   --T01.ISOPvPedIte_Quantidade
		   ELSE T06.ISOPvPedIteOrd_QtdeAlocada
	   END
	                                  as DM_022_QtdePedida,
	   T01.ISOPvPedIte_QuantidadeFaturada
	                                  as DM_022_QtdeFaturada,
	   T02.ISOPvPed_DtaPedido         as DM_022_DtaPedido,
	   T07.ISOPvPedIteSit_Situacao    as DM_022_SitInterna,
	   T02.ISOPvPed_CodVendedorCD     as DM_022_CodVendedor,
	   T06.ISOPvPedIteOrd_Referencia  as DM_022_Referencia,
	   T06.ISOPvPedIteOrd_DtaEntProd  as DM_022_DtaEntProd,
	   T06.ISOPvPedIteOrd_OrdemProd   as DM_022_OrdemProd,
	   T06.ISOPvPedIteOrd_ProgEntrega as DM_022_ProgEntrega,
	   CASE
	       WHEN T06.ISOPvPedIteOrd_OrdemProd = '' THEN 0
		   WHEN	T06.ISOPvPedIteOrd_OrdemProd is NULL THEN 0
		   ELSE T06.ISOPvPedIteOrd_QtdeAlocada
	   END
	                                  as DM_022_QtdeAlocada,
	   T02.ISOPvPed_Alcada            as DM_022_PedAlcada

  From ISOPvPedItem T01
       Inner Join ISOPvPedido T02
	      On T02.ISOEmp_Codigo       = T01.ISOEmp_Codigo
		 And T02.ISOPvPed_Codigo     = T01.ISOPvPed_Codigo
	   Inner Join ISOEntidade T03
	      On T03.ISOEnt_Codigo       = T02.ISOPvPed_CliCodigo
	   Inner Join ISOEntCliente T04
	      On T04.ISOEmp_Codigo       = T01.ISOEmp_Codigo
		 And T04.ISOEntCli_Codigo    = T02.ISOPvPed_CliCodigo
	   Inner Join ISOPRODUTO T05
		  On T05.ISOEmp_Codigo       = T01.ISOEmp_Codigo
		 And T05.ISOPrd_Codigo       = T01.ISOPrd_Codigo
       Inner Join ISOPVPEDITEORDPRODUCAO T06
		  On T06.ISOEmp_Codigo       = T01.ISOEmp_Codigo
		 And T06.ISOPvPed_Codigo     = T01.ISOPvPed_Codigo
		 And T06.ISOPvPedIte_Codigo  = T01.ISOPvPedIte_Codigo
		 And T06.ISOPvPedIteOrd_Flag = 'A'
	   Inner Join ISOPVPedIteSituacao T07
		  On T07.ISOEmp_Codigo            = T01.ISOEmp_Codigo
		 And T07.ISOPvPedIteSit_Codigo    = T01.ISOPvPedIteSit_Codigo
	   Inner Join ISOPvPedSituacao T08
	      On T08.ISOEmp_Codigo       = T02.ISOEmp_Codigo
		 And T08.ISOPvPedSit_Codigo  = T02.ISOPvPedSit_Codigo
	   Where T06.ISOPvPedIteOrd_OrdemProd <> ''
	     And T07.ISOPvPedIteSit_Situacao In (1, 6)
	     And T08.ISOPvPedSit_Situacao <> 9
Union

Select T01.ISOEmp_Codigo              as DM_022_Empresa,
       T02.ISOPvPed_CliCodigo         as DM_022_CliCodISO,
	   T04.ISOEntCli_CodigoExt        as DM_022_CliCodExt,
	   T03.ISOEnt_Nome                as DM_022_CliNome,
	   T02.ISOPvPed_Codigo            as DM_022_PedCodISO,
	   T02.ISOPvPed_CodigoExterno     as DM_022_PedCodExt,
	   T01.ISOPrd_Codigo              as DM_022_PrdCod,
	   T05.ISOPrd_Descricao           as DM_022_PrdDsc,
	   --T01.ISOPvPedIte_Quantidade
	   CASE
			WHEN (Select sum(TA.ISOPvPedIteOrd_QtdeAlocada)
				From ISOPVPEDITEORDPRODUCAO TA
				Where TA.ISOEmp_Codigo = T01.ISOEmp_Codigo
					and TA.ISOPvPed_Codigo = T01.ISOPvPed_Codigo
					and TA.ISOPvPedIte_Codigo = T01.ISOPvPedIte_Codigo
					And TA.ISOPvPedIteOrd_Flag = 'A') IS NULL
				THEN T01.ISOPvPedIte_Quantidade
			ELSE T01.ISOPvPedIte_Quantidade - (Select sum(TA.ISOPvPedIteOrd_QtdeAlocada)
				From ISOPVPEDITEORDPRODUCAO TA
				Where TA.ISOEmp_Codigo = T01.ISOEmp_Codigo
					and TA.ISOPvPed_Codigo = T01.ISOPvPed_Codigo
					and TA.ISOPvPedIte_Codigo = T01.ISOPvPedIte_Codigo
					And TA.ISOPvPedIteOrd_Flag = 'A')
	   END
									  as DM_022_QtdePedida,
	   T01.ISOPvPedIte_QuantidadeFaturada
	                                  as DM_022_QtdeFaturada,
	   T02.ISOPvPed_DtaPedido         as DM_022_DtaPedido,
	   T06.ISOPvPedIteSit_Situacao    as DM_022_SitInterna,
	   T02.ISOPvPed_CodVendedorCD     as DM_022_CodVendedor,
	   Null                           as DM_022_Referencia,
	   Null                           as DM_022_DtaEntProd,
	   Null                           as DM_022_OrdemProd,
	   Null                           as DM_022_ProgEntrega,
	   /*T01.ISOPvPedIte_Quantidade - T01.ISOPvPedIte_QuantidadeFaturada - (Select sum(TA.ISOPvPedIteOrd_QtdeAlocada)
	                                                                        From ISOPVPEDITEORDPRODUCAO TA
																		   Where TA.ISOEmp_Codigo = T01.ISOEmp_Codigo
																		     and TA.ISOPvPed_Codigo = T01.ISOPvPed_Codigo
																			 and TA.ISOPvPedIte_Codigo = T01.ISOPvPedIte_Codigo
																			 And TA.ISOPvPedIteOrd_Flag = 'A')*/
	   0                              as DM_022_QtdeAlocada,
	   T02.ISOPvPed_Alcada            as DM_022_PedAlcada
  From ISOPvPedItem T01
       Inner Join ISOPvPedido T02
	      On T02.ISOEmp_Codigo     = T01.ISOEmp_Codigo
		 And T02.ISOPvPed_Codigo   = T01.ISOPvPed_Codigo
	   Inner Join ISOEntidade T03
	      On T03.ISOEnt_Codigo     = T02.ISOPvPed_CliCodigo
	   Inner Join ISOEntCliente T04
	      On T04.ISOEmp_Codigo     = T01.ISOEmp_Codigo
		 And T04.ISOEntCli_Codigo  = T02.ISOPvPed_CliCodigo
	   Inner Join ISOPRODUTO T05
		  On T05.ISOEmp_Codigo     = T01.ISOEmp_Codigo
		 And T05.ISOPrd_Codigo     = T01.ISOPrd_Codigo
	   Inner Join ISOPVPedIteSituacao T06
		  On T06.ISOEmp_Codigo            = T01.ISOEmp_Codigo
		 And T06.ISOPvPedIteSit_Codigo    = T01.ISOPvPedIteSit_Codigo
	   Inner Join ISOPvPedSituacao T08
	      On T08.ISOEmp_Codigo       = T02.ISOEmp_Codigo
		 And T08.ISOPvPedSit_Codigo  = T02.ISOPvPedSit_Codigo
 Where ((T01.ISOPvPedIte_Quantidade - T01.ISOPvPedIte_QuantidadeFaturada  - (Select sum(TA.ISOPvPedIteOrd_QtdeAlocada)
	                                                                        From ISOPVPEDITEORDPRODUCAO TA
																		   Where TA.ISOEmp_Codigo = T01.ISOEmp_Codigo
																		     and TA.ISOPvPed_Codigo = T01.ISOPvPed_Codigo
																			 and TA.ISOPvPedIte_Codigo = T01.ISOPvPedIte_Codigo
																			 And TA.ISOPvPedIteOrd_Flag = 'A')) > 0 Or
        (T01.ISOPvPedIte_Quantidade - T01.ISOPvPedIte_QuantidadeFaturada  - (Select sum(TA.ISOPvPedIteOrd_QtdeAlocada)
	                                                                        From ISOPVPEDITEORDPRODUCAO TA
																		   Where TA.ISOEmp_Codigo = T01.ISOEmp_Codigo
																		     and TA.ISOPvPed_Codigo = T01.ISOPvPed_Codigo
																			 and TA.ISOPvPedIte_Codigo = T01.ISOPvPedIte_Codigo
																			 And TA.ISOPvPedIteOrd_Flag = 'A')) is null)
   And T06.ISOPvPedIteSit_Situacao In (1, 6)
   And T06.ISOPvPedIteSit_Situacao In (1, 6)
   And T08.ISOPvPedSit_Situacao <> 9;


-- ConexaoISO.BI_023A_Situacao source

CREATE VIEW BI_023A_Situacao as
Select 'Cliente'                   as DM_023A_TipoPapel,
       T01.ISOEntCliSit_Codigo     as DM_023A_CodSituacao,
	   T01.ISOEntCliSit_Descricao  as DM_023A_DscSituacao,
	   T02.ISOEntCli_Codigo        as DM_023A_CodEntidade,
	   T02.ISOEntCli_Flag          as DM_023A_PapelAtivo,
	   T02.ISOEntCli_CodigoMatriz  as DM_023A_CodMatriz,
	   T02.ISOEntCli_CodigoExt     as DM_023A_CodExt,
	   T03.ISOEntClaP_Codigo       as DM_023A_CodClsPapel,
	   T03.ISOEntClaP_Descricao    as DM_023A_DscClsPapel,
	   T04.ISOEntClaPEsp_Codigo    as DM_023A_CodClsEspPapel,
	   T04.ISOEntClaPEsp_Descricao as DM_023A_DscClsEspPapel
  From ISOEntCliSituacao T01
       Inner Join ISOEntCliente T02
	      On T02.ISOEmp_Codigo        = T01.ISOEmp_Codigo
		 And T02.ISOEntCliSit_Codigo  = T01.ISOEntCliSit_Codigo
	    Left Join ISOEntClassificacaoPapel T03
		  On T03.ISOEmp_Codigo        = T02.ISOEmp_Codigo
		 And T03.ISOEntClaP_Codigo    = T02.ISOEntClaP_Codigo
		Left Join ISOENTCLAPESPECIALIDADE T04
		  On T04.ISOEmp_Codigo        = T03.ISOEmp_Codigo
		 And T04.ISOEntClaP_Codigo    = T03.ISOEntClaP_Codigo
		 And T04.ISOEntClaPEsp_Codigo = T02.ISOEntClaPEsp_Codigo

Union

Select 'Responsavel'              as DM_023A_TipoPapel,
       T01.ISOEntRspSit_Codigo    as DM_023A_CodSituacao,
	   T01.ISOEntRspSit_Descricao as DM_023A_DscSituacao,
	   T02.ISOEntRsp_Codigo       as DM_023A_CodEntidade,
	   T02.ISOEntRsp_Flag         as DM_023A_PapelAtivo,
	   Null                       as DM_023A_CodMatriz,
	   Null                        as DM_023A_CodExt,
	   NULL                       as DM_023A_CodClsPapel,
	   NULL                       as DM_023A_DscClsPapel,
	   NULL                       as DM_023A_CodClsEspPapel,
	   NULL                       as DM_023A_DscClsEspPapel
  From ISOEntRspSituacao T01
       Inner Join ISOEntResponsavel T02
	      On T02.ISOEmp_Codigo       = T01.ISOEmp_Codigo
		 And T02.ISOEntRspSit_Codigo = T01.ISOEntRspSit_Codigo

Union

Select 'Unidade'                   as DM_023A_TipoPapel,
       T01.ISOEntUndSit_Codigo     as DM_023A_CodSituacao,
	   T01.ISOEntUndSit_Descricao  as DM_023A_DscSituacao,
	   T02.ISOEntUnd_Codigo        as DM_023A_CodEntidade,
	   T02.ISOEntUnd_Flag          as DM_023A_PapelAtivo,
	   Null                        as DM_023A_CodMatriz,
	   Null                        as DM_023A_CodExt,
	   T03.ISOEntClaP_Codigo       as DM_023A_CodClsPapel,
	   T03.ISOEntClaP_Descricao    as DM_023A_DscClsPapel,
	   T04.ISOEntClaPEsp_Codigo    as DM_023A_CodClsEspPapel,
	   T04.ISOEntClaPEsp_Descricao as DM_023A_DscClsEspPapel
  From ISOEntundSituacao T01
       Inner Join ISOEntUnidade T02
	      On T02.ISOEmp_Codigo        = T01.ISOEmp_Codigo
		 And T02.ISOEntUndSit_Codigo  = T01.ISOEntUndSit_Codigo
	    Left Join ISOEntClassificacaoPapel T03
		  On T03.ISOEmp_Codigo        = T02.ISOEmp_Codigo
		 And T03.ISOEntClaP_Codigo    = T02.ISOEntClaP_Codigo
		Left Join ISOENTCLAPESPECIALIDADE T04
		  On T04.ISOEmp_Codigo        = T03.ISOEmp_Codigo
		 And T04.ISOEntClaP_Codigo    = T03.ISOEntClaP_Codigo
		 And T04.ISOEntClaPEsp_Codigo = T02.ISOEntClaPEsp_Codigo

Union

Select 'Usuario'                   as DM_023A_TipoPapel,
       T01.ISOEntUsuSit_Codigo     as DM_023A_CodSituacao,
	   T01.ISOEntUsuSit_Descricao  as DM_023A_DscSituacao,
	   T02.ISOEntUsu_Codigo        as DM_023A_CodEntidade,
	   T02.ISOEntUsu_Flag          as DM_023A_PapelAtivo,
	   Null                        as DM_023A_CodMatriz,
	   Null                        as DM_023A_CodExt,
	   T03.ISOEntClaP_Codigo       as DM_023A_CodClsPapel,
	   T03.ISOEntClaP_Descricao    as DM_023A_DscClsPapel,
	   T04.ISOEntClaPEsp_Codigo    as DM_023A_CodClsEspPapel,
	   T04.ISOEntClaPEsp_Descricao as DM_023A_DscClsEspPapel
  From ISOEntUsuSituacao T01
       Inner Join ISOEntUsuario T02
	      On T02.ISOEmp_Codigo        = T01.ISOEmp_Codigo
		 And T02.ISOEntUsuSit_Codigo  = T01.ISOEntUsuSit_Codigo
	    Left Join ISOEntClassificacaoPapel T03
		  On T03.ISOEmp_Codigo        = T02.ISOEmp_Codigo
		 And T03.ISOEntClaP_Codigo    = T02.ISOEntClaP_Codigo
		Left Join ISOENTCLAPESPECIALIDADE T04
		  On T04.ISOEmp_Codigo        = T03.ISOEmp_Codigo
		 And T04.ISOEntClaP_Codigo    = T03.ISOEntClaP_Codigo
		 And T04.ISOEntClaPEsp_Codigo = T02.ISOEntClaPEsp_Codigo;


-- ConexaoISO.BI_023B_DadoComplementar source

CREATE VIEW BI_023B_DadoComplementar as
Select 'Cliente'                         as DM_023B_TipoDC,
       Str(T01.ISOEntClienteAttId, 5)    as DM_023B_AttId,
	   T01.ISOEntClienteAttName          as DM_023B_AttName,
	   Str(T01.ISOEntClienteAttType, 2)  as DM_023B_AttType,
	   Str(T01.ISOEntClienteAttId, 5) + Str(T01.ISOEntClienteAttType, 2)
                                         as DM_023B_CodAtt,
       Case
           When T01.ISOEntClienteAttType = 4 Then LTrim(Str(T02.ISOEntClienteAttOptId, 5))
		   Else                                   T02.ISOEntClienteAttValue
	   End                               as DM_023B_RspAtt,
	   T02.ISOEmp_Codigo                 as DM_023B_CodEmpresa,
	   T02.ISOEntCli_Codigo              as DM_023B_CodCliente
  From ISOEntClienteAtt T01
	   Inner Join ISOEntClienteAttValues T02
	      On T02.ISOEntClienteAttId = T01.ISOEntClienteAttId

Union All

Select 'Responsavel'                         as DM_023B_TipoDC,
       Str(T01.ISOEntResponsavelAttId, 5)    as DM_023B_AttId,
	   T01.ISOEntResponsavelAttName          as DM_023B_AttName,
	   Str(T01.ISOEntResponsavelAttType, 2)  as DM_023B_AttType,
	   Str(T01.ISOEntResponsavelAttId, 5) + Str(T01.ISOEntResponsavelAttType, 2)
                                             as DM_023B_CodAtt,
       Case
           When T01.ISOEntResponsavelAttType = 4 Then LTrim(Str(T02.ISOEntResponsavelAttOptId, 5))
		   Else                                       T02.ISOEntResponsavelAttValue
	   End                                   as DM_023B_RspAtt,
	   T02.ISOEmp_Codigo                     as DM_023B_CodEmpresa,
	   T02.ISOEntRsp_Codigo                  as DM_023B_CodCliente
  From ISOEntResponsavelAtt T01
	   Inner Join ISOEntResponsavelAttValues T02
	      On T02.ISOEntResponsavelAttId = T01.ISOEntResponsavelAttId
Union All

Select Case
            When T02.ISOEntOrg_Codigo Is Null Then 'Pessoa'
			Else 'Organizacao'
	   End                                     as DM_023B_TipoDC,
	   Case
            When T02.ISOEntOrg_Codigo Is Null Then STR(T04.ISOEntPessoaAttId, 5)
            Else Str(T02.ISOEntOrganizacaoAttId, 5)
       End                                     as DM_023B_AttId,
	   Case
            When T02.ISOEntOrg_Codigo Is Null Then T05.ISOEntPessoaAttName
            Else T03.ISOEntOrganizacaoAttName
       End                                     as DM_023B_AttName,
	   Case
            When T02.ISOEntOrg_Codigo Is Null Then Str(T05.ISOEntPessoaAttType, 2)
            Else Str(T03.ISOEntOrganizacaoAttType, 2)
       End                                     as DM_023B_AttType,
	   Case
            When T02.ISOEntOrg_Codigo Is Null Then Str(T05.ISOEntPessoaAttId, 5) + Str(T05.ISOEntPessoaAttType, 2)
            Else Str(T03.ISOEntOrganizacaoAttId, 5) + Str(T03.ISOEntOrganizacaoAttType, 2)
       End                                     as DM_023B_CodAtt,
       Case
	        When T04.ISOEntPes_Codigo Is Null Then
			     Case
                      When T03.ISOEntOrganizacaoAttType = 4 Then LTrim(Str(T02.ISOEntOrganizacaoAttOptId, 5))
		              Else T02.ISOEntOrganizacaoAttValue
                 End
            Else
			     Case
                      When T05.ISOEntPessoaAttType = 4 Then LTrim(Str(T04.ISOEntPessoaAttOptId, 5))
		              Else T04.ISOEntPessoaAttValue
                 End
	   End                                     as DM_023B_RspAtt,
	   Null                                    as DM_023B_CodEmpresa,
	   Case
	        When T02.ISOEntOrg_Codigo Is null Then T04.ISOEntPes_Codigo
	        Else T02.ISOEntOrg_Codigo
       End                                     as DM_023B_CodCliente
  From ISOENTIDADE T01
        Left Join ISOENTORGANIZACAOATTVALUES T02
		  On T02.ISOEntOrg_Codigo       = T01.ISOEnt_Codigo
	    Left Join ISOENTORGANIZACAOATT T03
	      On T03.ISOEntOrganizacaoAttId = T02.ISOEntOrganizacaoAttId
		Left Join ISOENTPESSOAATTVALUES T04
		  On T04.ISOEntPes_Codigo       = T01.ISOEnt_Codigo
	    Left Join ISOENTPESSOAATT T05
	      On T05.ISOEntPessoaAttId      = T04.ISOEntPessoaAttId
/*
Select 'Pessoa'                           as DM_023B_TipoDC,
       Str(T01.ISOEntPessoaAttId, 5)      as DM_023B_AttId,
	   T01.ISOEntPessoaAttName            as DM_023B_AttName,
	   Str(T01.ISOEntPessoaAttType, 2)    as DM_023B_AttType,
	   Str(T01.ISOEntPessoaAttId, 5) + Str(T01.ISOEntPessoaAttType, 2)
                                          as DM_023B_CodAtt,
       Case
           When T01.ISOEntPessoaAttType = 4 Then LTrim(Str(T02.ISOEntPessoaAttOptId, 5))
		   Else                                  T02.ISOEntPessoaAttValue
	   End                                as DM_023B_RspAtt,
	   Null                               as DM_023B_CodEmpresa,
	   T02.ISOEntPes_Codigo               as DM_023B_CodCliente
  From ISOEntPessoaAtt T01
	   Inner Join ISOEntPessoaAttValues T02
	      On T02.ISOEntPessoaAttId = T01.ISOEntPessoaAttId

Union All

Select 'Organizacao'                           as DM_023B_TipoDC,
       Str(T01.ISOEntOrganizacaoAttId, 5)      as DM_023B_AttId,
	   T01.ISOEntOrganizacaoAttName            as DM_023B_AttName,
	   Str(T01.ISOEntOrganizacaoAttType, 2)    as DM_023B_AttType,
	   Str(T01.ISOEntOrganizacaoAttId, 5) + Str(T01.ISOEntOrganizacaoAttType, 2)
                                               as DM_023B_CodAtt,
       Case
           When T01.ISOEntOrganizacaoAttType = 4 Then LTrim(Str(T02.ISOEntOrganizacaoAttOptId, 5))
		   Else                                  T02.ISOEntOrganizacaoAttValue
	   End                                as DM_023B_RspAtt,
	   Null                               as DM_023B_CodEmpresa,
	   T02.ISOEntOrg_Codigo               as DM_023B_CodCliente
  From ISOEntOrganizacaoAtt T01
	   Inner Join ISOEntOrganizacaoAttValues T02
	      On T02.ISOEntOrganizacaoAttId = T01.ISOEntOrganizacaoAttId
*/;


-- ConexaoISO.BI_023_PesqAtendimento source

CREATE VIEW BI_023_PesqAtendimento as
/*
Autor      : Edison Washimi
Data       : 14/10/2014

Alteração  : Edison Washimi
Data       : 04/11/2014
Atendimento:
*/

Select T01.ISOEmp_Codigo             as DM_023_CodEmpresa,
       Case
	       When T11.ISOEntOrg_Codigo is Null Then 'P'
		   Else 'O'
       End                           as DM_023_TipoEntidade,
	   Case
	       When T11.ISOEntOrg_Codigo is Null Then T12.ISOEntPes_CPF
		   Else T11.ISOEntOrg_CNPJ
       End                           as DM_023_CPFCNPJ,
	   Case
	       When T11.ISOEntOrg_Codigo is null then T12.ISOEntPes_RG
		   Else Null
       End                           as DM_023_RG,
	   T00.ISOEnt_Nome               as DM_023_Nome,
	   Case
	       When T11.ISOEntOrg_Codigo is Null Then Null
		   Else T11.ISOEntOrg_NomeFantasia
       End                           as DM_023_NomeFantasia,
	   T01.ISOEnt_Codigo             as DM_023_CodEntidade,
	   T02.ISOEntTel_DDD             as DM_023_NrDDD,
	   T02.ISOEntTel_Telefone        as DM_023_NrTelefone,
	   T04.ISOLoc_Descricao          as DM_023_DscLocalidade,
	   T05.ISOEst_Sigla              as DM_023_UF,
	   T06.ISOPais_Descricao         as DM_023_DscPais,
	   Case
	       When T11.ISOEntOrg_Codigo Is Null Then T12.ISOEntPes_Flag
		   Else T11.ISOEntOrg_Flag
	   End                           as DM_023_Ativo,
	   T07.DM_023A_TipoPapel         as DM_023_TipoPapel,
	   T07.DM_023A_CodSituacao       as DM_023_CodSituacao,
	   T07.DM_023A_DscSituacao       as DM_023_DscSituacao,
	   T07.DM_023A_PapelAtivo        as DM_023_PapelAtivo,
	   T07.DM_023A_CodMatriz         as DM_023_CodMatriz,
	   T07.DM_023A_CodExt            as DM_023_CodExt,
	   T07.DM_023A_CodClsPapel       as DM_023_CodClsPapel,
	   T07.DM_023A_DscClsPapel       as DM_023_DscClsPapel,
	   T07.DM_023A_CodClsEspPapel    as DM_023_CodClsEspPapel,
	   T07.DM_023A_DscClsEspPapel    as DM_023_DscClsEspPapel,
	   T08.DM_023B_TipoDC            as DM_023_TipoDC,
	   T08.DM_023B_AttId             as DM_023_AttId,
	   T08.DM_023B_AttName           as DM_023_AttName,
	   T08.DM_023B_AttType           as DM_023_AttType,
	   T08.DM_023B_CodAtt            as DM_023_CodAtt,
	   T08.DM_023B_RspAtt            as DM_023_RspAtt,
	   T09.ISOEmpOri_Codigo          as DM_023_CodDaOrigem,
	   T09.ISOEmpEnt_Ori_Codigo      as DM_023_CodNaOrigem,
	   T10.ISOEntEct_econtact        as DM_023_EContact,
	   T10.ISOEntEctTip_Principal    as DM_023_EctPrincipal

  From ISOEntidade T00
       Inner Join ISOEMP_ENTIDADE T01
	      On T00.ISOEnt_Codigo       = T01.ISOEnt_Codigo
        Left Join ISOEntTelefone T02
	      On T02.ISOEnt_Codigo       = T01.ISOEnt_Codigo
        Left Join ISOEntEndereco T03
	      On T03.ISOEnt_Codigo       = T01.ISOEnt_Codigo
	    Left Join ISOLocalidade T04
	      On T04.ISOLoc_Codigo       = T03.ISOLoc_Codigo
        Left Join ISOEstado T05
		  On T05.ISOEst_Codigo       = T04.ISOEst_Codigo
        Left Join ISOPais T06
		  On T06.ISOPais_Codigo      = T04.ISOPais_Codigo
        Left Join BI_023A_Situacao T07
		  On T07.DM_023A_CodEntidade = T01.ISOEnt_Codigo
		Left Join BI_023B_DadoComplementar T08
		  On T08.DM_023B_CodEmpresa  = T01.ISOEmp_Codigo
		 And T08.DM_023B_CodCliente  = T01.ISOEnt_Codigo
		Left Join ISOEmpEnt_Origem T09
		  On T09.ISOEmp_Codigo       = T01.ISOEmp_Codigo
		 And T09.ISOEmpEnt_EntCodigo = T01.ISOEnt_Codigo
        Left Join ISOEntEContact T10
		  On T10.ISOEnt_Codigo       = T01.ISOEnt_Codigo
		Left Join ISOEntOrganizacao T11
		  On T11.ISOEntOrg_Codigo    = T01.ISOEnt_Codigo
	    Left Join ISOEntPessoa T12
		  On T12.ISOEntPes_Codigo    = T01.ISOEnt_Codigo
/*
Select T01.ISOEmp_Codigo             as DM_023_CodEmpresa,
       'P'                           as DM_023_TipoEntidade,
       T12.ISOEntPes_CPF             as DM_023_CPFCNPJ,
       T12.ISOEntPes_RG              as DM_023_RG,
	   T00.ISOEnt_Nome               as DM_023_Nome,
       Null                          as DM_023_NomeFantasia,
	   T01.ISOEnt_Codigo             as DM_023_CodEntidade,
	   T02.ISOEntTel_DDD             as DM_023_NrDDD,
	   T02.ISOEntTel_Telefone        as DM_023_NrTelefone,
	   T04.ISOLoc_Descricao          as DM_023_DscLocalidade,
	   T05.ISOEst_Sigla              as DM_023_UF,
	   T06.ISOPais_Descricao         as DM_023_DscPais,
	   T12.ISOEntPes_Flag            as DM_023_Ativo,
	   T07.DM_023A_TipoPapel         as DM_023_TipoPapel,
	   T07.DM_023A_CodSituacao       as DM_023_CodSituacao,
	   T07.DM_023A_DscSituacao       as DM_023_DscSituacao,
	   T07.DM_023A_PapelAtivo        as DM_023_PapelAtivo,
	   T07.DM_023A_CodMatriz         as DM_023_CodMatriz,
	   T07.DM_023A_CodExt            as DM_023_CodExt,
	   T07.DM_023A_CodClsPapel       as DM_023_CodClsPapel,
	   T07.DM_023A_DscClsPapel       as DM_023_DscClsPapel,
	   T07.DM_023A_CodClsEspPapel    as DM_023_CodClsEspPapel,
	   T07.DM_023A_DscClsEspPapel    as DM_023_DscClsEspPapel,
	   T08.DM_023B_TipoDC            as DM_023_TipoDC,
	   T08.DM_023B_AttId             as DM_023_AttId,
	   T08.DM_023B_AttName           as DM_023_AttName,
	   T08.DM_023B_AttType           as DM_023_AttType,
	   T08.DM_023B_CodAtt            as DM_023_CodAtt,
	   T08.DM_023B_RspAtt            as DM_023_RspAtt,
	   T09.ISOEmpOri_Codigo          as DM_023_CodDaOrigem,
	   T09.ISOEmpEnt_Ori_Codigo      as DM_023_CodNaOrigem,
	   T10.ISOEntEct_econtact        as DM_023_EContact,
	   T10.ISOEntEctTip_Principal    as DM_023_EctPrincipal

  From ISOEmp_Entidade T01
       Inner Join ISOEntidade T00
	      On T00.ISOEnt_Codigo       = T01.ISOEnt_Codigo
        Left Join ISOEntTelefone T02
	      On T02.ISOEnt_Codigo       = T01.ISOEnt_Codigo
        Left Join ISOEntEndereco T03
	      On T03.ISOEnt_Codigo       = T01.ISOEnt_Codigo
	    Left Join ISOLocalidade T04
	      On T04.ISOLoc_Codigo       = T03.ISOLoc_Codigo
        Left Join ISOEstado T05
		  On T05.ISOEst_Codigo       = T04.ISOEst_Codigo
        Left Join ISOPais T06
		  On T06.ISOPais_Codigo      = T04.ISOPais_Codigo
        Left Join BI_023A_Situacao T07
		  On T07.DM_023A_CodEntidade = T01.ISOEnt_Codigo
		Left Join BI_023B_DadoComplementar T08
		  On T08.DM_023B_CodEmpresa  = T01.ISOEmp_Codigo
		 And T08.DM_023B_CodCliente  = T01.ISOEnt_Codigo
		Left Join ISOEmpEnt_Origem T09
		  On T09.ISOEmp_Codigo       = T01.ISOEmp_Codigo
		 And T09.ISOEmpEnt_EntCodigo = T01.ISOEnt_Codigo
        Left Join ISOEntEContact T10
		  On T10.ISOEnt_Codigo       = T01.ISOEnt_Codigo
--		Left Join ISOEntOrganizacao T11
--		  On T11.ISOEntOrg_Codigo    = T01.ISOEnt_Codigo
	   Inner Join ISOEntPessoa T12
		  On T12.ISOEntPes_Codigo    = T01.ISOEnt_Codigo

Union

Select T01.ISOEmp_Codigo             as DM_023_CodEmpresa,
       'O'                           as DM_023_TipoEntidade,
       T11.ISOEntOrg_CNPJ            as DM_023_CPFCNPJ,
	   Null                          as DM_023_RG,
	   T00.ISOEnt_Nome               as DM_023_Nome,
	   T11.ISOEntOrg_NomeFantasia    as DM_023_NomeFantasia,
	   T01.ISOEnt_Codigo             as DM_023_CodEntidade,
	   T02.ISOEntTel_DDD             as DM_023_NrDDD,
	   T02.ISOEntTel_Telefone        as DM_023_NrTelefone,
	   T04.ISOLoc_Descricao          as DM_023_DscLocalidade,
	   T05.ISOEst_Sigla              as DM_023_UF,
	   T06.ISOPais_Descricao         as DM_023_DscPais,
	   T11.ISOEntOrg_Flag            as DM_023_Ativo,
	   T07.DM_023A_TipoPapel         as DM_023_TipoPapel,
	   T07.DM_023A_CodSituacao       as DM_023_CodSituacao,
	   T07.DM_023A_DscSituacao       as DM_023_DscSituacao,
	   T07.DM_023A_PapelAtivo        as DM_023_PapelAtivo,
	   T07.DM_023A_CodMatriz         as DM_023_CodMatriz,
	   T07.DM_023A_CodExt            as DM_023_CodExt,
	   T07.DM_023A_CodClsPapel       as DM_023_CodClsPapel,
	   T07.DM_023A_DscClsPapel       as DM_023_DscClsPapel,
	   T07.DM_023A_CodClsEspPapel    as DM_023_CodClsEspPapel,
	   T07.DM_023A_DscClsEspPapel    as DM_023_DscClsEspPapel,
	   T08.DM_023B_TipoDC            as DM_023_TipoDC,
	   T08.DM_023B_AttId             as DM_023_AttId,
	   T08.DM_023B_AttName           as DM_023_AttName,
	   T08.DM_023B_AttType           as DM_023_AttType,
	   T08.DM_023B_CodAtt            as DM_023_CodAtt,
	   T08.DM_023B_RspAtt            as DM_023_RspAtt,
	   T09.ISOEmpOri_Codigo          as DM_023_CodDaOrigem,
	   T09.ISOEmpEnt_Ori_Codigo      as DM_023_CodNaOrigem,
	   T10.ISOEntEct_econtact        as DM_023_EContact,
	   T10.ISOEntEctTip_Principal    as DM_023_EctPrincipal

  From ISOEmp_Entidade T01
       Inner Join ISOEntidade T00
	      On T00.ISOEnt_Codigo       = T01.ISOEnt_Codigo
        Left Join ISOEntTelefone T02
	      On T02.ISOEnt_Codigo       = T01.ISOEnt_Codigo
        Left Join ISOEntEndereco T03
	      On T03.ISOEnt_Codigo       = T01.ISOEnt_Codigo
	    Left Join ISOLocalidade T04
	      On T04.ISOLoc_Codigo       = T03.ISOLoc_Codigo
        Left Join ISOEstado T05
		  On T05.ISOEst_Codigo       = T04.ISOEst_Codigo
        Left Join ISOPais T06
		  On T06.ISOPais_Codigo      = T04.ISOPais_Codigo
        Left Join BI_023A_Situacao T07
		  On T07.DM_023A_CodEntidade = T01.ISOEnt_Codigo
		Left Join BI_023B_DadoComplementar T08
		  On T08.DM_023B_CodEmpresa  = T01.ISOEmp_Codigo
		 And T08.DM_023B_CodCliente  = T01.ISOEnt_Codigo
		Left Join ISOEmpEnt_Origem T09
		  On T09.ISOEmp_Codigo       = T01.ISOEmp_Codigo
		 And T09.ISOEmpEnt_EntCodigo = T01.ISOEnt_Codigo
        Left Join ISOEntEContact T10
		  On T10.ISOEnt_Codigo       = T01.ISOEnt_Codigo
	   Inner Join ISOEntOrganizacao T11
		  On T11.ISOEntOrg_Codigo    = T01.ISOEnt_Codigo
*/;


-- ConexaoISO.BI_024_Duplicatas source

CREATE VIEW BI_024_Duplicatas as

Select T01.ISOEmp_Codigo                  as DM_024_CodEmpresa,
       T01.ISOEntCli_Codigo               as DM_024_CodCliente,
	   T03.ISOEnt_Nome                    as DM_024_NomCliente,
	   T01.ISOEntCliNF_Numero             as DM_024_NFNumero,
	   T01.ISOEntCliNF_RefFiscal          as DM_024_RefFiscal,
	   T01.ISOEntCliNF_Serie              as DM_024_NumSerie,
	   T01.ISOEntCliNF_Status             as DM_024_DscStatus,
	   T02.ISOEntCliDup_Numero            as DM_024_NumDuplicata,
	   T02.ISOEntCliDup_Sequencia         as DM_024_NumSequencia,
	   T02.ISOEntCliNFItem_Dup_DataVencim as DM_024_DtaVencimento,
	   T02.ISOEntCliNFItem_Dup_Valor      as DM_024_DupValor,
       T04.ISOEntCli_LimiteCredito        as DM_024_VlrLimiteCredito,
	   T04.ISOEntCli_LimiteCreditoDisp    as DM_024_VlrLimiteCreditoDsp,
	   T06.ISOEnt_Nome                    as DM_024_NomRepresentante,
	   T05.ISOEntRsp_Codigo               as DM_024_CodRepresentante,
	   0 as DM_024_TotValor, /*(Select Sum(TA1.ISOEntCliNFItem_Dup_Valor)
	      From ISOENTCLINOTAFISCALITEM_DUP TA1
		 Where TA1.ISOEmp_Codigo                 = T02.ISOEmp_Codigo
		   And TA1.ISOEntCliNFItem_Dup_Numero    = T02.ISOEntCliNFItem_Dup_Numero
		   And TA1.ISOEntCliNFItem_Dup_RefFiscal = T02.ISOEntCliNFItem_Dup_RefFiscal
		   And TA1.ISOEntCliNFItem_Dup_Serie     = T02.ISOEntCliNFItem_Dup_Serie)
		                                  as DM_024_TotValor,*/
       T07.ISOEntCliDupSit_Codigo         as DM_024_CodSituacaoDup,
	   T08.ISOEntCliDupSit_Descricao      as DM_024_DscSituacaoDup,
	   T08.ISOEntCliDupSit_Situacao       as DM_024_SitSituacaoDup,
	   T09.ISOEntCliDuplicatasAttValue    as DM_024_DataDoPagamento -- dado complementar fixado pelo c?digo 1
  From ISOEntCliNotaFiscal T01
       Inner Join ISOENTCLINOTAFISCALITEM_DUP T02
	      On T02.ISOEmp_Codigo                 = T01.ISOEmp_Codigo
		 And T02.ISOEntCliNFItem_Dup_Numero    = T01.ISOEntCliNF_Numero
		 ANd T02.ISOEntCliNFItem_Dup_RefFiscal = T01.ISOEntCliNF_RefFiscal
		 And T02.ISOEntCliNFItem_Dup_Serie     = T01.ISOEntCliNF_Serie
       Inner Join ISOEntidade T03
	      On T03.ISOEnt_Codigo                 = T01.ISOEntCli_Codigo
	   Inner Join ISOEntCliente T04
	      On T04.ISOEmp_Codigo                 = T01.ISOEmp_Codigo
		 And T04.ISOEntCli_Codigo              = T01.ISOEntCli_Codigo
        Left Join ISOENTRSP_CLIENTES T05
	      On T05.ISOEmp_Codigo                 = T04.ISOEmp_Codigo
         And T05.ISOEntCli_Codigo              = T04.ISOEntCli_Codigo
        Left Join ISOEntidade T06
		  On T06.ISOEnt_Codigo                 = T05.ISOEntRsp_Codigo
       Inner Join ISOENTCLIDUPLICATAS T07
	      On T07.ISOEmp_Codigo                 = T02.ISOEmp_Codigo
         And T07.ISOEntCliDup_Numero           = T02.ISOEntCliDup_Numero
		 And T07.ISOEntCliDup_Sequencia        = T02.ISOEntCliDup_Sequencia
		 And T07.ISOEntCli_Codigo              = T01.ISOEntCli_Codigo
       Inner Join ISOENTCLIDUPSITUACAO T08
	      On T08.ISOEmp_Codigo                 = T07.ISOEmp_Codigo
		 And T08.ISOEntCliDupSit_Codigo        = T07.ISOEntCliDupSit_Codigo
	    Left Join ISOEntCliDuplicatasAttValues T09
		  On T09.ISOEmp_Codigo                 = T02.ISOEmp_Codigo
		 And T09.ISOEntCliDup_Numero           = T02.ISOEntCliDup_Numero
		 And T09.ISOEntCliDup_Sequencia        = T02.ISOEntCliDup_Sequencia
		 And T09.ISOEntCliDuplicatasAttId      = 1 -- dado complementar fixado pelo c?digo 1 (Data do Pagamento)
		 And T09.ISOEntCliDuplicatasAttValueId = 1;


-- ConexaoISO.BI_025_ClientesDuplicatas source

CREATE VIEW [ConexaoISO].[BI_025_ClientesDuplicatas] as
/*
Autor       : Edison Washimi
Data        : 30/10/2014
Atendimento : 12145
Descriï¿½ï¿½o   : Lista Totais de Duplicataas vencidas ou a vencer, por cliente
*/
Select top 10
T01.DM_024_CodEmpresa          as DM_025_CodEmpresa,
       T01.DM_024_CodCliente          as DM_025_CodCliente,
	   T02.ISOEntCli_CodigoExt        as DM_025_CodExtCliente,
	   T01.DM_024_NomCliente          as DM_025_NomCliente,
	   T01.DM_024_VlrLimiteCredito    as DM_025_VlrLimiteCredito,
	   --T01.DM_024_VlrLimiteCredito - Sum(T01.DM_024_DupValor)
	   --                               as DM_025_VlrLimiteCreditoDsp,
	   T01.DM_024_VlrLimiteCreditoDsp as DM_025_VlrLimiteCreditoDsp,
	   T01.DM_024_CodRepresentante    as DM_025_CodRepresentante,
	   T01.DM_024_SitSituacaoDup      as DM_025_SitSituacaoDup,
	   Sum(T01.DM_024_DupValor)       as DM_025_ValorTotal,
	   Count(*)                       as DM_025_Qtde,
	   1                              as DM_025_TipoValorDup -- 1 Vencido
  From BI_024_Duplicatas T01
       Inner Join ISOEntCliente T02
	      On T02.ISOEmp_Codigo    = T01.DM_024_CodEmpresa
         And T02.ISOEntCli_Codigo = T01.DM_024_CodCliente
 Where T01.DM_024_DtaVencimento < Cast(GetDate() as DateTime)
 Group by T01.DM_024_CodEmpresa,
          T01.DM_024_CodCliente,
		  T02.ISOEntCli_CodigoExt,
		  T01.DM_024_NomCliente,
		  T01.DM_024_VlrLimiteCredito,
		  T01.DM_024_VlrLimiteCreditoDsp,
		  T01.DM_024_CodRepresentante,
		  T01.DM_024_SitSituacaoDup

Union all

Select top 10
T01.DM_024_CodEmpresa          as DM_025_CodEmpresa,
       T01.DM_024_CodCliente          as DM_025_CodCliente,
	   T02.ISOEntCli_CodigoExt        as DM_025_CodExtCliente,
	   T01.DM_024_NomCliente          as DM_025_NomCliente,
	   T01.DM_024_VlrLimiteCredito    as DM_025_VlrLimiteCredito,
	   --T01.DM_024_VlrLimiteCredito - Sum(T01.DM_024_DupValor)
	   --                               as DM_025_VlrLimiteCreditoDsp,
	   T01.DM_024_VlrLimiteCreditoDsp as DM_025_VlrLimiteCreditoDsp,
	   T01.DM_024_CodRepresentante    as DM_025_CodRepresentante,
	   T01.DM_024_SitSituacaoDup      as DM_025_SitSituacaoDup,
	   Sum(T01.DM_024_DupValor)       as DM_025_ValorTotal,
	   Count(*)                       as DM_025_Qtde,
	   2                              as DM_025_TipoValorDup -- 2 A vencer
  From BI_024_Duplicatas T01
       Inner Join ISOEntCliente T02
	      On T02.ISOEmp_Codigo    = T01.DM_024_CodEmpresa
         And T02.ISOEntCli_Codigo = T01.DM_024_CodCliente
Where T01.DM_024_DtaVencimento >= Cast(GetDate() as DateTime)
 Group by T01.DM_024_CodEmpresa,
          T01.DM_024_CodCliente,
		  T02.ISOEntCli_CodigoExt,
		  T01.DM_024_NomCliente,
		  T01.DM_024_VlrLimiteCredito,
		  T01.DM_024_VlrLimiteCreditoDsp,
		  T01.DM_024_CodRepresentante,
		  T01.DM_024_SitSituacaoDup;


-- ConexaoISO.BI_026_A source

CREATE VIEW BI_026_A as
Select
ISOEmp_Codigo as DM_026_A_Empresa,
ISOEntCliNF_RefFiscal as DM_026_A_RefFiscal,
ISOEntCliNF_Serie as DM_026_A_Serie,
ISOEntCliNF_Numero as DM_026_A_NotaFiscal,
ISOEntCliNfItem_Pedido as DM_026_A_CodPedido
from ISOEntCliNFItem
Group by ISOEmp_Codigo,
ISOEntCliNF_RefFiscal,
ISOEntCliNF_Serie,
ISOEntCliNF_Numero,
ISOEntCliNfItem_Pedido;


-- ConexaoISO.BI_026_PedidosNotas source

CREATE VIEW BI_026_PedidosNotas as
Select
	T01.ISOEmp_Codigo                     as DM_026_Empresa,
	T01.ISOPvPed_Codigo                   as DM_026_CodPedido,
	T01.ISOPvPed_DtaPedido                as DM_026_DtaPedido,
	T01.ISOPvTrpTip_Codigo                as DM_026_CodFrete,
	T05.ISOPvTrpTip_Descricao             as DM_026_DscFrete,
	T01.ISOPvPed_DtaPrevEntrada           as DM_026_DtaPrevEntrada,
	T01.ISOPvPedSit_Codigo                as DM_026_CodSituacao,
	T06.ISOPvPedSit_Descricao             as DM_026_DscSituacao,
	T01.ISOPvPed_Pagamento                as DM_026_CondicaoPagamento,
	T11.ISOPvTV_Descricao                 as DM_026_CndPgtoDesc,
	T01.ISOPvPed_CliCodigo                as DM_026_CodCliente,
	T02.ISOEnt_Nome                       as DM_026_DscCliente,
	T03.ISOEntCli_BloqCred                as DM_026_BloqCred,
	T07.DM_026_A_NotaFiscal               as DM_026_NotaFiscal,
	T07.DM_026_A_Serie                    as DM_026_Serie,
	T07.DM_026_A_RefFiscal                as DM_026_RefFiscal,
	T08.ISOEntCliNF_Data                  as DM_026_DataNF,
	0 as MT_026_QtdeAberta,
	/*(CASE WHEN T07.DM_026_A_NotaFiscal IS NOT NULL
	   THEN
		(
		Select Count(*) from BI_024_Duplicatas
		   Where T09.DM_024_CodEmpresa    = T01.ISOEmp_Codigo
		 And T09.DM_024_CodCliente      = T01.ISOPvPed_CliCodigo
			 And T09.DM_024_NFNumero        = T07.DM_026_A_NotaFiscal
			 And T09.DM_024_NumSerie        = T07.DM_026_A_Serie
			 And T09.DM_024_RefFiscal       = T07.DM_026_A_RefFiscal
			 And T09.DM_024_SitSituacaoDup  = 'A'
		 )
	   ELSE null END) as MT_026_QtdeAberta,*/
	0                   as MT_026_ValorAberto,
	--,T09.DM_024_TotValor                   as MT_026_ValorAberto--,
	0 as MT_026_QtdeFaturada,
	/*(CASE WHEN T07.DM_026_A_NotaFiscal IS NOT NULL
	   THEN
		( Select Count(*) from BI_024_Duplicatas
		   Where T10.DM_024_CodEmpresa    = T01.ISOEmp_Codigo
		 And T10.DM_024_CodCliente      = T01.ISOPvPed_CliCodigo
			 And T10.DM_024_NFNumero        = T07.DM_026_A_NotaFiscal
			 And T10.DM_024_NumSerie        = T07.DM_026_A_Serie
			 And T10.DM_024_RefFiscal       = T07.DM_026_A_RefFiscal
			 And T10.DM_024_SitSituacaoDup  = 'P'
		 AND T10.DM_024_NFNumero IS NOT NULL
		 AND T10.DM_024_DupValor > 0)
	  ELSE null END) as MT_026_QtdeFaturada,*/
		--T10.DM_024_TotValor                   as MT_026_ValorFaturado
	0                   as MT_026_ValorFaturado
 From ISOPvPedido T01
    Inner Join ISOEntidade T02
	        On T02.ISOEnt_Codigo          = T01.ISOPvPed_CliCodigo
    Inner Join ISOEntCliente T03
	        On T03.ISOEmp_Codigo          = T01.ISOEmp_Codigo
		   And T03.ISOEntCli_Codigo       = T02.ISOEnt_Codigo
	 Left Join ISOPVTRANSPORTADORA T04
		    On T04.ISOPvTrp_Codigo        = T01.ISOPvTrp_Codigo
	 Left Join ISOPVTRANSPORTETIPO T05
		    On T05.ISOEmp_Codigo          = T01.ISOEmp_Codigo
	       And T05.ISOPvTrpTip_Codigo     = T01.ISOPvTrpTip_Codigo
	 Left Join ISOPVPEDSITUACAO T06
		    On T06.ISOEmp_Codigo          = T01.ISOEmp_Codigo
		   And T06.ISOPvPedSit_Codigo     = T01.ISOPvPedSit_Codigo
	 Left Join BI_026_A T07
	        On T07.DM_026_A_Empresa       = T01.ISOEmp_Codigo
		   And T07.DM_026_A_CodPedido     = T01.ISOPvPed_Codigo
	 Left Join ISOEntCliNotaFiscal T08
	        On T08.ISOEmp_Codigo          = T01.ISOEmp_Codigo
		   And T08.ISOEntCliNF_Numero     = T07.DM_026_A_NotaFiscal
		   And T08.ISOEntCliNF_Serie      = T07.DM_026_A_Serie
		   And T08.ISOEntCliNF_RefFiscal  = T07.DM_026_A_RefFiscal
	 /*Left Join BI_024_Duplicatas T09
	        On T09.DM_024_CodEmpresa      = T01.ISOEmp_Codigo
		   And T09.DM_024_NFNumero        = T07.DM_026_A_NotaFiscal
		   And T09.DM_024_NumSerie        = T07.DM_026_A_Serie
		   And T09.DM_024_RefFiscal       = T07.DM_026_A_RefFiscal
		   And T09.DM_024_SitSituacaoDup  = 'A'
	 Left Join BI_024_Duplicatas T10
	        On T10.DM_024_CodEmpresa      = T01.ISOEmp_Codigo
		   And T10.DM_024_NFNumero        = T07.DM_026_A_NotaFiscal
		   And T10.DM_024_NumSerie        = T07.DM_026_A_Serie
		   And T10.DM_024_RefFiscal       = T07.DM_026_A_RefFiscal
		   And T10.DM_024_SitSituacaoDup  = 'P'*/
	 Left Join ISOPVTABELAVENDA T11
	        On T11.ISOEmp_Codigo          = T01.ISOEmp_Codigo
		   And T11.ISOPvTV_Codigo         = T01.ISOPvPed_Pagamento;


-- ConexaoISO.BI_027_Contrato source

CREATE VIEW BI_027_Contrato AS
SELECT
     T01.ISOCtt_Codigo                                  AS DM_027_ContratoCodigo,
	 T01.ISOCtt_Descricao                               AS DM_027_ContratoDescricao,
/*     (SELECT SUM(T001.ISOCttIte_Quantidade * T001.ISOCttIte_ValorUnitario)
	   FROM ISOCTCTTITEM T001
	  INNER JOIN ISOCTCTTITESITUACAO T002
	     ON T001.ISOEmp_Codigo       = T002.ISOEmp_Codigo
		AND T001.ISOCttIteSit_Codigo = T002.ISOCttIteSit_Codigo
	  WHERE T001.ISOEmp_Codigo = T01.ISOEmp_Codigo
	    AND T001.ISOCtt_Codigo = T01.ISOCtt_Codigo
		AND T002.ISOCttIteSit_Situacao <> 9)
														AS MT_027_ValorTotal,*/
     T07.ValorTotal                                     as MT_027_ValorTotal,
     T01.ISOCtt_ValorTotalGanho							AS MT_027_ValorTotalGanho,
/*	 (SELECT SUM(T001.ISOCttIte_SaldoVlr)
	    FROM ISOCTCTTITEM T001
	   WHERE T001.ISOEmp_Codigo = T01.ISOEmp_Codigo
	    AND T001.ISOCtt_Codigo = T01.ISOCtt_Codigo)
														AS MT_027_SaldoTotal, */
    T08.SaldoTotal                                      as MT_027_SaldoTotal,
	T03.ISOCttSit_Descricao								AS DM_027_Situacao,
	T04.ISOCttSitMot_Descricao							AS DM_027_Motivo,
	T05.ISOCttMod_Descricao                             AS DM_027_Modalidade,
	T06.ISOEnt_Nome                                     AS DM_027_Cliente,
	T01.ISOCtt_VigenciaInicial                          AS DM_027_DataVigenciaInicial,
	Year(T01.ISOCtt_VigenciaInicial)                    AS DM_027_AnoVigenciaInicial,
    Month(T01.ISOCtt_VigenciaInicial)                   AS DM_027_MesVigenciaInicial,
	T01.ISOCtt_VigenciaFinal                            AS DM_027_DataVigenciaFinal,
	Year(T01.ISOCtt_VigenciaFinal)                      AS DM_027_AnoVigenciaFinal,
    Month(T01.ISOCtt_VigenciaFinal)                     AS DM_027_MesVigenciaFinal,
    1                                                   AS MT_027_QuantidadeContratos,
    'V.001'                                             AS DM_027_VersaoVW
  FROM ISOCTCONTRATO T01
    INNER JOIN ISOENTCLIENTE T02
       ON T02.ISOEmp_Codigo			= T01.ISOEmp_Codigo
	  AND T02.ISOEntCli_Codigo		= T01.ISOCttEntCte_Codigo
	INNER JOIN ISOCTCTTSITUACAO T03
	   ON T03.ISOEmp_Codigo			= T01.ISOEmp_Codigo
	  AND T03.ISOCttSit_Codigo		= T01.ISOCttSit_Codigo
	 LEFT JOIN ISOCTCTTSITMOTIVO T04
	   ON T04.ISOEmp_Codigo         = T01.ISOEmp_Codigo
	  AND T04.ISOCttSit_Codigo      = T01.ISOCttSit_Codigo
	  AND T04.ISOCttSitMot_Codigo   = T01.ISOCttSitMot_Codigo
	INNER JOIN ISOCTCTTMODALIDADE T05
	   ON T05.ISOEmp_Codigo         = T01.ISOEmp_Codigo
	  AND T05.ISOCttMod_Codigo      = T01.ISOCttMod_Codigo
	INNER JOIN ISOENTIDADE T06
	   ON T06.ISOEnt_Codigo         = T01.ISOCttEntCte_Codigo
	 Left Join (SELECT T001.ISOEmp_Codigo, T001.ISOCtt_Codigo, SUM(T001.ISOCttIte_Quantidade * T001.ISOCttIte_ValorUnitario) as ValorTotal
	              FROM ISOCTCTTITEM T001
	                   INNER JOIN ISOCTCTTITESITUACAO T002
	                      ON T001.ISOEmp_Codigo       = T002.ISOEmp_Codigo
		                 AND T001.ISOCttIteSit_Codigo = T002.ISOCttIteSit_Codigo
	             WHERE T002.ISOCttIteSit_Situacao <> 9
				 Group by T001.ISOEmp_Codigo, T001.ISOCtt_Codigo) T07
       On T07.ISOEmp_Codigo = T01.ISOEmp_Codigo
	  And T07.ISOCtt_Codigo = T01.ISOCtt_Codigo
	 Left Join (SELECT T001.ISOCtt_Codigo, T001.ISOEmp_Codigo, Sum(T001.ISOCttIte_SaldoVlr) as SaldoTotal
	              FROM ISOCTCTTITEM T001
                 Group By T001.ISOCtt_Codigo, T001.ISOEmp_Codigo) T08
	   On T08.ISOEmp_Codigo = T01.ISOEmp_Codigo
	  AND T08.ISOCtt_Codigo = T01.ISOCtt_Codigo;


-- ConexaoISO.BI_028_ContratoItem source

CREATE VIEW BI_028_ContratoItem AS
SELECT
       T01.ISOCtt_Codigo                                          AS DM_028_ContratoCodigo,
	   T01.ISOCtt_Descricao                                       AS DM_028_ContratoDescricao,
	   T00.ISOCttIte_Codigo                                       AS DM_028_ContratoItemCodigo,
	   T00.ISOCttItePrd_Codigo                                    AS DM_028_ProdutoCodigo,
	   T07.ISOPrd_Descricao                                       AS DM_028_ProdutoDescricao,
	   T00.ISOCttIte_ValorUnitario                                AS MT_028_ValorUnitario,
	   T00.ISOCttIte_Quantidade * T00.ISOCttIte_ValorUnitario     AS MT_028_ValorTotal,
	   T03.ISOCttIteSit_Descricao                                 AS DM_028_SituacaoItem,
	   T04.ISOCttIteSitMot_Descricao                              AS DM_028_MotivoItem,
	   T00.ISOCttIte_Unidade                                      AS DM_028_Unidade,
	   T08.ISOMrc_Descricao                                       AS DM_028_Marca,
	   T10.ISOEnt_Nome                                            AS DM_028_Fabricante,
	   T11.ISOEnt_Nome                                            AS DM_028_Concorrente,
       1                                                          AS MT_028_QuantidadeContratoItem,
       'V.001'                                                    AS DM_028_VersaoVW
  FROM ISOCTCTTITEM T00
       INNER JOIN ISOCTCONTRATO T01
          ON T01.ISOEmp_Codigo          = T00.ISOEmp_Codigo
         AND T01.ISOCtt_Codigo          = T00.ISOCtt_Codigo
       INNER JOIN ISOENTCLIENTE T02
          ON T02.ISOEmp_Codigo          = T01.ISOEmp_Codigo
         AND T02.ISOEntCli_Codigo       = T01.ISOCttEntCte_Codigo
        LEFT JOIN ISOCTCTTITESITUACAO T03
          ON T03.ISOEmp_Codigo          = T01.ISOEmp_Codigo
         AND T03.ISOCttIteSit_Codigo    = T01.ISOCttSit_Codigo
        LEFT JOIN ISOCTCTTITESITMOTIVO T04
          ON T04.ISOEmp_Codigo          = T01.ISOEmp_Codigo
         AND T04.ISOCttIteSit_Codigo    = T01.ISOCttSit_Codigo
         AND T04.ISOCttIteSitMot_Codigo = T01.ISOCttSitMot_Codigo
       INNER JOIN ISOCTCTTMODALIDADE T05
          ON T05.ISOEmp_Codigo          = T01.ISOEmp_Codigo
         AND T05.ISOCttMod_Codigo       = T01.ISOCttMod_Codigo
       INNER JOIN ISOENTIDADE T06
          ON T06.ISOEnt_Codigo          = T01.ISOCttEntCte_Codigo
       INNER JOIN ISOProduto T07
          ON T07.ISOEmp_Codigo          = T00.ISOEmp_Codigo
         AND T07.ISOPrd_Codigo          = T00.ISOCttItePrd_Codigo
	   INNER JOIN ISOMARCAS T08
	      ON T08.ISOEmp_Codigo          = T07.ISOEmp_Codigo
		 AND T08.ISOMrc_Codigo          = T07.ISOMrc_Codigo
		LEFT JOIN ISOENTFABRICANTE T09
		  ON T09.ISOEntFab_Codigo       = T08.ISOEntFab_Codigo
	    LEFT JOIN ISOENTIDADE T10
		  ON T10.ISOEnt_Codigo          = T09.ISOEntFab_Codigo
		LEFT JOIN ISOENTIDADE T11
		  ON T11.ISOEnt_Codigo          = (SELECT top(1) T000.ISOCttIteClc_OrgCodigo FROM ISOCTCttIteColocacao T000
		                                     WHERE T000.ISOEmp_Codigo    = T00.ISOEmp_Codigo
                                               And T000.ISOCtt_Codigo    = T00.ISOCtt_Codigo
											   And T000.ISOCttIte_Codigo = T00.ISOCttIte_Codigo
                                               And T000.ISOCttIteClc_Posicao = (Select MIN(TA1.ISOCttIteClc_Posicao)
																				  From ISOCTCttIteColocacao TA1
																				 Where TA1.ISOEmp_Codigo    = T00.ISOEmp_Codigo
																				   And TA1.ISOCtt_Codigo    = T00.ISOCtt_Codigo
																				   And TA1.ISOCttIte_Codigo = T00.ISOCttIte_Codigo
																				   And TA1.ISOCttIteClc_Flag <> 'I'
																				   And TA1.ISOCttIteClc_FlagDesclassifica <> 'S'));


-- ConexaoISO.BI_029_isoCDS_PesOrgDC source

CREATE VIEW BI_029_isoCDS_PesOrgDC as
select T01.DM_001_Codigo               as DM_029_Codigo,
	   T01.DM_001_Nome                    as DM_029_Nome,
       T01.DM_001_DataCadastro            as DM_029_DataCadastro,
       T01.DM_001_AnoCadastro             as DM_029_AnoCadastro,
	   T01.DM_001_MesCadastro             as DM_029_MesCadastro,
	   T01.DM_001_RamoDeAtividade         as DM_029_RamoDeAtividade,
	   T01.DM_001_Estrangeiro             as DM_029_Estrangeiro,
	   T01.DM_001_Sexo                    as DM_029_Sexo,
	   T01.DM_001_EstadoCivil             as DM_029_EstadoCivil,
	   T01.DM_001_NivelDeEscolaridade     as DM_029_NivelDeEscolaridade,
	   T01.DM_001_Profissao               as DM_029_Profissao,
	   T01.DM_001_Segmento                as DM_029_Segmento,
	   T01.DM_001_Localidade              as DM_029_Localidade,
	   T01.DM_001_UF                      as DM_029_UF,
	   T01.DM_001_PapelCliente            as DM_029_PapelCliente,
	   T01.DM_001_PapelParceiro           as DM_029_PapelParceiro,
	   T01.DM_001_PapelFornecedor         as DM_029_PapelFornecedor,
	   T01.DM_001_PapelUsuario            as DM_029_PapelUsuario,
	   T01.DM_001_PapelResponsavel        as DM_029_PapelResponsavel,
	   T01.DM_001_ClassificacaoEntidade   as DM_029_ClassificacaoEntidade,
	   T01.DM_001_EspecialidadeEntidade   as DM_029_EspecialidadeEntidade,
	   T01.DM_001_ClassificacaoPapel      as DM_029_ClassificacaoPapel,
	   T01.DM_001_EspecialidadePapel      as DM_029_EspecialidadePapel,
	   T01.DM_001_Situacao                as DM_029_Situacao,
	   T01.DM_001_TipoPessoa              as DM_029_TipoPessoa,
	   T01.DM_001_Ativo                   as DM_029_Ativo,
	   T01.MT_001_QtdeEntidades           as MT_029_QtdeEntidades,
	   T02.DM_023B_TipoDC                 as DM_029_TipoDC_Pes,
	   T02.DM_023B_AttId                  as DM_029_AttId_Pes,
	   T02.DM_023B_CodAtt                 as DM_029_CodAtt_Pes,
	   T02.DM_023B_AttName                as DM_029_AttName_Pes,
	   T02.DM_023B_RspAtt                 as DM_029_RspAtt_Pes,
	   T03.DM_023B_TipoDC                 as DM_029_TipoDC_Org,
	   T03.DM_023B_AttId                  as DM_029_AttId_Org,
	   T03.DM_023B_CodAtt                 as DM_029_CodAtt_Org,
	   T03.DM_023B_AttName                as DM_029_AttName_Org,
	   T03.DM_023B_RspAtt                 as DM_029_RspAtt_Org,
	   'V001'                             as DM_029_Versao,
	   1                                  as MT_029_Qtde
  from BI_001_isoCDS_PessoaOrganizacao T01
left join BI_023B_DadoComplementar T02
on T02.DM_023B_TipoDC = 'Pessoa'
and T01.DM_001_TipoPessoa = 'F'
and T02.DM_023B_CodCliente = T01.DM_001_Codigo
left join BI_023B_DadoComplementar T03
on T03.DM_023B_TipoDC = 'Organizacao'
and T01.DM_001_TipoPessoa = 'J'
and T03.DM_023B_CodCliente = T01.DM_001_Codigo;


-- ConexaoISO.BI_031_ISOClassificacaoChamada source

CREATE VIEW BI_031_ISOClassificacaoChamada as
SELECT
      T01.ISOEmp_Codigo                      AS DM_031_Empresa,
      Year(T01.ISOEntUsuLig_DataHora)        AS DM_031_Ano,
      Month(T01.ISOEntUsuLig_DataHora)       AS DM_031_Mes,
	  T02.ISOEnt_Nome                        AS DM_031_Atendente,
      COUNT(*)                               AS MT_031_Qtde_Ligacoes,
      T03.ISOEntUsuLigCla_Descricao          AS DM_031_Classificacao,
	  T04.Qtde_Pedidos                       AS MT_031_Qtde_Pedidos,
	  T04.Valor_Total                        AS MT_031_Valor_Total

 FROM ISOENTUSU_LIGACOES T01
   LEFT JOIN ISOENTIDADE T02
          ON T02.ISOEnt_Codigo           = T01.ISOEntUsu_Codigo
   LEFT JOIN ISOENTUSULIG_CLASSIFICACAO T03
          ON T03.ISOEmp_Codigo           = T01.ISOEmp_Codigo
		 AND T03.ISOEntUsuLigCla_Codigo  = T01.ISOEntUsuLigCla_Codigo
   LEFT JOIN (
	   SELECT
		  T01.ISOEmp_Codigo                  AS ISOEmp_Codigo,
		  Year(T01.ISOPvPed_DtaPedido)       AS Ano,
		  Month(T01.ISOPvPed_DtaPedido)      AS Mes,
		  T01.ISOPvPed_CodigoAtendente       AS Cod_Atendente,
		  COUNT(*)                           AS Qtde_Pedidos,
		  Sum(T01.ISOPvPed_ValorTotalPedido) AS Valor_Total
		FROM ISOPVPEDIDO T01
		  GROUP BY
				 T01.ISOEmp_Codigo,
				 Year(T01.ISOPvPed_DtaPedido),
				 Month(T01.ISOPvPed_DtaPedido),
				 T01.ISOPvPed_CodigoAtendente
	) AS T04
	ON T01.ISOEmp_Codigo = T04.ISOEmp_Codigo
   AND Year(T01.ISOEntUsuLig_DataHora)  = T04.Ano
   AND Month(T01.ISOEntUsuLig_DataHora) = T04.Mes
   AND T01.ISOEntUsu_Codigo = T04.Cod_Atendente

GROUP BY T01.ISOEmp_Codigo,
		 T01.ISOEntUsuLigCla_Codigo,
		 Year(T01.ISOEntUsuLig_DataHora),
		 Month(T01.ISOEntUsuLig_DataHora),
		 T02.ISOEnt_Nome,
		 T03.ISOEntUsuLigCla_Descricao,
		 T04.Qtde_Pedidos,
	     T04.Valor_Total;


-- ConexaoISO.BI_032_ISOChat source

CREATE VIEW BI_032_ISOChat as
SELECT T01.ISOEmp_Codigo            as DM_032_CodigoEmpresa,
       T01.ISOCht_Codigo            as DM_032_CodigoChat,
	   T06.ISOSAAte_Codigo          as DM_032_CodigoSAC,
       T01.ISOCht_DataInicio        as DM_032_DataInicioChat,
	   T01.ISOCht_DataFim           as DM_032_DataFimChat,
	   T02.ISOEnt_Nome              as DM_032_NomeAtendenteChat,
	   CASE WHEN T06.ISOSAAte_Codigo IS NULL
	      THEN
		    (SELECT DISTINCT
				stuff(
				(
				select cast(char(10) as varchar(max)) + RTRIM(ISOCHTDET_NOMESI) + ' : ' + U.ISOChtDet_Detalhe
				from ISOCHTDETALHE U
				WHERE U.ISOCht_Codigo    = G.ISOCht_Codigo
				order by U.ISOChtDet_Codigo
				for xml path('')
				), 1, 1, '')
			FROM
				ISOCHTDETALHE G
			WHERE G.ISOCht_Codigo = T01.ISOCht_Codigo)
		ELSE
	     T07.ISOSAAteDet_Descricao
	   END
	                                as DM_032_HistoricoChat,
	   T04.ISOEnt_Nome              as DM_032_NomeCliente,
	   T03.ISOChtDet_emailSI        as DM_032_emailCliente
FROM ISOCHAT T01
  INNER JOIN ISOENTIDADE T02
    ON T02.ISOEnt_Codigo = T01.ISOCht_AtendCodigo
  LEFT JOIN ISOCHTDETALHE T03
    ON T03.ISOEmp_Codigo = T01.ISOEmp_Codigo
   AND T03.ISOCht_Codigo = T01.ISOCht_Codigo
   AND T03.ISOChtDet_Codigo = 1
  LEFT JOIN ISOENTIDADE T04
    ON T04.ISOEnt_Codigo = (SELECT top(1) ISOChtPart_Codigo FROM ISOCHTPARTICIPANTES
                                       WHERE ISOEmp_Codigo = T01.ISOEMP_CODIGO
									     and ISOCht_Codigo = T01.ISOCht_Codigo
										 order by ISOEmp_Codigo, ISOCht_Codigo, ISOCht_Part_DataAlteracao)
  LEFT JOIN ISOSAATENDIMENTO T06
    ON T06.ISOEmp_Codigo = T01.ISOEmp_Codigo
   AND T06.ISOSAAte_ChtCodigo = T01.ISOCht_Codigo
  LEFT JOIN ISOSAATEDETALHE T07
    ON T07.ISOEmp_Codigo = T06.ISOEmp_Codigo
   AND T07.ISOSAAte_Codigo = T06.ISOSAAte_Codigo
   AND T07.ISOSAAteDet_Codigo = 1;


-- ConexaoISO.BI_034_Pedidos source

/*
Alteraï¿½ï¿½o  : Diogo P. Barriquel
Data       : 26/10/2015

Atendimento: 14358
Nome:        Diogo P. Barriquel
Data:        09/11/2015
Descriï¿½ï¿½o:   Adicionado joins T24 e T25

Atendimento: 14526
Nome:        Diogo P. Barriquel
Data:        10/12/2015
Descriï¿½ï¿½o:   Adicionado dados complementares

Atendimento: 28884
Nome:        Edison Washimi
Data:        20/02/2019
Descriï¿½ï¿½o:   Ajustando join do Telefone (Mï¿½vel)
*/

CREATE VIEW BI_034_Pedidos as
Select T01.ISOEmp_Codigo                            as DM_034_CodEmpresa,
       T01.ISOPVPed_Codigo                          as DM_034_CodPedido,
       T01.ISOPvPed_CodigoExterno                   as DM_034_CodPedExterno,
       T01.ISOPVPed_CliCodigo                       as DM_034_CodCliente,
       T02.ISOEnt_Nome                              as DM_034_NomCliente,
       T14.ISOEntTel_DDD                            as DM_034_DDDTelPrincCliente,
       T14.ISOEntTel_Telefone                       as DM_034_NumTelPrincCliente,
       T15.ISOEntTel_DDD                            as DM_034_DDDTelMovCliente,
       T15.ISOEntTel_Telefone                       as DM_034_NumTelMovCliente,
       T01.ISOPVPedSit_Codigo                       as DM_034_CodSitPedido,
       T03.ISOPVPedSit_Descricao                    as DM_034_DscSitPedido,
       T01.ISOPVPed_Contato                         as DM_034_CodCntCliente,
       T04.ISOEnt_Nome                              as DM_034_NomCntCliente,
       T01.ISOPVPed_DtaPedido                       as DM_034_DtaPedido,
       T01.ISOPVPed_DtaAberPedido                   as DM_034_DtaAbtPedido,
       T01.ISOPVPed_CodigoAtendente                 as DM_034_CodAtePedido,
       T09.ISOEnt_Nome                              as DM_034_NomAtePedido,
       T01.ISOPVPed_CodVendedorCD                   as DM_034_CodVendPedido,
       T10.ISOEnt_Nome                              as DM_034_NomVendPedido,
       Cast(T01.ISOPVPed_ValorTotalPedido as money) as MT_034_VlrTotalPedido,
       T01.ISOPVPed_EndCEP                          as DM_034_CEPEndEntrega,
       T01.ISOPVPed_EndLogradouro                   as DM_034_LogrEndEntrega,
       T01.ISOPVPed_EndNumero                       as DM_034_NumEndEntrega,
       T01.ISOPVPed_EndComplemento                  as DM_034_CplEndEntrega,
       T01.ISOPVPed_EndBairro                       as DM_034_BaiEndEntrega,
       T01.ISOPVPed_EndCidade                       as DM_034_CodCidEndEntrega,
       T05.ISOLoc_Descricao                         as DM_034_DscCidEndEntrega,
       T01.ISOPVPed_EndEstado                       as DM_034_CodEstEndEntrega,
       T06.ISOEst_Descricao                         as DM_034_DscEstEndEntrega,
       T06.ISOEst_Sigla                             as DM_034_UFEstEndEntrega,
       T01.ISOPVPed_EndCEP1                         as DM_034_CEPEndCobranca,
       T01.ISOPVPed_EndLogradouro1                  as DM_034_LogrEndCobranca,
       T01.ISOPVPed_EndNumero1                      as DM_034_NumEndCobranca,
       T01.ISOPVPed_EndComplemento1                 as DM_034_CplEndCobranca,
       T01.ISOPVPed_EndBairro1                      as DM_034_BaiEndCobranca,
       T01.ISOPVPed_EndCidade1                      as DM_034_CodCidEndCobranca,
       T07.ISOLoc_Descricao                         as DM_034_DscCidEndCobranca,
       T01.ISOPVPed_EndEstado1                      as DM_034_CodEstEndCobranca,
       T08.ISOEst_Descricao                         as DM_034_DscEstEndCobranca,
       T08.ISOEst_Sigla                             as DM_034_UFEstEndCobranca,
       T11.ISOPVPedIte_Codigo                       as DM_034_CodItemPedido,
       T11.ISOPrd_Codigo                            as DM_034_CodPrdItem,
       T12.ISOPrd_Descricao                         as DM_034_DscPrdItem,
       T11.ISOPVPedIte_Quantidade                   as MT_034_QtdPrdItem,
       Cast(T11.ISOPvPedIte_ValorUnitario as Decimal(13,2))
                                                    as MT_034_VlrUnitPrdItem,
       Cast(T11.ISOPVPedIte_Quantidade * T11.ISOPvPedIte_ValorUnitario as decimal(13,2))
                                                    as MT_034_VlrTotPrdItem,
       T11.ISOPVPedIteSit_Codigo                    as DM_034_CodSitItemPedido,
       T13.ISOPVPedIteSit_Descricao                 as DM_034_DscSitItemPedido,

	   T16.ISOMrc_Codigo                            as DM_034_MarcaCodigo,
	   T16.ISOMrc_Descricao                         as DM_034_MarcaDescricao,
	   T17.ISOMrcMod_Codigo                         as DM_034_ModeloCodigo,
	   T17.ISOMrcMod_Descricao                      as DM_034_ModeloDescricao,
	   T18.ISOEnt_Codigo                            as DM_034_FabricanteCodigo,
	   T18.ISOEnt_Nome                              as DM_034_FabricanteNome,
	   T19.ISOPrdCls_Codigo                         as DM_034_PrdClsCodigo,
	   T19.ISOPrdCls_Descricao                      as DM_034_PrdClsDescricao,
	   T20.ISOPrdTip_Codigo                         as DM_034_PrdTipCodigo,
	   T20.ISOPrdTip_Descricao                      as DM_034_PrdTipDescricao,
	   T11.ISOPvPedIte_UnidadeOrigem                as DM_034_UndOrigem,

	   T01.ISOPvPedOri_Codigo                       as DM_034_OrigemPedidoCodigo,
	   T21.ISOPvPedOri_Descricao                    as DM_034_OrigemPedidoDescricao,
	   Case
           When T22.ISOEntPes_Codigo is null  Then 'O'
           When T23.ISOEntOrg_Codigo is null  Then 'P'
           Else 'N'
	   End	                                        as DM_034_TipoPessoa,
	   T01.ISOPvPedSitMot_Codigo					as DM_034_PedMotCodigo,
	   T24.ISOPvPedSitMot_Descricao                 as DM_034_PedMotDescricao,
	   T25.ISOPvPedIteSM_Codigo                     as DM_034_PedIteMotCodigo,
	   T25.ISOPvPedIteSM_Descricao                  as DM_034_PedIteMotDescricao,

	   T27.ISOPvPedidoAttName                       as DM_034_PerguntaDadoComplementar,
       Case
           When T27.ISOPVPedidoAttType = 5 Then T26.ISOPVPedidoAttValueLong
		   When T27.ISOPVPedidoAttType = 4 Then T28.ISOPvPedidoAttOptValue
           Else T26.ISOPvPedidoAttValue
	   End                                          as DM_034_RespostaDadoComplementa,
	   T01.ISOPvPed_MK                              as DM_034_AtendimentoCampanha

  From ISOPVPedido T01
       Inner Join ISOEntidade T02
          On T02.ISOEnt_Codigo         = T01.ISOPVPed_CliCodigo
	   Inner Join ISOPVPedSituacao T03
          On T03.ISOEmp_Codigo         = T01.ISOEmp_Codigo
         And T03.ISOPVPedSit_Codigo    = T01.ISOPVPedSit_Codigo
        Left  Join ISOEntidade T04
          On T04.ISOEnt_Codigo         = T01.ISOPVPed_Contato
        Left  Join ISOLocalidade T05
          On T05.ISOLoc_Codigo         = T01.ISOPVPed_EndCidade
        Left Join ISOEstado T06
          On T06.ISOEst_Codigo         = T05.ISOEst_Codigo
        Left  Join ISOLocalidade T07
          On T07.ISOLoc_Codigo         = T01.ISOPVPed_EndCidade1
        Left Join ISOEstado T08
          On T08.ISOEst_Codigo         = T07.ISOEst_Codigo
       Inner Join ISOEntidade T09
          On T09.ISOEnt_Codigo         = T01.ISOPVPed_CodigoAtendente
        Left Join ISOEntidade T10
          On T10.ISOEnt_Codigo         = T01.ISOPVPed_CodVendedorCD
        Left Join ISOPVPedItem T11
          On T11.ISOEmp_Codigo         = T01.ISOEmp_Codigo
         And T11.ISOPVPed_Codigo       = T01.ISOPVPed_Codigo
        Left Join ISOProduto T12
          On T12.ISOPrd_Codigo         = T11.ISOPrd_Codigo
        Left Join ISOPVPedIteSituacao T13
          On T13.ISOEmp_Codigo         = T12.ISOEmp_Codigo
         And T13.ISOPVPedIteSit_Codigo = T11.ISOPVPedIteSit_Codigo
        Left Join ISOEntTelefone T14
          On T14.ISOEnt_Codigo         = T01.ISOPVPed_CliCodigo
         And T14.ISOEntTel_Principal   = 'S'
        Left Join ISOEntTelefone T15
          On T15.ISOEnt_Codigo         = T01.ISOPVPed_CliCodigo
         And T15.ISOEntTel_Movel       = 'S'
		 --And T15.ISOEntTel_DataAlteracao = (Select MAX(TA1.ISOEntTel_DataAlteracao)
   --                                           From ISOENTTELEFONE TA1
   --                                          Where TA1.ISOEnt_Codigo   = T15.ISOEnt_Codigo
   --                                            And TA1.ISOEntTel_Movel = 'S')
	    Left Join ISOMarcas T16
	      On T16.ISOEmp_Codigo         = T12.ISOEmp_Codigo
		 And T16.ISOMrc_Codigo         = T12.ISOMrc_Codigo
	    Left Join ISOMrcModelos T17
	      On T17.ISOEmp_Codigo         = T12.ISOEmp_Codigo
		 And T17.ISOMrc_Codigo         = T12.ISOMrc_Codigo
		 And T17.ISOMrcMod_Codigo      = T12.ISOMrcMod_Codigo
	    Left Join ISOEntidade T18
	      On T18.ISOEnt_Codigo         = T16.ISOEntFab_Codigo
	    Left Join ISOPrdClassificacao T19
	      On T19.ISOEmp_Codigo         = T12.ISOEmp_Codigo
		 And T19.ISOPrdCls_Codigo      = T12.ISOPrdCls_Codigo
	    Left Join ISOPrdTipo T20
	      On T20.ISOEmp_Codigo         = T12.ISOEmp_Codigo
		 And T20.ISOPrdTip_Codigo      = T12.ISOPrdTip_Codigo
	    Left Join ISOPvPedOrigem T21
	      On T21.ISOEmp_Codigo         = T01.ISOEmp_Codigo
		 And T21.ISOPvPedOri_Codigo    = T01.ISOPvPedOri_Codigo
	    Left Join ISOEntPessoa T22
          On T22.ISOEntPes_Codigo      = T01.ISOPvPed_CliCodigo
        Left Join ISOEntOrganizacao T23
          On T23.ISOEntOrg_Codigo      = T01.ISOPvPed_CliCodigo
        Left Join ISOPVPEDSITMOTIVO T24
	      On T24.ISOEmp_Codigo         = T01.ISOEmp_Codigo
		 And T24.ISOPvPedSit_Codigo    = T01.ISOPvPedSit_Codigo
		 And T24.ISOPvPedSitMot_Codigo = T01.ISOPvPedSitMot_Codigo
	    Left join ISOPVPEDITESITMOTIVO T25
	      On T25.ISOEmp_Codigo         = T01.ISOEmp_Codigo
		 And T25.ISOPvPedIteSit_Codigo = T11.ISOPvPedIteSit_Codigo
		 And T25.ISOPvPedIteSM_Codigo  = T11.ISOPvPedIteMoc_Codigo
        Left Join ISOPVPEDIDOATTVALUES T26
          on T26.ISOEmp_Codigo         = T01.ISOEmp_Codigo
         and T26.ISOPvPed_Codigo       = T01.ISOPvPed_Codigo
        Left Join ISOPVPEDIDOATT T27
          On T27.ISOEmp_Codigo         = T26.ISOEmp_Codigo
         and T27.ISOPvPedidoAttId      = T26.ISOPvPedidoAttId
        Left Join ISOPVPEDIDOATTLEVEL1 T28
          on T28.ISOEmp_Codigo         = T26.ISOEmp_Codigo
         and T28.ISOPvPedidoAttId      = T26.ISOPvPedidoAttId
         and T28.ISOPvPedidoAttOptId   = T26.ISOPvPedidoAttOptId;


-- ConexaoISO.BI_035_ISOSAAtendimento source

CREATE VIEW BI_035_ISOSAAtendimento AS
--------------------------------------------
-- Data...: 19/11/2015                     --
-- Alteracao: Diogo P Barriquel ATT: 14329 --
--------------------------------------------
Select  Distinct
        T01.ISOEmp_Codigo            as DM_035_CodEmpresa,          -- Codigo da Empresa
        T01.ISOSAAte_Codigo          as DM_035_CodAtendimento,      -- Numero do atendimento
        T01.ISOSAAte_SeqDetalhe      as DM_035_SeqDetalheAtend,     -- Sequenciador de detalhe
        T01.ISOSAAte_DataAbertura    as DM_035_DataAbertAtend,      -- Data de abertura do SAC
        T01.ISOSAAte_DataFechamento  as DM_035_DataFechamentoAtend, -- Data de Fechamento do SAC
        T02.ISOSAAteDet_Codigo       as DM_035_CodDetalheAtend,     -- Nmero do detalhe do Atendimento SAC
        T02.ISOSAAteDet_DataAbertura as DM_035_DataAbertDetAtend,   -- Data de abertura do Detalhe SAC
        T02.ISOSAAteDet_Descricao    as DM_035_DescDetAtend,        -- Descricao do detalhe SAC
        T02.ISOSAAte_EntContato      as DM_035_CodCntDetAtend,      -- Cdigo do contato do Detalhe SAC
        T20.ISOEnt_Nome              as DM_035_DscCntDetAtend,      -- Nome do contato do Detalhe SAC
        T03.ISOEnt_Codigo            as DM_035_CodUsuAbertAtend,    -- Cdigo do usurio de abertura
        T03.ISOEnt_Nome              as DM_035_NomeUsuAbertAtend,   -- Usuario de Abertura do SAC
        T04.ISOEnt_Codigo            as DM_035_CodUsuAltAtend,      -- Cdigo do Usurio de alterao do SAC
        T04.ISOEnt_Nome              as DM_035_NomeUsuAltAtend,     -- Usuario de alterao do SAC
        T05.ISOEnt_Codigo            as DM_035_CodEntidadeAtend,    -- Cdigo da Entidade do SAC
        T05.ISOEnt_Nome              as DM_035_NomeEntidadeAtend,   -- Nome da Entidade do SAC
        T21.ISOEmpOri_Codigo         as DM_035_CodOrigem,           -- Cdigo da origem do cdigo externo
        T22.ISOEmpOri_Descricao      as DM_035_DscOrigem,           -- Descrio da Origem do cdigo externo
        T21.ISOEmpEnt_Ori_Codigo     as DM_035_CodExtEntAtend,      -- Cdigo Externo da Entidade do SAC
        T23.ISOEntEctTip_Codigo      as DM_035_CodTipEctEnt,        -- Cdigo do tipo de E-contact
        T24.ISOEntEctTip_Descricao   as DM_035_DscTipEctEnt,        -- Descrio do Tipo de E-contact
        T23.ISOEntEct_Econtact       as DM_035_EctEntAtend,         -- E-contact da Entidade do SAC
        T17.ISOEntCla_Codigo         as DM_035_ClaCodEntAtend,      -- Cdigo da classificao
        T18.ISOEntCla_Descricao      as DM_035_ClaDscEntAtend,      -- Descrio da Classificao
        T17.ISOEntClaP_Codigo        as DM_035_ClaPCodEntAtend,     -- Cdigo da Classificao do Papel
        T19.ISOEntClaP_Descricao     as DM_035_ClaPDscEntAtend,     -- Descrio da Classificao do Papel
        T12.ISOEntTel_Principal      as DM_035_TelPrinEntAtend,     -- Se  telefone principal da Entidade do SAC
        T12.ISOEntTel_DDD            as DM_035_DDDEntidadeAtend,    -- DDD do telefone da entidade do SAC
        T12.ISOEntTel_Telefone       as DM_035_FoneEntidadeAtend,   -- Telefone da Entidade do SAC
        T12.ISOTelTip_Codigo         as DM_035_CodTipTelEntAtend,   -- Cdigo do Tipo de telefone da Entidade do SAC
        T13.ISOTelTip_Descricao      as DM_035_DscTipTelEntAtend,   -- Descrio do Tipo de telefone da Entidade do SAC
        T14.ISOEntEnd_Titulo         As DM_035_TituloEndEntAtend,   -- Titulo do endereo da Entidade do SAC
        T14.ISOEntEnd_Logradouro     As DM_035_LogrEntAtend,        -- Logradouro da Entidade do SAC
        T14.ISOEntEnd_Complemento    As DM_035_ComplEntAtend,       -- Complemento do endereo da Entidade do SAC
        T14.ISOEntEnd_Numero  	     As DM_035_NumEntAtend,         -- Nr do endereo da entidade do sac
        T14.ISOEntEnd_Bairro   	     As DM_035_BaiEndEntAtend,      -- Bairro da entidade do sac
        T14.ISOEntEnd_CEP            As DM_035_CEPEndEntAtend,      -- CEP da entidade do SAC
        T15.isoloc_descricao         As DM_035_CidEndEntAtend,      -- Cidade da entidade do sac
        T16.isoest_Sigla             As DM_035_UFEndEntAtend,       -- UF da Entidade do SAC
        T06.ISOSASit_Codigo          as DM_035_CodSituacaoAtend,    -- Cdigo da Situao SAC
        T06.ISOSASit_Descricao       as DM_035_DscSituacaoAtend,    -- Descrio da Situao SAC
        T07.ISOEmpCan_Codigo         as DM_035_CodCanalAtend,       -- Cdigo do Canal de comunicao
        T07.ISOEmpCan_Descricao      as DM_035_DscCanalAtend,       -- Descrio do Canal de Comunicao
        T08.ISOSAMot_Codigo          as DM_035_CodMotivoAtend,      -- Cdigo do Motivo
        T08.ISOSAMot_Descricao       as DM_035_DscMotivoAtend,      -- Descrio do Motivo
        T09.ISOSAMotOcrCau_Codigo    as DM_035_CodCausaAtend,       -- Cdigo da Causa
        T09.ISOSAMotOcrCau_Descricao as DM_035_DscCausaAtend,       -- Descrio da Causa
        T10.ISOSAMotOcr_Codigo       as DM_035_CodOcorrenciaAtend,  -- Cdigo da Ocorrncia
        T10.ISOSAMotOcr_Descricao    as DM_035_DscOcorrenciaAtend,  -- Descrio da Ocorrncia
        T11.ISOEnt_Codigo            as DM_035_CodUnidadeAtend,     -- Cdigo da Unidade
        T11.ISOEnt_Nome              as DM_035_DscUnidadeAtend,     -- Nome da Unidade
		T25.ISOInf_Codigo            as DM_035_CodInformacaoDetAtend,-- Cdigo da informao vinculada ao SAC
		T26.ISOInf_Descricao         as DM_035_DscInformacaoDetAtend,-- Descrio da informao vinculada ao SAC
		Case
           When T27.ISOEntPes_Codigo is null  Then 'Organizacao'
           When T28.ISOEntOrg_Codigo is null  Then 'Pessoa'
           Else 'Nao definido'
		End							 as DM_035_TipoEntidadeAtend,    -- Tipo de Entidade
		Case
           When T27.ISOEntPes_Codigo is null  Then T28.ISOEntOrg_Estrangeiro
           When T28.ISOEntOrg_Codigo is null  Then T27.ISOEntPes_Estrangeiro
		End							 as DM_035_EntidadeEstrangeiroAtend, -- Estrangeiro?
		Case
           When T27.ISOEntPes_Codigo is null  Then T28.ISOEntOrg_CNPJ
           When T28.ISOEntOrg_Codigo is null  Then T27.ISOEntPes_CPF
		End							 as DM_035_EntidadeCPFCNPJ,          -- CPF/CNPJ
		T29.ISOEntClaEsp_Codigo      as DM_035_CodEntClaEsp,
		T29.ISOEntClaEsp_Descricao   as DM_035_DscEntClaEsp,          -- Descrio da especalidade da classificacao
		T30.ISOEntClaPEsp_Codigo     as DM_035_CodEntClaPEsp,
		T30.ISOEntClaPEsp_Descricao  as DM_035_DscEntClaPEsp,			-- Descrio da especalidade do Papel da classificacao

		Case
           When T27.ISOEntPes_Codigo is null  Then T36.ISOEntOrganizacaoFormDefName
           When T28.ISOEntOrg_Codigo is null  Then T35.ISOEntPessoaFormDefName
           Else 'Nao definido'
		End							 as DM_035_DadoCompAttForm,
		Case
           When T27.ISOEntPes_Codigo is null  Then T34.ISOEntOrganizacaoAttCategory
           When T28.ISOEntOrg_Codigo is null  Then T33.ISOEntPessoaAttCategory
           Else 'Nao definido'
		End							 as DM_035_DadoCompAttCat,
		Case
           When T27.ISOEntPes_Codigo is null  Then T34.ISOEntOrganizacaoAttName
           When T28.ISOEntOrg_Codigo is null  Then T33.ISOEntPessoaAttName
           Else 'Nao definido'
		End							 as DM_035_DadoCompAttPerg,
		Case
           When T27.ISOEntPes_Codigo is null  Then T32.ISOEntOrganizacaoAttOptId
           When T28.ISOEntOrg_Codigo is null  Then T31.ISOEntPessoaAttOptId
--           Else 'Nao definido'
		End							 as DM_035_DadoCompAttOpt,
		Case
           When T27.ISOEntPes_Codigo is null  Then T38.ISOEntOrganizacaoAttOptValue
           When T28.ISOEntOrg_Codigo is null  Then T37.ISOEntPessoaAttOptValue
           Else 'Nao definido'
		End							 as DM_035_DadoCompAttOptVal,
		Case
           When T27.ISOEntPes_Codigo is null  Then T32.ISOEntOrganizacaoAttValue
           When T28.ISOEntOrg_Codigo is null  Then T31.ISOEntPessoaAttValue
           Else 'Nao definido'
		End							 as DM_035_DadoCompAttVal,
		Case
           When T27.ISOEntPes_Codigo is null  Then T32.ISOEntOrganizacaoAttOtherValue
           When T28.ISOEntOrg_Codigo is null  Then T31.ISOEntPessoaAttOtherValue
           Else 'Nao definido'
		End							 as DM_035_DadoCompAttOtherVal,
		Case
           When T27.ISOEntPes_Codigo is null  Then Null
           Else T27.ISOEntPes_Sexo
		End							 as DM_035_Sexo,
		Case
           When T27.ISOEntPes_Codigo is null  Then Null
           Else T27.ISOEntPes_DataNascimento
		End							 as DM_035_DtNascimento,
		T17.ISOEntCli_RecInformacoes as DM_035_RecInformacoes,
		T01.ISOSAAteRel_Codigo       as DM_035_ISOSAAteRel_Codigo,
		T01.ISOSAAteRel_Observacao   as DM_035_ISOSAAteRel_Observacao
  From  ISOSAAtendimento T01
       	Left Join ISOSAAteDetalhe T02
          On T02.ISOEmp_Codigo          = T01.ISOEmp_Codigo
         And T02.ISOSAAte_Codigo        = T01.ISOSAAte_Codigo
        Left Join ISOEntidade T03
          On T03.ISOEnt_Codigo          = T01.ISOSAAte_UsuCodigo
        Left Join ISOEntidade T04
          On T04.ISOEnt_Codigo          = T01.ISOSAAte_UsuarioAlteracao
        Left Join ISOEntidade T05
          On T05.ISOEnt_Codigo          = T01.ISOSAAte_EntCodigo
        Left Join ISOSASituacao T06
          On T06.ISOEmp_Codigo          = T01.ISOEmp_Codigo
         And T06.ISOSASit_Codigo        = T01.ISOSASit_Codigo
        Left Join ISOEmpCanal T07
          On T07.ISOEmp_Codigo          = T01.ISOEmp_Codigo
         And T07.ISOEmpCan_Codigo       = T02.ISOEmpCan_Codigo
        Left Join ISOSAMotivo T08
          On T08.ISOEmp_Codigo          = T01.ISOEmp_Codigo
         And T08.ISOSAMot_Codigo        = T01.ISOSAMot_Codigo
        Left Join ISOSAMotOcrCausa T09
          On T09.ISOEmp_Codigo          = T01.ISOEmp_Codigo
         And T09.ISOSAMot_Codigo        = T01.ISOSAMot_Codigo
         And T09.ISOSAMotOcr_Codigo     = T01.ISOSAMotOcr_Codigo
         And T09.ISOSAMotOcrCau_Codigo  = T01.ISOSAMotOcrCau_Codigo
        Left Join ISOSAMotOcorrencia T10
          On T10.ISOEmp_Codigo          = T01.ISOEmp_Codigo
         And T10.ISOSAMot_Codigo        = T01.ISOSAMot_Codigo
         And T10.ISOSAMotOcr_Codigo     = T01.ISOSAMotOcr_Codigo
        Left Join ISOEntidade T11
          On T11.ISOEnt_Codigo          = T01.ISOEntUnd_Codigo

        Left Join ISOEntTelefone T12
          On T12.ISOEnt_Codigo          = T01.ISOSAAte_EntCodigo
         And T12.ISOEntTel_Principal    = 'S'
        Left Join ISOTelTipo T13
          On T13.ISOTelTip_Codigo       = T12.ISOTelTip_Codigo

        Left Join ISOEntEndereco T14
          On T01.ISOSAAte_EntCodigo     = T14.ISOEnt_Codigo
         And T14.ISOEntEnd_Flag         = 'A'
         And T14.ISOEntEnd_Principal    = 'S'
        Left Join ISOLocalidade T15
          On T14.ISOLoc_Codigo          = T15.ISOLoc_Codigo
        Left Join ISOEstado T16
          On T15.ISOPais_Codigo         = T16.ISOPais_Codigo
         And T15.ISOEst_Codigo          = T16.ISOEst_Codigo
        Left Join ISOEntCliente T17
          On T17.ISOEntCli_Codigo       = T05.ISOEnt_Codigo
        Left Join ISOEntClassificacao T18
          On T18.ISOEntCla_Codigo       = T17.ISOEntCla_Codigo
        Left Join ISOEntClassificacaoPapel T19
          On T19.ISOEntClaP_Codigo      = T17.ISOEntClaP_COdigo
        Left Join ISOEntidade T20
          On T20.ISOEnt_Codigo          = T02.ISOSAAte_EntContato
        Left Join ISOEmpEnt_Origem      T21
          On T21.ISOEmp_Codigo          = T01.ISOEmp_Codigo
         And T21.ISOEmpEnt_EntCodigo    = T05.ISOEnt_Codigo
        Left Join ISOEmpOrigem T22
          On T22.ISOEmp_Codigo          = T21.ISOEmp_Codigo
         And T22.ISOEmpOri_Codigo       = T21.ISOEmpOri_Codigo
        Left Join ISOEntEContact T23
          On T23.ISOEnt_Codigo          = T05.ISOEnt_Codigo
         And T23.ISOEntEctTip_Principal = 'S'
        Left Join ISOEntEctTipo T24
          On T24.ISOEntEctTip_Codigo    = T23.ISOEntEctTip_Codigo
		Left Join ISOSAAteDetInformacao T25
          On T25.ISOEmp_Codigo          = T02.ISOEmp_Codigo
		 AND T25.ISOSAAte_Codigo        = T02.ISOSAAte_Codigo
		 AND T25.ISOSAAteDet_Codigo     = T02.ISOSAAteDet_Codigo
		Left Join ISOInformacao T26
		  On T26.ISOEmp_Codigo           = T25.ISOEmp_Codigo
		 AND T26.ISOInf_Codigo          = T25.ISOInf_Codigo
        Left Join ISOEntPessoa T27
          On T27.ISOEntPes_Codigo       = T01.ISOSAAte_EntCodigo
        Left Join ISOEntOrganizacao T28
          On T28.ISOEntOrg_Codigo       = T01.ISOSAAte_EntCodigo
        Left Join ISOEntClaEspecialidade T29
          On T29.ISOEmp_Codigo          = T17.ISOEmp_Codigo
         And T29.ISOEntCla_Codigo       = T17.ISOEntCla_Codigo
         And T29.ISOEntClaEsp_Codigo    = T17.ISOEntClaEsp_Codigo
        Left Join ISOEntClaPEspecialidade T30
          On T30.ISOEmp_Codigo			= T17.ISOEmp_Codigo
         And T30.ISOEntClaP_Codigo		= T17.ISOEntClaP_Codigo
         And T30.ISOEntClaPEsp_Codigo   = T17.ISOEntClaPEsp_Codigo
        Left Join ISOEntPessoaAttValues T31
          On T31.ISOEntPes_Codigo       = T02.ISOEntUsu_Codigo
        Left Join ISOENTORGANIZACAOATTVALUES T32
          On T32.ISOEntOrg_Codigo       = T02.ISOEntUsu_Codigo
        Left Join ISOENTPESSOAATT T33
          on T33.ISOEntPessoaAttId      = T31.ISOEntPessoaAttId
        Left Join ISOEntOrganizacaoAtt T34
          On T34.ISOEntOrganizacaoAttId = T32.ISOEntOrganizacaoAttId
        Left Join ISOEntPessoaFormDef T35
          On T35.ISOEntPessoaFormDefId  = T33.ISOEntPessoaFormDefId
        Left Join ISOENTORGANIZACAOFORMDEF T36
          On T36.ISOEntOrganizacaoFormDefId = T34.ISOEntOrganizacaoFormDefId
        Left Join ISOENTPESSOAATTLEVEL1 T37
          On T37.ISOEntPessoaAttId      = T31.ISOEntPessoaAttId
         And T37.ISOEntPessoaAttOptId   = T31.ISOEntPessoaAttOptId
        Left Join ISOENTORGANIZACAOATTLEVEL1 T38
          On T38.ISOEntOrganizacaoAttId = T32.ISOEntOrganizacaoAttId
         And T38.ISOEntOrganizacaoAttOptId = T32.ISOEntOrganizacaoAttOptId;


-- ConexaoISO.BI_036X_ISOMkAteCmpContatoEntidadeDC source

CREATE VIEW BI_036X_ISOMkAteCmpContatoEntidadeDC AS
SELECT
       T01.ISOMkAteCmp_Codigo             AS DM_03X6_CampanhaCodigo,
       T02.ISOMkAteCmp_Descricao          AS DM_03X6_CampanhaDescricao,
	   T02.ISOMkAteCmp_Flag               AS DM_03X6_CampanhaFlag,
	   T01.ISOMkAteCmpCnt_EntCodigo       AS DM_03X6_ContatoCodigo,
	   T03.ISOEnt_Nome                    AS DM_03X6_NomeEntidade,
	   T04.ISOEntPes_PrimeiroNome         AS DM_03X6_Nome,
	   T04.ISOEntPes_SobreNome            AS DM_03X6_Sobrenome,
	   T04.ISOEntPes_CPF                  AS DM_03X6_CPF,
	   T05.ISOEntOrg_RazaoSocial          AS DM_03X6_RazaoSocial,
	   T05.ISOEntOrg_NomeFantasia         AS DM_03X6_NomeFantasia,
	   T05.ISOEntOrg_CNPJ                 AS DM_03X6_CNPJ,
	   T07.ISOEntCliSit_Codigo            AS DM_03X6_SituacaoCliente,
	   T07.ISOEntCliSit_Descricao         AS DM_03X6_SitDscCliente,
	   T08.ISOEntSeg_Descricao            AS DM_03X6_Segmento,
	   T09.ISOEntRamAtv_Descricao         AS DM_03X6_RamoAtividade,
	   T11.ISOEndTip_Descricao            AS DM_03X6_EndTipo,
	   T10.ISOEntEnd_Logradouro           AS DM_03X6_EndLogradouro,
	   T10.ISOEntEnd_Numero               AS DM_03X6_EndNumero,
	   T10.ISOEntEnd_Complemento          AS DM_03X6_EndComplemento,
	   T10.ISOEntEnd_Bairro               AS DM_03X6_EndBairro,
	   T12.ISOLoc_Descricao               AS DM_03X6_EndCidade,
	   T13.ISOEst_Descricao               AS DM_03X6_EndEstado,
	   T13.ISOEst_Sigla                   AS DM_03X6_EndUF,
	   T14.ISOPais_Descricao              AS DM_03X6_EndPais,
	   T15.ISOEntTel_DDI                  AS DM_03X6_TelDDI,
	   T15.ISOEntTel_DDD                  AS DM_03X6_TelDDD,
	   T15.ISOEntTel_Telefone             AS DM_03X6_TelTelefone,
	   T17.ISOEntEctTip_Descricao         AS DM_03X6_EctTipo,
	   T16.ISOEntEct_econtact             AS DM_03X6_EctEcontact,
	   T18.ISOMkCntSit_Descricao          AS DM_03X6_MkCntSituacao,
	   T19_2.ISOEnt_Codigo                AS DM_03X6_RelacionadoComCod,
	   T19_2.ISOEnt_Nome                  AS DM_03X6_RelacionadoCom,
	   T20_2.ISOEnt_Codigo                AS DM_03X6_RelacionadoEmCod,
	   T20_2.ISOEnt_Nome                  AS DM_03X6_RelacionadoEm,
	   T21.ISOMKAteCmpCntDet_DataAlteraca AS DM_03X6_DataUltimoContato,
	   T21.ISOMkAteCmpCntDet_DataInicialR AS DM_03X6_DataIniReagContato,
	   T21.ISOMkAteCmpCntDet_DataFinalRea AS DM_03X6_DataFinalReagContato,
	   T21.ISOMkAteCmpCntDet_Descritivo   AS DM_03X6_MkDetDescritivo,
	   T22.ISOMkFin_Descricao             AS DM_03X6_MkFinalidade,
	   T23.ISOMkFinCla_Descricao          AS DM_03X6_MkFinClassificacao,
	   T24.ISOEnt_Nome                    AS DM_03X6_MkAgenteUltContato,
	   T25.ISOEntCla_Descricao            AS DM_03X6_CliClassificacao,
	   T26.ISOEntClaEsp_Descricao         AS DM_03X6_CliClaEspecialidade,
	   T27.ISOEntClaP_Descricao           AS DM_03X6_CliClassificacaoP,
	   T28.ISOEntClaPEsp_Descricao        AS DM_03X6_CliClassificacaoPEsp,
	   T31.ISOEntCNAE_Descricao           AS DM_03X6_ISOEntCnaeDescricao,
	   T32.ISOEntRsp_Codigo               AS DM_03X6_CodigoResponsavel,
	   T33.ISOEnt_Nome                    AS DM_03X6_NomeResponsavel,
	   T34.ISOEntNivRsp_Descricao         AS DM_03X6_NivelRespCli,
	   Case
           When T04.ISOEntPes_Codigo Is Not Null Then
		        'Pessoa'
           Else 'Organizacao'
       End                                AS DM_03X6_TipoPessoa,
	   Case
           When T04.ISOEntPes_Codigo Is Not Null Then
		        T37.ISOEntPessoaFormDefName
           Else T41.ISOEntOrganizacaoFormDefName
       End                                aS DM_03X6_Formulario,
	   Case
           When T04.ISOEntPes_Codigo Is Not Null Then
		        T36.ISOEntPessoaAttCategory
           Else T40.ISOEntOrganizacaoAttCategory
       End                                aS DM_03X6_Categoria,
	   Case
           When T04.ISOEntPes_Codigo Is Not Null Then
		        T36.ISOEntPessoaAttName
         Else T40.ISOEntOrganizacaoAttName
       End                                aS DM_03X6_Pergunta,
	   Case
           When T04.ISOEntPes_Codigo Is Not Null Then
		        T36.ISOEntPessoaAttFlag
           Else T40.ISOEntOrganizacaoAttFlag
       End                                aS DM_03X6_PerguntaFlag,
	   Case
           When T04.ISOEntPes_Codigo Is Not Null Then
				Case
				    When T35.ISOEntPessoaAttOptId is not NULL
					Then T38.ISOEntPessoaAttOptValue
				    Else T35.ISOEntPessoaAttValue
				End

           Else

		       Case
				    When T39.ISOEntOrganizacaoAttOptId is not NULL
					Then T42.ISOEntOrganizacaoAttOptValue
				    Else T39.ISOEntOrganizacaoAttValue
			   End
       End                                AS DM_03X6_Resposta,
	   T21.ISOMkFinRsl_Codigo             as DM_03X6_RslCodigo,
	   T43.ISOMkFinRsl_Descricao          AS DM_03X6_MkFinResultado,
	   T44.ISOEmpOri_Codigo               as DM_03X6_CodOrigem,
	   T45.ISOEmpOri_Descricao            as DM_03X6_DscOrigem,
	   T44.ISOEmpEnt_Ori_Codigo           as DM_03X6_OrigemEntidade,
       1                                  AS MT_03X6_Quantidade

  FROM ISOMKATECMPCONTATO T01
       INNER JOIN ISOMKATECAMPANHA T02
	      ON T02.ISOEmp_Codigo               = T01.ISOEmp_Codigo
		 AND T02.ISOMkAteCmp_Codigo          = T01.ISOMkAteCmp_Codigo
	   INNER JOIN ISOENTIDADE T03
	      ON T03.ISOEnt_Codigo               = T01.ISOMkAteCmpCnt_EntCodigo
	    LEFT JOIN ISOENTPESSOA T04
	      ON T04.ISOEntPes_Codigo            = T01.ISOMkAteCmpCnt_EntCodigo
		LEFT JOIN ISOENTORGANIZACAO T05
		  ON T05.ISOEntOrg_Codigo            = T01.ISOMkAteCmpCnt_EntCodigo
	   INNER JOIN ISOENTCLIENTE T06
	      ON T06.ISOEmp_Codigo               = T01.ISOEmp_Codigo
	     AND T06.ISOEntCli_Codigo            = T01.ISOMkAteCmpCnt_EntCodigo
	   INNER JOIN ISOENTCLISITUACAO T07
	      ON T07.ISOEmp_Codigo               = T06.ISOEmp_Codigo
		 AND T07.ISOEntCliSit_Codigo         = T06.ISOEntCliSit_Codigo
		LEFT JOIN ISOENTSEGMENTO T08
		  ON T08.ISOEntSeg_Codigo            = T04.ISOEntSeg_Codigo
		LEFT JOIN ISOENTRAMOATIVIDADE T09
		  ON T09.ISOEntRamAtv_Codigo         = T05.ISOEntRamAtv_Codigo
		LEFT JOIN ISOENTENDERECO T10
		  ON T10.ISOEnt_Codigo               = T01.ISOMkAteCmpCnt_EntCodigo
		 AND T10.ISOEntEnd_Flag              = 'A'
		 AND T10.ISOEntEnd_Principal         = 'S'
		LEFT JOIN ISOENDTIPO T11
		  ON T11.ISOEndTip_Codigo            = T10.ISOEndTip_Codigo
		LEFT JOIN ISOLOCALIDADE T12
		  ON T12.ISOLoc_Codigo               = T10.ISOLoc_Codigo
		LEFT JOIN ISOESTADO T13
		  ON T13.ISOEst_Codigo               = T12.ISOEst_Codigo
	    LEFT JOIN ISOPAIS T14
		  ON T14.ISOPais_Codigo              = T13.ISOPais_Codigo
		LEFT JOIN ISOENTTELEFONE T15
		  ON T15.ISOEnt_Codigo               = T01.ISOMkAteCmpCnt_EntCodigo
		 AND T15.ISOEntTel_Flag              = 'A'
		 AND T15.ISOEntTel_Principal         = 'S'
		LEFT JOIN ISOENTECONTACT T16
		  ON T16.ISOEnt_Codigo               = T01.ISOMkAteCmpCnt_EntCodigo
		 AND T16.ISOEntEml_Flag              = 'A'
		 AND T16.ISOEntEctTip_Principal      = 'S'
		LEFT JOIN ISOENTECTTIPO T17
		  ON T17.ISOEntEctTip_Codigo         = T16.ISOEntEctTip_Codigo
	   INNER JOIN ISOMKCNTSITUACAO T18
	      ON T18.ISOEmp_Codigo               = T01.ISOEmp_Codigo
		 AND T18.ISOMkCntSit_Codigo          = T01.ISOMkCntSit_Codigo
		LEFT JOIN ISOENT_RELACAO T19
		  ON T19.ISOEntRle_Codigo            = T01.ISOMkAteCmpCnt_EntCodigo
		 AND T19.ISOEnt_Rlc_Principal        = 'S'
		 AND T19.ISOEnt_Rlc_Flag             = 'A'
		LEFT JOIN ISOENTIDADE T19_2
		  ON T19_2.ISOEnt_Codigo             = T19.ISOEntRlc_Codigo
		LEFT JOIN ISOENT_RELACAO T20
		  ON T20.ISOEntRlc_Codigo            = T01.ISOMkAteCmpCnt_EntCodigo
		 AND T20.ISOEnt_Rlc_Principal        = 'S'
		 AND T20.ISOEnt_Rlc_Flag             = 'A'
		LEFT JOIN ISOENTIDADE T20_2
		  ON T20_2.ISOEnt_Codigo   = T20.ISOEntRle_Codigo
		LEFT JOIN ISOMKATECMPCNTDETALHE T21
          ON T21.ISOEmp_Codigo               = T01.ISOEmp_Codigo
         AND T21.ISOMkAteCmp_Codigo          = T01.ISOMkAteCmp_Codigo
         AND T21.ISOMkAteCmpCnt_Sequencia    = T01.ISOMkAteCmpCnt_Sequencia
         AND T21.ISOMkAteCmpCntDet_Sequencia = (Select MAX(TA1.ISOMKAteCmpCntDet_Sequencia)
                                                  From ISOMKATECMPCNTDETALHE TA1
                                                 Where TA1.ISOEmp_Codigo            = T01.ISOEmp_Codigo
                                                   And TA1.ISOMkAteCmp_Codigo       = T01.ISOMkAteCmp_Codigo
                                                   And TA1.ISOMkAteCmpCnt_Sequencia = T01.ISOMkAteCmpCnt_Sequencia)
        LEFT JOIN ISOMKFINALIDADE T22
	      ON T22.ISOEmp_Codigo               = T02.ISOEmp_Codigo
		 AND T22.ISOMkFin_Codigo             = T02.ISOMkFin_Codigo
		LEFT JOIN ISOMKFINCLASSIFICACAO T23
		  ON T23.ISOEmp_Codigo               = T02.ISOEmp_Codigo
		 AND T23.ISOMkFin_Codigo             = T02.ISOMkFin_Codigo
		 AND T23.ISOMkFinCla_Codigo          = T21.ISOMkFinCla_Codigo
		LEFT JOIN ISOENTIDADE T24
		  ON T24.ISOEnt_Codigo               = T21.ISOMkAteCmpCntDet_CodigoAgente
		LEFT JOIN ISOENTCLASSIFICACAO T25
		  ON T25.ISOEmp_Codigo               = T06.ISOEmp_Codigo
		 AND T25.ISOEntCla_Codigo            = T06.ISOEntCla_Codigo
		LEFT JOIN ISOENTCLAESPECIALIDADE T26
		  ON T26.ISOEmp_Codigo               = T06.ISOEmp_Codigo
		 AND T26.ISOEntCla_Codigo            = T06.ISOEntCla_Codigo
		 AND T26.ISOEntClaEsp_Codigo         = T06.ISOEntClaEsp_Codigo
		LEFT JOIN ISOENTCLASSIFICACAOPAPEL T27
		  ON T27.ISOEmp_Codigo               = T06.ISOEmp_Codigo
		 AND T27.ISOEntClaP_Codigo           = T06.ISOEntClaP_Codigo
		LEFT JOIN ISOENTCLAPESPECIALIDADE T28
		  ON T28.ISOEmp_Codigo               = T06.ISOEmp_Codigo
		 AND T28.ISOEntClaP_Codigo           = T06.ISOEntClaP_Codigo
		 AND T28.ISOEntClaPEsp_Codigo        = T06.ISOEntClaEsp_Codigo

		LEFT JOIN ISOENTORG_CNAE T30
		  ON T30.ISOEntOrg_Codigo            = T01.ISOMkAteCmpCnt_EntCodigo
		 AND T30.ISOEntOrg_CNAE_Flag         = 'A'
		LEFT JOIN ISOENTCNAE T31
		  ON T31.ISOEntCNAE_Codigo           = T30.ISOEntCNAE_Codigo
		LEFT JOIN ISOEntRsp_Clientes T32
		  ON T32.ISOEmp_Codigo               = T01.ISOEmp_Codigo
		 AND T32.ISOEntCli_Codigo            = T01.ISOMkAteCmpCnt_EntCodigo
		 AND T32.ISOEntRsp_Cli_Flag          = 'A'
		LEFT JOIN ISOEntidade T33
		  ON T33.ISOEnt_Codigo               = T32.ISOEntRsp_Codigo
		LEFT JOIN ISOENTNIVRESPONSABILIDADE T34
		  ON T34.ISOEmp_Codigo               = T32.ISOEmp_Codigo
		 AND T34.ISOEntNivRsp_Codigo         = T32.ISOEntNivRsp_Codigo
		LEFT JOIN ISOENTPESSOAATTVALUES T35
		  ON T35.ISOEntPes_Codigo            = T01.ISOMkAteCmpCnt_EntCodigo
		 AND T35.ISOEntPessoaAttId NOT IN (SELECT ISOEntPessoaAttId FROM ISOENTPESSOAATT WHERE ISOEntPessoaAttTipoImagem = 'S')
		LEFT JOIN ISOENTPESSOAATT T36
		  ON T36.ISOEntPessoaAttId           = T35.ISOEntPessoaAttId
	    LEFT JOIN ISOENTPESSOAFORMDEF T37
		  ON T37.ISOEntPessoaFormDefId       = T36.ISOEntPessoaFormDefId
		LEFT JOIN ISOENTPESSOAATTLEVEL1 T38
		  ON T38.ISOEntPessoaAttId           = T35.ISOEntPessoaAttId
		 AND T38.ISOEntPessoaAttOptId        = T35.ISOEntPessoaAttOptId
		LEFT JOIN ISOENTORGANIZACAOATTVALUES T39
		  ON T39.ISOEntOrg_Codigo            = T01.ISOMkAteCmpCnt_EntCodigo
		 AND T39.ISOEntOrganizacaoAttId NOT IN (SELECT ISOEntOrganizacaoAttId FROM ISOENTORGANIZACAOATT WHERE ISOEntOrganizacaoAttTipoImagem = 'S')
		LEFT JOIN ISOENTORGANIZACAOATT T40
		  ON T40.ISOEntOrganizacaoAttId      = T39.ISOEntOrganizacaoAttId
	    LEFT JOIN ISOENTORGANIZACAOFORMDEF T41
		  ON T41.ISOEntOrganizacaoFormDefId  = T40.ISOEntOrganizacaoFormDefId
		LEFT JOIN ISOENTORGANIZACAOATTLEVEL1 T42
		  ON T42.ISOEntOrganizacaoAttId      = T39.ISOEntOrganizacaoAttId
		 AND T42.ISOEntOrganizacaoAttOptId   = T39.ISOEntOrganizacaoAttOptId
        Left Join ISOMKFINRESULTADO T43
          On T43.ISOEmp_Codigo               = T02.ISOEmp_Codigo
         And T43.ISOMkFin_Codigo             = T02.ISOMkFin_Codigo
		 And T43.ISOMkFinRsl_Codigo          = T21.ISOMkFinRsl_Codigo
        Left Join ISOEMPENT_ORIGEM T44
          On T44.ISOEmp_Codigo               = T01.ISOEmp_Codigo
         And T44.ISOEmpEnt_EntCodigo         = T01.ISOMkAteCmpCnt_EntCodigo
       Inner Join ISOEMPORIGEM T45
          On T45.ISOEmp_Codigo               = T44.ISOEmp_Codigo
         And T45.ISOEmpOri_Codigo            = T44.ISOEmpOri_Codigo;


-- ConexaoISO.BI_040_isoCDS_PesOrgResponsavel source

CREATE VIEW BI_040_isoCDS_PesOrgResponsavel as
Select
	   T01.ISOEntPes_Codigo		     as DM_040_Codigo ,
       T01.ISOEntPes_NomeCompleto    as DM_040_Nome ,
       T01.ISOEntPes_DataCadastro    as DM_040_DataCadastro,
       year( T01.ISOEntPes_DataCadastro )    as DM_040_AnoCadastro,
       month( T01.ISOEntPes_DataCadastro )    as DM_040_MesCadastro,
	   NULL                          as DM_040_RamoDeAtividade,
	   T01.ISOEntPes_Estrangeiro     as DM_040_Estrangeiro,
	   T01.ISOEntPes_Sexo            as DM_040_Sexo,
	   T15.ISOEstCiv_Descricao       as DM_040_EstadoCivil,
	   T16.ISONivEsc_Descricao       as DM_040_NivelDeEscolaridade,
	   T17.ISOProf_Descricao         as DM_040_Profissao,
       T09.ISOEntSeg_Descricao       as DM_040_Segmento,
       T03.ISOLoc_Descricao          as DM_040_Localidade,
       T04.ISOEst_Sigla              as DM_040_UF,
            Case
           When Exists (Select ISOEntCli_Codigo From ISOEntCliente Where ISOEntCli_Codigo = T01.ISOEntPes_Codigo) Then 'S'
           Else 'N'
       End                           as DM_040_PapelCliente,
       Case
           When Exists (Select ISOEntPar_Codigo From ISOEntParceiro Where ISOEntPar_Codigo = T01.ISOEntPes_Codigo) Then 'S'
           Else 'N'
       End                           as DM_040_PapelParceiro,
       Case
           When Exists (Select ISOEntFrn_Codigo From ISOEntFornecedor Where ISOEntFrn_Codigo = T01.ISOEntPes_Codigo) Then 'S'
           Else 'N'
       End                           as DM_040_PapelFornecedor,
       Case
           When Exists (Select ISOEntUsu_Codigo From ISOEntUsuario Where ISOEntUsu_Codigo = T01.ISOEntPes_Codigo) Then 'S'
           Else 'N'
       End                           as DM_040_PapelUsuario,
       Case
           When Exists (Select ISOEntRsp_Codigo From ISOEntResponsavel Where ISOEntRsp_Codigo = T01.ISOEntPes_Codigo) Then 'S'
           Else 'N'
       End                           as DM_040_PapelResponsavel,
	   T10.ISOEntCla_Descricao		 as DM_040_ClassificacaoEntidade,
	   T11.ISOEntClaEsp_Descricao    as DM_040_EspecialidadeEntidade,
       T08.ISOEntClaP_Descricao      as DM_040_ClassificacaoPapel,
	   T12.ISOEntClaPEsp_Descricao	 as DM_040_EspecialidadePapel,
	   T14.ISOEntCliSit_Descricao	 as DM_040_Situacao,
       'F'                           as DM_040_TipoPessoa,
       T01.ISOEntPes_Flag            as DM_040_Ativo,
       1						     as MT_040_QtdeEntidades,
       'V_001'                       as DM_040_VersaoVW,
	   T18.ISOEntRsp_Codigo          as DM_040_ResponsavelCodigo,
	   T19.ISOEnt_Nome               as DM_040_ResponsavelNome,
	   T20.ISOEntNivRsp_Codigo       as DM_040_ResponsavelNivelCodigo,
	   T20.ISOEntNivRsp_Descricao    as DM_040_ResponsavelNivel
  From ISOEntPessoa T01
       Left Join ISOEntEndereco T02
         On T02.ISOEnt_Codigo        = T01.ISOEntPes_Codigo
        And T02.ISOEntEnd_Principal  = 'S'
       Left Join ISOLocalidade T03
         On T03.ISOLoc_Codigo        = T02.ISOLoc_Codigo
       Left JOin ISOEstado T04
         On T04.ISOEst_Codigo        = T03.ISOEst_Codigo
       Left join isoentcliente T07
	     On T01.ISOEntPes_Codigo     = T07.ISOEntCli_Codigo
       Left Join ISOEntClassificacaoPapel T08
         On T08.ISOEmp_Codigo        = T07.ISOEmp_Codigo
	    And T08.ISOEntClaP_Codigo    = T07.ISOEntClaP_Codigo
       Left Join ISOEntSegmento T09
         On T09.ISOEntSeg_Codigo     = T01.ISOEntSeg_Codigo
	   Left join ISOEntClassificacao T10
         On T10.ISOEmp_Codigo        = T07.ISOEmp_Codigo
	    and T10.ISOEntCla_Codigo     = T07.ISOEntCla_Codigo
        and T10.ISOEntCla_Flag       = 'A'
	   Left join ISOEntClaEspecialidade T11
	     On T11.ISOEmp_codigo        = T07.ISOEmp_Codigo
	    And T11.ISOEntCla_Codigo     = T07.ISOEntCla_Codigo
        And T11.ISOEntClaEsp_codigo  = T07.ISOEntClaEsp_Codigo
	   Left join ISOEntClaPEspecialidade T12
	     On T12.ISOEmp_Codigo        = T07.ISOEmp_Codigo
	    And T12.ISOEntClaP_Codigo    = T07.ISOEntClaP_Codigo
	    And T12.ISOEntClaPEsp_Codigo = T07.ISOEntClaPEsp_Codigo
       Left join ISOEntCliSituacao T14
         On T14.ISOEmp_Codigo        = T07.ISOEmp_Codigo
        And T14.ISOEntCliSit_Codigo  = T07.ISOEntCliSit_Codigo
       Left Join ISOEstCivil T15
         On T15.ISOEstCiv_Codigo     = T01.ISOEstCiv_Codigo
       Left Join ISONivEscolaridade T16
         On T16.ISONivEsc_Codigo     = T01.ISONivEsc_Codigo
       Left Join ISOProfissao T17
         ON T17.ISOProf_Codigo        = T01.ISOProf_Codigo
	   Left Join ISOENTRSP_CLIENTES T18
		  On T18.ISOEmp_Codigo        = T07.ISOEmp_Codigo
		 And T18.ISOEntCli_Codigo     = T07.ISOEntCli_Codigo
	   Left Join ISOENTIDADE T19
		  On T19.ISOEnt_Codigo        = T18.ISOEntRsp_Codigo
		Left Join ISOENTNIVRESPONSABILIDADE T20
		  On T20.ISOEmp_Codigo        = T18.ISOEmp_Codigo
		 And T20.ISOEntNivRsp_Codigo  = T18.ISOEntNivRsp_Codigo
Union

Select
       T01.ISOEntOrg_Codigo          as DM_040_Codigo,
       T01.ISOEntOrg_RazaoSocial     as DM_040_Nome,
       T01.ISOEntOrg_DataCadastro						     as DM_040_DataCadastro,
       year(T01.ISOEntOrg_DataCadastro)    as DM_040_AnoCadastro,
       month(T01.ISOEntOrg_DataCadastro)    as DM_040_MesCadastro,
	   T13.ISOEntRamAtv_Descricao	 as DM_040_RamoDeAtividade,
	   T01.ISOEntOrg_Estrangeiro     as DM_040_Estrangeiro,
	   Null                          as DM_040_Sexo,
	   Null                          as DM_040_EstadoCivil,
	   Null                          as DM_040_NivelDeEscolaridade,
	   Null                          as DM_040_Profissao,
       T09.ISOEntSeg_Descricao       as DM_040_Segmento,
       T03.ISOLoc_Descricao          as DM_040_Localidade,
       T04.ISOEst_Sigla              as DM_040_UF,
       Case
           When Exists (Select ISOEntCli_Codigo From ISOEntCliente Where ISOEntCli_Codigo = T01.ISOEntOrg_Codigo) Then 'S'
           Else 'N'
       End                           as DM_040_PapelCliente,
       Case
           When Exists (Select ISOEntPar_Codigo From ISOEntParceiro Where ISOEntPar_Codigo = T01.ISOEntOrg_Codigo) Then 'S'
           Else 'N'
       End                           as DM_040_PapelParceiro,
       Case
           When Exists (Select ISOEntFrn_Codigo From ISOEntFornecedor Where ISOEntFrn_Codigo = T01.ISOEntOrg_Codigo) Then 'S'
           Else 'N'
       End                           as DM_040_PapelFornecedor,
       Case
           When Exists (Select ISOEntUsu_Codigo From ISOEntUsuario Where ISOEntUsu_Codigo = T01.ISOEntOrg_Codigo) Then 'S'
           Else 'N'
       End                           as DM_040_PapelUsuario,
       Case
           When Exists (Select ISOEntRsp_Codigo From ISOEntResponsavel Where ISOEntRsp_Codigo = T01.ISOEntOrg_Codigo) Then 'S'
           Else 'N'
       End                           as DM_040_PapelResponsavel,
       T10.ISOEntCla_Descricao		 as DM_040_ClassificacaoEntidade,
	   T11.ISOEntClaEsp_Descricao    as DM_040_EspecialidadeEntidade,
       T08.ISOEntClaP_Descricao      as DM_040_ClassificacaoPapel,
	   T12.ISOEntClaPEsp_Descricao	 as DM_040_EspecialidadePapel,
	   T14.ISOEntCliSit_Descricao	 as DM_040_Situacao,
       'J'                           as DM_040_TipoPessoa,
       T01.ISOEntOrg_Flag            as DM_040_Ativo,
       1						     as MT_040_QtdeEntidades,
       'V_001'                       as DM_040_VersaoVW,
	   T18.ISOEntRsp_Codigo          as DM_040_ResponsavelCodigo,
	   T19.ISOEnt_Nome               as DM_040_ResponsavelNome,
	   T20.ISOEntNivRsp_Codigo       as DM_040_ResponsavelNivelCodigo,
	   T20.ISOEntNivRsp_Descricao    as DM_040_ResponsavelNivel
  From ISOEntOrganizacao T01
       left Join ISOEntEndereco T02
          On T02.ISOEnt_Codigo        = T01.ISOEntOrg_Codigo
         And T02.ISOEntEnd_Principal  = 'S'
        Left Join ISOLocalidade T03
          On T03.ISOLoc_Codigo      = T02.ISOLoc_Codigo
       left JOin ISOEstado T04
          On T04.ISOEst_Codigo        = T03.ISOEst_Codigo
        Left join isoentcliente T07
		  On T01.ISOEntOrg_Codigo     = T07.ISOEntCli_Codigo
        Left Join ISOEntClassificacaoPapel T08
          On T08.ISOEmp_Codigo        = T07.ISOEmp_Codigo
         and T08.ISOEntClaP_Codigo    = T07.ISOEntClaP_Codigo
        Left Join ISOEntSegmento T09
          On T09.ISOEntSeg_Codigo     = T01.ISOEntSeg_Codigo
		Left join ISOEntClassificacao T10
          On T10.ISOEmp_Codigo        = T07.ISOEmp_Codigo
		 and T10.ISOEntCla_Codigo     = T07.ISOEntCla_Codigo
		 and T10.ISOEntCla_Flag = 'A'
		Left join ISOEntClaEspecialidade T11
		  On T11.ISOEmp_codigo        = T07.ISOEmp_Codigo
		 And T11.ISOEntCla_Codigo     = T07.ISOEntCla_Codigo
         and T11.ISOEntClaEsp_codigo  = T07.ISOEntClaEsp_Codigo
		Left join ISOEntClaPEspecialidade T12
		  On T12.ISOEmp_Codigo        = T07.ISOEmp_Codigo
		 And T12.ISOEntClaP_Codigo    = T07.ISOEntClaP_Codigo
		 And T12.ISOEntClaPEsp_Codigo = T07.ISOEntClaPEsp_Codigo
		Left Join ISOEntRamoAtividade T13
          on T13.ISOEntRamAtv_Codigo  = T01.ISOEntRamAtv_Codigo
		Left join ISOEntCliSituacao T14
		  On T14.ISOEmp_Codigo        = T07.ISOEmp_Codigo
		 And T14.ISOEntCliSit_Codigo  = T07.ISOEntCliSit_Codigo
	    Left Join ISOENTRSP_CLIENTES T18
		  On T18.ISOEmp_Codigo        = T07.ISOEmp_Codigo
		 And T18.ISOEntCli_Codigo     = T07.ISOEntCli_Codigo
	    Left Join ISOENTIDADE T19
		  On T19.ISOEnt_Codigo        = T18.ISOEntRsp_Codigo
	 	Left Join ISOENTNIVRESPONSABILIDADE T20
		  On T20.ISOEmp_Codigo        = T18.ISOEmp_Codigo
		 And T20.ISOEntNivRsp_Codigo  = T18.ISOEntNivRsp_Codigo;


-- ConexaoISO.BI_041_Atendimentos source

CREATE VIEW BI_041_Atendimentos as
Select
    T01.ISOSAAte_Codigo				as DM_CodigoAtendimento,
    LTRIM(T06.ISOEnt_Nome)			as DM_Cliente,
    T02.ISOEmpCan_Descricao			as DM_Canal,
	T03.ISOSAMot_Descricao			as DM_Motivo,
	T04.ISOSAMotOcr_Descricao		as DM_Ocorrencia,
	T05.ISOSAMotOcrCau_Descricao	as DM_Causa,
	T07.ISOSASit_Descricao          as DM_Situacao,
	T07.ISOSASit_Situacao			as DM_SituacaoInterna,
	T01.ISOSAAte_UsuCodigo			as DM_UsuarioAbertura,
	T09.ISOEnt_Nome					as DM_UsuarioAberturaNome,
	T01.ISOSAAte_DataAbertura		as DM_DataAbertura,
	T01.ISOSAAte_DataFechamento		as DM_DataFechamento,
	CASE
		WHEN (T01.ISOSAAte_DataFechamento > T01.ISOSAAte_DataAbertura)
		THEN (CAST(DATEDIFF(second, T01.ISOSAAte_DataAbertura, T01.ISOSAAte_DataFechamento) as numeric) / 60 )
		ELSE NULL
	END as MT_TempoAtendimentoEmMinutos,
	CASE
		WHEN (T01.ISOSAAte_DataFechamento > T01.ISOSAAte_DataAbertura)
		THEN (CAST(DATEDIFF(second, T01.ISOSAAte_DataAbertura, T01.ISOSAAte_DataFechamento) as numeric) / 3600 )
		ELSE NULL
	END as MT_TempoAtendimentoEmHoras,
	CASE
		WHEN (T01.ISOSAAte_DataFechamento > T01.ISOSAAte_DataAbertura)
		THEN (CAST(DATEDIFF(second, T01.ISOSAAte_DataAbertura, T01.ISOSAAte_DataFechamento) as numeric) / 86400 )
		ELSE NULL
	END as MT_TempoAtendimentoEmDias

  From ISOSAAtendimento T01
	  LEFT JOIN ISOSAAteDetalhe T08
	    ON T08.ISOEmp_Codigo         = T01.ISOEmp_Codigo
	   AND T08.ISOSAAte_Codigo       = T01.ISOSAAte_Codigo
	   AND T08.ISOSAAteDet_Codigo    = (SELECT MIN(TA1.ISOSAATEDET_CODIGO)
	                                      FROM ISOSAATEDETALHE TA1
										 WHERE TA1.ISOEmp_Codigo   = T01.ISOEmp_Codigo
										   AND TA1.ISOSAAte_Codigo = T01.ISOSAAte_Codigo)
	  LEFT JOIN ISOEmpCanal T02
        ON T02.ISOEmp_Codigo      = T01.ISOEmp_Codigo
	   AND T02.ISOEmpCan_Codigo   = T08.ISOEmpCan_Codigo
	  LEFT JOIN ISOSAMotivo T03
	    ON T03.ISOEmp_Codigo         = T01.ISOEmp_Codigo
       AND T03.ISOSAMot_Codigo       = T01.ISOSAMot_Codigo
	  LEFT JOIN ISOSAMotOcorrencia T04
        ON T04.ISOEmp_Codigo         = T03.ISOEmp_Codigo
       AND T04.ISOSAMot_Codigo       = T03.ISOSAMot_Codigo
       AND T04.ISOSAMotOcr_Codigo    = T01.ISOSAMotOcr_Codigo
	  LEFT JOIN ISOSAMotOcrCausa T05
	    ON T05.ISOEmp_Codigo         = T04.ISOEmp_Codigo
	   AND T05.ISOSAMot_Codigo       = T04.ISOSAMot_Codigo
	   AND T05.ISOSAMotOcr_Codigo    = T04.ISOSAMotOcr_Codigo
       AND T05.ISOSAMotOcrCau_Codigo = T01.ISOSAMotOcrCau_Codigo
	  LEFT JOIN ISOEntidade T06
	    ON T06.ISOEnt_Codigo         = T01.ISOSAAte_EntCodigo
	  LEFT Join ISOSASituacao T07
	    ON T07.ISOEmp_Codigo         = T01.ISOEmp_Codigo
	   AND T07.ISOSASit_Codigo	     = T01.ISOSASit_Codigo
	  LEFT JOIN ISOEntidade T09
	    ON T09.ISOEnt_Codigo         = T01.ISOSAAte_UsuCodigo;


-- ConexaoISO.BI_042_AtendimentosQualificados source

CREATE VIEW BI_042_AtendimentosQualificados AS
SELECT
	T0.ISOSAATE_CODIGO AS DM_ATENDIMENTO,
	T0.ISOSAATE_NOTAATENDIMENTO AS MT_NOTAATENDIMENTO,
	CASE
		WHEN T0.ISOSAATE_NOTAATENDIMENTO = 1 THEN 'Pï¿½SSIMO'
		WHEN T0.ISOSAATE_NOTAATENDIMENTO = 2 THEN 'RUIM'
		WHEN T0.ISOSAATE_NOTAATENDIMENTO = 3 THEN 'REGULAR'
		WHEN T0.ISOSAATE_NOTAATENDIMENTO = 4 THEN 'BOM'
		WHEN T0.ISOSAATE_NOTAATENDIMENTO = 5 THEN 'EXCELENTE'
		ELSE 'Nï¿½O CLASSIFICADO'
	END AS DM_NOTAATENDIMENTO,
	T0.ISOSAATE_NOTASOLUCAO AS MT_NOTASOLUCAO,
	CASE
		WHEN T0.ISOSAATE_NOTASOLUCAO = 1 THEN 'Pï¿½SSIMO'
		WHEN T0.ISOSAATE_NOTASOLUCAO = 2 THEN 'RUIM'
		WHEN T0.ISOSAATE_NOTASOLUCAO = 3 THEN 'REGULAR'
		WHEN T0.ISOSAATE_NOTASOLUCAO = 4 THEN 'BOM'
		WHEN T0.ISOSAATE_NOTASOLUCAO = 5 THEN 'EXCELENTE'
		ELSE 'Nï¿½O CLASSIFICADO'
	END AS DM_NOTASOLUCAO,
	T0.ISOSAATE_DATAABERTURA AS DM_DATAABERTURA,
	T0.ISOSAATE_DATAFECHAMENTO AS DM_DATAAFECHAMENTO,
	T0.ISOSASIT_CODIGO AS DM_SITUACAOCODIGO,
	T1.ISOSASIT_DESCRICAO AS DM_SITUACAODESCRICAO,
	T0.ISOEntUnd_Codigo AS DM_CODIGOUNIDADE,
	T2.ISOEnt_Nome AS DM_UNIDADE
FROM ISOSAATENDIMENTO T0
    LEFT JOIN ISOSASITUACAO T1
	       ON T1.ISOEMP_CODIGO = T0.ISOEMP_CODIGO
		  AND T1.ISOSASIT_CODIGO = T0.ISOSASIT_CODIGO
	LEFT JOIN ISOENTIDADE T2
	       ON T2.ISOEnt_Codigo = T0.ISOEntUnd_Codigo;


-- ConexaoISO.BI_043_WFTarefas source

CREATE VIEW BI_043_WFTarefas as
SELECT
       T2.ISOWFPrcPad_Codigo                     as DM_ProcedimentoCodigo,
       T00.ISOSAAte_EntCodigo                    as DM_CodCliente,
       RTrim(T12.ISOEnt_Nome)                    as DM_Cliente,
       RTrim(T2.ISOWFPrcPad_Descricao)           as DM_Procedimento,
	   T3.ISOWFTrfPad_Codigo                     as DM_TarefaCodigo,
       RTrim(T3.ISOWFTrfPad_Descricao)           as DM_Tarefa,
	   T00.ISOSAAte_Codigo                       as DM_AtendimentoSAC,
	   RTrim(T7.ISOSAMot_Descricao)              as DM_MotivoSAC,
	   RTrim(T8.ISOSAMotOcr_Descricao)           as DM_OcorrenciaSAC,
	   RTrim(T9.ISOSAMotOcrCau_Descricao)        as DM_CausaSAC,
	   RTrim(T10.ISOEnt_Nome)                    as DM_UnidadeSAC,
	   RTrim(T11.ISOSASit_Descricao)             as DM_SituacaoSAC,
	   T00.ISOSAAte_DataAbertura                 as DM_DataAberturaSAC,
	   T00.ISOSAAte_DataFechamento               as DM_DataFechamentoSAC,
	   T0.ISOWFTrf_DataRecebimento               as DM_DataRecebimento,
	   T0.ISOWFTrf_DataSolucao                   as DM_DataSolucao,
	   T0.ISOWFTrf_DataLimite                    as DM_DataLimite,
	   CASE
	       WHEN T0.ISOWFTrf_DataSolucao IS null OR T0.ISOWFTrf_DataSolucao = '1753-01-01 00:00:00.000' THEN 'EM ANDAMENTO'
		   WHEN T0.ISOWFTrf_DataSolucao < T0.ISOWFTrf_DataLimite THEN 'CONCLUÍDA NO PRAZO'
		   ELSE 'CONCLUÍDA COM ATRASO'
	   END                                       as DM_Status,
	   RTrim(T4.ISOEnt_Nome)                     as DM_Responsavel,
	   RTrim(T5.ISOEnt_Nome)                     as DM_Responsavel_Executor,
	   CASE
	       WHEN T0.ISOWFTrf_DataSolucao IS null OR T0.ISOWFTrf_DataSolucao = '1753-01-01 00:00:00.000' THEN 0
		   ELSE DATEDIFF(dd, T0.ISOWFTrf_DataRecebimento, T0.ISOWFTrf_DataSolucao)
	   END                                       as MT_TempoDaSolucaoDiasWF,
	   CASE
	       WHEN T00.ISOSAAte_DataFechamento IS null OR T00.ISOSAAte_DataFechamento = '1753-01-01 00:00:00.000' THEN 0
		   ELSE DATEDIFF(dd, T00.ISOSAAte_DataAbertura, T00.ISOSAAte_DataFechamento)
	   END                                       as MT_TempoDaSolucaoDiasSAC

  FROM ISOSAATENDIMENTO T00
        left JOIN ISOWFTAREFA T0
	      ON T00.ISOEmp_Codigo        = T0.ISOEmp_Codigo
		 AND T00.ISOSAAte_Codigo      = T0.ISOWFPrc_Codigo
		 AND T0.ISOWFTrf_Automatica  <> 1
        left JOIN ISOWFPROCEDIMENTO T1
	      ON T0.ISOEmp_Codigo         = T1.ISOEmp_Codigo
		 AND T0.ISOWFPrc_Codigo       = T1.ISOWFPrc_Codigo
		 AND T1.ISOWFPrc_Modulo       = 'SAC'
        left JOIN ISOWFPRCPADRAO T2
	      ON T1.ISOEmp_Codigo         = T2.ISOEmp_Codigo
		 AND T1.ISOWFPrcPad_Codigo    = T2.ISOWFPrcPad_Codigo
        left JOIN ISOWFTRFPADRAO T3
          ON T0.ISOEmp_Codigo         = T2.ISOEmp_Codigo
		 AND T1.ISOWFPrcPad_Codigo    = T3.ISOWFPrcPad_Codigo
		 AND T0.ISOWFTrfPad_Codigo    = T3.ISOWFTrfPad_Codigo
        left JOIN ISOENTIDADE T4
	      ON T4.ISOEnt_Codigo         = T0.ISOWFTrf_RspCodigo
	    left JOIN ISOENTIDADE T5
          ON T5.ISOEnt_Codigo         = T0.ISOWFTrf_RspExe_RspCodigo
	    left JOIN ISOSAMOTIVO T7
	      ON T7.ISOEmp_Codigo         = T00.ISOEmp_Codigo
		 AND T7.ISOSAMot_Codigo       = T00.ISOSAMot_Codigo
	    left JOIN ISOSAMOTOCORRENCIA T8
	      ON T8.ISOEmp_Codigo         = T00.ISOEmp_Codigo
		 AND T8.ISOSAMot_Codigo       = T00.ISOSAMot_Codigo
		 AND T8.ISOSAMotOcr_Codigo    = T00.ISOSAMotOcr_Codigo
	    left JOIN ISOSAMOTOCRCAUSA T9
	      ON T9.ISOEmp_Codigo         = T00.ISOEmp_Codigo
		 AND T9.ISOSAMot_Codigo       = T00.ISOSAMot_Codigo
		 AND T9.ISOSAMotOcr_Codigo    = T00.ISOSAMotOcr_Codigo
		 AND T9.ISOSAMotOcrCau_Codigo = T00.ISOSAMotOcrCau_Codigo
	    left JOIN ISOENTIDADE T10
	      ON T10.ISOEnt_Codigo        = T00.ISOEntUnd_Codigo
	    left JOIN ISOSASITUACAO T11
	      ON T11.ISOEmp_Codigo        = T00.ISOEmp_Codigo
		 AND T11.ISOSASit_Codigo      = T00.ISOSASit_Codigo
        Left Join ISOENTIDADE T12
          On T12.ISOEnt_Codigo        = T00.ISOSAAte_EntCodigo;


-- ConexaoISO.BI_044_AtendimentoQualificado source

CREATE VIEW BI_044_AtendimentoQualificado as

select
		t0.ISOEmp_Codigo as empresa,
		t0.ISOSAAte_Codigo as atendimento,
		t0.ISOSAMot_Codigo as motivo_codigo,
		t1.ISOSAMot_Descricao as motivo,
		t0.ISOSAMotOcr_Codigo as ocorrencia_codigo,
		t2.ISOSAMotOcr_Descricao as ocorrencia,
		t0.ISOSAMotOcrCau_Codigo as causa_codigo,
		t3.ISOSAMotOcrCau_Descricao as causa,
		t0.ISOSASit_Codigo as situacao_codigo,
		t4.ISOSASit_Descricao as situacao,
		t4.ISOSASit_Situacao as situacao_tabulada,
		t0.ISOEntUnd_Codigo as unidade_codigo,
		t5.ISOEnt_Nome as unidade,
		t0.ISOSAAte_DataAbertura as data_abertura,
		t0.ISOSAAte_DataFechamento as data_fechamento,
		t0.ISOSAAte_Flag as atendimento_flag,
		t0.ISOSAAte_UsuCodigo as usuario_abertura_codigo,
		t6.ISOEnt_Nome as usuario_abertura,
		t0.ISOSAAte_UsuarioAlteracao as usuario_alteracao_codigo,
		t7.ISOEnt_Nome as usuario_alteracao,
		t0.ISOSAAte_EntCodigo as cliente_codigo,
		t8.ISOEnt_Nome as cliente,
		t0.ISOSAAte_NotaAtendimento as nota_atendimento,
		t0.ISOSAAte_ObsAtendimento as obs_atendimento,
		CASE
			WHEN T0.ISOSAATE_NOTAATENDIMENTO = 1 THEN 'Pï¿½SSIMO'
			WHEN T0.ISOSAATE_NOTAATENDIMENTO = 2 THEN 'RUIM'
			WHEN T0.ISOSAATE_NOTAATENDIMENTO = 3 THEN 'REGULAR'
			WHEN T0.ISOSAATE_NOTAATENDIMENTO = 4 THEN 'BOM'
			WHEN T0.ISOSAATE_NOTAATENDIMENTO = 5 THEN 'EXCELENTE'
			ELSE 'Nï¿½O CLASSIFICADO'
		END AS nota_atendimento_dsc,
		t0.ISOSAAte_NotaSolucao as nota_solucao,
		CASE
			WHEN T0.ISOSAATE_NOTASOLUCAO = 1 THEN 'Pï¿½SSIMO'
			WHEN T0.ISOSAATE_NOTASOLUCAO = 2 THEN 'RUIM'
			WHEN T0.ISOSAATE_NOTASOLUCAO = 3 THEN 'REGULAR'
			WHEN T0.ISOSAATE_NOTASOLUCAO = 4 THEN 'BOM'
			WHEN T0.ISOSAATE_NOTASOLUCAO = 5 THEN 'EXCELENTE'
			ELSE 'Nï¿½O CLASSIFICADO'
		END AS nota_solucao_dsc,
		t0.ISOSAAte_ObsSolucao as obs_solucao,
		t9.ISOEmpCan_Codigo     as canal_codigo,
		t10.ISOEmpCan_Descricao as canal_origem
	 from ISOSAATENDIMENTO t0
          left join ISOSAMOTIVO t1
		         ON t1.ISOEmp_Codigo = t0.ISOEmp_Codigo
				AND t1.ISOSAMot_Codigo = t0.ISOSAMot_Codigo
		  left join ISOSAMOTOCORRENCIA t2
		         ON t2.ISOEmp_Codigo = t0.ISOEmp_Codigo
				AND t2.ISOSAMot_Codigo = t0.ISOSAMot_Codigo
				AND t2.ISOSAMotOcr_Codigo = t0.ISOSAMotOcr_Codigo
		  left join ISOSAMOTOCRCAUSA t3
		         ON t3.ISOEmp_Codigo = t0.ISOEmp_Codigo
				AND t3.ISOSAMot_Codigo = t0.ISOSAMot_Codigo
				AND t3.ISOSAMotOcr_Codigo = t0.ISOSAMotOcr_Codigo
		  left join ISOSASITUACAO t4
		         ON t4.ISOEmp_Codigo = t0.ISOEmp_Codigo
				AND t4.ISOSASit_Codigo = t0.ISOSASit_Codigo
		  left join ISOEntidade t5
		         ON t5.ISOEnt_Codigo = t0.ISOEntUnd_Codigo
		  left join ISOEntidade t6
		         ON t6.ISOEnt_Codigo = t0.ISOSAAte_UsuCodigo
		  left join ISOEntidade t7
		         ON t7.ISOEnt_Codigo = t0.ISOSAAte_UsuarioAlteracao
		  left join ISOEntidade t8
		         ON t8.ISOEnt_Codigo = t0.ISOSAAte_EntCodigo
		  left join ISOSAAteDetalhe t9
		         ON t9.ISOEmp_Codigo = t0.ISOEmp_Codigo
				AND t9.ISOSAAte_Codigo = t0.ISOSAAte_Codigo
				AND t9.isosaatedet_codigo = 1
		  left join ISOEmpCanal t10
		         ON t10.ISOEmp_Codigo = t9.ISOEmp_Codigo
				AND t10.ISOEmpCan_Codigo = t9.ISOEmpCan_Codigo;


-- ConexaoISO.BI_045_ISOMetas source

CREATE VIEW BI_045_ISOMetas as
Select T01.ISOEmp_Codigo                     as DM_045_CodEmpresa,
       T01.ISOMta_Codigo                     as DM_045_CodMeta,
	   RTrim(T02.ISOMta_Descricao)           as DM_045_DscMeta,
	   T02.ISOMta_DataInicio                 as DM_045_DtIniMeta,
	   T02.ISOMta_DataFim                    as DM_045_DtFimMeta,
	   T04.ISOMtaIte_Codigo                  as DM_045_CodItemMeta,
	   RTrim(T04.ISOMtaIte_Descricao)        as DM_045_DscItemMeta,
	   T04.ISOMtaIte_DataInicio              as DM_045_DtIniItemMeta,
	   T04.ISOMtaIte_DataFim                 as DM_045_DtFimItemMeta,
	   Case Month(T04.ISOMtaIte_DataInicio)
	        When  1 Then 'JANEIRO'
	        When  2 Then 'FEVEREIRO'
	        When  3 Then 'MARï¿½O'
	        When  4 Then 'ABRIL'
	        When  5 Then 'MAIO'
	        When  6 Then 'JUNHO'
	        When  7 Then 'JULHO'
	        When  8 Then 'AGOSTO'
	        When  9 Then 'SETEMBRO'
	        When 10 Then 'OUTUBRO'
	        When 11 Then 'NOVEMBRO'
	        When 12 Then 'DEZEMBRO'
	   End                                   as DM_045_MesItemMeta,
--	   Choose(Month(T04.ISOMtaIte_DataInicio), 'JANEIRO', 'FEVEREIRO', 'MARï¿½O', 'ABRIL', 'MAIO', 'JUNHO', 'JULHO', 'AGOSTO', 'SETEMBRO', 'OUTUBRO', 'NOVEMBRO', 'DEZEMBRO')
--	                                         as DM_045_MesItemMeta2,
       Month(T04.ISOMtaIte_DataInicio)       as DM_045_MesIntItemMeta,
       Year(T04.ISOMtaIte_DataInicio)        as DM_045_AnoItemMeta,
	   DatePart(q, T04.ISOMtaIte_DataInicio) as DM_045_TrimestreItemMeta,
	   Case
	      When DatePart(m, T04.ISOMtaIte_DataInicio) <=  4 Then 1
	      When DatePart(m, T04.ISOMtaIte_DataInicio) <=  8 Then 2
	      When DatePart(m, T04.ISOMtaIte_DataInicio) <= 12 Then 3
	   End                                   as DM_045_QuadrimestreItemMeta,
	   Case
	      When DatePart(m, T04.ISOMtaIte_DataInicio) <=  6 Then 1
	      When DatePart(m, T04.ISOMtaIte_DataInicio) <= 12 Then 2
	   End                                   as DM_045_SemestreItemMeta,
	   T01.ISOAteIteMta_ValorMeta            as MT_045_VlrMeta,
	   T01.ISOAteIteMta_ValorRealizado       as MT_045_VlrRealizMeta,
	   T01.ISOEnt_Codigo                     as DM_045_CodParticipante,
	   RTrim(T03.ISOEnt_Nome)                as DM_045_NomParticipante,
	   T06.ISOEntClaP_Codigo                 as DM_045_CodClassifResp,
	   RTrim(T06.ISOEntClaP_Descricao)       as DM_045_DscClassifResp,
	   (Select Count(*)
          From ISOPVPedido TA1
		       Inner Join ISOPVPedItem TA2
                  On TA2.ISOEmp_Codigo   = TA1.ISOEmp_Codigo
                 And TA2.ISOPVPed_Codigo = TA1.ISOPVPed_Codigo
               Inner Join ISOProduto TA3
                  On TA3.ISOEmp_Codigo   = TA2.ISOEmp_Codigo
                 And TA3.ISOPrd_Codigo   = TA2.ISOPrd_Codigo
                 And TA3.ISOPrdCls_Codigo = T04.ISOMtaIte_Ordem
         Where TA1.ISOEmp_Codigo = T01.ISOEmp_Codigo
           And TA1.ISOPvPed_DtaPedido Between T04.ISOMtaIte_DataInicio And T04.ISOMtaIte_DataFim
           And TA1.ISOPvPed_CodVendedorCD = T01.ISOEnt_Codigo
	   )                                     as DM_045_QtdeContratos,
	   (Select Cast(Sum(TA1.ISOPvPed_ValorTotalPedido) as decimal(15,2))
          From ISOPVPedido TA1
		       Inner Join ISOPVPedItem TA2
                  On TA2.ISOEmp_Codigo   = TA1.ISOEmp_Codigo
                 And TA2.ISOPVPed_Codigo = TA1.ISOPVPed_Codigo
               Inner Join ISOProduto TA3
                  On TA3.ISOEmp_Codigo   = TA2.ISOEmp_Codigo
                 And TA3.ISOPrd_Codigo   = TA2.ISOPrd_Codigo
                 And TA3.ISOPrdCls_Codigo = T04.ISOMtaIte_Ordem
         Where TA1.ISOEmp_Codigo = T01.ISOEmp_Codigo
           And TA1.ISOPvPed_DtaPedido Between T04.ISOMtaIte_DataInicio And T04.ISOMtaIte_DataFim
           And TA1.ISOPvPed_CodVendedorCD = T01.ISOEnt_Codigo
	   )                                     as DM_045_VlrContratos,

	   1                                as MT_045_Qtde,
	   'v1.0'                                as DM_045_NrVersao
  From ISOATEITEMETAS T01
       Inner Join ISOMETAS T02
          On T02.ISOEmp_Codigo     = T01.ISOEmp_Codigo
         And T02.ISOMta_Codigo     = T01.ISOMta_Codigo
         And T02.ISOMta_Flag       = 'A'
       Inner Join ISOEntidade T03
          On T03.ISOEnt_Codigo     = T01.ISOEnt_Codigo
       Inner Join ISOMETASITEM T04
          On T04.ISOEmp_Codigo     = T01.ISOEmp_Codigo
         And T04.ISOMta_Codigo     = T01.ISOMta_Codigo
         And T04.ISOMtaIte_Codigo  = T01.ISOMtaIte_Codigo
         And T04.ISOMtaIte_Flag    = 'A'
       Inner Join ISOENTRESPONSAVEL T05
          On T05.ISOEmp_Codigo     = T01.ISOEmp_Codigo
         And T05.ISOEntRsp_Codigo  = T01.ISOEnt_Codigo
       Inner Join ISOENTCLASSIFICACAOPAPEL T06
          On T06.ISOEmp_Codigo     = T05.ISOEmp_Codigo
         And T06.ISOEntClaP_Codigo = T05.ISOEntRsp_ClaCodigo;


-- ConexaoISO.BI_046_WFTarefasSacs source

CREATE VIEW BI_046_WFTarefasSacs as
SELECT
       T2.ISOWFPrcPad_Codigo    AS DM_ProcedimentoCodigo,
       T2.ISOWFPrcPad_Descricao AS DM_Procedimento,
	   T3.ISOWFTrfPad_Codigo    AS DM_TarefaCodigo,
       T3.ISOWFTrfPad_Descricao AS DM_Tarefa,
	   T00.ISOSAAte_Codigo      AS DM_AtendimentoSAC,
	   T7.ISOSAMot_Descricao    AS DM_MotivoSAC,
	   T8.ISOSAMotOcr_Descricao AS DM_OcorrenciaSAC,
	   T9.ISOSAMotOcrCau_Descricao AS DM_CausaSAC,
	   T10.ISOEnt_Nome          AS DM_UnidadeSAC,
	   T11.ISOSASit_Descricao   AS DM_SituacaoSAC,
	   T00.ISOSAAte_DataAbertura as DM_DataAberturaSAC,
	   T00.ISOSAAte_DataFechamento as DM_DataFechamentoSAC,
	   T0.ISOWFTrf_DataRecebimento AS DM_DataRecebimento,
	   T0.ISOWFTrf_DataSolucao  AS DM_DataSolucao,
	   T0.ISOWFTrf_DataLimite   AS DM_DataLimite,
	   CASE
	       WHEN T0.ISOWFTrf_DataSolucao IS null OR T0.ISOWFTrf_DataSolucao = '1753-01-01 00:00:00.000' THEN 'EM ANDAMENTO'
		   WHEN T0.ISOWFTrf_DataSolucao < T0.ISOWFTrf_DataLimite THEN 'CONCLUï¿½DA NO PRAZO'
		   ELSE 'CONCLUï¿½DA COM ATRASO'
	   END AS DM_Status,
	   T4.ISOEnt_Nome AS DM_Responsavel,
	   T5.ISOEnt_Nome AS DM_Responsavel_Executor,
	   CASE
	       WHEN T0.ISOWFTrf_DataSolucao IS null OR T0.ISOWFTrf_DataSolucao = '1753-01-01 00:00:00.000' THEN 0
		   ELSE DATEDIFF(dd, T0.ISOWFTrf_DataRecebimento, T0.ISOWFTrf_DataSolucao)
	   END AS MT_TempoDaSolucaoDiasWF,
	   CASE
	       WHEN T00.ISOSAAte_DataFechamento IS null OR T00.ISOSAAte_DataFechamento = '1753-01-01 00:00:00.000' THEN 0
		   ELSE DATEDIFF(dd, T00.ISOSAAte_DataAbertura, T00.ISOSAAte_DataFechamento)
	   END AS MT_TempoDaSolucaoDiasSAC
	   ,

	   Case
	      When T00.ISOSAAte_DataFechamento			= '1753-01-01 00:00:00.000' Then NULL
	      When T00.ISOSAAte_DataFechamento			IS NULL                     Then NULL
	      When T00.ISOSAAte_DataAbertura			= '1753-01-01 00:00:00.000' Then NULL
	      When T00.ISOSAAte_DataAbertura			IS NULL                     Then NULL
	      Else convert(decimal,right(datediff(SECOND,  T00.ISOSAAte_DataAbertura, T00.ISOSAAte_DataFechamento),10))/86400

	   End																		as MT_TempoDaSolucaoDiasSACDecimal,
       Case
	      When T00.ISOSAAte_DataFechamento			= '1753-01-01 00:00:00.000' Then NULL
	      When T00.ISOSAAte_DataFechamento			IS NULL                     Then NULL
	      When T00.ISOSAAte_DataAbertura			= '1753-01-01 00:00:00.000' Then NULL
	      When T00.ISOSAAte_DataAbertura			IS NULL                     Then NULL
	      Else convert(decimal,right(datediff(SECOND,  T00.ISOSAAte_DataAbertura, T00.ISOSAAte_DataFechamento),10))/3600
	   End																		as MT_TempoDaSolucaoHorasSACDecimal,



	   Case
	      When T0.ISOWFTrf_DataRecebimento			= '1753-01-01 00:00:00.000'	Then null
	      When T0.ISOWFTrf_DataRecebimento			IS NULL						Then null
	      When T0.ISOWFTrf_DataSolucao				= '1753-01-01 00:00:00.000'	Then NULL
	      When T0.ISOWFTrf_DataSolucao				IS NULL						Then NULL
	      Else convert(decimal,right(datediff(SECOND,  T0.ISOWFTrf_DataRecebimento, T0.ISOWFTrf_DataSolucao),10))/86400

	   End																		as MT_TempoDaSolucaoDiasWFDecimal,
       Case
	      When T0.ISOWFTrf_DataRecebimento			= '1753-01-01 00:00:00.000'	Then null
	      When T0.ISOWFTrf_DataRecebimento			IS NULL						Then null
	      When T0.ISOWFTrf_DataSolucao				= '1753-01-01 00:00:00.000'	Then NULL
	      When T0.ISOWFTrf_DataSolucao				IS NULL						Then NULL
	      Else convert(decimal,right(datediff(SECOND,  T0.ISOWFTrf_DataRecebimento, T0.ISOWFTrf_DataSolucao),10))/3600
	   End																		as MT_TempoDaSolucaoHorasWFDecimal
         FROM ISOSAATENDIMENTO T00
    left JOIN ISOWFTAREFA T0
	       ON T00.ISOEmp_Codigo = T0.ISOEmp_Codigo
		  AND T00.ISOSAAte_Codigo = T0.ISOWFTrf_CodModulo
		  AND T0.ISOWFTrf_Automatica <> 1
    left JOIN ISOWFPROCEDIMENTO T1
	       ON T0.ISOEmp_Codigo = T1.ISOEmp_Codigo
		  AND T0.ISOWFPrc_Codigo = T1.ISOWFPrc_Codigo
		  AND T1.ISOWFPrc_Modulo = 'SAC'
    left JOIN ISOWFPRCPADRAO T2
	       ON T1.ISOEmp_Codigo = T2.ISOEmp_Codigo
		  AND T1.ISOWFPrcPad_Codigo = T2.ISOWFPrcPad_Codigo
    left JOIN ISOWFTRFPADRAO T3
           ON T0.ISOEmp_Codigo = T2.ISOEmp_Codigo
		  AND T1.ISOWFPrcPad_Codigo = T3.ISOWFPrcPad_Codigo
		  AND T0.ISOWFTrfPad_Codigo = T3.ISOWFTrfPad_Codigo
    left JOIN ISOENTIDADE T4
	       ON T4.ISOEnt_Codigo = T0.ISOWFTrf_RspCodigo
	left JOIN ISOENTIDADE T5
	       ON T5.ISOEnt_Codigo = T0.ISOWFTrf_RspExe_RspCodigo
	left JOIN ISOSAMOTIVO T7
	       ON T7.ISOEmp_Codigo = T00.ISOEmp_Codigo
		  AND T7.ISOSAMot_Codigo = T00.ISOSAMot_Codigo
	left JOIN ISOSAMOTOCORRENCIA T8
	       ON T8.ISOEmp_Codigo = T00.ISOEmp_Codigo
		  AND T8.ISOSAMot_Codigo = T00.ISOSAMot_Codigo
		  AND T8.ISOSAMotOcr_Codigo = T00.ISOSAMotOcr_Codigo
	left JOIN ISOSAMOTOCRCAUSA T9
	       ON T9.ISOEmp_Codigo = T00.ISOEmp_Codigo
		  AND T9.ISOSAMot_Codigo = T00.ISOSAMot_Codigo
		  AND T9.ISOSAMotOcr_Codigo = T00.ISOSAMotOcr_Codigo
		  AND T9.ISOSAMotOcrCau_Codigo = T00.ISOSAMotOcrCau_Codigo
	left JOIN ISOENTIDADE T10
	       ON T10.ISOEnt_Codigo = T00.ISOEntUnd_Codigo
	left JOIN ISOSASITUACAO T11
	       ON T11.ISOEmp_Codigo = T00.ISOEmp_Codigo
		  AND T11.ISOSASit_Codigo = T00.ISOSASit_Codigo;


-- ConexaoISO.BI_049_SacQtdeMensal source

CREATE VIEW BI_049_SacQtdeMensal as

Select Ano,
       Mes,
       Motivo,
       Ocorrencia,
       Causa,
       Total
  From (Select DatePart(year, t01.ISOSAAte_DataAbertura) as Ano,
               DatePart(MONTH,t01.ISOSAAte_DataAbertura) as Mes,
			t01.ISOSAMot_Codigo                       as Motivo,
               t01.ISOSAMotOcr_Codigo                    as Ocorrencia,
               t01.ISOSAMotOcrcau_Codigo                 as Causa,
               COUNT(*)                              as Total
          From ISOSAATENDIMENTO T01 (nolock)
		       Inner Join ISOSAMOTIVO T02 (Nolock)
                  On T02.ISOEmp_Codigo   = T01.ISOEmp_Codigo
                 And T02.ISOSAMot_Codigo = T01.ISOSAMot_Codigo
--        Where  DatePart(YEAR, ISOSAAte_DataAbertura) = 2016 --and  MONTH(ISOSAAte_DataAbertura) = 10
          Group by Datepart(year, ISOSAAte_DataAbertura), DatePart(MONTH, ISOSAAte_DataAbertura), T01.ISOSAMot_Codigo, ISOSAMotOcr_Codigo,ISOSAMotOcrcau_Codigo) Q1
       Inner join (Select Ano1a,
                          Mes1a,
                          MAX(total1a) as Total1a
                     From (Select DatePart(year, t03.ISOSAAte_DataAbertura)  as Ano1a,
                                  DatePart(MONTH, t03.ISOSAAte_DataAbertura) as Mes1a,
                                  t03.ISOSAMot_Codigo                        as Motivo1a,
                                  t03.ISOSAMotOcr_Codigo                     as Ocorrencia1a,
                                  t03.ISOSAMotOcrcau_Codigo                  as Causa1a,
                                  COUNT(*)                               as Total1a
                             From ISOSAATENDIMENTO T03 (nolock)
--                            where  year(ISOSAAte_DataAbertura) = 2016 --and  MONTH(ISOSAAte_DataAbertura) = 10
                             Group By DatePart(year,ISOSAAte_DataAbertura), DatePart(MONTH,ISOSAAte_DataAbertura), t03.ISOSAMot_Codigo, ISOSAMotOcr_Codigo,ISOSAMotOcrcau_Codigo) Q1a

                    Group by Ano1a, Mes1a) Q2

          On Q2.Ano1a   = Q1.Ano
         And Q2.Mes1a   = Q1.Mes
		 And Q2.Total1a = Q1.Total;


-- ConexaoISO.BI_050_PesqAtendimento2 source

CREATE VIEW BI_050_PesqAtendimento2 as
/*
Autor      : Edison Washimi
Data       : 17/01/2020
*/

Select T01.ISOEmp_Codigo             as DM_050_CodEmpresa,
       Case
	       When T11.ISOEntOrg_Codigo is Null Then 'P'
		   Else 'O'
       End                           as DM_050_TipoEntidade,
	   Case
	       When T11.ISOEntOrg_Codigo is Null Then T12.ISOEntPes_CPF
		   Else T11.ISOEntOrg_CNPJ
       End                           as DM_050_CPFCNPJ,
	   Case
	       When T11.ISOEntOrg_Codigo is null then T12.ISOEntPes_RG
		   Else Null
       End                           as DM_050_RG,
	   T00.ISOEnt_Nome               as DM_050_Nome,
	   Case
	       When T11.ISOEntOrg_Codigo is Null Then Null
		   Else T11.ISOEntOrg_NomeFantasia
       End                           as DM_050_NomeFantasia,
	   T01.ISOEnt_Codigo             as DM_050_CodEntidade,
	   T02.ISOEntTel_DDD             as DM_050_NrDDD,
	   T02.ISOEntTel_Telefone        as DM_050_NrTelefone,
	   T04.ISOLoc_Descricao          as DM_050_DscLocalidade,
	   T05.ISOEst_Sigla              as DM_050_UF,
	   T06.ISOPais_Descricao         as DM_050_DscPais,
	   Case
	       When T11.ISOEntOrg_Codigo Is Null Then T12.ISOEntPes_Flag
		   Else T11.ISOEntOrg_Flag
	   End                           as DM_050_Ativo,
	   T07.DM_023A_TipoPapel         as DM_050_TipoPapel,
	   T07.DM_023A_CodSituacao       as DM_050_CodSituacao,
	   T07.DM_023A_DscSituacao       as DM_050_DscSituacao,
	   T07.DM_023A_PapelAtivo        as DM_050_PapelAtivo,
	   T07.DM_023A_CodMatriz         as DM_050_CodMatriz,
	   T07.DM_023A_CodExt            as DM_050_CodExt,
	   T07.DM_023A_CodClsPapel       as DM_050_CodClsPapel,
	   T07.DM_023A_DscClsPapel       as DM_050_DscClsPapel,
	   T07.DM_023A_CodClsEspPapel    as DM_050_CodClsEspPapel,
	   T07.DM_023A_DscClsEspPapel    as DM_050_DscClsEspPapel,
	   T09.ISOEmpOri_Codigo          as DM_050_CodDaOrigem,
	   T09.ISOEmpEnt_Ori_Codigo      as DM_050_CodNaOrigem,
	   T10.ISOEntEct_econtact        as DM_050_EContact,
	   T10.ISOEntEctTip_Principal    as DM_050_EctPrincipal

  From ISOEntidade T00
       Inner Join ISOEMP_ENTIDADE T01
	      On T00.ISOEnt_Codigo       = T01.ISOEnt_Codigo
        Left Join ISOEntTelefone T02
	      On T02.ISOEnt_Codigo       = T01.ISOEnt_Codigo
        Left Join ISOEntEndereco T03
	      On T03.ISOEnt_Codigo       = T01.ISOEnt_Codigo
	    Left Join ISOLocalidade T04
	      On T04.ISOLoc_Codigo       = T03.ISOLoc_Codigo
        Left Join ISOEstado T05
		  On T05.ISOEst_Codigo       = T04.ISOEst_Codigo
        Left Join ISOPais T06
		  On T06.ISOPais_Codigo      = T04.ISOPais_Codigo
        Left Join BI_023A_Situacao T07
		  On T07.DM_023A_CodEntidade = T01.ISOEnt_Codigo
		Left Join ISOEmpEnt_Origem T09
		  On T09.ISOEmp_Codigo       = T01.ISOEmp_Codigo
		 And T09.ISOEmpEnt_EntCodigo = T01.ISOEnt_Codigo
        Left Join ISOEntEContact T10
		  On T10.ISOEnt_Codigo       = T01.ISOEnt_Codigo
		Left Join ISOEntOrganizacao T11
		  On T11.ISOEntOrg_Codigo    = T01.ISOEnt_Codigo
	    Left Join ISOEntPessoa T12
		  On T12.ISOEntPes_Codigo    = T01.ISOEnt_Codigo;


-- ConexaoISO.BI_052_CadastroCampanha source

CREATE VIEW BI_052_CadastroCampanha as
Select T02.ISOEmp_Codigo                         as DM_052_CodEmpresa,
       T01.ISOEntOrg_Codigo                      as DM_052_CodCliente,
       RTrim(T01.ISOEntOrg_RazaoSocial)          as DM_052_RazSocialCliente,
       T01.ISOEntOrg_CNPJ                        as DM_052_CNPJCliente,
       Case
	        When T01.ISOEntOrg_DataCadastro <> '1753-01-01' Then T01.ISOEntOrg_DataCadastro
			Else T02.ISOEntCli_DataCadastro
       End                                       as DM_052_DtCadCliente,
--       T02.ISOEntCli_DataCadastro,
       T02.ISOEntCli_UsuarioCadastro             as DM_052_CodUsuCadCliente,
       RTrim(T07.ISOEnt_Nome)                    as DM_052_NomeUsuCadCliente,
       T06.ISOMkAteCmp_Codigo                    as DM_052_CodCampanha,
       RTrim(T06.ISOMkAteCmp_Descricao)          as DM_052_DscCampanha,
       RTrim(T04.ISOEntOrganizacaoAttName)       as DM_052_DCNrVidas,
	   RTrim(T03.ISOEntOrganizacaoAttValue)      as DM_052_RespDCNrVidas,

	   1                                         as MT_052_Qtde,
	   'V.1'                                     as DM_052_Versao

  From ISOENTORGANIZACAO T01
       Inner Join ISOENTCLIENTE T02
	      On T02.ISOEntCli_Codigo           = T01.ISOEntOrg_Codigo
       Inner Join ISOENTORGANIZACAOATTVALUES T03
          On T03.ISOEntOrg_Codigo           = T01.ISOEntOrg_Codigo
         And T03.ISOEntOrganizacaoAttId     = 1
         And T03.ISOEntOrganizacaoAttValue <> ''
       Inner Join ISOENTORGANIZACAOATT T04
          On T04.ISOEntOrganizacaoAttId     = T03.ISOEntOrganizacaoAttId
        Left Join ISOMKATECMPCONTATO T05
          On T05.ISOEmp_Codigo              = T02.ISOEmp_Codigo
         And T05.ISOMkAteCmpCnt_EntCodigo   = T02.ISOEntCli_Codigo
        Left Join ISOMKATECAMPANHA T06
          On T06.ISOEmp_Codigo              = T05.ISOEmp_Codigo
         And T06.ISOMkAteCmp_Codigo         = T05.ISOMkAteCmp_Codigo
       Inner Join ISOENTIDADE T07
          On T07.ISOEnt_Codigo              = T02.ISOEntCli_UsuarioCadastro
Where T05.ISOMkAteCmpCnt_Encerrado = 0;


-- ConexaoISO.BI_053_ISOSAAteWFDC source

CREATE VIEW BI_053_ISOSAAteWFDC as
SELECT T01.ISOEmp_Codigo                         as DM_053_EmpresaCodigo,
       T01.ISOSAAte_Codigo                       as DM_053_CodigoSAC,
       T01.ISOSAAte_DataAbertura                 as DM_053_DataAbertura,
       T01.ISOSAAte_EntCodigo                    as DM_053_ClienteCodigo,
	   T01.ISOSASit_Codigo                       as DM_053_CodigodaSituacao,
	   RTrim(T18.ISOSASit_Descricao)             as DM_053_DescricaoSituacao,
       RTrim(T04.ISOEnt_Nome)                    as DM_053_ClienteNome,
	   T19.ISOEntCli_CodigoExt                   as DM_053_ClienteCodigoExterno,
	   T27.ISOEntClaP_Codigo                     as DM_053_CodClaPapelCliente,
	   RTrim(T27.ISOEntClaP_Descricao)           as DM_053_DscClaPapelCliente,
	   T28.ISOEntClaPEsp_Codigo                  as DM_053_CodEspClaPapelCliente,
	   RTRIM(T28.ISOEntClaPEsp_Codigo)           as DM_053_DscEspCLaPapelCliente,
       T07.ISOLoc_Codigo                         as DM_053_LocalidadeCodigo,
       RTrim(T07.ISOLoc_Descricao)               as DM_053_LocalidadeDescricao,
       T08.ISOEst_Sigla                          as DM_053_LocalidadeUF,
       T01.ISOSAMot_Codigo                       as DM_053_MotivoCodigo,
       RTrim(T11.ISOSAMot_Descricao)             as DM_053_MotivoDescricao,
       T01.ISOSAMotOcr_Codigo                    as DM_053_OcorrenciaCodigo,
       RTrim(T12.ISOSAMotOcr_Descricao)          as DM_053_OcorrenciaDescricao,
       T01.ISOSAMotOcrCau_Codigo                 as DM_053_CausaCodigo,
       RTrim(T13.ISOSAMotOcrCau_Descricao)       as DM_053_CausaDescricao,
       T01.ISOEntUnd_Codigo                      as DM_053_UnidadeCodigo,
       RTrim(T14.ISOEnt_Nome)                    as DM_053_UnidadeDescricao,
	   T02.ISOSAAteDet_Codigo                    as DM_053_CodDetalhe,
       RTrim(T02.ISOSAAteDet_Descricao)          as DM_053_DetalheDescricao,
       RTrim(T02.ISOSAAteDet_Resposta)           as DM_053_DetalheResposta,
       T03.ISOInf_Codigo                         as DM_053_InformacaoCodigo,
       RTrim(T05.ISOInf_Descricao)               as DM_053_InformacaoDescricao,
       RTrim(T03.ISOSAAteDetInf_Observacao)      as DM_053_InformacaoObservacao,
       T03.ISOSAAteDetInf_DtaValidade            as DM_053_InformacaoValidade,
	   T03.ISOSAAteDetInf_NroLote                as DM_053_InformacaoNroLote,
       T03.ISOSAAteDetInf_NroSerie               as DM_053_InformacaoNroSerie,
	   T03.ISOSAAteDetInf_DtaFabricacao          as DM_053_InformacaoDtaFabr,
       T02.ISOSAAte_EntContato                   as DM_053_ContatoDetalheCodigo,
       RTrim(T09.ISOEnt_Nome)                    as DM_053_ContatoDetalheEntCodigo,
       T01.ISOSAAte_UsuCodigo                    as DM_053_AtendenteAberturaCodigo,
       RTrim(T10.ISOEnt_Nome)                    as DM_053_AtendenteAberturaNome,
       T15.ISOEntRsp_Codigo                      as DM_053_ResponsavelCodigo,
	   T15.ISOEntRsp_Cli_Flag                    as DM_053_ResponsavelFlag,
       RTrim(T16.ISOEnt_Nome)                    as DM_053_ResponsavelNome,
       T15.ISOEntNivRsp_Codigo                   as DM_053_ResponsavelNivRspCodigo,
       RTrim(T17.ISOEntNivRsp_Descricao)         as DM_053_ResponsavelNivRspDescric,
       RTrim(T20.ISOEmpCan_Descricao)            as DM_053_CanalAtendimento,
       RTrim(T26.ISOPrd_DescExtra)               as DM_053_Setor_DescExtra,
	   Case
	        When T21.ISOEntPes_Codigo Is Null Then RTrim(T24.ISOEntSeg_Descricao)
			Else RTrim(T22.ISOEntSeg_Descricao)
	   End                                       as DM_053_SegmentoDescricao,
	   T30.ISOWFPrc_Codigo                       as DM_053_CodPrcWF,
       RTrim(T30.ISOWFPrc_Descricao)             as DM_053_DscPrcWF,
	   T29.ISOWFTrf_Codigo                       as DM_053_CodTrfWF,
       RTrim(T29.ISOWFTrf_Descricao)             as DM_053_DscTrfWF,
       T29.ISOWFTrfPadSit_Codigo                 as DM_053_CodSituacaoTrf,
	   T29.ISOWFTrf_Automatica                   as DM_053_TrfAutomatica,
       RTrim(T31.ISOWFTrfPadSit_Descricao)       as DM_053_DscSituacaoTrf,
       T34.ISOSAAtendimentoFormDefId             as DM_053_CodFormularioDC,
       RTrim(T35.ISOSAAtendimentoFormDefName)    as DM_053_DscFormularioDC,
	   T32.ISOSAAtendimentoAttId                 as DM_053_CodPergDC,
       Case
           When T34.ISOSAAtendimentoAttType = 6 Then ''
           When T34.ISOSAAtendimentoAttType = 5 Then RTrim(T32.ISOSAAtendimentoAttValueLong)
           When T34.ISOSAAtendimentoAttType = 4 Then RTrim(T33.ISOSAAtendimentoAttOptValue)
           Else T32.ISOSAAtendimentoAttValue
       End                                       as DM_053_RespPergDC,

       1                                         as MT_053_Qtde,
       'V.002'                                   as DM_053_VersaoView
  From ISOSAATENDIMENTO T01
       Inner Join ISOSAATEDETALHE T02
          On T02.ISOEmp_Codigo             = T01.ISOEmp_Codigo
         And T02.ISOSAAte_Codigo           = T01.ISOSAAte_Codigo
        Left Join ISOSAATEDETINFORMACAO T03
          On T03.ISOEmp_Codigo             = T02.ISOEmp_Codigo
         And T03.ISOSAAte_Codigo           = T01.ISOSAAte_Codigo
         And T03.ISOSAAteDet_Codigo        = T02.ISOSAAteDet_Codigo
        Left Join ISOENTIDADE T04
          On T04.ISOEnt_Codigo             = T01.ISOSAAte_EntCodigo
        Left Join ISOINFORMACAO T05
          On T05.ISOEmp_Codigo             = T03.ISOEmp_Codigo
         And T05.ISOInf_Codigo             = T03.ISOInf_Codigo
        Left Join ISOENTENDERECO T06
          On T06.ISOEnt_Codigo             = T01.ISOSAAte_EntCodigo
         And T06.ISOEntEnd_Principal       = 'S'
        Left JOIN ISOLOCALIDADE T07
          On T07.ISOLoc_Codigo             = T06.ISOLoc_Codigo
        Left Join ISOESTADO T08
          On T08.ISOEst_Codigo             = T07.ISOEst_Codigo
        Left Join ISOENTIDADE T09
          On T09.ISOEnt_Codigo             = T02.ISOSAAte_EntContato
        Left Join ISOENTIDADE T10
          On T10.ISOEnt_Codigo             = T01.ISOSAAte_UsuCodigo
        Left Join ISOSAMotivo T11
          On T11.ISOEmp_Codigo             = T01.ISOEmp_Codigo
         And T11.ISOSAMot_Codigo           = T01.ISOSAMot_Codigo
        Left Join ISOSAMotOcorrencia T12
          On T12.ISOEmp_Codigo             = T01.ISOEmp_Codigo
         And T12.ISOSAMot_Codigo           = T01.ISOSAMot_Codigo
         And T12.ISOSAMotOcr_Codigo        = T01.ISOSAMotOcr_Codigo
        Left Join ISOSAMotOcrCausa T13
          On T13.ISOEmp_Codigo             = T01.ISOEmp_Codigo
         And T13.ISOSAMot_Codigo           = T01.ISOSAMot_Codigo
         And T13.ISOSAMotOcr_Codigo        = T01.ISOSAMotOcr_Codigo
         And T13.ISOSAMotOcrCau_Codigo     = T01.ISOSAMotOcrCau_Codigo
        Left Join ISOENTIDADE T14
          On T14.ISOEnt_Codigo             = T01.ISOEntUnd_Codigo
        Left Join ISOEntRsp_Clientes T15
          On T15.ISOEntCli_Codigo          = T01.ISOSAAte_EntCodigo
		 And T15.ISOEmp_Codigo             = T01.ISOEmp_Codigo
        Left Join ISOENTIDADE T16
          On T16.ISOEnt_Codigo             = T15.ISOEntRsp_Codigo
        Left Join ISOEntNivResponsabilidade T17
          On T17.ISOEmp_Codigo             = T15.ISOEmp_Codigo
         And T17.ISOEntNivRsp_Codigo       = T15.ISOEntNivRsp_Codigo
        Left Join ISOSASituacao T18
          On T18.ISOEmp_Codigo             = T01.ISOEmp_Codigo
         And T18.ISOSASit_Codigo           = T01.ISOSASit_Codigo
	    Left Join ISOENTCLIENTE T19
          On T19.ISOEmp_Codigo             = T01.ISOEmp_Codigo
         And T19.ISOEntCli_Codigo          = T01.ISOSAAte_EntCodigo
		Left Join ISOEMPCANAL T20
          On T20.ISOEmp_Codigo             = T01.ISOEmp_Codigo
         And T20.ISOEmpCan_Codigo          = T02.ISOEmpCan_Codigo
        Left Join ISOEntPessoa T21
          On T21.ISOEntPes_Codigo          = T01.ISOSAAte_EntCodigo
        Left Join ISOEntSegmento T22
          On T22.ISOEntSeg_Codigo          = T21.ISOEntSeg_Codigo
        Left Join ISOEntOrganizacao T23
          On T23.ISOEntOrg_codigo          = T01.ISOSAAte_EntCodigo
        Left Join ISOEntSegmento T24
          On T24.ISOEntSeg_Codigo          = T23.ISOEntSeg_Codigo
		Left Join ISOINF_PRODUTO T25
		  On T25.ISOEmp_Codigo		       = T01.ISOEmp_Codigo
		 And T25.ISOInf_Codigo		       = T03.ISOInf_Codigo
		left Join ISOProduto T26
		  On T26.ISOEmp_Codigo		       = T25.ISOEmp_Codigo
		 And T26.ISOPrd_Codigo		       = T25.ISOPrd_codigo
        Left Join ISOENTCLASSIFICACAOPAPEL T27
          On T27.ISOEmp_Codigo             = T19.ISOEmp_Codigo
         And T27.ISOEntClaP_Codigo         = T19.ISOEntClaP_Codigo
		 And T27.ISOEntClaP_Papel          = 'Cliente'
        Left Join ISOENTCLAPESPECIALIDADE T28
          On T28.ISOEmp_Codigo             = T19.ISOEmp_Codigo
         And T28.ISOEntClaP_Codigo         = T19.ISOEntClaP_Codigo
         And T28.ISOEntClaPEsp_Codigo      = T19.ISOEntClaPEsp_Codigo
        Left Join ISOWFTAREFA T29
          On T29.ISOEmp_Codigo             = T01.ISOEmp_Codigo
         And T29.ISOWFTrf_CodModulo        = T01.ISOSAAte_Codigo
        Left Join ISOWFPROCEDIMENTO T30
          On T30.ISOEmp_Codigo             = T29.ISOEmp_Codigo
         And T30.ISOWFPrc_Codigo           = T29.ISOWFPrc_Codigo
         And T30.ISOWFPrc_Modulo           = 'SAC'
        Left Join ISOWFTRFPADSITUACAO T31
          On T31.ISOEmp_Codigo             = T30.ISOEmp_Codigo
         And T31.ISOWFPrcPad_Codigo        = T30.ISOWFPrcPad_Codigo
         And T31.ISOWFTrfPad_Codigo        = T29.ISOWFTrfPad_Codigo
         And T31.ISOWFTrfPadSit_Codigo     = T29.ISOWFTrfPadSit_Codigo
        Left Join ISOSAATENDIMENTOATTVALUES T32
          On T32.ISOEmp_Codigo             = T01.ISOEmp_Codigo
         And T32.ISOSAAte_Codigo           = T01.ISOSAAte_Codigo
        Left Join ISOSAATENDIMENTOATT1 T33
          On T33.ISOSAAtendimentoAttId     = T32.ISOSAAtendimentoAttId
         And T33.ISOSAAtendimentoAttOptId  = T32.ISOSAAtendimentoAttOptId
        Left Join ISOSAATENDIMENTOATT T34
          On T34.ISOSAAtendimentoAttId     = T32.ISOSAAtendimentoAttId
        Left Join ISOSAATENDIMENTOFORMDEF T35
          On T35.ISOSAAtendimentoFormDefId = T34.ISOSAAtendimentoFormDefId;


-- ConexaoISO.BI_055_HistoricoCamp source

CREATE VIEW BI_055_HistoricoCamp As
Select T01.ISOEmp_Codigo                         as DM_055_CodEmpresa,
       T01.ISOMkAteCmpCnt_EntCodigo              as DM_055_CodCliente,
       RTrim(T02.ISOEnt_Nome)                    as DM_055_NomeCliente,
       T01.ISOMkAteCmp_Codigo                    as DM_055_CodCampanha,
       RTrim(T03.ISOMkAteCmp_Descricao)          as DM_055_DscCampanha,
       Case
            When T01.ISOMkAteCmpCnt_Encerrado = 1 Then 'Contato encerrado na campanha'
			Else 'Contato ativo na campanha'
       End                                       as DM_055_SitCntCampanha,
	   T05.ISOMkFin_Codigo                       as DM_055_CodFinalidade,
       RTrim(T05.ISOMkFin_Descricao)             as DM_055_DscFinalidade,
       RTrim(T04.ISOMkAteCmpCntDet_Descritivo)   as DM_055_DscDetalhe,
       Case
            When Not T04.ISOMkFinRsl_Codigo is null Then RTrim(T07.ISOMkFinRsl_Descricao)
            Else RTrim(T08.ISOMkFinCla_Descricao)
       End                                       as DM_055_RslClaDescricao,
       T04.ISOMkAteCmpCntDet_DataAlteraca        as DM_055_DataUltAlteracao,
       T04.ISOMkAteCmpCntDet_UsuarioAlter        as DM_055_CodUsuUltAlteracao,
       Rtrim(T06.ISOEnt_Nome)                    as DM_055_NomeUsuUltAlteracao
  From ISOMKATECMPCONTATO T01
       Inner Join ISOENTIDADE T02
	      On T02.ISOEnt_Codigo            = T01.ISOMkAteCmpCnt_EntCodigo
       Inner Join ISOMKATECAMPANHA T03
          On T03.ISOEmp_Codigo            = T01.ISOEmp_Codigo
         And T03.ISOMkAteCmp_Codigo       = T01.ISOMkAteCmp_Codigo
       Inner Join ISOMKATECMPCNTDETALHE T04
          On T04.ISOEmp_Codigo            = T01.ISOEmp_Codigo
         And T04.ISOMkAteCmp_Codigo       = T01.ISOMkAteCmp_Codigo
         And T04.ISOMkAteCmpCnt_Sequencia = T01.ISOMkAteCmpCnt_Sequencia
       Inner Join ISOMKFINALIDADE T05
          On T05.ISOEmp_Codigo            = T03.ISOEmp_Codigo
         And T05.ISOMkFin_Codigo          = T03.ISOMkFin_Codigo
       Inner Join ISOENTIDADE T06
          On T06.ISOEnt_Codigo            = T04.ISOMkAteCmpCntDet_UsuarioAlter
        Left Join ISOMKFINRESULTADO T07
          On T07.ISOEmp_Codigo            = T05.ISOEmp_Codigo
         And T07.ISOMkFin_Codigo          = T03.ISOMkFin_Codigo
         And T07.ISOMkFinRsl_Codigo       = T04.ISOMkFinRsl_Codigo
        Left Join ISOMKFINCLASSIFICACAO T08
          On T08.ISOEmp_Codigo            = T05.ISOEmp_Codigo
         And T08.ISOMkFin_Codigo          = T03.ISOMkFin_Codigo
         And T08.ISOMkFinCla_Codigo       = T04.ISOMkFinCla_Codigo;


-- ConexaoISO.BI_070_ListaObjParam source

CREATE VIEW BI_070_ListaObjParam as
Select T01.Obj_Codigo                    as BI_070_CodObjeto,
       T01.Obj_Descricao                 as BI_070_DscObjeto,
	   T01.Obj_Tipo                      as BI_070_TipoObjeto,
	   T02.Param_Codigo                  as BI_070_CodParam,
	   T03.ISOEmpPrm_Descricao           as BI_070_DscParam,
	   T04.ISOEntGrp_Codigo              as BI_070_CodGrupo,
	   T06.ISOEntGrp_Descricao           as BI_070_DscGrupo,
	   T04.ISOEntUsu_Codigo              as BI_070_CodUsuario,
	   T07.ISOEnt_Nome                   as BI_070_NomeUsuario,
	   T05.ISOEmpPrm_GrpUsuDet_Descricao as BI_070_DscDetalhe,
	   T05.ISOEmpPrm_GrpUsuDet_Valor     as BI_070_ValorDetalhe,
	   T05.ISOEmpPrm_GrpUsuDet_Ordem     as BI_070_OrdDetalhe
  From ISOOBJETOSISOCRM T01
        Left Join ISOOBJISOCRMPARAMETROS T02
          On T02.Obj_Codigo = T01.Obj_Codigo
        Left Join ISOEMPPARAMETROS T03
          On T03.ISOEmpPrm_Codigo = T02.Obj_Codigo
        Left Join ISOEMPPRM_GRPUSUARIO T04
          On T04.ISOEmp_Codigo    = T03.ISOEmp_Codigo
         And T04.ISOEmpPrm_Codigo = T03.ISOEmpPrm_Codigo
        Left Join ISOEMPPRM_GRPUSUDETALHE T05
          On T05.ISOEmp_Codigo    = T04.ISOEmp_Codigo
         And T05.ISOEmpPrm_Codigo = T04.ISOEmpPrm_Codigo
         And T05.ISOEmpPrm_GrpUsu_Codigo = T04.ISOEmpPrm_GrpUsu_Codigo
        Left Join ISOENTGRUPO T06
          On T06.ISOEmp_Codigo           = T04.ISOEmp_Codigo
         And T06.ISOEntGrp_Codigo        = T04.ISOEntGrp_Codigo
        Left Join ISOENTIDADE T07
          On T07.ISOEnt_Codigo           = T04.ISOEntUsu_Codigo;


-- ConexaoISO.BI_072_MonitorMotores source

CREATE VIEW BI_072_MonitorMotores as
Select T01.ISOEmp_Codigo                         as BI_072_CodEmpresa,
       T01.ISOEntUsu_Codigo                      as BI_072_CodMotor,
       T02.ISOEnt_Nome                           as BI_072_NomeMotor,
       DATEDIFF(minute,T01.ISOSes_DataAcesso, GETDATE())
                                                 as BI_072_TempoInatividade,
--       Case
--            When DATEDIFF(minute,T01.ISOSes_DataAcesso, GETDATE()) > 2 Then 'Tempo de inatividade ALTA'
--            Else ''
--       End                                       as BI_072_ObsAlerta,
       DATEADD(MINUTE, T01.ISOSes_TimeOut, ISOSes_DataAcesso)
                                                 as BI_072_UltAtividade,
       Case
            When DATEADD(MINUTE, T01.ISOSes_TimeOut, ISOSes_DataAcesso) > GETDATE() Then 'Sessão OK'
            Else 'Sessão expirada'
       End                                       as BI_072_StatusSessao
  From ISOSESSAO T01
       Inner Join ISOENTIDADE T02
          On T02.ISOEnt_Codigo = T01.ISOEntUsu_Codigo;


-- ConexaoISO.BI_073_FluxoWorkFlow source

CREATE VIEW BI_073_FluxoWorkFlow as
Select T01.ISOEmp_Codigo                         BI_073_CodEmpresa,
       T02.ISOWFPrc_Modulo                       BI_073_Modulo,
       T01.ISOWFTrf_Automatica                   BI_073_Automatica,
       Case T01.ISOWFTrf_SitInterna
            When 'Enc' Then 'Aguardando solução'
            When 'Res' Then 'Aguardando solução - reservada'
            When 'Con' Then 'Respondida'
       End                                       BI_073_SitDescricao,
       COUNT(*)                                  BI_073_QtdTarefas
  From ISOWFTAREFA T01
       Inner Join ISOWFPROCEDIMENTO T02
          On T02.ISOEmp_Codigo   = T01.ISOEmp_Codigo
         And T02.ISOWFPrc_Codigo = T01.ISOWFPrc_Codigo
 Where T01.ISOWFTrf_SitInterna <> 'Pro'
 Group By T01.ISOEmp_Codigo, T02.ISOWFPrc_Modulo, T01.ISOWFTrf_Automatica, T01.ISOWFTrf_SitInterna

/*
Select ISOEmp_Codigo,
       ISOWFPrc_Modulo,
       COUNT(*)
  From ISOWFPROCEDIMENTO
 Where ISOWFPrc_DataFechamento Is Null Or ISOWFPrc_DataFechamento = '1753-01-01'
 Group By ISOEmp_Codigo, ISOWFPrc_Modulo

*/;


-- ConexaoISO.BI_074_TamDatabase source

CREATE VIEW BI_074_TamDatabase as
Select DB_NAME()                                 as BI_074_DatabaseName,
      (SUM(SIZE) / 1024 *8)                      as BI_074_TamanhoMB
  From SYS.database_files;


-- ConexaoISO.BI_075_TamTabelas source

CREATE VIEW BI_075_TamTabelas as
SELECT T01.NAME                                  as BI_075_Tabela,
       T03.rows                                  as BI_075_QtdeRegistros,
       SUM(T04.total_pages) * 8                  as BI_075_EspacoTotalKB,
       SUM(T04.used_pages) * 8                   as BI_075_EspacoUsadoKB,
       (SUM(T04.total_pages) - SUM(T04.used_pages)) * 8
                                                 as BI_075_EspacoNaoUsadoKB
  FROM sys.tables T01
       Inner Join sys.indexes T02
          On T02.OBJECT_ID = T01.object_id
       Inner Join sys.partitions T03
          On T03.object_id = T02.OBJECT_ID
         And T03.index_id = T02.index_id
       Inner Join sys.allocation_units T04
	      On T04.container_id = T03.partition_id
        Left Join sys.schemas T05
          On T05.schema_id = T01.schema_id
 Where T01.NAME NOT LIKE 'dt%'
   And T01.is_ms_shipped = 0
   And T01.OBJECT_ID > 255
 Group By T01.Name, T05.Name, T03.Rows;


-- ConexaoISO.BI_076_ClientesEmAtendMKT source

CREATE VIEW BI_076_ClientesEmAtendMKT as
Select T01.ISOEmp_Codigo                         BI_076_CodEmrpesa,
       T01.ISOMkAteCmp_Codigo                    BI_076_CodCampanha,
	   RTrim(T01.ISOMkAteCmp_Descricao)          BI_076_DscCampanha,
       T02.ISOMkAteCmpCnt_EntCodigo              BI_076_CodCliente,
	   RTrim(T03.ISOEnt_Nome)                    BI_076_NomeCliente,
       T02.ISOMkAteCmpCnt_UsuarioAlteraca        BI_076_CodUsuario,
       RTRIM(T04.ISOEnt_Nome)                    BI_076_NomUsuario,
       T02.ISOMkAteCmpCnt_DataAlteracao          BI_076_AtendDesde
  From ISOMKATECAMPANHA T01
       Inner Join ISOMKATECMPCONTATO T02
          On T02.ISOEmp_Codigo                = T01.ISOEmp_Codigo
         And T02.ISOMkAteCmp_Codigo           = T01.ISOMkAteCmp_Codigo
		 And T02.ISOMKAteCmpCnt_EmAtendimento = 'S'
       Inner Join ISOENTIDADE T03 -- Nome do Cliente
          On T03.ISOEnt_Codigo                = T02.ISOMkAteCmpCnt_EntCodigo
       Inner Join ISOENTIDADE T04 -- Usuário do atendimento ao cliente
          On T04.ISOEnt_Codigo                = T02.ISOMkAteCmpCnt_UsuarioAlteraca;


-- ConexaoISO.BI_076_isoWF_Estrutura source

CREATE VIEW BI_076_isoWF_Estrutura as

select
	T01.ISOEmp_Codigo				as	DM_CodEmpresa,			--Código da Empresa
	T01.ISOWFPrcPad_Codigo			as	DM_CodProcedimento,		--Código do Procedimento Padrão (WF)
	T02.ISOWFPrcPad_Descricao		as	DM_DescProcedimento,	--Descrição do Procedimento Padrão (WF)
	T01.ISOWFTrfPad_Codigo			as	DM_CodTarefa,			--Código da Tarefa
	T01.ISOWFTrfPad_Descricao		as	DM_DescTarefa,			--Descrição da Tarefa
	T03.ISOWFTrfPadSit_Codigo		as	DM_CodSitTarefa,		--Situação/resposta da tarefa
	T03.ISOWFTrfPadSit_Descricao	as	DM_DescSitTarefa,		--Descrição da Situação/resposta da tarefa
	T01.ISOEntRsp_Codigo			as	DM_CodResponsável,		--Código do Responsável pela Tarefa
	T04.ISOEnt_Nome					as	DM_NomeResponsável,		--Nome do responsável
	T01.ISOWFTrfPad_Flag			as	DM_Ativo,				--Ativo ou Inativo
	T05.ISOWFTrf_Dep_TrfCodOrigem	as	DM_TrfDependencia,		--Tarefa dependencia
	T05.ISOWFTrf_Dep_SitCodOrigem	as	DM_SitTrfDependencia,	--Situação/resposta da tarefa dependente
	T01.ISOWFTrfPad_PrzUnidade		as	DM_UnidPrazoExec,		--Unidade do prazo de execução (Horas, Dias)
	T01.ISOWFTrfPad_PrzExecucao		as	DM_PrazoExecucao		--Prazeo de execução da tarefa

from ISOWFTRFPADRAO T01
	left join ISOWFPRCPADRAO T02
		on T02.ISOEmp_Codigo				=	T01.ISOEmp_Codigo
		and T02.ISOWFPrcPad_Codigo			=	T01.ISOWFPrcPad_Codigo
	left join ISOWFTRFPADSITUACAO	T03
		on	T03.ISOEmp_Codigo				=	T02.ISOEmp_Codigo
		and	T03.ISOWFPrcPad_Codigo			=	T02.ISOWFPrcPad_Codigo
		and	T03.ISOWFTrfPad_Codigo			=	T01.ISOWFTrfPad_Codigo
	left join	ISOENTIDADE	T04
		on	T04.ISOEnt_Codigo				=	T01.ISOEntRsp_Codigo
	left join	ISOWFTRF_DEPENDENCIA	T05
		on	T05.ISOEmp_Codigo				=	T01.ISOEmp_Codigo
		and	T05.ISOWFPrcPad_Codigo			=	T02.ISOWFPrcPad_Codigo
		and	T05.ISOWFTrf_Dep_TrfCodDestino	=	T01.ISOWFTrfPad_Codigo;


-- ConexaoISO.BI_078_ListaCmpCliDC source

CREATE VIEW BI_078_ListaCmpCliDC As
Select T01.ISOEmp_Codigo                         as DM_078_CodEmpresa,
       T03.ISOMkAteCmp_Codigo                    as DM_078_CodCampanha,
       RTrim(T03.ISOMkAteCmp_Descricao)          as DM_078_DscCampanha,
       T02.ISOMkAteCmpCnt_EntCodigo              as DM_078_CodCliente,
       RTrim(T07.ISOEnt_Nome)                    as DM_078_NomeCliente,
       T06.ISOMKFin_Codigo                       as DM_078_CodFinalidadeCmp,
       RTrim(T04.ISOMkFin_Descricao)             as DM_078_DscFinalidadeCmp,
       T06.ISOMkFinRsl_Codigo                    as DM_078_CodResultadoCmp,
       RTrim(T06.ISOMkFinRsl_Descricao)          as DM_078_DscResultadoCmp,
	   T06.ISOMkFinRsl_Concluido,
	   Case T06.ISOMkFinRsl_Concluido
            When 1 Then 'S'
			Else 'N'
       End                                       as DM_078_ResultConcluidoCmp,
       T06.ISOMkFinRsl_Flag                      as DM_078_ResultCmpAtivo,
       T01.ISOMkAteCmpCntDet_DataHora            as DM_078_DataHoraContato,
--	   T15.DM_078B_DataHoraContato               as DM_078_DataHoraContato,
	   T10.ISOEntRsp_Codigo                      as DM_078_CodCoordenador,
       RTrim(T11.ISOEnt_Nome)                    as DM_078_NomeCoordenador,
       T12.ISOEntRsp_Codigo                      as DM_078_CodCorretor,
       RTrim(T13.ISOEnt_Nome)                    as DM_078_NomeCorretor,
       RTrim(T09.ISOEntOrganizacaoAttName)       as DM_078_DCNrVidas,
	   RTrim(T08.ISOEntOrganizacaoAttValue)      as DM_078_RespDCNrVidas,
       T01.ISOMkAteCmpCntDet_DataAlteraca        as DM_078_DataAlteracao,
       RTrim(T14.ISOEnt_Nome)                    as DM_078_UsuarioAlteracao
  From ISOMKATECMPCNTDETALHE T01
       Inner Join ISOMKATECMPCONTATO T02
          On T02.ISOEmp_Codigo            = T01.ISOEmp_Codigo
         And T02.ISOMkAteCmp_Codigo       = T01.ISOMkAteCmp_Codigo
         And T02.ISOMkAteCmpCnt_Sequencia = T01.ISOMkAteCmpCnt_Sequencia
       Inner Join ISOMKATECAMPANHA T03
          On T03.ISOEmp_Codigo            = T02.ISOEmp_Codigo
         And T03.ISOMkAteCmp_Codigo       = T02.ISOMkAteCmp_Codigo
        LEFT Join ISOMKFINALIDADE T04
          On T04.ISOEmp_Codigo            = T03.ISOEmp_Codigo
         And T04.ISOMkFin_Codigo          = T03.ISOMkFin_Codigo
        Left Join ISOMKFINRESULTADO T06
          On T06.ISOEmp_Codigo            = T04.ISOEmp_Codigo
         And T06.ISOMkFin_Codigo          = T04.ISOMkFin_Codigo
         And T06.ISOMkFinRsl_Codigo       = T01.ISOMkFinRsl_Codigo
       Inner Join ISOENTIDADE T07
          On T07.ISOEnt_Codigo            = T02.ISOMkAteCmpCnt_EntCodigo
        Left Join ISOENTORGANIZACAOATTVALUES T08
          On T08.ISOEntOrg_Codigo         = T02.ISOMkAteCmpCnt_EntCodigo
         And T08.ISOEntOrganizacaoAttId = 1
        Left Join ISOENTORGANIZACAOATT T09
          On T09.ISOEntOrganizacaoAttId   = T08.ISOEntOrganizacaoAttId
         And T09.ISOEntOrganizacaoAttId = 1
        Left Join ISOENTRSP_CLIENTES T10 -- Coordenador
          On T10.ISOEmp_Codigo            = T01.ISOEmp_Codigo
         And T10.ISOEntCli_Codigo         = T02.ISOMkAteCmpCnt_EntCodigo
		 And T10.ISOEntNivRsp_Codigo      = 3
        Left Join ISOENTIDADE T11
          On T11.ISOEnt_Codigo            = T10.ISOEntRsp_Codigo
        Left Join ISOENTRSP_CLIENTES T12 -- Corretor
          On T12.ISOEmp_Codigo            = T01.ISOEmp_Codigo
         And T12.ISOEntCli_Codigo         = T02.ISOMkAteCmpCnt_EntCodigo
         And T12.ISOEntNivRsp_Codigo      = 4
        Left Join ISOENTIDADE T13
          On T13.ISOEnt_Codigo            = T12.ISOEntRsp_Codigo
        Left Join ISOENTIDADE T14
          On T14.ISOEnt_Codigo            = T01.ISOMkAteCmpCntDet_UsuarioAlter
/*
 Inner Join BI_078B_ListaCmpCliDC T15
          On T15.DM_078B_CodEmpresa       = T01.ISOEmp_Codigo
         And T15.DM_078B_CodCampanha      = T01.ISOMkAteCmp_Codigo
         And T15.DM_078B_SeqContato       = T01.ISOMkAteCmpCnt_Sequencia
*/
 Where T04.ISOMkFin_Codigo in (1, 2, 4, 6, 7, 8, 9)
--   And T08.ISOEntOrganizacaoAttValue <> ''
   And T01.ISOMkFinRsl_Codigo Is Not Null
   And T01.ISOMkFinRsl_Codigo <> 0
   And T01.ISOMkAteCmpCntDet_DataHora      = (Select MIN(T01A.ISOMKAteCmpCntDet_DataHora)
                                                From ISOMKATECMPCNTDETALHE T01A
                                               Where T01A.ISOEmp_Codigo                     = T01.ISOEmp_Codigo
                                                 And T01A.ISOMkAteCmp_Codigo                = T01.ISOMkAteCmp_Codigo
                                                 And T01A.ISOMkAteCmpCnt_Sequencia          = T01.ISOMkAteCmpCnt_Sequencia
												 And T01A.ISOMkFinRsl_Codigo               In (20, 34, 40)
--												 And T01A.ISOMkAteCmpCntDet_DataHora       <= T01.ISOMkAteCmpCntDet_DataHora
--												 And T01A.ISOMkAteCmpCntDet_DataHora       >= T01.ISOMkAteCmpCntDet_DataHora)
                                                 And Year(T01A.ISOMkAteCmpCntDet_DataHora)  = YEAR(T01.ISOMkAteCmpCntDet_DataHora)
												 And MONTH(T01A.ISOMKAteCmpCntDet_DataHora) = MONTH(T01.ISOMKAteCmpCntDet_DataHora));


-- ConexaoISO.BI_079_TamanhoDB source

CREATE VIEW BI_079_TamanhoDB As

SELECT
    t.NAME AS Entidade,
    p.rows AS Registros,
    SUM(a.total_pages) * 8 AS EspacoTotalKB,
    SUM(a.used_pages) * 8 AS EspacoUsadoKB,
    (SUM(a.total_pages) - SUM(a.used_pages)) * 8 AS EspacoNaoUsadoKB
FROM
    sys.tables t
INNER JOIN
    sys.indexes i ON t.OBJECT_ID = i.object_id
INNER JOIN
    sys.partitions p ON i.object_id = p.OBJECT_ID AND i.index_id = p.index_id
INNER JOIN
    sys.allocation_units a ON p.partition_id = a.container_id
LEFT OUTER JOIN
    sys.schemas s ON t.schema_id = s.schema_id
WHERE
    t.NAME NOT LIKE 'dt%'
    AND t.is_ms_shipped = 0
    AND i.OBJECT_ID > 255
GROUP BY
    t.Name, s.Name, p.Rows;


-- ConexaoISO.BI_N001_isoCRM_Clientes source

CREATE VIEW BI_N001_isoCRM_Clientes as
Select T11.ISOEmp_Codigo                         as Empresa,
       T01.ISOEnt_Codigo                         as Codigo,
       RTrim(ISOEnt_Nome)                        as Nome,
       Case
            When T02.ISOEntPes_Codigo is Null Then T03.ISOEntOrg_CNPJ
            Else T02.ISOEntPes_CPF
       End                                       as CPF_CNPJ,
       Case
            When T02.ISOEntPes_Codigo Is Null Then Null
            Else RTrim(T04.ISOEntRamAtv_Descricao)
       End                                       as Ramo_de_atividade,
       Case
            When T02.ISOEntPes_Sexo = 'M' Then 'Masculino'
            When T02.ISOEntPes_Sexo = 'F' Then 'Feminino'
            When T02.ISOEntPes_Sexo = 'N' Then 'Não informado'
            Else Null
        End                                      as Sexo,
        RTrim(T05.ISOEstCiv_Descricao)           as Estado_civil,
        RTrim(T06.ISOProf_Descricao)             as Profissao,
        RTRim(T07.ISOEntSeg_Descricao)           as Segmento,
        RTrim(T08.ISOEntEnd_Titulo) + ' ' + RTrim(T08.ISOEntEnd_Logradouro) + ', ' + RTrim(T08.ISOEntEnd_Numero)
                                                 as Endereco,
        RTrim(T08.ISOEntEnd_Bairro)              as Bairro,
        RTRIM(T09.ISOLoc_Descricao)              as Localidade,
        T10.ISOEst_Sigla                         as UF,
        RTrim(T08.ISOEntEnd_Latitude)            as Latitude,
        RTRIM(T08.ISOEntEnd_Longitude)           as Longitude,
        RTrim(T12.ISOEntClaP_Descricao)          as Classificacao,
        RTrim(T13.ISOEntClaPEsp_Descricao)       as Especialidade,
        RTrim(T14.ISOEntCliSit_Descricao)        as Situacao,
        Case
             When T02.ISOEntPes_Codigo Is Null Then 'J'
             Else 'F'
        End                                      as Tipo,
        T01.ISOEnt_Flag                          as AtivoInativo,

        1                                        as MT_Qtde,
        'V.1'                                    as DM_Versao
  From ISOENTIDADE T01
        Left Join ISOENTPESSOA T02
          On T02.ISOEntPes_Codigo    = T01.ISOEnt_Codigo
        Left Join ISOENTORGANIZACAO T03
          On T03.ISOEntOrg_Codigo    = T01.ISOEnt_Codigo
        Left Join ISOENTRAMOATIVIDADE T04
          On T04.ISOEntRamAtv_Codigo = T03.ISOEntRamAtv_Codigo
        Left Join ISOESTCIVIL T05
          On T05.ISOEstCiv_Codigo    = T02.ISOEstCiv_Codigo
        Left Join ISOPROFISSAO T06
          On T06.ISOProf_Codigo      = T02.ISOProf_Codigo
        Left Join ISOENTSEGMENTO T07
          On (T07.ISOEntSeg_Codigo    = T02.ISOEntSeg_Codigo
          Or  T07.ISOEntSeg_Codigo    = T03.ISOEntSeg_Codigo)
        Left Join ISOENTENDERECO T08
          On T08.ISOEnt_Codigo        = T01.ISOEnt_Codigo
         And T08.ISOEntEnd_Principal  = 'S'
        Left Join ISOLOCALIDADE T09
          On T09.ISOLoc_Codigo        = T08.ISOLoc_Codigo
        Left Join ISOESTADO  T10
          On T10.ISOEst_Codigo        = T09.ISOEst_Codigo
        Left Join ISOENTCLIENTE T11
          On T11.ISOEntCli_Codigo     = T01.ISOEnt_Codigo
        Left Join ISOENTCLASSIFICACAOPAPEL T12
          On T12.ISOEntClaP_Codigo    = T11.ISOEntClaP_Codigo
        Left Join ISOENTCLAPESPECIALIDADE T13
          On T13.ISOEmp_Codigo        = T12.ISOEmp_Codigo
         And T13.ISOEntClaP_Codigo    = T12.ISOEntClaP_Codigo
         And T13.ISOEntClaPEsp_Codigo = T11.ISOEntClaPEsp_Codigo
        Left Join ISOENTCLISITUACAO T14
          On T14.ISOEmp_Codigo        = T11.ISOEmp_Codigo
         And T14.ISOEntCliSit_Codigo  = T11.ISOEntCliSit_Codigo;


-- ConexaoISO.BI_N001_isoCRM_Responsavel source

CREATE VIEW BI_N001_isoCRM_Responsavel as
Select T02.ISOEmp_Codigo                         as Empresa,
       T02.ISOEntRsp_Codigo                      as Codigo,
       RTrim(T01.ISOEnt_Nome)                    as Responsavel,
       T08.ISOEntEct_Econtact                    as Email,
       Case
            When T03.ISOEntPes_Sexo = 'M' Then 'Masculino'
            When T03.ISOEntPes_Sexo = 'F' Then 'Feminino'
            When T03.ISOEntPes_Sexo = 'N' Then 'Não informado'
            Else Null
       End                                       as Sexo,
       RTrim(T05.ISOLoc_Descricao)               as Localidade,
       T06.ISOEst_Sigla                          as UF,
       RTrim(T04.ISOEntEnd_Latitude)             as Latitude,
       RTRIM(t04.ISOEntEnd_Longitude)            as Longitude,
       RTrim(T07.ISOEntRspSit_Descricao)         as Situacao,

       1                                         as MT_Qtde,
       'V.1'                                     as DM_Versao
  From ISOENTIDADE T01
       Inner Join ISOENTRESPONSAVEL T02
          On T02.ISOEntRsp_Codigo     = T01.ISOEnt_Codigo
       Inner Join ISOENTPESSOA T03
          On T03.ISOEntPes_Codigo     = T02.ISOEntRsp_Codigo
        Left Join ISOENTENDERECO T04
          On T04.ISOEnt_Codigo        = T01.ISOEnt_Codigo
         And T04.ISOEntEnd_Principal  = 'S'
        Left Join ISOLOCALIDADE T05
          On T05.ISOLoc_Codigo        = T04.ISOLoc_Codigo
        Left Join ISOESTADO  T06
          On T06.ISOEst_Codigo        = T05.ISOEst_Codigo
       Inner Join ISOENTRSPSITUACAO T07
          On T07.ISOEmp_Codigo        = T02.ISOEmp_Codigo
         And T07.ISOEntRspSit_Codigo  = T02.ISOEntRspSit_Codigo
        Left Join ISOENTECONTACT T08
          On T08.ISOEnt_Codigo        = T01.ISOEnt_Codigo
         And T08.ISOEntEctTip_Principal = 'S';


-- ConexaoISO.BI_N001_isoCRM_Usuarios source

CREATE VIEW BI_N001_isoCRM_Usuarios as
Select T02.ISOEmp_Codigo                         as Empresa,
       T02.ISOEntUsu_Codigo                      as Codigo,
       RTrim(T01.ISOEnt_Nome)                    as Usuario,
       T08.ISOEntEct_Econtact                    as Email,
       Case
            When T03.ISOEntPes_Sexo = 'M' Then 'Masculino'
            When T03.ISOEntPes_Sexo = 'F' Then 'Feminino'
            When T03.ISOEntPes_Sexo = 'N' Then 'Não informado'
            Else Null
       End                                       as Sexo,
       RTrim(T05.ISOLoc_Descricao)               as Localidade,
       T06.ISOEst_Sigla                          as UF,
       RTrim(T04.ISOEntEnd_Latitude)             as Latitude,
       RTRIM(t04.ISOEntEnd_Longitude)            as Longitude,
       RTrim(T07.ISOEntUsuSit_Descricao)         as Situacao,

       1                                         as MT_Qtde,
       'V.1'                                     as DM_Versao
  From ISOENTIDADE T01
       Inner Join ISOENTUSUARIO T02
          On T02.ISOEntUsu_Codigo     = T01.ISOEnt_Codigo
       Inner Join ISOENTPESSOA T03
          On T03.ISOEntPes_Codigo     = T02.ISOEntUsu_Codigo
        Left Join ISOENTENDERECO T04
          On T04.ISOEnt_Codigo        = T01.ISOEnt_Codigo
         And T04.ISOEntEnd_Principal  = 'S'
        Left Join ISOLOCALIDADE T05
          On T05.ISOLoc_Codigo        = T04.ISOLoc_Codigo
        Left Join ISOESTADO  T06
          On T06.ISOEst_Codigo        = T05.ISOEst_Codigo
       Inner Join ISOENTUSUSITUACAO T07
          On T07.ISOEmp_Codigo        = T02.ISOEmp_Codigo
         And T07.ISOEntUsuSit_Codigo = T02.ISOEntUsuSit_Codigo
        Left Join ISOENTECONTACT T08
          On T08.ISOEnt_Codigo        = T01.ISOEnt_Codigo
         And T08.ISOEntEctTip_Principal = 'S';


-- ConexaoISO.BI_N100_isoCRM_Atendimentos source

CREATE VIEW BI_N100_isoCRM_Atendimentos as
Select T01.ISOEmp_Codigo                         as Empresa,
       T01.ISOSAAte_Codigo                       as Codigo,
       T01.ISOSAAte_EntCodigo                    as Codigo_Cliente,
       RTrim(T03.ISOSAMot_Descricao)             as Motivo,
       RTrim(T04.ISOSAMotOcr_Descricao)          as Ocorrencia,
       RTrim(T05.ISOSAMotOcrCau_Descricao)       as Causa,
       RTrim(T07.ISOEnt_Nome)                    as Unidade,
       T01.ISOSAAte_DataAbertura                 as Data_abertura,
       T01.ISOSAAte_DataFechamento               as Data_fechamento,
       RTrim(T06.ISOSASit_Descricao)             as Situacao,
       Case T06.ISOSASit_Situacao
            When 1 Then 'Aberto'
            When 2 Then 'Fechado'
            When 3 Then 'Encaminhar para WorkFlow'
            When 9 Then 'Cancelado'
       End                                       as SituacaoTabulada,
       T01.ISOSAAte_UsuCodigo                    as Codigo_atendente,
       Case
            When T01.ISOSAAte_DataFechamento is Null OR T01.ISOSAAte_DataFechamento = '1753-01-01' Then 0
            Else DATEDIFF(hour, T01.ISOSAAte_DataAbertura, T01.ISOSAAte_DataFechamento)
       End                                       as MT_Tempo,
       T01.ISOSAAte_DataAlteracao                as Data_Alteracao,
       RTrim(T08.ISOEnt_Nome)                    as Usuario_Alteracao,

       1                                         as MT_Qtde,
       'V.3'                                     as DM_Versao
From ISOSAATECLIENTE T00
inner join ISOSAATENDIMENTO T01
on t00.ISOSAAteCli_Codigo = t01.ISOSAAte_Codigo
and T00.ISOEmp_Codigo = t01.ISOEmp_Codigo
       left Join ISOSAMOTIVO T03
          On T03.ISOEmp_Codigo         = T01.ISOEmp_Codigo
         And T03.ISOSAMot_Codigo       = T01.ISOSAMot_Codigo
       left Join ISOSAMOTOCORRENCIA T04
          On T04.ISOEmp_Codigo         = T03.ISOEmp_Codigo
         And T04.ISOSAMot_Codigo       = T03.ISOSAMot_Codigo
         And T04.ISOSAMotOcr_Codigo    = T01.ISOSAMotOcr_Codigo
       left Join ISOSAMOTOCRCAUSA T05
          On T05.ISOEmp_Codigo         = T04.ISOEmp_Codigo
         And T05.ISOSAMot_Codigo       = T04.ISOSAMot_Codigo
         And T05.ISOSAMotOcr_Codigo    = T04.ISOSAMotOcr_Codigo
         And T05.ISOSAMotOcrCau_Codigo = T01.ISOSAMotOcrCau_Codigo
       left Join ISOSASITUACAO T06
          On T06.ISOEmp_Codigo         = T01.ISOEmp_Codigo
         And T06.ISOSASit_Codigo       = T01.ISOSASit_Codigo
       left Join ISOENTIDADE T07
          On T07.ISOEnt_Codigo         = T01.ISOEntUnd_Codigo
       left Join ISOENTIDADE T08
          On T08.ISOEnt_Codigo         = T01.ISOSAAte_UsuarioAlteracao;


-- ConexaoISO.BI_N200_isoCRM_Tarefas source

CREATE VIEW BI_N200_isoCRM_Tarefas as
Select T01.ISOEmp_Codigo                         as Empresa,
       T01.ISOWFTrf_Automatica,
       T01.ISOWFPrc_Codigo                       as Procedimento,
       T01.ISOWFTrf_Codigo                       as Tarefa,
       T02.ISOWFPrc_Modulo                       as Modulo,
       T01.ISOWFTrf_CodModulo                    as Codigo,
       T01.ISOWFTrf_RspCodigo                    as Codigo_responsavel,
       T01.ISOWFTrf_RspRes_RspCodigo             as Codigo_resp_reserva,
       T01.ISOWFTrf_DataRecebimento              as Data_recebimento,
       T01.ISOWFTrf_DataSolucao                  as Data_encerramento,
       T01.ISOWFTrf_DataLimite                   as Data_limite,
       RTrim(T04.ISOWFTrfPadSit_Descricao)       as Situacao,
       Case T04.ISOWFTrfPadSit_Situacao
            When 1 Then 'Aberto'
            When 2 Then 'Concluído'
            When 7 Then 'Erro'
            When 8 Then 'Suspenso'
            When 9 Then 'Cancelado'
       end                                       as SituacaoTabulada,
       T01.ISOWFTrf_Prioridade                   as Prioridade,
       Case
            When T01.ISOWFTrf_DataSolucao Is Null Or T01.ISOWFTrf_DataSolucao = '1753-01-01' Then 0
            Else DATEDIFF(hour, T01.ISOWFTrf_DataRecebimento, T01.ISOWFTrf_DataSolucao)
       End                                       as MT_Tempo,
       1                                         as MT_Qtde,
       'V.1'                                     as DM_Versao
  From ISOWFTAREFA T01
       Inner Join ISOWFPROCEDIMENTO T02
          On T02.ISOEmp_Codigo   = T01.ISOEmp_Codigo
         And T02.ISOWFPrc_Codigo = T01.ISOWFPrc_Codigo
       Inner Join ISOWFTRFPADRAO T03
          On T03.ISOEmp_Codigo         = T02.ISOEmp_Codigo
         And T03.ISOWFPrcPad_Codigo    = T02.ISOWFPrcPad_Codigo
         And T03.ISOWFTrfPad_Codigo    = T01.ISOWFTrfPad_Codigo
       Inner Join ISOWFTRFPADSITUACAO T04
          On T04.ISOEmp_Codigo         = T01.ISOEmp_Codigo
         And T04.ISOWFPrcPad_Codigo    = T02.ISOWFPrcPad_Codigo
         And T04.ISOWFTrfPad_Codigo    = T01.ISOWFTrfPad_Codigo
         And T04.ISOWFTrfPadSit_Codigo = T01.ISOWFTrfPadSit_Codigo
 Where T01.ISOWFTrf_Automatica = 0;


-- ConexaoISO.Cliente_campanha source

CREATE VIEW Cliente_campanha
as
select
--T2.ISOMkAteCmp_Codigo							as Cod_campanha,
--T2.ISOMkAteCmp_Descricao						as Nome_Campanha,
T1.ISOMkAteCmpCnt_EntCodigo						as Cod_cliente
--T8.ISOEntOrg_CNPJ								as CNPJ,
--T9.ISOEntPes_CPF								as CPF,
--T3.ISOEnt_Nome									as Nome_cliente,
--T5.ISOEntRsp_Codigo								as Cod_Responsavel,
--T6.ISOEnt_Nome									as Nome_Resonsavel,
--T7.ISOEntNivRsp_Descricao,
--T7.ISOEntNivRsp_Flag
from ISOMKATECMPCONTATO T1
inner join ISOMKATECAMPANHA T2
on T2.ISOEmp_Codigo						= T1.ISOEmp_Codigo
and T2.ISOMkAteCmp_Codigo				= T1.ISOMkAteCmp_Codigo

left join ISOENTIDADE T3
on  T3.ISOEnt_Codigo					= T1.ISOMkAteCmpCnt_EntCodigo


Left join ISOENTRSP_CLIENTES T4
on T4.ISOEmp_Codigo						= T4.ISOEmp_Codigo
and T4.ISOEntCli_Codigo					= T1.ISOMkAteCmpCnt_EntCodigo


left join ISOENTRESPONSAVEL T5
on T5.ISOEmp_Codigo						= T4.ISOEmp_Codigo
and T5.ISOEntRsp_Codigo					= T4.ISOEntRsp_Codigo

inner join ISOENTIDADE T6
on T6.ISOEnt_Codigo						=T5.ISOEntRsp_Codigo

left join ISOENTNIVRESPONSABILIDADE T7
on T7.ISOEmp_Codigo						= T4.ISOEntNivRsp_Codigo


left join ISOENTORGANIZACAO T8
on T8.ISOEntOrg_Codigo					= T3.ISOEnt_Codigo

left join ISOENTPESSOA T9
on T9.ISOEntPes_Codigo					= T3.ISOEnt_Codigo


where T1.ISOEmp_Codigo = 11
--and T5.ISOEntRsp_Codigo = (977376)
--and T2.ISOMkAteCmp_Codigo = 301
--and T1.ISOMkCntSit_Codigo = 1
--and T1.ISOMkAteCmpCnt_Encerrado = 0
--and T5.ISOEntRsp_Codigo	=1129387;


-- ConexaoISO.ISOPVBLQCLIENTE1 source

CREATE VIEW  [ConexaoISO].[ISOPVBLQCLIENTE1]
AS
WITH
	PEDIDOS AS (
		SELECT        ISOEmp_Codigo, ISOPvPed_CliCodigo, MAX(ISOPvPed_DataAlteracao) ISOPvPed_DataAlteracao
		FROM            DBO.ISOPVPEDIDO
		WHERE
			(ISOEmp_Codigo = 11) AND
			(ISOPvPed_DtaPedido >= '2021-02-19 00:00:00.000')
			--AND (ISOPvPed_CliCodigo = 751368)
		GROUP BY ISOEmp_Codigo, ISOPvPed_CliCodigo
	),
	RESPONSAVEL AS (
		SELECT ISOEmp_Codigo, ISOEntRsp_Codigo
		FROM DBO.ISOENTRESPONSAVEL
		WHERE
			(ISOEmp_Codigo = 11) AND
			(ISOEntRsp_Codigo in (1121915, 1130062, 1130063, 1130064))
	)
SELECT ISOPVPEDIDO.ISOEmp_Codigo, ISOPVBLOQUEIO.ISOPvBlq_Codigo, ISOPVPEDIDO.ISOPvPed_CliCodigo
	AS ISOPvBlqCli_CodCliente, 0
	AS ISOPvBlqCli_Quantidade, 'A'
	AS ISOPvBlqCli_Flag, dbo.dataiso2()
	AS ISOPvBlqCli_DataAlteracao, 1
	AS ISOPvBlqCli_UsuarioAlteracao
FROM PEDIDOS
	INNER JOIN DBO.ISOPVPEDIDO
		ON PEDIDOS.ISOEmp_Codigo = ISOPVPEDIDO.ISOEmp_Codigo AND
			PEDIDOS.ISOPvPed_CliCodigo = ISOPVPEDIDO.ISOPvPed_CliCodigo AND
			PEDIDOS.ISOPvPed_DataAlteracao = ISOPVPEDIDO.ISOPvPed_DataAlteracao AND
			ISOPVPEDIDO.ISOPvPed_CodVendedorCD not in (1121915, 1130062, 1130063, 1130064)
	INNER JOIN DBO.ISOPVBLOQUEIO
		ON ISOPVPEDIDO.ISOEmp_Codigo = ISOPVBLOQUEIO.ISOEmp_Codigo AND
			ISOPvBlq_Codigo = 618 AND
			ISOPvBlq_Flag = 'A'
UNION ALL
SELECT ISOPVPEDIDO.ISOEmp_Codigo, ISOPVBLOQUEIO.ISOPvBlq_Codigo, ISOPVPEDIDO.ISOPvPed_CliCodigo
	AS ISOPvBlqCli_CodCliente, 0 AS ISOPvBlqCli_Quantidade, 'A'
	AS ISOPvBlqCli_Flag, dbo.dataiso2()
	AS ISOPvBlqCli_DataAlteracao, 1
	AS ISOPvBlqCli_UsuarioAlteracao
FROM PEDIDOS
	INNER JOIN DBO.ISOPVPEDIDO
		ON PEDIDOS.ISOEmp_Codigo = ISOPVPEDIDO.ISOEmp_Codigo AND
			PEDIDOS.ISOPvPed_CliCodigo = ISOPVPEDIDO.ISOPvPed_CliCodigo AND
			PEDIDOS.ISOPvPed_DataAlteracao = ISOPVPEDIDO.ISOPvPed_DataAlteracao
	INNER JOIN RESPONSAVEL
		ON ISOPVPEDIDO.ISOEmp_Codigo = RESPONSAVEL.ISOEmp_Codigo AND
			ISOPVPEDIDO.ISOPvPed_CodVendedorCD = RESPONSAVEL.ISOEntRsp_Codigo
	INNER JOIN DBO.ISOPVBLOQUEIO
		ON ISOPVPEDIDO.ISOEmp_Codigo = ISOPVBLOQUEIO.ISOEmp_Codigo AND
			ISOPvBlq_Codigo = 616 AND
			ISOPvBlq_Flag = 'A'
UNION ALL
SELECT        ISOEmp_Codigo, ISOPvBlq_Codigo, ISOPvBlqCli_CodCliente, ISOPvBlqCli_Quantidade, ISOPvBlqCli_Flag, ISOPvBlqCli_DataAlteracao, ISOPvBlqCli_UsuarioAlteracao
FROM            DBO.ISOPVBLQCLIENTE;


-- ConexaoISO.ISOPVBLQPRODUTO1 source

CREATE VIEW [ConexaoISO].[ISOPVBLQPRODUTO]
AS
WITH
	PRODUTOS_MARCA_PROPRIA AS (
		SELECT        ISOEmp_Codigo, ISOPrd_Codigo
		FROM            DBO.ISOPRODUTO
		WHERE        (ISOEmp_Codigo = 11) AND (ISOPrd_Codigo IN ('357912',	'357998',	'358001',	'357929',	'357936',	'357905',	'357899',	'357974',	'357981',	'358605',	'358612',	'358629',	'358636',	'639261',	'639278',	'639285',	'639292',	'639308',	'640229',	'370959',	'370966',	'370973',	'370977',	'370980',	'370997',	'371000',	'371017',	'371024',	'371031',	'371055',	'371062',	'371079',	'371086',	'627824',	'627817',	'623062',	'623079',	'623086',	'623055',	'638004',	'637328',	'627855',	'627862',	'637762',	'627831',	'602678',	'627886',	'627879',	'627916',	'627909',	'627893',	'627923',	'631142',	'631159',	'631166',	'631326',	'631333',	'631340',	'631357',	'631364',	'631371',	'631128',	'631135',	'631388',	'631395',	'631401',	'631173',	'366037',	'366365',	'364347',	'364491',	'364507',	'584462',	'584479',	'584486',	'584806',	'584455',	'398632',	'366013',	'366020',	'398649',	'611595',	'611601',	'613681',	'613674',	'624441',	'629651',	'410389',	'615258',	'615265',	'615272',	'615289',	'410044',	'615296',	'615302',	'624328',	'624335',	'624342',	'624298',	'624304',	'624311',	'635898',	'640687',	'633511',	'633528',	'633559',	'633566',	'633573',	'633580',	'633535',	'633542',	'633665',	'633672',	'637366',	'637373',	'637380',	'637397',	'637403',	'637410',	'637427',	'637434',	'637441',	'637458',	'637465',	'637472',	'637526',	'637496',	'637502',	'637519',	'631968',	'611175',	'611182',	'611199',	'611205',	'611212',	'611229',	'611441',	'611328'))
	),
	PRODUTOS AS (
		SELECT        ISOEmp_Codigo, ISOPrd_Codigo
		FROM            DBO.ISOPRODUTO
		WHERE        (ISOEmp_Codigo = 11) AND (ISOPrd_Codigo NOT IN ('357912',	'357998',	'358001',	'357929',	'357936',	'357905',	'357899',	'357974',	'357981',	'358605',	'358612',	'358629',	'358636',	'639261',	'639278',	'639285',	'639292',	'639308',	'640229',	'370959',	'370966',	'370973',	'370977',	'370980',	'370997',	'371000',	'371017',	'371024',	'371031',	'371055',	'371062',	'371079',	'371086',	'627824',	'627817',	'623062',	'623079',	'623086',	'623055',	'638004',	'637328',	'627855',	'627862',	'637762',	'627831',	'602678',	'627886',	'627879',	'627916',	'627909',	'627893',	'627923',	'631142',	'631159',	'631166',	'631326',	'631333',	'631340',	'631357',	'631364',	'631371',	'631128',	'631135',	'631388',	'631395',	'631401',	'631173',	'366037',	'366365',	'364347',	'364491',	'364507',	'584462',	'584479',	'584486',	'584806',	'584455',	'398632',	'366013',	'366020',	'398649',	'611595',	'611601',	'613681',	'613674',	'624441',	'629651',	'410389',	'615258',	'615265',	'615272',	'615289',	'410044',	'615296',	'615302',	'624328',	'624335',	'624342',	'624298',	'624304',	'624311',	'635898',	'640687',	'633511',	'633528',	'633559',	'633566',	'633573',	'633580',	'633535',	'633542',	'633665',	'633672',	'637366',	'637373',	'637380',	'637397',	'637403',	'637410',	'637427',	'637434',	'637441',	'637458',	'637465',	'637472',	'637526',	'637496',	'637502',	'637519',	'631968',	'611175',	'611182',	'611199',	'611205',	'611212',	'611229',	'611441',	'611328'))
	)
SELECT PRODUTOS_MARCA_PROPRIA.ISOEmp_Codigo, ISOPVBLOQUEIO.ISOPvBlq_Codigo, ROW_NUMBER() OVER(PARTITION BY PRODUTOS_MARCA_PROPRIA.ISOEmp_Codigo ORDER BY PRODUTOS_MARCA_PROPRIA.ISOEmp_Codigo ASC) AS ISOPvBlqPrd_Sequencial, PRODUTOS_MARCA_PROPRIA.ISOPrd_Codigo AS ISOPvBlqPrd_CodProduto, '' AS ISOPvBlqPrd_CodArmazem, 0 AS ISOPvBlqPrd_Quantidade, 'N' AS ISOPvBlqPrd_Exclui, 'A' AS ISOPvBlqPrd_Flag, dbo.dataiso2() AS ISOPvBlqPrd_DataAlteracao, 1 AS ISOPvBlqPrd_UsuarioAlteracao
FROM PRODUTOS_MARCA_PROPRIA
	INNER JOIN DBO.ISOPVBLOQUEIO
		ON PRODUTOS_MARCA_PROPRIA.ISOEmp_Codigo = ISOPVBLOQUEIO.ISOEmp_Codigo AND
			ISOPVBLOQUEIO.ISOPvBlq_Codigo = 618 AND
			ISOPVBLOQUEIO.ISOPvBlq_Flag = 'A'
UNION ALL
SELECT PRODUTOS.ISOEmp_Codigo, ISOPVBLOQUEIO.ISOPvBlq_Codigo, ROW_NUMBER() OVER(PARTITION BY PRODUTOS.ISOEmp_Codigo ORDER BY PRODUTOS.ISOEmp_Codigo ASC) AS ISOPvBlqPrd_Sequencial, PRODUTOS.ISOPrd_Codigo AS ISOPvBlqPrd_CodProduto, '' AS ISOPvBlqPrd_CodArmazem, 0 AS ISOPvBlqPrd_Quantidade, 'N' AS ISOPvBlqPrd_Exclui, 'A' AS ISOPvBlqPrd_Flag, dbo.dataiso2() AS ISOPvBlqPrd_DataAlteracao, 1 AS ISOPvBlqPrd_UsuarioAlteracao
FROM PRODUTOS
	INNER JOIN DBO.ISOPVBLOQUEIO
		ON PRODUTOS.ISOEmp_Codigo = ISOPVBLOQUEIO.ISOEmp_Codigo AND
			ISOPVBLOQUEIO.ISOPvBlq_Codigo = 616 AND
			ISOPVBLOQUEIO.ISOPvBlq_Flag = 'A'
UNION ALL
SELECT        ISOEmp_Codigo, ISOPvBlq_Codigo, ISOPvBlqPrd_Sequencial, ISOPvBlqPrd_CodProduto, ISOPvBlqPrd_CodArmazem, ISOPvBlqPrd_Quantidade, ISOPvBlqPrd_Exclui, ISOPvBlqPrd_Flag, ISOPvBlqPrd_DataAlteracao,
                         ISOPvBlqPrd_UsuarioAlteracao
FROM            DBO.ISOPVBLQPRODUTO;


-- ConexaoISO.Lista_de_Fator_de_Conversao source

CREATE VIEW Lista_de_Fator_de_Conversao
as
select
T1.ISOPrd_Codigo				as "Cod Produto",
t1.ISOPrd_Descricao				as "Poduto",
T5.ISOPrdUndFatC_UndOrigem		as "Medida",
T5.ISOPrdUndFatC_UndDestino		as "Uni. Medida Destino",
T5.ISOPrdUndFatC_FatorConversao	as "Fator Conversão",
T5.ISOPrdUndFatC_DataAlteracao	as "Data Alteracão",
T6.ISOEnt_Nome					as "Usuário de Alteracão",
T4.ISOPrdAttOptValue			as "Categoria de Vendas"

from ISOPRODUTO T1

left join ISOPRDATTVALUES T2
on T2.ISOEmp_Codigo				= T1.ISOEmp_Codigo
and T2.ISOPrd_Codigo			= T1.ISOPrd_Codigo

left join ISOPrdAtt T3
on T3.ISOEmp_Codigo				= T2.ISOEmp_Codigo
and T3.ISOPrdAttId				= T2.ISOPrdAttId

inner join ISOPRDATTLEVEL1 T4
on T4.ISOEmp_Codigo				= T2.ISOEmp_Codigo
and T4.ISOPrdAttId				= T2.ISOPrdAttId
and T4.ISOPrdAttOptId			= T2.ISOPrdAttOptId

Left join ISOPrdUndFatorConversao T5
on T5.ISOEmp_Codigo				= T1.ISOEmp_Codigo
and T5.ISOPrdUndFatC_PrdCodigo	= T1.ISOPrd_Codigo
and T5.ISOPrdUndFatC_Flag = 'A'

inner join ISOENTIDADE T6
on T6.ISOEnt_Codigo				= T5.ISOPrdUndFatC_UsuarioAlteracao

where T1.ISOEmp_Codigo = 11
and T3.ISOPrdAttId in (25,24,23,22)
--and T2.ISOPrdAttOptId is not NULL;


-- ConexaoISO.MACRO_PEDIDO_ABERTO_ERRO source

CREATE VIEW MACRO_PEDIDO_ABERTO_ERRO
AS
with
	prazo_medio_cp as (
		SELECT ISOEmp_Codigo, ISOPvEstab_Codigo, ISOPvTV_Codigo, sum(ISOPvEstTbVPar_QtdDias * ISOPvEstTbVPar_Percentagem / 100.0) prazo_medio_cp
			FROM ISOPVESTAB_TBLVENDAPARCELAS with (readpast)
			WHERE ISOEmp_Codigo = 11
			group by ISOEmp_Codigo, ISOPvEstab_Codigo, ISOPvTV_Codigo),
	pedidos as (
		select
			ISOPVPEDIDO.ISOEmp_Codigo,
			ISOPVPEDIDO.ISOPvPed_Codigo,
			ISOPVPEDIDO.ISOPvPed_CliCodigo,
			ISOPVPEDIDO.ISOPvPed_DtaPedido,
			ISOPVPEDIDO.ISOPvPed_DtaSolEntrega,
			ISOPVPEDIDO.ISOPvPed_DtaAberPedido+ISOPVPEDIDO.ISOPvPed_HoraPedido as ISOPvPed_DtaAberPedido,
			ISOPVPEDIDO.ISOPvPedSit_Codigo,
			ISOPVCD.ISOPvCD_Estabelecimento,
			ISOPVPEDIDO.ISOPvPed_Pagamento,
			ISOEMPENT_ORIGEM.ISOEmpEnt_Ori_Codigo,
			ISOPVPEDIDO.ISOPvPed_UsuarioAlteracao,
			ISOPVPEDIDO.ISOPvPed_DataAlteracao,
			ISOPVPEDIDO.ISOPvPedOri_Codigo,
			ISOPVPEDIDO.ISOPvPedTip_Codigo,
			SUM(ISOPVPEDITEM.ISOPvPedIte_PrecoAjustadoTotal) TOTAL_PEDIDO
			from ISOPVPEDIDO with (readpast)
					INNER JOIN ISOPVCD with (readpast) ON
						ISOPVPEDIDO.ISOEmp_Codigo = ISOPVCD.ISOEmp_Codigo AND
						ISOPVPEDIDO.ISOPvPed_EstadoOrigem = ISOPVCD.ISOPvCD_Origem AND
						ISOPVPEDIDO.ISOPvPed_EstadoDestino = ISOPVCD.ISOPvCD_Destino
					INNER JOIN ISOPVPEDITEM with (readpast)
						ON ISOPVPEDIDO.ISOEmp_Codigo = ISOPVPEDITEM.ISOEmp_Codigo
						AND ISOPVPEDIDO.ISOPvPed_Codigo = ISOPVPEDITEM.ISOPvPed_Codigo
					LEFT OUTER JOIN ISOEMPENT_ORIGEM with (readpast) ON
						ISOPVPEDIDO.ISOEmp_Codigo = ISOEMPENT_ORIGEM.ISOEmp_Codigo AND
						ISOPVPEDIDO.ISOPvPed_CliCodigo = ISOEMPENT_ORIGEM.ISOEmpEnt_EntCodigo AND
						ISOEMPENT_ORIGEM.ISOEmpOri_Codigo = 13
			where ISOPVPEDIDO.ISOEmp_Codigo = 11
			and ISOPVPEDIDO.ISOPvPedSit_Codigo = 17
			group by ISOPVPEDIDO.ISOEmp_Codigo, ISOPVPEDIDO.ISOPvPed_Codigo, ISOPVPEDIDO.ISOPvPed_CliCodigo, ISOPVPEDIDO.ISOPvPed_DtaPedido, ISOPVPEDIDO.ISOPvPed_DtaSolEntrega, ISOPVPEDIDO.ISOPvPed_DtaAberPedido, ISOPVPEDIDO.ISOPvPed_HoraPedido, ISOPVPEDIDO.ISOPvPedSit_Codigo, ISOPVCD.ISOPvCD_Estabelecimento, ISOPVPEDIDO.ISOPvPed_Pagamento, ISOEMPENT_ORIGEM.ISOEmpEnt_Ori_Codigo, ISOPVPEDIDO.ISOPvPed_UsuarioAlteracao, ISOPVPEDIDO.ISOPvPed_DataAlteracao, ISOPVPEDIDO.ISOPvPedOri_Codigo, ISOPVPEDIDO.ISOPvPedTip_Codigo),
	clientes as (
		SELECT cod_cliente, loja, prazo_medio_cliente, limite_credito, total_contas_receber, ped_em_aberto, data_ultima_compra, data_titulo
		FROM ANALISE_CREDITO with (readpast)),
	usuarios as (
		SELECT
			ISOENTIDADE.ISOEnt_Codigo,
			ISOENTIDADE.ISOEnt_Nome
		FROM ISOENTIDADE with (readpast)
			INNER JOIN ISOENTUSUARIO with (readpast)
			ON ISOENTIDADE.ISOEnt_Codigo = ISOENTUSUARIO.ISOEntUsu_Codigo
	),
	pedido_item as (
		select
			ISOPVPEDITEM.ISOEmp_Codigo,
			ISOPVPEDITEM.ISOPvPed_Codigo,
			ISOPVPEDITEM.ISOPvPedIte_Codigo,
			ISOPVPEDITEM.ISOPrd_Codigo,
			ISOPVPEDITEM.ISOPvPedIte_Quantidade,
			ISOPVPEDITEM.ISOPvPedIte_UnidadeOrigem,
			ISOPVPEDITEM.ISOPvPedIte_UnidadeDestino,
			ISOPVPEDITEM.ISOPvPedIte_ValorPISST,
			ISOPVPEDITEM.ISOPvPedIte_ValorCofinsST,
			ISOPVPEDITEM.ISOPVPedIte_ValorFCPST,
			ISOPVPEDITEM.ISOPvPedIte_ValorFCP,
			ISOPVPEDITEM.ISOPvPedIte_ValorIPI,
			ISOPVPEDITEM.ISOPvPedIte_VlrSubsTributaria,
			ISOPVPEDITEM.ISOPvPedIte_ValorICMS,
			ISOPVPEDITEM.ISOPvPedIte_ValorPIS,
			ISOPVPEDITEM.ISOPvPedIte_ValorCofins,
			ISOPVPEDITEM.ISOPvPedIte_PrecoAjustado,
			ISOPVPEDITEM.ISOPvPedIte_PrecoAjustadoTotal,
			ISOPVPEDITEM.ISOPvPedIte_ValorUnitario
		from
			ISOPVPEDIDO with (readpast)
				INNER JOIN ISOPVPEDITEM with (readpast)
				ON ISOPVPEDIDO.ISOEmp_Codigo = ISOPVPEDITEM.ISOEmp_Codigo
				AND ISOPVPEDIDO.ISOPvPed_Codigo = ISOPVPEDITEM.ISOPvPed_Codigo
		where ISOPVPEDIDO.ISOEmp_Codigo = 11
		and ISOPVPEDITEM.ISOPvPedIteSit_Codigo not in (9)
		AND ISOPVPEDIDO.ISOPvPedSit_Codigo IN (17)
	),
	unidade_medida as (
		select
			ISOEmp_Codigo,
			ISOPrdUndFatC_PrdCodigo,
			ISOPrdUndFatC_UndOrigem,
			ISOPrdUndFatC_UndDestino,
			ISOPrdUndFatC_Armazem,
			case
				when ISOPrdUndFatC_UndDestino = 'M' then 1 / ISOPrdUndFatC_FatorConversao
				else ISOPrdUndFatC_FatorConversao
			end ISOPrdUndFatC_FatorConversao,
			ISOPrdUndFatC_Flag
		from
			ISOPRDUNDFATORCONVERSAO with (readpast)
		where
			ISOEmp_Codigo = 11
			and ISOPrdUndFatC_Armazem = ''
			and ISOPrdUndFatC_Flag = 'A'
	)

select
	pedidos.isoemp_codigo,
	pedidos.isopvped_codigo,
	pedidos.ISOPvPed_Pagamento,
	pedidos.ISOPvCD_Estabelecimento,
	prazo_medio_cp.prazo_medio_cp,
	pedido_item.ISOPvPedIte_Codigo,
	clientes.cod_cliente,
	clientes.loja,
	coalesce(clientes.prazo_medio_cliente,0) as prazo_medio_cliente,
	pedidos.ISOPvPed_DataAlteracao,
	pedidos.ISOPvPed_DtaSolEntrega,
	pedidos.ISOPvPed_DtaPedido,
	pedidos.ISOPvPed_DtaAberPedido,
	clientes.limite_credito,
	total_contas_receber,
	ped_em_aberto,
	data_ultima_compra,
	data_titulo,
	pedidos.total_pedido,
	pedidos.ISOPvPed_CliCodigo,
	pedidos.ISOPvPedSit_Codigo,
	pedido_item.ISOPrd_Codigo,
	coalesce(USUARIOS.ISOENT_CODIGO,'') AS ISOPvPed_UsuarioAlteracao,
	coalesce(USUARIOS.ISOENT_NOME,'') AS ISOPvPed_NomeAlteracao,
	pedido_item.ISOPvPedIte_Quantidade,
	coalesce(pedido_item.ISOPvPedIte_PrecoAjustado,0) AS ISOPvPedIte_PrecoAjustado,
	coalesce(pedido_item.ISOPvPedIte_PrecoAjustadoTotal,0) AS ISOPvPedIte_PrecoAjustadoTotal,
	pedido_item.ISOPvPedIte_ValorUnitario,
	pedido_item.ISOPvPedIte_UnidadeOrigem,
	pedido_item.ISOPvPedIte_UnidadeDestino,
	unidade_medida.ISOPrdUndFatC_FatorConversao,
	coalesce(pedido_item.ISOPvPedIte_ValorPISST,0) as ISOPvPedIte_ValorPISST,
	coalesce(pedido_item.ISOPvPedIte_ValorCofinsST,0) as ISOPvPedIte_ValorCofinsST,
	coalesce(pedido_item.ISOPVPedIte_ValorFCPST,0) as ISOPVPedIte_ValorFCPST,
	coalesce(pedido_item.ISOPvPedIte_ValorFCP,0) as ISOPvPedIte_ValorFCP,
	coalesce(pedido_item.ISOPvPedIte_ValorIPI,0) as ISOPvPedIte_ValorIPI,
	coalesce(pedido_item.ISOPvPedIte_VlrSubsTributaria,0) as ISOPvPedIte_VlrSubsTributaria,
	coalesce(pedido_item.ISOPvPedIte_ValorICMS,0) as ISOPvPedIte_ValorICMS,
	coalesce(pedido_item.ISOPvPedIte_ValorPIS,0) as ISOPvPedIte_ValorPIS,
	coalesce(pedido_item.ISOPvPedIte_ValorCofins,0) as ISOPvPedIte_ValorCofins,
	pedidos.ISOPvPedOri_Codigo,
	pedidos.ISOPvPedTip_Codigo,
	--CASE
	--	WHEN (clientes.LIMITE_CREDITO - clientes.TOTAL_CONTAS_RECEBER - clientes.PED_EM_ABERTO) < pedidos.TOTAL_PEDIDO THEN 'LIMITE DE CREDITO EXCEDIDO'
	--	WHEN (DATEDIFF(DD,clientes.DATA_ULTIMA_COMPRA,GETDATE()) > 60) THEN 'SEM COMPRA A MAIS DE 60 DIAS'
	--	WHEN (DATEDIFF(DD,clientes.DATA_TITULO,GETDATE()) > 1) THEN 'TITULOS EM ABERTO'
	--	WHEN (prazo_medio_cp.PRAZO_MEDIO_CP > clientes.PRAZO_MEDIO_CLIENTE) THEN 'PRAZO MEDIO SUPERIOR AO AUTORIZADO'
	--	ELSE ''
	--END

	CASE
		WHEN (clientes.LIMITE_CREDITO - clientes.TOTAL_CONTAS_RECEBER - clientes.PED_EM_ABERTO) < pedidos.TOTAL_PEDIDO THEN 'LIMITE DE CREDITO EXCEDIDO' + ', '
		ELSE ''
	END +
	CASE
		WHEN (DATEDIFF(DD,clientes.DATA_ULTIMA_COMPRA,GETDATE()) > 60) THEN 'SEM COMPRA A MAIS DE 60 DIAS' + ', '
		ELSE ''
	END +
	CASE
		WHEN (DATEDIFF(DD,clientes.DATA_TITULO,GETDATE()) > 1) THEN 'TITULOS EM ABERTO' + ', '
		ELSE ''
	END +
	CASE
		WHEN (prazo_medio_cp.PRAZO_MEDIO_CP > clientes.PRAZO_MEDIO_CLIENTE) THEN 'PRAZO MEDIO SUPERIOR AO AUTORIZADO'
		ELSE ''
	END
	AS SITUACAO
	from prazo_medio_cp
		inner join pedidos
			on prazo_medio_cp.isoemp_codigo = pedidos.isoemp_codigo
			and prazo_medio_cp.ISOPvEstab_Codigo = pedidos.ISOPvCD_Estabelecimento
			and prazo_medio_cp.ISOPvTV_Codigo = pedidos.ISOPvPed_Pagamento
			and pedidos.ISOEmp_Codigo = 11
		INNER JOIN CLIENTES
			on clientes.cod_cliente + clientes.loja = pedidos.ISOEmpEnt_Ori_Codigo
		inner join pedido_item
			on pedidos.isoemp_codigo = pedido_item.isoemp_codigo
			and pedidos.isopvped_codigo = pedido_item.isopvped_codigo
		inner join unidade_medida
			on pedido_item.ISOEmp_Codigo = unidade_medida.ISOEmp_Codigo
			and pedido_item.ISOPrd_Codigo = unidade_medida.ISOPrdUndFatC_PrdCodigo
			and pedido_item.ISOPvPedIte_UnidadeOrigem = unidade_medida.ISOPrdUndFatC_UndOrigem
			and pedido_item.ISOPvPedIte_UnidadeDestino = unidade_medida.ISOPrdUndFatC_UndDestino
		LEFT OUTER JOIN USUARIOS
			ON PEDIDOS.ISOPvPed_UsuarioAlteracao = USUARIOS.ISOENT_CODIGO;


-- ConexaoISO.MD_VW_TrfDadoComplementar source

CREATE VIEW MD_VW_TrfDadoComplementar as
Select T01.ISOEmp_Codigo,
       T01.ISOWFTrf_CodModulo,
	   T02.ISOWFTrfPadAttValue,
	   T02.ISOWFTrfPadAttId,
	   T02.ISOWFTrfPadAttOptId,
	   T02.ISOWFTrfPadAttValueLong,
	   T02.ISOWFTrfPadFormDefId
  From ISOWFTarefa T01
       Inner Join ISOWFtrfPadAttValues T02
          On T02.ISOEmp_Codigo            = T01.ISOEmp_Codigo
         And T02.ISOWFPrcTrfAtt_PrcCodigo = T01.ISOWFPrc_Codigo
         And T02.ISOWFPrcTrfAtt_TrfCodigo = T01.ISOWFTrf_Codigo;


-- ConexaoISO.RP_005_isoMKT_Campanha source

CREATE VIEW RP_005_isoMKT_Campanha as
--Alter View RP_005_isoMKT_Campanha as
/*
Autor      : Edison
Data       : 28/05/2014
Atendimento: 11266

*/
Select
       T01.ISOMKAteCmp_Descricao                 as DM_005_Campanha,
       T02.ISOMkDiv_Descricao                    as DM_005_FormaDeDivulgacao,
       T03.ISOMKFin_Descricao                    as DM_005_Finalidade,
       RTrim(T05.ISOEnt_Nome)                    as DM_005_Entidade,
       Case
           When T04.ISOMkAteCmpCnt_Prioridade = 1 Then 'ALTA'
           When T04.ISOMkAteCmpCnt_Prioridade = 2 Then 'Mï¿½DIA'
           When T04.ISOMkAteCmpCnt_Prioridade = 3 Then 'BAIXA'
           Else                                        'Nï¿½O DEFINIDA'
       End                                       as DM_005_Prioridade,
--       Case
--           When T06.ISOEntSeg_Codigo Is Not Null Then T07.ISOEntSeg_Descricao
--           When T08.ISOEntSeg_Codigo Is Not Null Then T09.ISOEntSeg_Descricao
--           Else                                  'Nï¿½O INFORMADO'
--       End                                       as DM_005_Segmento,
--       T10.ISOEntRamAtv_Descricao                as DM_005_RamoDeAtividade,
--       Case
--           When T08.ISOEntPes_Sexo = 'M' Then 'MASCULINO'
--           When T08.ISOEntPes_Sexo = 'F' Then 'FEMININO'
--           When T08.ISOEntPes_Sexo = 'N' Then 'Nï¿½O INFORMADO'
--           Else                                Null
--       End                                       as DM_005_Sexo,
--       RTrim(T11.ISOProf_Descricao)              as DM_005_Profissao,
--       RTRIM(T12.ISONivEsc_Descricao)            as DM_005_NivelEscolaridade,
--       RTRIM(T13.ISOEstCiv_Descricao)            as DM_005_EstadoCivil,
       RTRIM(T14.ISOMKCntSit_Descricao)          as DM_005_Situacao,
	   RTrim(T15.ISOMkAteCmpCntDet_Descritivo)   as DM_005_DetDescricao,
       RTRIM(T16.ISOMKFinRsl_Descricao)          as DM_005_Resultado,
       RTRIM(T17.ISOMKFinCla_Descricao)          as DM_005_Classificacao,
       RTRIM(T18.ISOEnt_Nome)                    as DM_005_Agente,
       T15.ISOMKAteCmpCntDet_DataAlteraca        as DM_005_DataContato,
       Year(T15.ISOMKAteCmpCntDet_DataAlteraca)  as DM_005_AnoContato,
       Month(T15.ISOMKAteCmpCntDet_DataAlteraca) as DM_005_MesContato,
	   RTrim(T19.ISOEnt_Nome)                    as DM_005_Responsavel,
	   T30.ISOMkAteCmpCntFormDefName	         AS DM_005_ISOMkCntAttFormulario,
	   T29.ISOMkAteCmpCntAttName                 AS DM_005_ISOMkCntAttPergunta,
	   CASE
	       WHEN T29.ISOMkAteCmpCntAttType = 4    THEN T32.ISOMkAteCmpCntAttOptValue
		   ELSE T31.ISOMkAteCmpCntAttValue
       END
												 AS DM_005_ISOMkCntAttResposta,
       T31.ISOMkAteCmpCntAttOtherValue           AS DM_005_ISOMkCntAttOtherValue,
	   RTrim(T20.ISOEnt_Nome)                    as DM_005_UsuarioAlteracao,
       1                                         as MT_005_QuantidadeContatos,
       'V.002'                                   as DM_005_VersaoVW
  From ISOMKAteCampanha T01
       Inner Join ISOMKDIVULGACAO T02
          On T02.ISOEmp_Codigo               = T01.ISOEmp_Codigo
         And T02.ISOMkDiv_Codigo             = T01.ISOMkDiv_Codigo
       Inner Join ISOMKFINALIDADE T03
          On T03.ISOEmp_Codigo               = T01.ISOEmp_Codigo
         And T03.ISOMkFin_Codigo             = T01.ISOMkFin_Codigo
       Inner Join ISOMKATECMPCONTATO T04
          On T04.ISOEmp_Codigo               = T01.ISOEmp_Codigo
         And T04.ISOMkAteCmp_Codigo          = T01.ISOMkAteCmp_Codigo
       Inner Join ISOEntidade T05 -- Entidade Contatada
          On T05.ISOEnt_Codigo               = T04.ISOMkAteCmpCnt_EntCodigo
--        Left Join ISOENTORGANIZACAO T06
--          On T06.ISOEntOrg_Codigo            = T04.ISOMkAteCmpCnt_EntCodigo
--        Left Join ISOENTSEGMENTO T07
--          On T07.ISOEntSeg_Codigo            = T06.ISOEntSeg_Codigo
--        Left Join ISOENTPESSOA T08
--          On T08.ISOEntPes_Codigo            = T04.ISOMkAteCmpCnt_EntCodigo
--        Left Join ISOENTSEGMENTO T09
--          On T09.ISOEntSeg_Codigo            = T08.ISOEntSeg_Codigo
--        Left Join ISOENTRAMOATIVIDADE T10
--          On T10.ISOEntRamAtv_Codigo         = T06.ISOEntRamAtv_Codigo
--        Left Join ISOPROFISSAO T11
--          On T11.ISOProf_Codigo              = T08.ISOProf_Codigo
--        Left Join ISONIVESCOLARIDADE T12
--          On T12.ISONivEsc_Codigo            = T08.ISONivEsc_Codigo
--        Left Join ISOESTCIVIL T13
--          On T13.ISOEstCiv_Codigo            = T08.ISOEstCiv_Codigo
        Left Join ISOMKCNTSITUACAO T14
          On T14.ISOMkCntSit_Codigo          = T04.ISOMkCntSit_Codigo
        Left Join ISOMKATECMPCNTDETALHE T15
          On T15.ISOEmp_Codigo               = T04.ISOEmp_Codigo
         And T15.ISOMkAteCmp_Codigo          = T04.ISOMkAteCmp_Codigo
         And T15.ISOMkAteCmpCnt_Sequencia    = T04.ISOMkAteCmpCnt_Sequencia
--         And T15.ISOMkAteCmpCntDet_Sequencia = (Select MAX(TA1.ISOMKAteCmpCntDet_Sequencia)
--                                                  From ISOMKATECMPCNTDETALHE TA1
--                                                 Where TA1.ISOEmp_Codigo            = T15.ISOEmp_Codigo
--                                                   And TA1.ISOMkAteCmp_Codigo       = T15.ISOMkAteCmp_Codigo
--                                                   And TA1.ISOMkAteCmpCnt_Sequencia = T15.ISOMkAteCmpCnt_Sequencia)
        Left Join ISOMKFINRESULTADO T16
          On T16.ISOEmp_Codigo               = T03.ISOEmp_Codigo
         And T16.ISOMkFin_Codigo             = T03.ISOMkFin_Codigo
         And T16.ISOMkFinRsl_Codigo          = T15.ISOMkFinRsl_Codigo
        Left Join ISOMKFINCLASSIFICACAO T17
          On T17.ISOEmp_Codigo               = T03.ISOEmp_Codigo
         And T17.ISOMkFin_Codigo             = T03.ISOMkFin_Codigo
         And T17.ISOMkFinCla_Codigo          = T15.ISOMkFinCla_Codigo
        Left Join ISOENTIDADE T18 -- Agente
          On T18.ISOEnt_Codigo               = T15.ISOMkAteCmpCntDet_CodigoAgente
        Left Join ISOEntidade T19 -- Responsï¿½vel
		  On T19.ISOEnt_Codigo               = T15.ISOMkAteCmpCntDet_CodigoRespon
	    Left Join ISOEntidade T20 -- Usuï¿½rio de alteraï¿½ï¿½o
		  On T20.ISOEnt_Codigo               = T15.ISOMkAteCmpCntDet_UsuarioAlter


		LEFT JOIN ISOMKATECMPCNTATT T29
		  ON T29.ISOEmp_Codigo            = T01.ISOEmp_Codigo
		 AND T29.ISOMkFin_Codigo          = T01.ISOMkFin_Codigo
		 AND T29.ISOMkAteCmpCntAtt_Flag   = 'A'
	    LEFT JOIN ISOMKATECMPCNTFORMDEF T30
		  ON T30.ISOEmp_Codigo            = T29.ISOEmp_Codigo
		 AND T30.ISOMkFin_Codigo          = T29.ISOMkFin_Codigo
		 AND T30.ISOMKAteCmpCntFormDefId  = T29.ISOMKAteCmpCntFormDefId
		LEFT JOIN ISOMKATECMPCNTATTVALUES T31
		  ON T31.ISOEmp_Codigo            = T04.ISOEmp_Codigo
		 AND T31.ISOMkAteCmp_Codigo       = T04.ISOMkAteCmp_Codigo
		 AND T31.ISOMkAteCmpCnt_Sequencia = T04.ISOMkAteCmpCnt_Sequencia
		 AND T31.ISOMKAteCmpCntFormDefId  = T29.ISOMKAteCmpCntFormDefId
		 AND T31.ISOMkAteCmpCntAttId      = T29.ISOMkAteCmpCntAttId
		 AND T31.ISOMkAteCmpCntAttValue_Flag = 'A'
		LEFT JOIN ISOMKATECMPCNTATTLEVEL1 T32
		  ON T32.ISOEmp_Codigo            = T29.ISOEmp_Codigo
		 AND T32.ISOMkFin_Codigo          = T29.ISOMkFin_Codigo
		 AND T32.ISOMKAteCmpCntFormDefId  = T29.ISOMKAteCmpCntFormDefId
		 AND T32.ISOMkAteCmpCntAttId      = T29.ISOMkAteCmpCntAttId
		 AND T32.ISOMkAteCmpCntAttOptId   = T31.ISOMkAteCmpCntAttOptId;


-- ConexaoISO.RP_007A_isoATN_AtendResp source

CREATE VIEW RP_007A_isoATN_AtendResp as
---------------------------------------------
-- Criaï¿½ï¿½o  : Edison T Washimi             --
-- Data     : 24/02/2015                   --
-- Atend    : 12787                        --
---------------------------------------------
---------------------------------------------
-- Criaï¿½ï¿½o  : Diogo Peres Barriquel        --
-- Data     : 23/02/2015                   --
-- Atend    : 13167                        --
---------------------------------------------
---------------------------------------------
-- Alteraï¿½ï¿½o: Diogo Peres Barriquel        --
-- Data     : 10/09/2015                   --
-- Atend    : 13997                        --
---------------------------------------------
---------------------------------------------
-- Alteraï¿½ï¿½o: Diogo Peres Barriquel        --
-- Data     : 30/09/2015                   --
-- Atend    : 14128                        --
---------------------------------------------
Select Distinct
       T01.ISOEmp_Codigo                             as DM_007_CodEmpresa,
       T01.ISOSAAte_DataAbertura                     as DM_007_DataAbertura,
       Year(T01.ISOSAAte_DataAbertura)               as DM_007_AnoAbertura,
       Month(T01.ISOSAAte_DataAbertura)              as DM_007_MesAbertura,
       RTrim(T02.ISOEnt_Nome)                        as DM_007_NomeEntidade,
       RTrim(T03.ISOSASit_Descricao)                 as DM_007_DescSituacaoAtend,
       RTrim(T04.ISOSAMot_Descricao)                 as DM_007_DescMotivoAtend,
       RTrim(T05.ISOSAAteDet_Descricao)              as DM_007_DescDetAtend,
       RTrim(T07.ISOWFTrf_Descricao)                 as DM_007_DescTarefaWF,
	   RTrim(T08.ISOSAMotOcr_Descricao)              as DM_007_DescOcorrencia,
       RTrim(T09.ISOSAMotOcrCau_Descricao)           as DM_007_DescCausa,
       RTrim(T10.ISOEnt_Nome)                        as DM_007_NomeRespResWF,
       T01.ISOSAAte_Codigo                           as DM_007_CodigoAtendimento,
       T01.ISOSASit_Codigo                           as MT_007_CodSituacaoAtend,
       T14.ISOEnt_Nome                               as MT_007_NomeRespWF,
	   1                                             as MT_007_Quantidade,
	   T01.ISOSAAte_UsuCodigo                        as DM_007_CodigoUsuAbertura,
	   T15.ISOEnt_Nome                               as DM_007_NomeUsuAbertura,
	   --T16.ISOEntCli_CodigoExt                       as DM_007_CliCodigoExterno,
	   T17.ISOEmpOri_Codigo                          as DM_007_CodigoOrigem,
	   T18.ISOEmpOri_Descricao                       as DM_007_DescOrigem,
	   T17.ISOEmpEnt_Ori_Codigo                      as DM_007_CliCodigoExterno ,

       'V.006'                                       as DM_007_VersaoVW
  From ISOSAAtendimento T01
       Inner Join ISOEntidade T02 -- Entidade Cliente do Atendimento
          On T02.ISOEnt_Codigo           = T01.ISOSAAte_EntCodigo
        Left Join ISOSASituacao T03
          On T03.ISOEmp_Codigo           = T01.ISOEmp_Codigo
         And T03.ISOSASit_Codigo         = T01.ISOSASit_Codigo
        Left Join ISOSAMotivo T04
          On T04.ISOEmp_Codigo           = T01.ISOEmp_Codigo
         And T04.ISOSAMot_Codigo         = T01.ISOSAMot_Codigo
        Left Join ISOSAAteDetalhe T05
          On T05.ISOEmp_Codigo           = T01.ISOEmp_Codigo
         And T05.ISOSAAte_Codigo         = T01.ISOSAAte_Codigo
         And T05.ISOSAAteDet_Codigo      = (Select Min(TA1.ISOSAAteDet_Codigo)
                                              From ISOSAAteDetalhe TA1
                                             Where TA1.ISOEmp_Codigo   = T05.ISOEmp_Codigo
                                               And TA1.ISOSAAte_Codigo = T05.ISOSAAte_Codigo)
        Left Join ISOWFTarefa T07
          On T07.ISOEmp_Codigo           = T01.ISOEmp_Codigo
         And T07.ISOWFtrf_CodModulo      = T01.ISOSAAte_Codigo
         And T07.ISOWFTrf_Automatica     = 0
         And (T07.ISOWFTrf_SitInterna     = 'Enc' Or T07.ISOWFTrf_SitInterna     = 'Res')
        Left Join ISOSAMotOcorrencia T08
          On T08.ISOEmp_Codigo           = T04.ISOEmp_Codigo
         And T08.ISOSAMot_Codigo         = T04.ISOSAMot_Codigo
         And T08.ISOSAMotOcr_Codigo      = T01.ISOSAMotOcr_Codigo
        Left Join ISOSAMotOcrCausa T09
          On T09.ISOEmp_Codigo           = T08.ISOEmp_Codigo
         And T09.ISOSAMot_Codigo         = T08.ISOSAMot_Codigo
         And T09.ISOSAMotOcr_Codigo      = T08.ISOSAMotOcr_Codigo
         And T09.ISOSAMotOcrCau_Codigo   = T01.ISOSAMotOcrCau_Codigo
        Left Join ISOEntidade T10 -- Responsï¿½vel da Reserva
          On T10.ISOEnt_Codigo           = T07.ISOWFTrf_RspRes_RspCodigo
		Left Join ISOEntidade T14 -- Responsï¿½vel da tarefa
		  On T14.ISOEnt_Codigo           = T07.ISOWFTrf_RspCodigo
		Left Join ISOEntidade T15
		  On T15.ISOEnt_Codigo           = T01.ISOSAAte_UsuCodigo
		--Left Join ISOEntCliente T16
		--  On T16.ISOEmp_Codigo           = T01.ISOEmp_Codigo
		-- And T16.ISOEntCli_Codigo        = T01.ISOSAAte_EntCodigo
		Left Join ISOEMPENT_ORIGEM T17
		  On T17.ISOEmp_Codigo           = T01.ISOEmp_Codigo
		 And T17.ISOEmpEnt_EntCodigo     = T01.ISOSAAte_EntCodigo
		Left join ISOEmpOrigem T18
		  On T18.ISOEmp_Codigo           = T17.ISOEmp_Codigo
		 And T18.ISOEmpOri_Codigo        = T17.ISOEmpOri_Codigo;


-- ConexaoISO.RP_007_isoATN_AtendimentosResp source

CREATE VIEW RP_007_isoATN_AtendimentosResp as
---------------------------------------------
-- Autor: Edison T Washimi                 --
-- Data de Criaï¿½ï¿½o: 01/03/2013             --
---------------------------------------------
---------------------------------------------
-- Alteraï¿½ï¿½o: Edison T Washimi             --
-- Data     : 25/04/2014                   --
---------------------------------------------
---------------------------------------------
-- Alteraï¿½ï¿½o: Edison T Washimi             --
-- Data     : 08/08/2014                   --
-- Atend    : 11687                        --
---------------------------------------------
---------------------------------------------
-- Alteraï¿½ï¿½o: Edison T Washimi             --
-- Data     : 24/02/2015                   --
-- Atend    : 12787                        --
---------------------------------------------
---------------------------------------------
-- Alteraï¿½ï¿½o: Diogo Peres Barriquel        --
-- Data     : 14/04/2015                   --
-- Atend    : 13130                        --
---------------------------------------------
---------------------------------------------
-- Alteraï¿½ï¿½o: Diogo Peres Barriquel        --
-- Data     : 23/04/2015                   --
-- Atend    : 13167                        --
---------------------------------------------
---------------------------------------------
-- Alteraï¿½ï¿½o: Diogo Peres Barriquel        --
-- Data     : 10/09/2015                   --
-- Atend    : 13997                        --
---------------------------------------------
---------------------------------------------
-- Alteraï¿½ï¿½o: Diogo Peres Barriquel        --
-- Data     : 30/09/2015                   --
-- Atend    : 14128                        --
---------------------------------------------
Select Distinct
       T01.DM_007_DataAbertura               as DM_007_DataAbertura,
       Year(T01.DM_007_AnoAbertura)          as DM_007_AnoAbertura,
       Month(T01.DM_007_MesAbertura)         as DM_007_MesAbertura,
       RTrim(T01.DM_007_NomeEntidade)        as DM_007_NomeEntidade,
       RTrim(T01.DM_007_DescSituacaoAtend)   as DM_007_DescSituacaoAtend,
       RTrim(T01.DM_007_DescMotivoAtend)     as DM_007_DescMotivoAtend,
       RTrim(T01.DM_007_DescDetAtend)        as DM_007_DescDetAtend,
       RTrim(T01.DM_007_DescTarefaWF)        as DM_007_DescTarefaWF,
	   RTrim(T01.DM_007_DescOcorrencia)      as DM_007_DescOcorrencia,
       RTrim(T01.DM_007_DescCausa)           as DM_007_DescCausa,
       RTrim(T01.DM_007_NomeRespResWF)       as DM_007_NomeRespResWF,
       T01.DM_007_CodigoAtendimento          as DM_007_CodigoAtendimento,
	   T02.ISOInf_Codigo                     as DM_007_CodigoInformacao,
       T03.ISOInf_Descricao                  as DM_007_DescInformacao,
       T01.MT_007_CodSituacaoAtend           as MT_007_CodSituacaoAtend,
       T01.MT_007_NomeRespWF                 as MT_007_NomeRespWF,
	   T02.ISOSAAteDetInf_Observacao         as DM_007_ObsInformacao,
       T02.ISOSAAteDetInf_NroLote            as DM_007_NroLoteInformacao,
       T02.ISOSAAteDetInf_NroSerie           as DM_007_NroSerieInformacao,
       T02.ISOSAAteDetInf_DtaFabricacao      as MT_007_DtaFabInformacao,
       T02.ISOSAAteDetInf_DtaValidade        as MT_007_DtaValInformacao,
       T02.ISOSAAteDetInf_Quantidade         as MT_007_QtdeInformacao,
	   1                                     as MT_007_Quantidade,
	   T01.DM_007_CodigoUsuAbertura          as DM_007_CodigoUsuAbertura,
	   T01.DM_007_NomeUsuAbertura            as DM_007_NomeUsuAbertura,
	   T01.DM_007_CodigoOrigem               as DM_007_CodigoOrigem,
	   T01.DM_007_DescOrigem                 as DM_007_DescOrigem,
	   T01.DM_007_CliCodigoExterno           as DM_007_CliCodigoExterno,

       'V.006'                               as DM_007_VersaoVW
  From RP_007A_isoATN_AtendResp T01
		Left Join ISOSAATEDETINFORMACAO T02
		  On T02.ISOEmp_Codigo           = T01.DM_007_CodEmpresa
		 And T02.ISOSAAte_Codigo         = T01.DM_007_CodigoAtendimento
		Left Join ISOINFORMACAO T03
		  On T03.ISOEmp_Codigo           = T02.ISOEmp_Codigo
		 And T03.ISOInf_Codigo           = T02.ISOInf_Codigo;


-- ConexaoISO.RP_008_isoCDS_EContact source

CREATE VIEW [RP_008_isoCDS_EContact] as
Select T1.ISOEntPes_Codigo           as DM_008_Codigo,
       T1.ISOEntPes_NomeCompleto     as DM_008_Nome,
       T2.isoentect_econtact         as DM_008_email,
	   T1.ISOEntPes_DataNascimento   as DM_008_Nascimento,
       T3.ISOProf_Descricao          as DM_008_profissao,
       T4.ISOEntSeg_Descricao        as DM_008_segmento,
       T6.ISOEntClaP_Descricao       as DM_008_Papel,
       T7.ISOEntCliSit_Descricao     as DM_008_Situacao,
       T14.ISOEntRlcTip_Descricao    as DM_008_TipodeRelacionamento,
       T15.ISOEntRlcTipNiv_Descricao as DM_008_NiveldeRelacionamento,
       T12.ISOEntRle_Codigo          as DM_008_RelacionadoEmCodigo,
       T13.ISOEnt_Nome               as DM_008_RelacionadoEmNome,
       T1.ISOEntPes_Sexo             as DM_008_sexo,
       T9.ISOLoc_Descricao           as DM_008_cidade,
       T10.ISOEst_Descricao          as DM_008_estado,
       'F'                           as DM_008_FisicaJuridica,
       T2.ISOEntEctTip_Principal     as DM_008_Principal,
       T11.ISOEntEctTip_Descricao    as DM_008_TipoEcontact,
       CASE
	       When T16.ISOEmlBlq_Email <> '' Then 'S'
	       Else 'N'
	   END as DM_008_BloqueioCampanha,
       1                             as MT_008_Quantidade,
       'V.004'                       as MT_008_VersaoVW
  From ISOENTPESSOA T1
       Inner Join ISOENTECONTACT T2
          On T2.ISOEnt_Codigo           = T1.ISOEntPes_Codigo
         And T2.isoenteml_flag          = 'A'
         And T2.isoentecttip_Principal  = 'S'
        Left Join ISOPROFISSAO T3
          On T1.ISOProf_Codigo          = T3.ISOProf_Codigo
        Left Join ISOENTSEGMENTO T4
          On T1.ISOEntSeg_Codigo        = T4.ISOEntSeg_Codigo
        Left Join ISOENTCLIENTE T5
          On T1.ISOEntPes_Codigo        = T5.ISOEntCli_Codigo
        Left Join ISOENtClassificacaoPapel T6
          On T6.ISOEntClaP_Codigo       = T5.ISOEntClaP_Codigo
        Left Join ISOENTCLISITUACAO T7
          On T7.ISOEntCliSit_Codigo     = T5.ISOEntCliSit_Codigo
         And T7.ISOEmp_Codigo           = T5.ISOEmp_Codigo
        Left Join ISOENTENDERECO T8
          On T1.ISOEntPes_Codigo        = T8.ISOEnt_Codigo
         And T8.ISOEntEnd_Principal     = 'S'
        Left Join ISOLOCALIDADE T9
          On T8.ISOLoc_Codigo           = T9.ISOLoc_Codigo
        Left Join ISOESTADO T10
          On T10.ISOEst_Codigo          = T9.ISOEst_Codigo
        Left Join ISOENTECTTIPO T11
          On T2.ISOEntEctTip_Codigo     = T11.ISOEntEctTip_Codigo
        Left Join ISOENT_RELACAO T12
          On T1.ISOEntPes_Codigo        = T12.ISOEntRlc_Codigo
        Left Join ISOENTIDADE T13
          On T13.ISOEnt_Codigo          = T12.ISOEntRle_Codigo
        Left Join ISOENTRLCTIPO T14
          On T14.ISOEntRlcTip_Codigo    = T12.ISOEntRlcTip_Codigo
        Left Join ISOENTRLCTIPNIVEL T15
          On T15.ISOEntRlcTip_Codigo    = T14.ISOEntRlcTip_Codigo
         And T15.ISOEntRlcTipNiv_Codigo = T12.ISOEntRlcTipNiv_Codigo
        Left Join ISOEMAILBLOQUEADO T16
          On T16.ISOEmlBlq_Email like T2.ISOEntEct_econtact
         And T16.ISOEmlBlq_DataInicioBloqueio < GETDATE()
         And T16.ISOEmlBlq_Flag = 'A';


-- ConexaoISO.RP_020_PRM_isoParametros source

CREATE VIEW RP_020_PRM_isoParametros as
--Alter View RP_020_PRM_isoParametros as

/*
--------------------------------------------------------------------
Autor      : Edison T Washimi
Data       : 13/12/2013
Descriï¿½ï¿½o  : Listagem dos parï¿½metros do isoCRM
Atendimento: 10115
--------------------------------------------------------------------
Alteraï¿½ï¿½o  :
Data       :
Descriï¿½ï¿½o  :
Atendimento:
--------------------------------------------------------------------
*/
Select T01.ISOEmp_Codigo                   as DM_20_EmpresaCodigo,         -- Cï¿½digo da Empresa
       T01.ISOEmpPrm_Codigo                as DM_20_ParametroCodigo,       -- Cï¿½digo do Parï¿½metro
       T01.ISOEmpPrm_Descricao             as DM_20_ParametroDescricao,    -- Descriï¿½ï¿½o do Parï¿½metro
       T01.ISOEmpPrm_Flag                  as DM_20_ParametroAtivo,        -- Parï¿½metro Ativo/Inativo
       Case
           When T02.ISOEntGrp_Codigo Is Null Then T02.ISOEntUsu_Codigo
           Else T02.ISOEntGrp_Codigo
       End                                 as DM_20_PrmGrupoUsuarioCodigo, -- Cï¿½digo do Usuï¿½rio ou Grupo
       Case
           When T02.ISOEntGrp_Codigo Is Null Then T05.ISOEnt_Nome
           Else T04.ISOEntGrp_Descricao
       End                                 as DM_20_PrmGrupoUsuarioNome,   -- Nome do Usuï¿½rio ou Descriï¿½ï¿½o do Grupo
       Case
           When T02.ISOEntGrp_Codigo Is Null Then 'U'
           Else                                   'G'
       End                                 as DM_20_PrmGrupoUsuarioTipo,   -- Indicador de Tipo, se ï¿½ G-rupo ou U-suï¿½rio (a informaï¿½ï¿½o acima)
       T02.ISOEmpPrm_GrpUsu_Ordem          as DM_20_PrmGrupoUsuarioOrdem,  -- Ordem do Grupo/Usuï¿½rio
       T02.ISOEmpPrm_GrpUsu_Flag           as DM_20_PrmGrpoUsuarioAtivo,   -- Grupo/Usuï¿½rio do Parï¿½metro Ativo/Inativo
       T03.ISOEmpPrm_GrpUsuDet_Ordem       as DM_20_PrmGrpUsuDetOrdem,     -- Ordem do Detalhe do Parï¿½metro
       T03.ISOEmpPrm_GrpUsuDet_Descricao   as DM_20_PrmGrpUsuDetDescricao, -- Descriï¿½ï¿½o do detalhe do Parï¿½metro
       T03.ISOEmpPrm_GrpUsuDet_Valor       as DM_20_PrmGrpUsuDetValor,     -- Valor do Detalhe do Parï¿½metro
       T03.ISOEmpPrm_GrpUsuDet_Flag        as DM_20_PrmGrpUsuDetAtivo,     -- Detalhe do Parï¿½metro Ativo/Inativo
       'V.001'                             as DM_20_VersaoView,            -- Versï¿½o da View
       1                                   as MT_20_QtdeRegistros          -- Mï¿½trica para contagem de registros

  From ISOEMPPARAMETROS T01
       Inner Join ISOEMPPRM_GRPUSUARIO T02
          On T02.ISOEmp_Codigo           = T01.ISOEmp_Codigo
         And T02.ISOEmpPrm_Codigo        = T01.ISOEmpPrm_Codigo
       Inner Join ISOEMPPRM_GRPUSUDETALHE T03
          On T03.ISOEmp_Codigo           = T02.ISOEmp_Codigo
         And T03.ISOEmpPrm_Codigo        = T02.ISOEmpPrm_Codigo
         And T03.ISOEmpPrm_GrpUsu_Codigo = T02.ISOEmpPrm_GrpUsu_Codigo
        Left Join ISOENTGRUPO T04
          On T04.ISOEmp_Codigo           = T02.ISOEmp_Codigo
         And T04.ISOEntGrp_Codigo        = T02.ISOEntGrp_Codigo
        Left Join ISOENTIDADE T05
          On T05.ISOEnt_Codigo           = T02.ISOEntUsu_Codigo;


-- ConexaoISO.RP_021_ISOSAAtendimento source

CREATE VIEW RP_021_ISOSAAtendimento as
SELECT T01.ISOEmp_Codigo                         as DM_21_EmpresaCodigo,
       T01.ISOSAAte_Codigo                       as DM_21_CodigoSAC,
       T01.ISOSAAte_DataAbertura                 as DM_21_DataAbertura,
       T01.ISOSAAte_EntCodigo                    as DM_21_ClienteCodigo,
	   T01.ISOSASit_Codigo                       as DM_21_CodigodaSituacao,
	   T18.ISOSASit_Descricao                    as DM_21_DescricaoSituacao,
       T04.ISOEnt_Nome                           as DM_21_ClienteNome,
	   T19.ISOEntCli_CodigoExt                   as DM_21_ClienteCodigoExterno,
	   T27.ISOEntClaP_Codigo                     as DM_21_CodClaPapelCliente,
	   RTrim(T27.ISOEntClaP_Descricao)           as DM_21_DscClaPapelCliente,
	   T28.ISOEntClaPEsp_Codigo                  as DM_21_CodEspClaPapelCliente,
	   RTRIM(T28.ISOEntClaPEsp_Codigo)           as DM_21_DscEspCLaPapelCliente,
       T07.ISOLoc_Codigo                         as DM_21_LocalidadeCodigo,
       T07.ISOLoc_Descricao                      as DM_21_LocalidadeDescricao,
       T08.ISOEst_Sigla                          as DM_21_LocalidadeUF,
       T01.ISOSAMot_Codigo                       as DM_21_MotivoCodigo,
       T11.ISOSAMot_Descricao                    as DM_21_MotivoDescricao,
       T01.ISOSAMotOcr_Codigo                    as DM_21_OcorrenciaCodigo,
       T12.ISOSAMotOcr_Descricao                 as DM_21_OcorrenciaDescricao,
       T01.ISOSAMotOcrCau_Codigo                 as DM_21_CausaCodigo,
       T13.ISOSAMotOcrCau_Descricao              as DM_21_CausaDescricao,
       T01.ISOEntUnd_Codigo                      as DM_21_UnidadeCodigo,
       T14.ISOEnt_Nome                           as DM_21_UnidadeDescricao,
	   T02.ISOSAAteDet_Codigo                    as DM_21_CodDetalhe,
       T02.ISOSAAteDet_Descricao                 as DM_21_DetalheDescricao,
       T02.ISOSAAteDet_Resposta                  as DM_21_DetalheResposta,
       T03.ISOInf_Codigo                         as DM_21_InformacaoCodigo,
       T05.ISOInf_Descricao                      as DM_21_InformacaoDescricao,
       T03.ISOSAAteDetInf_Observacao             as DM_21_InformacaoObservacao,
       T03.ISOSAAteDetInf_DtaValidade            as DM_21_InformacaoValidade,
	   T03.ISOSAAteDetInf_NroLote                as DM_21_InformacaoNroLote,
       T03.ISOSAAteDetInf_NroSerie               as DM_21_InformacaoNroSerie,
	   T03.ISOSAAteDetInf_DtaFabricacao          as DM_21_InformacaoDtaFabr,
       T02.ISOSAAte_EntContato                   as DM_21_ContatoDetalheCodigo,
       T09.ISOEnt_Nome                           as DM_21_ContatoDetalheEntCodigo,
       T01.ISOSAAte_UsuCodigo                    as DM_21_AtendenteAberturaCodigo,
       T10.ISOEnt_Nome                           as DM_21_AtendenteAberturaNome,
       T15.ISOEntRsp_Codigo                      as DM_21_ResponsavelCodigo,
	   T15.ISOEntRsp_Cli_Flag                    as DM_21_ResponsavelFlag,
       T16.ISOEnt_Nome                           as DM_21_ResponsavelNome,
       T15.ISOEntNivRsp_Codigo                   as DM_21_ResponsavelNivRspCodigo,
       T17.ISOEntNivRsp_Descricao                as DM_21_ResponsavelNivRspDescric,
       T20.ISOEmpCan_Descricao	                 as DM_21_CanalAtendimento,
       T26.ISOPrd_DescExtra	                     as DM_21_Setor_DescExtra,
	   Case
	        When T21.ISOEntPes_Codigo Is Null Then T24.ISOEntSeg_Descricao
			Else T22.ISOEntSeg_Descricao
	   End                                       as DM_21_SegmentoDescricao,

       'V.007'                                   as DM_21_VersaoView
  From ISOSAATENDIMENTO T01
        Left Join ISOSAATEDETALHE T02
          On T02.ISOEmp_Codigo         = T01.ISOEmp_Codigo
         And T02.ISOSAAte_Codigo       = T01.ISOSAAte_Codigo
        Left Join ISOSAATEDETINFORMACAO T03
          On T03.ISOEmp_Codigo         = T02.ISOEmp_Codigo
         And T03.ISOSAAte_Codigo       = T01.ISOSAAte_Codigo
         And T03.ISOSAAteDet_Codigo    = T02.ISOSAAteDet_Codigo
        Left Join ISOENTIDADE T04
          On T04.ISOEnt_Codigo         = T01.ISOSAAte_EntCodigo
        Left Join ISOINFORMACAO T05
          On T05.ISOEmp_Codigo         = T03.ISOEmp_Codigo
         And T05.ISOInf_Codigo         = T03.ISOInf_Codigo
        Left Join ISOENTENDERECO T06
          On T06.ISOEnt_Codigo         = T01.ISOSAAte_EntCodigo
         And T06.ISOEntEnd_Principal   = 'S'
        Left JOIN ISOLOCALIDADE T07
          On T07.ISOLoc_Codigo         = T06.ISOLoc_Codigo
        Left Join ISOESTADO T08
          On T08.ISOEst_Codigo         = T07.ISOEst_Codigo
        Left Join ISOENTIDADE T09
          On T09.ISOEnt_Codigo         = T02.ISOSAAte_EntContato
        Left Join ISOENTIDADE T10
          On T10.ISOEnt_Codigo         = T01.ISOSAAte_UsuCodigo
        Left Join ISOSAMotivo T11
          On T11.ISOEmp_Codigo         = T01.ISOEmp_Codigo
         And T11.ISOSAMot_Codigo       = T01.ISOSAMot_Codigo
        Left Join ISOSAMotOcorrencia T12
          On T12.ISOEmp_Codigo         = T01.ISOEmp_Codigo
         And T12.ISOSAMot_Codigo       = T01.ISOSAMot_Codigo
         And T12.ISOSAMotOcr_Codigo    = T01.ISOSAMotOcr_Codigo
        Left Join ISOSAMotOcrCausa T13
          On T13.ISOEmp_Codigo         = T01.ISOEmp_Codigo
         And T13.ISOSAMot_Codigo       = T01.ISOSAMot_Codigo
         And T13.ISOSAMotOcr_Codigo    = T01.ISOSAMotOcr_Codigo
         And T13.ISOSAMotOcrCau_Codigo = T01.ISOSAMotOcrCau_Codigo
        Left Join ISOENTIDADE T14
          On T14.ISOEnt_Codigo         = T01.ISOEntUnd_Codigo
        Left Join ISOEntRsp_Clientes T15
          On T15.ISOEntCli_Codigo      = T01.ISOSAAte_EntCodigo
		 And T15.ISOEmp_Codigo         = T01.ISOEmp_Codigo
        Left Join ISOENTIDADE T16
          On T16.ISOEnt_Codigo         = T15.ISOEntRsp_Codigo
        Left Join ISOEntNivResponsabilidade T17
          On T17.ISOEmp_Codigo         = T15.ISOEmp_Codigo
         And T17.ISOEntNivRsp_Codigo   = T15.ISOEntNivRsp_Codigo
        Left Join ISOSASituacao T18
          On T18.ISOEmp_Codigo         = T01.ISOEmp_Codigo
         And T18.ISOSASit_Codigo       = T01.ISOSASit_Codigo
	    Left Join ISOENTCLIENTE T19
          On T19.ISOEmp_Codigo         = T01.ISOEmp_Codigo
         And T19.ISOEntCli_Codigo      = T01.ISOSAAte_EntCodigo
		Left Join ISOEMPCANAL T20
          On T20.ISOEmp_Codigo         = T01.ISOEmp_Codigo
         And T20.ISOEmpCan_Codigo      = T02.ISOEmpCan_Codigo
        Left Join ISOEntPessoa T21
          On T21.ISOEntPes_Codigo      = T01.ISOSAAte_EntCodigo
        Left Join ISOEntSegmento T22
          On T22.ISOEntSeg_Codigo      = T21.ISOEntSeg_Codigo
        Left Join ISOEntOrganizacao T23
          On T23.ISOEntOrg_codigo      = T01.ISOSAAte_EntCodigo
        Left Join ISOEntSegmento T24
          On T24.ISOEntSeg_Codigo      = T23.ISOEntSeg_Codigo
		Left Join ISOINF_PRODUTO T25
		  On T25.ISOEmp_Codigo		   = T01.ISOEmp_Codigo
		 And T25.ISOInf_Codigo		   = T03.ISOInf_Codigo
		left Join ISOProduto T26
		  On T26.ISOEmp_Codigo		   = T25.ISOEmp_Codigo
		 And T26.ISOPrd_Codigo		   = T25.ISOPrd_codigo
        Left Join ISOENTCLASSIFICACAOPAPEL T27
          On T27.ISOEmp_Codigo         = T19.ISOEmp_Codigo
         And T27.ISOEntClaP_Codigo     = T19.ISOEntClaP_Codigo
		 And T27.ISOEntClaP_Papel      = 'Cliente'
        Left Join ISOENTCLAPESPECIALIDADE T28
          On T28.ISOEmp_Codigo         = T19.ISOEmp_Codigo
         And T28.ISOEntClaP_Codigo     = T19.ISOEntClaP_Codigo
         And T28.ISOEntClaPEsp_Codigo  = T19.ISOEntClaPEsp_Codigo;


-- ConexaoISO.VW00_BuscaEntidade source

CREATE VIEW VW00_BuscaEntidade as
Select
	AA.ISOEmp_Codigo						 As Empresa,
	A.ISOEnt_codigo	                         As Codigo,
	M.ISOEmpEnt_Ori_Codigo                   As CodigoExterno,
	N.ISOEmpOri_Codigo                       As CodigoOrigem,
	N.ISOEmpOri_Descricao                    As DescricaoOrigem,
	A.ISOEnt_Nome					         As Nome_RazaoSocial,
	C.ISOEntPes_PrimeiroNome 		         As PrimeiroNome,
	C.ISOEntPes_SobreNome 			         As SobreNome,
	V.ISOEntOrg_NomeFantasia		         As NomeFantasia,
    Case
           When C.ISOEntPes_Codigo is null  Then 'Organizaï¿½ï¿½o'
           When V.ISOEntOrg_Codigo is null  Then 'Pessoa'
           Else                                  'Nï¿½o definido'
    End						                 As Tipo,
	C.ISOEntpes_CPF				             As CPF,
	C.ISOEntPes_RG							 As RG,
	C.ISOEntPes_Flag			             As Pes_Ativo,
	V.ISOEntOrg_CNPJ				         As CNPJ,
	V.ISOEntOrg_InscEstadual	  	         As InscEstadual,
	V.ISOEntOrg_Flag			             As Org_Ativo,
	D.ISOEntTel_ddd				             As DDD,
	D.ISOEntTel_telefone			         As Telefone,
	H.ISOEntEct_econtact			         As Email,
	F.isoloc_descricao				         As Cidade,
	G.isoest_Sigla					         As Estado,
	B.ISOPais_Descricao                      As Pais,
	K.ISOEntClaP_Codigo                      As CliClaPapelCodigo,
	K.ISOEntClaP_Descricao                   As CliClaPapelDescricao,
	L.ISOEntCliSit_Codigo	                 As CliSituacaoCodigo,
	L.ISOEntCliSit_Descricao                 As CliSituacaoDescricao,
	A.ISOEnt_Flag                            As Ativo,
	Case
           When C.ISOEntpes_CPF is null		Then V.ISOEntOrg_CNPJ
           When V.ISOEntOrg_CNPJ is null	Then C.ISOEntpes_CPF
           Else                                  0
    End						                 As CPFCNPJ,
	Case
           When C.ISOEntPes_RG is null		Then V.ISOEntOrg_InscEstadual
           When V.ISOEntOrg_InscEstadual is null Then C.ISOEntPes_RG
           Else                                  ''
    End						                 As Documento,
	O.ISOEntRamAtv_Descricao				 As RamoAtividade,
	P.ISOEntSeg_Descricao					 As Segmento,
	E.ISOEntEnd_Titulo						 As TitLogradouro,
	E.ISOEntEnd_Logradouro					 As Logradouro,
	E.ISOEntEnd_Numero						 As Numero,
	E.ISOEntEnd_Complemento					 As Complemento,
	E.ISOEntEnd_Bairro						 As Bairro

   From ISOENTIDADE A
        Left Join ISOEmp_Entidade AA
          On AA.ISOEnt_codigo           = A.ISOEnt_Codigo
        Left Join ISOENTPESSOA C
          On A.ISOEnt_Codigo            = C.isoentpes_Codigo
        Left join ISOENTORGANIZACAO V
          On A.ISOEnt_Codigo            = V.ISOEntOrg_Codigo
        Left Join ISOEntTelefone D
          On A.ISOEnt_Codigo            = D.ISOEnt_Codigo
         And D.ISOEntTel_Flag           = 'A'
		 And D.ISOEntTel_Principal		= 'S'
        Left Join ISOEntEndereco E
          On A.ISOEnt_Codigo            = E.ISOEnt_Codigo
         And E.ISOEntEnd_Flag           = 'A'
		 And E.ISOEntEnd_Principal		= 'S'
        Left Join ISOLocalidade F
          On E.ISOLoc_Codigo            = F.ISOLoc_Codigo
        Left Join ISOEstado G
          On F.ISOPais_Codigo           = G.ISOPais_Codigo
         And F.ISOEst_Codigo            = G.ISOEst_Codigo
        Left Join ISOPAIS B
		  On F.ISOPais_Codigo           = B.ISOPais_Codigo
        Left Join ISOEntEcontact H
          On A.ISOEnt_Codigo            = H.ISOEnt_Codigo
         And H.ISOEntEml_Flag           = 'A'
		 And H.ISOEntEctTip_Principal   = 'S'
        Left Join ISOEntCliente J
	      On J.ISOEntCli_Codigo         = A.ISOEnt_Codigo
	     And AA.ISOEmp_Codigo           = J.ISOEmp_Codigo
        Left join ISOEntClassificacaoPapel K
          On K.ISOEmp_Codigo            = J.ISOEmp_Codigo
         And K.ISOEntClaP_Codigo        = J.ISOEntClaP_Codigo
        Left join ISOEntCliSituacao L
          On L.ISOEmp_Codigo            = J.ISOEmp_Codigo
         And L.ISOEntCliSit_Codigo      = J.ISOEntCliSit_Codigo
        Left join ISOEMPENT_ORIGEM M
          On M.ISOEmp_Codigo          = AA.ISOEmp_Codigo
         And M.ISOEmpEnt_EntCodigo    = AA.ISOEnt_Codigo
        Left Join ISOEMPORIGEM N
          On N.ISOEmp_Codigo          = M.ISOEmp_Codigo
         And N.ISOEmpOri_Codigo       = M.ISOEmpOri_Codigo
		Left Join ISOENTRAMOATIVIDADE O
		  On V.ISOEntRamAtv_Codigo = O.ISOEntRamAtv_Codigo
		Left Join ISOENTSEGMENTO P
		  On V.ISOEntSeg_Codigo = P.ISOEntSeg_Codigo
		  or C.ISOEntSeg_Codigo = P.ISOEntSeg_Codigo;


-- ConexaoISO.VW01_ISOSAAtendimento source

CREATE   view VW01_ISOSAAtendimento as

--------------------------------------------
-- Data...: 14/12/06                      --
-- Autor..: Edison T Washimi              --
--------------------------------------------
Select

    T01.ISOSAAte_Codigo		    as VW01_CodigoAtendimento,		-- Cï¿½digo do Atendimento
    T01.ISOSAAte_EntCodigo          as VW01_AteEntCodigo,			-- Cï¿½digo da Entidade do Atendimento
    T01.ISOSAAte_DataAbertura       as VW01_AteDataAbertura,         -- Data de Abertura do Atendimento
    T02.ISOSAAteDet_DataAbertura    as VW01_DetAteDataAbertura,      -- Data de Abertura do Detalhe do Atendimento
    T10.ISOEnt_Nome                 as VW01_EntNome,					-- Nome da Entidade
    T02.isosaatedet_codigo	    as VW01_CodigoDetAtendimento,    -- Cï¿½digo do Detalhe do Atendimento
    T05.ISOEst_Sigla		    as VW01_EstadoSigla,				-- Sigla do Estado (Endereï¿½o Principal)
    T02.ISOEmpCan_Codigo   	    as VW01_DetAteCanalCodigo,		-- Cï¿½digo do Canal de Comunicaï¿½ï¿½o
    T06.ISOEmpCan_Descricao	    as VW01_CanalDescricao,			-- Descriï¿½ï¿½o do Canal de Comunicaï¿½ï¿½o
	T01.ISOSAMot_Codigo			as VW01_DetAteMotCodigo,			-- Cï¿½digo do Motivo
	T07.ISOSAMot_Descricao			as VW01_MotDescricao,			-- Descriï¿½ï¿½o do Motivo
	T01.ISOSAMotOcr_Codigo			as VW01_AteMotOcrCodigo,			-- Cï¿½digo da Ocorrï¿½ncia
	T08.ISOSAMotOcr_Descricao		as VW01_MotOcrDescricao,			-- Descriï¿½ï¿½o da Ocorrï¿½ncia
	T01.ISOSAMotOcrCau_Codigo		as VW01_AteMotOcrCauCodigo,		-- Cï¿½digo da Causa
	T09.ISOSAMotOcrCau_Descricao	as VW01_MotOcrCauDescricao,		-- Descriï¿½ï¿½o da Causa
    T11.ISOEntPes_Sexo              as VW01_PesSexo,					-- Sexo da Pessoa
	T01.ISOSASit_Codigo             as VW01_ISOSASit_Codigo,         -- Cï¿½digo da Situaï¿½ï¿½o do atendimento
	T12.ISOSASit_Descricao          as VW01_ISOSASit_Descricao       -- Descriï¿½ï¿½o da Situaï¿½ï¿½o do atendimento
  From
	ISOSAAtendimento T01 (nolock)
      LEFT JOIN ISOSAAtedetalhe T02 (nolock)
        ON T02.ISOSAAte_Codigo       = T01.ISOSAAte_Codigo
      LEFT JOIN ISOEntEndereco T03 (nolock)
        ON T03.ISOEnt_Codigo         = T01.ISOSAAte_EntCodigo
	   AND T03.ISOEntEnd_Principal   = 'S'
      LEFT JOIN ISOLocalidade T04 (nolock)
        ON T04.ISOLoc_Codigo         = T03.ISOLoc_Codigo
      LEFT JOIN ISOEstado T05 (nolock)
        ON T05.ISOEst_Codigo         = T04.ISOEst_Codigo
	  LEFT JOIN ISOEmpCanal T06 (nolock)
        ON T06.ISOEmpCan_Codigo      = T02.ISOEmpCan_Codigo
	  LEFT JOIN ISOSAMotivo T07 (nolock)
        ON T07.ISOSAMot_Codigo       = T01.ISOSAMot_Codigo
	  LEFT JOIN ISOSAMotOcorrencia T08 (nolock)
        ON T08.ISOSAMot_Codigo       = T07.ISOSAMot_Codigo
       AND T08.ISOSAMotOcr_Codigo    = T01.ISOSAMotOcr_Codigo
	  LEFT JOIN ISOSAMotOcrCausa T09 (nolock)
	    ON T09.ISOSAMotOcrCau_Codigo = T01.ISOSAMotOcrCau_Codigo
       AND T09.ISOSAMotOcr_Codigo    = T08.ISOSAMotOcr_Codigo
       AND T09.ISOSAMot_Codigo       = T07.ISOSAMot_Codigo
	  LEFT JOIN ISOEntidade T10 (nolock)
	    ON T10.ISOEnt_Codigo         = T01.ISOSAAte_EntCodigo
      LEFT JOIN ISOEntPessoa T11 (nolock)
        ON T11.ISOEntPes_Codigo      = T10.ISOEnt_Codigo
	  LEFT Join ISOSASituacao T12 (nolock)
		ON T12.ISOSASit_Codigo    = T01.ISOSASit_Codigo;


-- ConexaoISO.VW03_ISOSAAtendimento_ISOInformacao source

CREATE  View VW03_ISOSAAtendimento_ISOInformacao as
select  T03.ISOSAAte_Codigo                  as VW03_Ate_Codigo,
		T03.ISOSAAte_DataAbertura    as VW03_Ate_DataAbertura,
		T04.ISOSAMot_Codigo          as VW03_AteMot_Codigo,
		T04.ISOSAMot_Descricao       as VW03_AteMot_Descricao,
		T05.ISOSAMotOcr_Codigo       as VW03_AteMotOcr_Codigo,
		T05.ISOSAMotOcr_Descricao    as VW03_AteMotOcr_Descricao,
		T06.ISOSAMotOcrCau_Codigo    as VW03_AteMotOcrCau_Codigo,
		T06.ISOSAMotOcrCau_Descricao as VW03_AteMotOcrCau_Descricao,
		T07.ISOSASit_Codigo          as VW03_Sit_Codigo,
		T07.ISOSASit_Descricao       as VW03_Sit_Descricao,
		T08.ISOEnt_Codigo            as VW03_Ent_Codigo,
		T08.ISOEnt_Nome              as VW03_Ent_Nome,
		T09.ISOInf_Codigo            as VW03_Inf_Codigo,
		T10.ISOInf_Descricao         as VW03_Inf_Descricao
  From  ISOSAAteDetInformacao T01 (nolock)
		Inner Join ISOSAAteDetalhe T02 (nolock)
			On T02.ISOSAAteDet_codigo    = T01.ISOSAAteDet_Codigo and
			   T02.ISOSAAte_Codigo       = T01.ISOSAAte_Codigo
		Inner Join ISOSAAtendimento T03 (nolock)
			On T03.ISOSAAte_Codigo       = T01.ISOSAAte_Codigo
		Inner Join ISOSAMotivo T04 (nolock)
			On T04.ISOSAMot_Codigo       = T03.ISOSAMot_Codigo
		Inner Join ISOSAMotOcorrencia T05 (nolock)
			On T05.ISOSAMot_Codigo       = T04.ISOSAMot_Codigo And
			   T05.ISOSAMotOcr_Codigo    = T03.ISOSAMotOcr_Codigo
		Inner Join ISOSAMotOcrCausa T06 (nolock)
			On T06.ISOSAMot_Codigo       = T05.ISOSAMot_Codigo And
			   T06.ISOSAMotOcr_Codigo    = T05.ISOSAMotOcr_Codigo And
			   T06.ISOSAMotOcrCau_Codigo = T03.ISOSAMotOcrCau_Codigo
		Inner Join ISOSASituacao T07 (nolock)
			On T07.ISOSASit_Codigo       = T03.ISOSASit_Codigo
		Inner Join ISOEntidade T08 (nolock)
			On T08.ISOEnt_Codigo         = T03.ISOSAAte_EntCodigo
		Inner Join ISOInf_Produto T09 (nolock)
			On T01.ISOInf_Codigo = T09.ISOInf_Codigo
		Inner Join ISOInformacao T10 (nolock)
			On T10.ISOInf_Codigo = T09.ISOInf_Codigo And
			   T10.ISOInf_Identificacao = 1;


-- ConexaoISO.VW056_DadosLog source

CREATE VIEW VW056_DadosLog as
Select T01.ISOLog_CodEmpresa        as VW056_CodEmpresa,
       T01.ISOLog_Sequencia         as vW056_LogSequencia,
       T01.ISOLog_DataHora          as VW056_LogDatahora,
	   RTrim(T01.ISOLog_Objeto)     as VW056_CodObjeto,
	   T01.ISOLog_Tipo              as VW056_LogSeveridade,
	   T01.ISOLog_Usuario           as VW056_CodUsuario,
	   RTrim(T02.ISOEnt_Nome)       as VW056_NomUsuario,
	   ''                           as VW056_Processo,
	   RTrim(T01.ISOLog_Motivo)     as VW056_DscMotivo,
	   RTrim(T01.ISOLog_Informacao) as VW056_DscInformacao,
	   'ISOLOG'                     as VW056_Origem
  From ISOLOG T01
       Inner Join ISOENTIDADE T02
	      On T02.ISOEnt_Codigo = T01.ISOLog_Usuario
Union

Select T01.ISOEmp_Codigo               as VW056_CodEmpresa,
       T01.ISOJobLog_Sequencia         as vW056_LogSequencia,
       T01.ISOJobLog_DataAlteracao     as VW056_LogDatahora,
	   RTrim(T01.ISOObj_Codigo)        as VW056_CodObjeto,
	   T01.ISOJobLog_Severidade        as VW056_LogSeveridade,
	   T01.ISOJobLog_UsuarioAlteracao  as VW056_CodUsuario,
	   RTrim(T02.ISOEnt_Nome)          as VW056_NomUsuario,
	   RTrim(T01.ISOJobLog_Processo)   as VW056_Processo,
	   RTrim(T01.ISOJobLog_Motivo)     as VW056_DscMotivo,
	   Case
	        When T01.ISOJobLog_Descricao Is Not NULL  And T01.ISOJobLog_Descricao <> ''
	             Then RTrim(T01.ISOJobLog_Descricao) + ' - ' + RTrim(T01.ISOJobLog_Informacao)
			Else RTrim(T01.ISOJobLog_Informacao)
	    End                            as VW056_DscInformacao,
	   'ISOJOBLOG'                     as VW056_Origem
  From ISOJOBLOG T01
       Inner Join ISOENTIDADE T02
	      On T02.ISOEnt_Codigo = T01.ISOJobLog_UsuarioAlteracao;


-- ConexaoISO.VW05_RelacionamentoProfissaoCPF source

CREATE   view VW05_RelacionamentoProfissaoCPF as
Select
	 A.ISOEntRlc_Codigo	As VW05_CodigoCom
	,B.ISOEnt_nome 		As VW05_RelacionadoCom
	,A.ISOEntRle_Codigo	As VW05_CodigoEm
	,D.ISOEnt_nome 		As VW05_RelacionadoEm
	,E.ISOProf_Descricao	As VW05_Profissao
	,C.ISOEntpes_CPF	As VW05_CPF
From
	ISOEnt_Relacao A (Nolock)
  Inner Join ISOEntidade B (Nolock)
    On A.ISOEntRlc_Codigo = B.ISOEnt_Codigo
  Left Join ISOEntidade D (Nolock)
    On A.ISOEntRle_Codigo = D.ISOEnt_Codigo
  Inner Join ISOENTPESSOA C (Nolock)
    On A.ISOEntRlc_Codigo = C.ISOEntPes_Codigo
  Left Join ISOProfissao E (Nolock)
	On E.ISOProf_Codigo = C.ISOProf_Codigo;


-- ConexaoISO.VW06_ISOEntPessoa_ISOEvnInfInscritos source

CREATE VIEW VW06_ISOEntPessoa_ISOEvnInfInscritos AS

	SELECT
		-- DADOS DO EVENTO
		A.ISOEvn_Codigo					AS 		VW06_CodigoEvento,
		A.ISOEvn_Descricao				AS 		VW06_DescricaoEvento,
		-- DADOS DA INFORMAï¿½ï¿½O DO EVENTO
		B.ISOEvnInf_Codigo				AS 		VW06_CodigoInformacao,
		B.ISOEvnInf_Descricao			AS 		VW06_DescricaoInformacao,
		-- PARCEIRO DO EVENTO
		S.ISOEnt_Nome					AS 		VW06_NomeParceiro,
		B.ISOEvnInf_CmplNome			AS 		VW06_NomeParceiroComplementar,
		B.ISOEvnInf_VigDataInicio		AS 		VW06_InicioVigenciaEvento,
		-- LOCALIDADE DO EVENTO
		B.ISOEvnInf_TituloLogradouro	AS 		VW06_TituloLogradouroEvento,
		B.ISOEvnInf_Logradouro			AS 		VW06_LogradouroEvento,
		B.ISOEvnInf_Bairro				AS 		VW06_BairroEvento,
		B.ISOEvnInf_Complemento			AS 		VW06_ComplementoEvento,
		T.ISOLoc_Descricao				AS 		VW06_LocalidadeEvento,
		U.ISOEst_Descricao				AS 		VW06_EstadoEvento,
		U.ISOEst_Sigla					AS 		VW06_UFEvento,
		V.ISOPais_Descricao				AS 		VW06_PaisEvento,
		B.ISOEvnInf_Local				AS 		VW06_LocalEvento,
		B.ISOEvnInf_Turno				AS 		VW06_TurnoEvento,
		B.ISOEvnInf_ProgramaCurso		AS 		VW06_ProgramaCurso,
		B.ISOEvnInf_QtdVagas			AS 		VW06_QuantidadeVagas,
		B.ISOEvnInf_QtdVagasMin			AS 		VW06_QuantidadeMinimaVagas,
		B.ISOEvnInf_QtdVagasMax			AS 		VW06_QuantidadeMaximaVagas,
		B.ISOEvnInf_Observacao			AS 		VW06_ObservacaoEvento,
		B.ISOEvnInf_QtdDiasLimite		AS 		VW06_QtdDiasLimite,
		B.ISOEvnInf_Situacao			AS 		VW06_SituacaoEvento,
		B.ISOEvnInf_Valor				AS 		VW06_ValorEvento,
		-- DADOS DOS INSCRITOS
		C.ISOEvnInfInc_Confirmado		AS 		VW06_ConfirmadoInscrito,
		C.ISOEvnInfInc_ListaEspera		AS 		VW06_ListaEsperaInscrito,
		C.ISOEvnInfInc_InfPrxTurma		AS 		VW06_InscritoProximaTurma,
		C.ISOEvnInfInc_Valor			AS 		VW06_ValorInscricao,
		C.ISOEvnInfInc_DataInscricao	AS 		VW06_DataInscricao,
		-- CONDIï¿½ï¿½O DE PAGAMENTO
		W.ISOPeCndPgt_Descricao			AS 		VW06_CondicaoPagamentoInscricao,
		-- DADOS PESSOAIS DOS INCRITOS
		D.ISOEntPes_Codigo				AS		VW06_PessoaCodigo,
		D.ISOEntPes_NomeCompleto		AS 		VW06_NomeCompleto,
		D.ISOEntPes_CPF					AS 		VW06_CPF,
		-- DADOS DO ENDEREï¿½O PRINCIPAL DOS INSCRITOS
		E.ISOEntEnd_CEP					AS 		VW06_CEPInscrito,
		E.ISOEntEnd_Titulo				AS 		VW06_TituloLogradouroEndInscrito,
		E.ISOEntEnd_Logradouro			AS 		VW06_LogradouroLogradouroEndInscrito,
		E.ISOEntEnd_Numero				AS 		VW06_NumeroLogradouroEndInscrito,
		E.ISOEntEnd_Complemento			AS 		VW06_ComplementoEndInscrito,
		E.ISOEntEnd_Bairro				AS 		VW06_BairroEndInscrito,
		E.ISOEntEnd_CaixaPostal			AS 		VW06_CaixaPostalEndInscrito,
		-- LOCALIDADE DO ENDEREï¿½O PRINCIPAL
		X.ISOLoc_Descricao				AS 		VW06_LocalidadeEndInscrito,
		Y.ISOEst_Descricao				AS 		VW06_EstadoEndInscrito,
		Y.ISOEst_Sigla					AS 		VW06_UFEndInscrito,
		Z.ISOPais_Descricao				AS 		VW06_PaisEndInscrito,
		-- DADOS DO TELEFONE PRINCIPAL DOS INSCRITOS
		F.ISOEntTel_DDI					AS 		VW06_DDITelInscrito,
		F.ISOEntTel_DDD					AS 		VW06_DDDTelInscrito,
		F.ISOEntTel_Telefone			AS 		VW06_TelefoneTelInscrito,
		F.ISOEntTel_Ramal				AS 		VW06_RamalTelInscrito,
		-- DADOS DO E-MAIL PRINCIPAL DOS INSCRITOS
		G.ISOEntEct_econtact			AS 		VW06_EcontactTelInscrito

	FROM

	ISOEventos A (Nolock)

		INNER JOIN ISOEvnInformacoes B (Nolock)
		ON (A.ISOEvn_Codigo = B.ISOEvn_Codigo AND A.ISOEmp_Codigo = B.ISOEmp_Codigo)

			LEFT JOIN ISOEntidade S (Nolock)
			ON B.ISOEntPar_Codigo = S.ISOEnt_Codigo

			LEFT JOIN ISOLocalidade T (Nolock)
			ON B.ISOLoc_Codigo = T.ISOLoc_Codigo

				INNER JOIN ISOEstado U (Nolock)
				ON T.ISOEst_Codigo = U.ISOEst_Codigo

				INNER JOIN ISOPais V (Nolock)
				ON T.ISOPais_Codigo = V.ISOPais_Codigo

			INNER JOIN ISOEvnInfInscritos C (Nolock)
			ON (B.ISOEvnInf_Codigo = C.ISOEvnInf_Codigo AND A.ISOEmp_Codigo = C.ISOEmp_Codigo)

				INNER JOIN ISOPeCndPagamento W (Nolock)
				ON (C.ISOEvnInfInc_CndPgtCodigo = W.ISOPeCndPgt_Codigo AND A.ISOEmp_Codigo = W.ISOEmp_Codigo)

				INNER JOIN ISOEntPessoa D (Nolock)
				ON C.ISOEvnInfInc_CliCodigo = D.ISOEntPes_Codigo

					LEFT JOIN ISOEntEndereco E (Nolock)
					ON (D.ISOEntPes_Codigo = E.ISOEnt_Codigo AND ISOEntEnd_Principal = 'S')

						LEFT JOIN ISOLocalidade X (Nolock)
						ON E.ISOLoc_Codigo = X.ISOLoc_Codigo

							LEFT JOIN ISOEstado Y (Nolock)
							ON X.ISOEst_Codigo = Y.ISOEst_Codigo

							LEFT JOIN ISOPais Z (Nolock)
							ON X.ISOPais_Codigo = Z.ISOPais_Codigo

					LEFT JOIN ISOEntTelefone F (Nolock)
					ON (D.ISOEntPes_Codigo = F.ISOEnt_Codigo AND ISOEntTel_Principal = 'S')

					LEFT JOIN ISOEntEcontact G (Nolock)
					ON (D.ISOEntPes_Codigo = G.ISOEnt_Codigo AND ISOEntEctTip_Principal = 'S');


-- ConexaoISO.VW07_ISOSAAtendimento source

CREATE VIEW VW07_ISOSAAtendimento AS
--------------------------------------------
-- Data...: 29/09/09                      --
-- Autor..: Edison T Washimi              --
--------------------------------------------
-- Data...: 16/05/2011                    --
-- Alteracao: Leandro Wasko ATT: 4959     --
--------------------------------------------
-- Data...: 12/09/2012                    --
-- Alteracao: Diogo P Barriquel ATT: 7151 --
--------------------------------------------
-- Data.....: 15/04/2019                  --
-- Alteracao: Edison T Washimi            --
-- ATT      : 29192                       --
--------------------------------------------
Select  Distinct
        T01.ISOEmp_Codigo            as VW07_CodEmpresa,          -- Codigo da Empresa
        T01.ISOSAAte_Codigo          as VW07_CodAtendimento,      -- Numero do atendimento
        T01.ISOSAAte_SeqDetalhe      as VW07_SeqDetalheAtend,     -- Sequenciador de detalhe
        T01.ISOSAAte_DataAbertura    as VW07_DataAbertAtend,      -- Data de abertura do SAC
		T01.ISOSAAte_DataAlteracao   as VW07_DataAlteracaoAtend,  --
        T01.ISOSAAte_DataFechamento  as VW07_DataFechamentoAtend, -- Data de Fechamento do SAC
        T02.ISOSAAteDet_Codigo       as VW07_CodDetalheAtend,     -- Nmero do detalhe do Atendimento SAC
        T02.ISOSAAteDet_DataAbertura as VW07_DataAbertDetAtend,   -- Data de abertura do Detalhe SAC
        T02.ISOSAAteDet_Descricao    as VW07_DescDetAtend,        -- Descricao do detalhe SAC
		T02.ISOSAAteDet_Resposta     as VW07_RespDetAtend,        --
        T02.ISOSAAte_EntContato      as VW07_CodCntDetAtend,      -- Cdigo do contato do Detalhe SAC
        T20.ISOEnt_Nome              as VW07_DscCntDetAtend,      -- Nome do contato do Detalhe SAC
        T03.ISOEnt_Codigo            as VW07_CodUsuAbertAtend,    -- Cdigo do usurio de abertura
        T03.ISOEnt_Nome              as VW07_NomeUsuAbertAtend,   -- Usuario de Abertura do SAC
        T04.ISOEnt_Codigo            as VW07_CodUsuAltAtend,      -- Cdigo do Usurio de alterao do SAC
        T04.ISOEnt_Nome              as VW07_NomeUsuAltAtend,     -- Usuario de alterao do SAC
        T05.ISOEnt_Codigo            as VW07_CodEntidadeAtend,    -- Cdigo da Entidade do SAC
        T05.ISOEnt_Nome              as VW07_NomeEntidadeAtend,   -- Nome da Entidade do SAC
        T21.ISOEmpOri_Codigo         as VW07_CodOrigem,           -- Cdigo da origem do cdigo externo
        T22.ISOEmpOri_Descricao      as VW07_DscOrigem,           -- Descrio da Origem do cdigo externo
        T21.ISOEmpEnt_Ori_Codigo     as VW07_CodExtEntAtend,      -- Cdigo Externo da Entidade do SAC
        T23.ISOEntEctTip_Codigo      as VW07_CodTipEctEnt,        -- Cdigo do tipo de E-contact
        T24.ISOEntEctTip_Descricao   as VW07_DscTipEctEnt,        -- Descrio do Tipo de E-contact
        T23.ISOEntEct_Econtact       as VW07_EctEntAtend,         -- E-contact da Entidade do SAC
        T17.ISOEntCla_Codigo         as VW07_ClaCodEntAtend,      -- Cdigo da classificao
        T18.ISOEntCla_Descricao      as VW07_ClaDscEntAtend,      -- Descrio da Classificao
        T17.ISOEntClaP_Codigo        as VW07_ClaPCodEntAtend,     -- Cdigo da Classificao do Papel
        T19.ISOEntClaP_Descricao     as VW07_ClaPDscEntAtend,     -- Descrio da Classificao do Papel
        T12.ISOEntTel_Principal      as VW07_TelPrinEntAtend,     -- Se  telefone principal da Entidade do SAC
        T12.ISOEntTel_DDD            as VW07_DDDEntidadeAtend,    -- DDD do telefone da entidade do SAC
        T12.ISOEntTel_Telefone       as VW07_FoneEntidadeAtend,   -- Telefone da Entidade do SAC
        T12.ISOTelTip_Codigo         as VW07_CodTipTelEntAtend,   -- Cdigo do Tipo de telefone da Entidade do SAC
        T13.ISOTelTip_Descricao      as VW07_DscTipTelEntAtend,   -- Descrio do Tipo de telefone da Entidade do SAC
        T14.ISOEntEnd_Titulo         As VW07_TituloEndEntAtend,   -- Titulo do endereo da Entidade do SAC
        T14.ISOEntEnd_Logradouro     As VW07_LogrEntAtend,        -- Logradouro da Entidade do SAC
        T14.ISOEntEnd_Complemento    As VW07_ComplEntAtend,       -- Complemento do endereo da Entidade do SAC
        T14.ISOEntEnd_Numero  	     As VW07_NumEntAtend,         -- Nr do endereo da entidade do sac
        T14.ISOEntEnd_Bairro   	     As VW07_BaiEndEntAtend,      -- Bairro da entidade do sac
        T14.ISOEntEnd_CEP            As VW07_CEPEndEntAtend,      -- CEP da entidade do SAC
        T15.isoloc_descricao         As VW07_CidEndEntAtend,      -- Cidade da entidade do sac
        T16.isoest_Sigla             As VW07_UFEndEntAtend,       -- UF da Entidade do SAC
        T06.ISOSASit_Codigo          as VW07_CodSituacaoAtend,    -- Cdigo da Situao SAC
        T06.ISOSASit_Descricao       as VW07_DscSituacaoAtend,    -- Descrio da Situao SAC
        T07.ISOEmpCan_Codigo         as VW07_CodCanalAtend,       -- Cdigo do Canal de comunicao
        T07.ISOEmpCan_Descricao      as VW07_DscCanalAtend,       -- Descrio do Canal de Comunicao
        T08.ISOSAMot_Codigo          as VW07_CodMotivoAtend,      -- Cdigo do Motivo
        T08.ISOSAMot_Descricao       as VW07_DscMotivoAtend,      -- Descrio do Motivo
        T09.ISOSAMotOcrCau_Codigo    as VW07_CodCausaAtend,       -- Cdigo da Causa
        T09.ISOSAMotOcrCau_Descricao as VW07_DscCausaAtend,       -- Descrio da Causa
        T10.ISOSAMotOcr_Codigo       as VW07_CodOcorrenciaAtend,  -- Cdigo da Ocorrncia
        T10.ISOSAMotOcr_Descricao    as VW07_DscOcorrenciaAtend,  -- Descrio da Ocorrncia
        T11.ISOEnt_Codigo            as VW07_CodUnidadeAtend,     -- Cdigo da Unidade
        T11.ISOEnt_Nome              as VW07_DscUnidadeAtend,     -- Nome da Unidade
		T25.ISOInf_Codigo            as VW07_CodInformacaoDetAtend,-- Cdigo da informao vinculada ao SAC
		T26.ISOInf_Descricao         as VW07_DscInformacaoDetAtend,-- Descrio da informao vinculada ao SAC
		Case
           When T27.ISOEntPes_Codigo is null  Then 'Organizacao'
           When T28.ISOEntOrg_Codigo is null  Then 'Pessoa'
           Else 'Nao definido'
		End							 as VW07_TipoEntidadeAtend,    -- Tipo de Entidade
		Case
           When T27.ISOEntPes_Codigo is null  Then T28.ISOEntOrg_Estrangeiro
           When T28.ISOEntOrg_Codigo is null  Then T27.ISOEntPes_Estrangeiro
		End							 as VW07_EntidadeEstrangeiroAtend, -- Estrangeiro?
		Case
           When T27.ISOEntPes_Codigo is null  Then T28.ISOEntOrg_CNPJ
           When T28.ISOEntOrg_Codigo is null  Then T27.ISOEntPes_CPF
		End							 as VW07_EntidadeCPFCNPJ,          -- CPF/CNPJ
		T29.ISOEntClaEsp_Codigo      as VW07_CodEntClaEsp,
		T29.ISOEntClaEsp_Descricao   as VW07_DscEntClaEsp,          -- Descrio da especalidade da classificacao
		T30.ISOEntClaPEsp_Codigo     as VW07_CodEntClaPEsp,
		T30.ISOEntClaPEsp_Descricao  as VW07_DscEntClaPEsp,			-- Descrio da especalidade do Papel da classificacao

		Case
           When T27.ISOEntPes_Codigo is null  Then T36.ISOEntOrganizacaoFormDefName
           When T28.ISOEntOrg_Codigo is null  Then T35.ISOEntPessoaFormDefName
           Else 'Nao definido'
		End							 as VW07_DadoCompAttForm,
		Case
           When T27.ISOEntPes_Codigo is null  Then T34.ISOEntOrganizacaoAttCategory
           When T28.ISOEntOrg_Codigo is null  Then T33.ISOEntPessoaAttCategory
           Else 'Nao definido'
		End							 as VW07_DadoCompAttCat,
		Case
           When T27.ISOEntPes_Codigo is null  Then T34.ISOEntOrganizacaoAttName
           When T28.ISOEntOrg_Codigo is null  Then T33.ISOEntPessoaAttName
           Else 'Nao definido'
		End							 as VW07_DadoCompAttPerg,
		Case
           When T27.ISOEntPes_Codigo is null  Then T32.ISOEntOrganizacaoAttOptId
           When T28.ISOEntOrg_Codigo is null  Then T31.ISOEntPessoaAttOptId
           Else 'Nao definido'
		End							 as VW07_DadoCompAttOpt,
		Case
           When T27.ISOEntPes_Codigo is null  Then T38.ISOEntOrganizacaoAttOptValue
           When T28.ISOEntOrg_Codigo is null  Then T37.ISOEntPessoaAttOptValue
           Else 'Nao definido'
		End							 as VW07_DadoCompAttOptVal,
		Case
           When T27.ISOEntPes_Codigo is null  Then T32.ISOEntOrganizacaoAttValue
           When T28.ISOEntOrg_Codigo is null  Then T31.ISOEntPessoaAttValue
           Else 'Nao definido'
		End							 as VW07_DadoCompAttVal,
		Case
           When T27.ISOEntPes_Codigo is null  Then T32.ISOEntOrganizacaoAttOtherValue
           When T28.ISOEntOrg_Codigo is null  Then T31.ISOEntPessoaAttOtherValue
           Else 'Nao definido'
		End							 as VW07_DadoCompAttOtherVal,
		Case
           When T27.ISOEntPes_Codigo is null  Then Null
           Else T27.ISOEntPes_Sexo
		End							 as VW07_Sexo,
		Case
           When T27.ISOEntPes_Codigo is null  Then Null
           Else T27.ISOEntPes_DataNascimento
		End							 as VW07_DtNascimento,
		Case
		   When T28.ISOEntOrg_Codigo Is null then Null
		   Else T28.ISOEntOrg_DataAbertura
        End                          as VW07_DtFundacao
  From  ISOSAAtendimento T01
       	Left Join ISOSAAteDetalhe T02
          On T02.ISOEmp_Codigo          = T01.ISOEmp_Codigo
         And T02.ISOSAAte_Codigo        = T01.ISOSAAte_Codigo
        Left Join ISOEntidade T03
          On T03.ISOEnt_Codigo          = T01.ISOSAAte_UsuCodigo
        Left Join ISOEntidade T04
          On T04.ISOEnt_Codigo          = T01.ISOSAAte_UsuarioAlteracao
        Left Join ISOEntidade T05
          On T05.ISOEnt_Codigo          = T01.ISOSAAte_EntCodigo
        Left Join ISOSASituacao T06
          On T06.ISOEmp_Codigo          = T01.ISOEmp_Codigo
         And T06.ISOSASit_Codigo        = T01.ISOSASit_Codigo
        Left Join ISOEmpCanal T07
          On T07.ISOEmp_Codigo          = T01.ISOEmp_Codigo
         And T07.ISOEmpCan_Codigo       = T02.ISOEmpCan_Codigo
        Left Join ISOSAMotivo T08
          On T08.ISOEmp_Codigo          = T01.ISOEmp_Codigo
         And T08.ISOSAMot_Codigo        = T01.ISOSAMot_Codigo
        Left Join ISOSAMotOcrCausa T09
          On T09.ISOEmp_Codigo          = T01.ISOEmp_Codigo
         And T09.ISOSAMot_Codigo        = T01.ISOSAMot_Codigo
         And T09.ISOSAMotOcr_Codigo     = T01.ISOSAMotOcr_Codigo
         And T09.ISOSAMotOcrCau_Codigo  = T01.ISOSAMotOcrCau_Codigo
        Left Join ISOSAMotOcorrencia T10
          On T10.ISOEmp_Codigo          = T01.ISOEmp_Codigo
         And T10.ISOSAMot_Codigo        = T01.ISOSAMot_Codigo
         And T10.ISOSAMotOcr_Codigo     = T01.ISOSAMotOcr_Codigo
        Left Join ISOEntidade T11
          On T11.ISOEnt_Codigo          = T01.ISOEntUnd_Codigo

        Left Join ISOEntTelefone T12
          On T12.ISOEnt_Codigo          = T01.ISOSAAte_EntCodigo
         And T12.ISOEntTel_Principal    = 'S'
        Left Join ISOTelTipo T13
          On T13.ISOTelTip_Codigo       = T12.ISOTelTip_Codigo

        Left Join ISOEntEndereco T14
          On T01.ISOSAAte_EntCodigo     = T14.ISOEnt_Codigo
         And T14.ISOEntEnd_Flag         = 'A'
         And T14.ISOEntEnd_Principal    = 'S'
        Left Join ISOLocalidade T15
          On T14.ISOLoc_Codigo          = T15.ISOLoc_Codigo
        Left Join ISOEstado T16
          On T15.ISOPais_Codigo         = T16.ISOPais_Codigo
         And T15.ISOEst_Codigo          = T16.ISOEst_Codigo
        Left Join ISOEntCliente T17
          On T17.ISOEntCli_Codigo       = T05.ISOEnt_Codigo
        Left Join ISOEntClassificacao T18
          On T18.ISOEntCla_Codigo       = T17.ISOEntCla_Codigo
        Left Join ISOEntClassificacaoPapel T19
          On T19.ISOEntClaP_Codigo      = T17.ISOEntClaP_COdigo
        Left Join ISOEntidade T20
          On T20.ISOEnt_Codigo          = T02.ISOSAAte_EntContato
   Left Join ISOEmpEnt_Origem      T21
          On T21.ISOEmp_Codigo          = T01.ISOEmp_Codigo
         And T21.ISOEmpEnt_EntCodigo    = T05.ISOEnt_Codigo
        Left Join ISOEmpOrigem T22
          On T22.ISOEmp_Codigo          = T21.ISOEmp_Codigo
         And T22.ISOEmpOri_Codigo       = T21.ISOEmpOri_Codigo
        Left Join ISOEntEContact T23
          On T23.ISOEnt_Codigo          = T05.ISOEnt_Codigo
         And T23.ISOEntEctTip_Principal = 'S'
        Left Join ISOEntEctTipo T24
          On T24.ISOEntEctTip_Codigo    = T23.ISOEntEctTip_Codigo
		Left Join ISOSAAteDetInformacao T25
          On T25.ISOEmp_Codigo          = T02.ISOEmp_Codigo
		 AND T25.ISOSAAte_Codigo        = T02.ISOSAAte_Codigo
		 AND T25.ISOSAAteDet_Codigo     = T02.ISOSAAteDet_Codigo
		Left Join ISOInformacao T26
		  On T26.ISOEmp_Codigo           = T25.ISOEmp_Codigo
		 AND T26.ISOInf_Codigo          = T25.ISOInf_Codigo
        Left Join ISOEntPessoa T27
          On T27.ISOEntPes_Codigo       = T01.ISOSAAte_EntCodigo
        Left Join ISOEntOrganizacao T28
          On T28.ISOEntOrg_Codigo       = T01.ISOSAAte_EntCodigo
        Left Join ISOEntClaEspecialidade T29
          On T29.ISOEmp_Codigo          = T17.ISOEmp_Codigo
         And T29.ISOEntCla_Codigo       = T17.ISOEntCla_Codigo
         And T29.ISOEntClaEsp_Codigo    = T17.ISOEntClaEsp_Codigo
        Left Join ISOEntClaPEspecialidade T30
          On T30.ISOEmp_Codigo			= T17.ISOEmp_Codigo
         And T30.ISOEntClaP_Codigo		= T17.ISOEntClaP_Codigo
         And T30.ISOEntClaPEsp_Codigo   = T17.ISOEntClaPEsp_Codigo
        Left Join ISOEntPessoaAttValues T31
          On T31.ISOEntPes_Codigo       = T02.ISOEntUsu_Codigo
        Left Join ISOENTORGANIZACAOATTVALUES T32
          On T32.ISOEntOrg_Codigo       = T02.ISOEntUsu_Codigo
        Left Join ISOENTPESSOAATT T33
          on T33.ISOEntPessoaAttId      = T31.ISOEntPessoaAttId
        Left Join ISOEntOrganizacaoAtt T34
          On T34.ISOEntOrganizacaoAttId = T32.ISOEntOrganizacaoAttId
        Left Join ISOEntPessoaFormDef T35
          On T35.ISOEntPessoaFormDefId  = T33.ISOEntPessoaFormDefId
        Left Join ISOENTORGANIZACAOFORMDEF T36
          On T36.ISOEntOrganizacaoFormDefId = T34.ISOEntOrganizacaoFormDefId
        Left Join ISOENTPESSOAATTLEVEL1 T37
          On T37.ISOEntPessoaAttId      = T31.ISOEntPessoaAttId
         And T37.ISOEntPessoaAttOptId   = T31.ISOEntPessoaAttOptId
        Left Join ISOENTORGANIZACAOATTLEVEL1 T38
          On T38.ISOEntOrganizacaoAttId = T32.ISOEntOrganizacaoAttId
         And T38.ISOEntOrganizacaoAttOptId = T32.ISOEntOrganizacaoAttOptId;


-- ConexaoISO.VW08_ISOWFTarefa source

CREATE   view VW08_ISOWFTarefa AS
--------------------------------------------
-- Data...: 29/09/09                      --
-- Autor..: Edison T Washimi              --
--------------------------------------------
Select  T01.ISOEmp_Codigo            as VW08_CodEmpresa,          -- Cï¿½digo da Empresa
		T01.ISOSAAte_Codigo          as VW08_CodAtendimento,      -- Nï¿½mero do atendimento
		T02.ISOWFTrf_SAC_PrcCodigo   as VW08_CodProcWF,           -- Cï¿½digo do Procedimento do WF
		T02.ISOWFTrf_SAC_TrfCodigo   as VW08_CodTarefaWF,         -- Cï¿½digo da tarefa do WF
		T03.ISOWFTrf_Descricao       as VW08_DscTarefaWF,         -- Descriï¿½ï¿½o da tarefa do WF
		T03.ISOWFTrf_PrzExecucao     as VW08_PrzExecTrfWF,        -- Prazo de execuï¿½ï¿½o da tarefa do WF
		T03.ISOWFTrf_PrzUnidade      as VW08_PrzUnidTrfWF,        -- Unidade de Tempo
		T03.ISOWFTrf_DataRecebimento as VW08_DtaRecebTrfWF,       -- Data de recebimento da tarefa
		T03.ISOWFTrf_DataSolucao     as VW08_DtaSolucaoTrfWF,     -- Data da soluï¿½ï¿½o da tarefa do WF
		T03.ISOWFTrf_Solucao         as VW08_DscSolucaoTrfWF,     -- Soluï¿½ï¿½o da tarefa
		T03.ISOWFTrf_DataLimite      as VW08_DtaLimiteTrfWF,      -- Data Limite para conclusï¿½o
		T03.ISOWFTrfPad_Codigo       as VW08_CodTarefaPadWF,      -- Cï¿½digo da tarefa padrï¿½o
		T03.ISOWFTrfPadSit_Codigo    as VW08_CodSituacaoTrfWF,    -- Cï¿½digo da situaï¿½ï¿½o da tarefa
		T05.ISOWFTrfPadSit_Descricao as VW08_DscSituacaoTrfWF,    -- Descriï¿½ï¿½o da situaï¿½ï¿½o da tarefa
		T04.ISOWFPrcPad_Codigo       as VW08_CodProcPadWF,        -- Cï¿½digo do procedimento padrï¿½o
		T06.ISOEnt_Codigo            as VW08_CodUsuAltWF,         -- Cï¿½digo do usuï¿½rio de alteraï¿½ï¿½o da tarefa
		T06.ISOEnt_Nome              as VW08_NomUsuAltWF,         -- Nome do usuï¿½rio de alteraï¿½ï¿½o da tarefa
		T07.ISOEnt_Codigo            as VW08_CodRespTrfWF,        -- Cï¿½digo do Responsï¿½vel da tarefa
		T07.ISOEnt_Nome              as VW08_NomRespTrfWF,        -- Nome do responsï¿½vel da tarefa
		T08.ISOEnt_Codigo            as VW08_CodRespExecTrfWF,    -- Cï¿½digo do Responsï¿½vel Executor da tarefa
		T08.ISOEnt_Nome              as VW08_NomRespExecTrfWF,    -- Nome do responsï¿½vel Executor da tarefa
		T09.ISOEnt_Codigo            as VW08_CodRespResWF,        -- Cï¿½digo do Responsï¿½vel de reserva da tarefa
		T09.ISOEnt_Nome              as VW08_NomRespResWF         -- Nome do responsï¿½vel de reserva da tarefa
   From ISOSAAtendimento T01              (Nolock)
		Left Join ISOWFTrf_SAC T02        (Nolock)
			On  T02.ISOEmp_Codigo         = T01.ISOEmp_Codigo
			And T02.ISOSAAte_Codigo       = T01.ISOSAAte_Codigo
		Left Join ISOWFTarefa T03         (nolock)
			On  T03.ISOEmp_Codigo         = T02.ISOEmp_Codigo
			And T03.ISOWFPrc_Codigo       = T02.ISOWFTrf_SAC_PrcCodigo
			And T03.ISOWFTrf_Codigo       = T02.ISOWFTrf_SAC_TrfCodigo
		Left Join ISOWFProcedimento T04   (Nolock)
			On  T04.ISOEmp_Codigo         = T01.ISOEmp_Codigo
			And T04.ISOWFPrc_Codigo       = T02.ISOWFTrf_SAC_PrcCodigo
		Left Join ISOWFTrfPadSituacao T05 (Nolock)
			On  T05.ISOEmp_Codigo         = T01.ISOEmp_Codigo
			And T05.ISOWFPrcPad_Codigo    = T04.ISOWFPrcPad_Codigo
			And T05.ISOWFTrfPad_Codigo    = T03.ISOWFTrfPad_Codigo
			And T05.ISOWFTrfPadSit_Codigo = T03.ISOWFTrfPadSit_Codigo
		Left Join ISOEntidade T06         (Nolock)
			On  T06.ISOEnt_Codigo         = T03.ISOWFTrf_UsuarioAlteracao
		Left Join ISOEntidade T07         (Nolock)
			On  T07.ISOEnt_Codigo         = T03.ISOWFTrf_RspCodigo
		Left Join ISOEntidade T08         (Nolock)
			On  T08.ISOEnt_Codigo         = T03.ISOWFTrf_RspExe_RspCodigo
		Left Join ISOEntidade T09         (Nolock)
			On  T09.ISOEnt_Codigo         = T03.ISOWFTrf_RspRes_RspCodigo;


-- ConexaoISO.VW09_Atendimento_WorkFlow source

CREATE VIEW VW09_Atendimento_WorkFlow as
Select  T01.ISOEmp_Codigo            as VW09_CodEmpresa,          -- Cï¿½digo da Empresa
		T01.ISOSAAte_Codigo          as VW09_CodAtendimento,      -- Nï¿½mero do atendimento
		T01.ISOSAAte_SeqDetalhe      as VW09_SeqDetalheAtend,     -- Sequenciador de detalhe
		T01.ISOSAAte_DataAbertura    as VW09_DataAbertAtend,      -- Data de abertura do SAC
		T01.ISOSAAte_DataFechamento  as VW09_DataFechamentoAtend, -- Data de Fechamento do SAC
		T02.ISOSAAteDet_Codigo       as VW09_CodDetalheAtend,     -- Nï¿½mero do detalhe do Atendimento SAC
		T02.ISOSAAteDet_DataAbertura as VW09_DataAbertDetAtend,   -- Data de abertura do Detalhe SAC
		T02.ISOSAAteDet_Descricao    as VW09_DescDetAtend,        -- Descricao do detalhe SAC
		T03.ISOEnt_Codigo            as VW09_CodUsuAbertAtend,    -- Cï¿½digo do usuï¿½rio de abertura
		T03.ISOEnt_Nome              as VW09_NomeUsuAbertAtend,   -- Usuario de Abertura do SAC
		T04.ISOEnt_Codigo            as VW09_CodUsuAltAtend,      -- Cï¿½digo do Usuï¿½rio de alteraï¿½ï¿½o do SAC
		T04.ISOEnt_Nome              as VW09_NomeUsuAltAtend,     -- Usuario de alteraï¿½ï¿½o do SAC
		T05.ISOEnt_Codigo            as VW09_CodEntidadeAtend,    -- Cï¿½digo da Entidade do SAC
        T05.ISOEnt_Nome              as VW09_NomeEntidadeAtend,   -- Nome da Entidade do SAC
        T06.ISOSASit_Codigo          as VW09_CodSituacaoAtend,    -- Cï¿½digo da Situaï¿½ï¿½o SAC
		T06.ISOSASit_Descricao       as VW09_DscSituacaoAtend,    -- Descriï¿½ï¿½o da Situaï¿½ï¿½o SAC
		T07.ISOEmpCan_Codigo         as VW09_CodCanalAtend,       -- Cï¿½digo do Canal de comunicaï¿½ï¿½o
		T07.ISOEmpCan_Descricao      as VW09_DscCanalAtend,       -- Descriï¿½ï¿½o do Canal de Comunicaï¿½ï¿½o
		T08.ISOSAMot_Codigo          as VW09_CodMotivoAtend,      -- Cï¿½digo do Motivo
		T08.ISOSAMot_Descricao       as VW09_DscMotivoAtend,      -- Descriï¿½ï¿½o do Motivo
		T09.ISOSAMotOcrCau_Codigo    as VW09_CodCausaAtend,       -- Cï¿½digo da Causa
		T09.ISOSAMotOcrCau_Descricao as VW09_DscCausaAtend,       -- Descriï¿½ï¿½o da Causa
		T10.ISOSAMotOcr_Codigo       as VW09_CodOcorrenciaAtend,  -- Cï¿½digo da Ocorrï¿½ncia
		T10.ISOSAMotOcr_Descricao    as VW09_DscOcorrenciaAtend,  -- Descriï¿½ï¿½o da Ocorrï¿½ncia
		T11.ISOEnt_Codigo            as VW09_CodUnidadeAtend,     -- Cï¿½digo da Unidade
		T11.ISOEnt_Nome              as VW09_DscUnidadeAtend,      -- Nome da Unidade
		T12.ISOWFTrf_SAC_PrcCodigo   as VW09_CodProcWF,           -- Cï¿½digo do Procedimento do WF
		T12.ISOWFTrf_SAC_TrfCodigo   as VW09_CodTarefaWF,         -- Cï¿½digo da tarefa do WF
		T13.ISOWFTrf_Descricao       as VW09_DscTarefaWF,         -- Descriï¿½ï¿½o da tarefa do WF
		T13.ISOWFTrf_PrzExecucao     as VW09_PrzExecTrfWF,        -- Prazo de execuï¿½ï¿½o da tarefa do WF
		T13.ISOWFTrf_PrzUnidade      as VW09_PrzUnidTrfWF,        -- Unidade de Tempo
		T13.ISOWFTrf_DataRecebimento as VW09_DtaRecebTrfWF,       -- Data de recebimento da tarefa
		T13.ISOWFTrf_DataSolucao     as VW09_DtaSolucaoTrfWF,     -- Data da soluï¿½ï¿½o da tarefa do WF
		T13.ISOWFTrf_Solucao         as VW09_DscSolucaoTrfWF,     -- Soluï¿½ï¿½o da tarefa
		T13.ISOWFTrf_DataLimite      as VW09_DtaLimiteTrfWF,      -- Data Limite para conclusï¿½o
		T13.ISOWFTrfPad_Codigo       as VW09_CodTarefaPadWF,      -- Cï¿½digo da tarefa padrï¿½o
		T13.ISOWFTrfPadSit_Codigo    as VW09_CodSituacaoTrfWF,    -- Cï¿½digo da situaï¿½ï¿½o da tarefa
		T14.ISOWFPrcPad_Codigo       as VW09_CodProcPadWF,        -- Cï¿½digo do procedimento padrï¿½o
		T15.ISOWFTrfPadSit_Descricao as VW09_DscSituacaoTrfWF,    -- Descriï¿½ï¿½o da situaï¿½ï¿½o da tarefa
		T16.ISOEnt_Codigo            as VW09_CodUsuAltWF,         -- Cï¿½digo do usuï¿½rio de alteraï¿½ï¿½o da tarefa
		T16.ISOEnt_Nome              as VW09_NomUsuAltWF,         -- Nome do usuï¿½rio de alteraï¿½ï¿½o da tarefa
		T17.ISOEnt_Codigo            as VW09_CodRespTrfWF,        -- Cï¿½digo do Responsï¿½vel da tarefa
		T17.ISOEnt_Nome              as VW09_NomRespTrfWF,        -- Nome do responsï¿½vel da tarefa
		T18.ISOEnt_Codigo            as VW09_CodRespExecTrfWF,    -- Cï¿½digo do Responsï¿½vel Executor da tarefa
		T18.ISOEnt_Nome              as VW09_NomRespExecTrfWF,    -- Nome do responsï¿½vel Executor da tarefa
		T19.ISOEnt_Codigo            as VW09_CodRespResWF,        -- Cï¿½digo do Responsï¿½vel de reserva da tarefa
		T19.ISOEnt_Nome              as VW09_NomRespResWF         -- Nome do responsï¿½vel de reserva da tarefa
  From  ISOSAAtendimento T01             (Nolock)
		Left Join ISOSAAteDetalhe T02    (NoLock)
			On  T02.ISOEmp_Codigo         = T01.ISOEmp_Codigo
			And T02.ISOSAAte_Codigo       = T01.ISOSAAte_Codigo
		Left Join ISOEntidade T03        (Nolock)
			On T03.ISOEnt_Codigo          = T01.ISOSAAte_UsuCodigo
		Left Join ISOEntidade T04        (nolock)
			On T04.ISOEnt_Codigo          = T01.ISOSAAte_UsuarioAlteracao
		Left Join ISOEntidade T05        (nolock)
			On T05.ISOEnt_Codigo          = T01.ISOSAAte_EntCodigo
		Left Join ISOSASituacao T06      (nolock)
			On  T06.ISOEmp_Codigo         = T01.ISOEmp_Codigo
			And T06.ISOSASit_Codigo       = T01.ISOSASit_Codigo
		Left Join ISOEmpCanal T07        (nolock)
			On  T07.ISOEmp_Codigo         = T01.ISOEmp_Codigo
			And T07.ISOEmpCan_Codigo      = T02.ISOEmpCan_Codigo
		Left Join ISOSAMotivo T08        (Nolock)
			On  T08.ISOEmp_Codigo         = T01.ISOEmp_Codigo
			And T08.ISOSAMot_Codigo       = T01.ISOSAMot_Codigo
		Left Join ISOSAMotOcrCausa T09   (Nolock)
			On  T09.ISOEmp_Codigo         = T01.ISOEmp_Codigo
			And T09.ISOSAMot_Codigo       = T01.ISOSAMot_Codigo
			And T09.ISOSAMotOcr_Codigo    = T01.ISOSAMotOcr_Codigo
			And T09.ISOSAMotOcrCau_Codigo = T01.ISOSAMotOcrCau_Codigo
		Left Join ISOSAMotOcorrencia T10 (Nolock)
			On  T10.ISOEmp_Codigo         = T01.ISOEmp_Codigo
			And T10.ISOSAMot_Codigo       = T01.ISOSAMot_Codigo
			And T10.ISOSAMotOcr_Codigo    = T01.ISOSAMotOcr_Codigo
		Left Join ISOEntidade T11        (Nolock)
			On  T11.ISOEnt_Codigo         = T01.ISOEntUnd_Codigo
		Left Join ISOWFTrf_SAC T12       (Nolock)
			On  T12.ISOEmp_Codigo         = T01.ISOEmp_Codigo
			And T12.ISOSAAte_Codigo       = T01.ISOSAAte_Codigo
		Left Join ISOWFTarefa T13         (nolock)
			On  T13.ISOEmp_Codigo         = T12.ISOEmp_Codigo
			And T13.ISOWFPrc_Codigo       = T12.ISOWFTrf_SAC_PrcCodigo
			And T13.ISOWFTrf_Codigo       = T12.ISOWFTrf_SAC_TrfCodigo
		Left Join ISOWFProcedimento T14   (Nolock)
			On  T14.ISOEmp_Codigo         = T12.ISOEmp_Codigo
			And T14.ISOWFPrc_Codigo       = T12.ISOWFTrf_SAC_PrcCodigo
		Left Join ISOWFTrfPadSituacao T15 (Nolock)
			On  T15.ISOEmp_Codigo         = T01.ISOEmp_Codigo
			And T15.ISOWFPrcPad_Codigo    = T14.ISOWFPrcPad_Codigo
			And T15.ISOWFTrfPad_Codigo    = T13.ISOWFTrfPad_Codigo
			And T15.ISOWFTrfPadSit_Codigo = T13.ISOWFTrfPadSit_Codigo
		Left Join ISOEntidade T16         (Nolock)
			On  T16.ISOEnt_Codigo         = T13.ISOWFTrf_UsuarioAlteracao
		Left Join ISOEntidade T17         (Nolock)
			On  T17.ISOEnt_Codigo         = T13.ISOWFTrf_RspCodigo
		Left Join ISOEntidade T18         (Nolock)
			On  T18.ISOEnt_Codigo         = T13.ISOWFTrf_RspExe_RspCodigo
		Left Join ISOEntidade T19         (Nolock)
			On  T19.ISOEnt_Codigo         = T13.ISOWFTrf_RspRes_RspCodigo;


-- ConexaoISO.VW100_EntidadesDadosPrincipais source

CREATE VIEW VW100_EntidadesDadosPrincipais as
/*
	Esta view tem por objetivo listar os dados principais das entidades. Não deve "duplicar" o código da entidade por algum join
*/
Select
	T01.ISOEmp_Codigo						 As VW100_Empresa,
	T01.ISOEnt_Codigo	                     As VW100_Codigo,
	Case
           When T03.ISOEntPes_Codigo is null  Then T04.ISOEntOrg_CNPJ
           When T04.ISOEntOrg_Codigo is null  Then T03.ISOEntPes_CPF
           Else                                    null
    End						                 As VW100_CPFCNPJ,
    Case
           When T03.ISOEntPes_Codigo is null  Then 'O'
           When T04.ISOEntOrg_Codigo is null  Then 'P'
           Else                                    'N'
    End						                 As VW100_PessoaOrganizacao,
	Case
           When T03.ISOEntPes_Codigo is null  Then T04.ISOEntOrg_DataCadastro
           When T04.ISOEntOrg_Codigo is null  Then T03.ISOEntPes_DataCadastro
           Else                                    null
    End						                 As VW100_DataCadastro,
	T02.ISOEnt_Nome					         As VW100_Nome_RazaoSocial,
	T03.ISOEntPes_PrimeiroNome 		         As VW100_Pes_PrimeiroNome,
	T03.ISOEntPes_SobreNome 			     As VW100_Pes_SobreNome,
	T03.ISOEntPes_CPF				         As VW100_Pes_CPF,
	T03.ISOEntPes_RG						 As VW100_Pes_RG,
	T03.ISOEntPes_RG_Data					 As VW100_Pes_RG_EmissaoData,
	T03.ISOEntPes_RG_Orgao					 As VW100_Pes_RG_EmissaoOrgao,
	T03.ISONivEsc_Codigo					 As VW100_Pes_NivelEscolaridadeCod,
	T05.ISONivEsc_Descricao					 As VW100_Pes_NivelEscolaridadeDsc,
	T03.ISOEstCiv_Codigo					 As VW100_Pes_EstadoCivilCod,
	T06.ISOEstCiv_Descricao					 As VW100_Pes_EstadoCivilDsc,
	T03.ISOProf_Codigo						 As VW100_Pes_ProfissaoCod,
	T07.ISOProf_Descricao					 As VW100_Pes_ProfissaoDsc,

	Case
        When T03.ISOEntPes_Codigo is null  Then 'N'
        Else                                  T03.ISOEntPes_Sexo
    End						                 As VW100_Pes_Sexo,
	Case
        When T03.ISOEntPes_Codigo is null  Then T04.ISOEntOrg_DataAbertura
        When T04.ISOEntOrg_Codigo is null Then T03.ISOEntPes_DataNascimento
        Else                                  null
    End						                 As VW100_DataNascAbert,
	Case
           When T03.ISOEntPes_Codigo is null  Then T04.ISOEntOrg_Flag
           When T04.ISOEntOrg_Codigo is null  Then T03.ISOEntPes_Flag
           Else                                    'I'
    End						                 As VW100_Ativo,
	Case
           When T03.ISOEntPes_Codigo is null  Then T04.ISOEntOrg_InscEstadual
           When T04.ISOEntOrg_Codigo is null  Then T03.ISOEntPes_RG
    End						                 As VW100_Documento,
	Case
           When T03.ISOEntPes_Codigo is null  Then T04.ISOEntSeg_Codigo
           When T04.ISOEntOrg_Codigo is null  Then T03.ISOEntSeg_Codigo
    End						                 As VW100_SegmentoCod,
	Case
           When T03.ISOEntPes_Codigo is null  Then T08_B.ISOEntSeg_Descricao
           When T04.ISOEntOrg_Codigo is null  Then T08.ISOEntSeg_Descricao
           Else                                  NULL
    End						                 As VW100_SegmentoDsc,

	T04.ISOEntOrg_CNPJ				         As VW100_Org_CNPJ,
	T04.ISOEntOrg_NomeFantasia		         As VW100_Org_NomeFantasia,
	T04.ISOEntOrg_InscEstadual	  	         As VW100_Org_InscEstadual,
	T04.ISOEntRamAtv_Codigo					 As VW100_Org_RamoAtividadeCod,
	T09.ISOEntRamAtv_Descricao				 As VW100_Org_RamoAtividadeDsc,

	T10.ISOEntCliSit_Codigo	                 As VW100_Cli_SituacaoCod,
	T13.ISOEntCliSit_Descricao               As VW100_Cli_SituacaoDsc,
	T13.ISOEntCliSit_Situacao                As VW100_Cli_SituacaoTab,
	T10.ISOEntCli_Flag                       As VW100_Cli_Ativo,
	T10.ISOEntClaP_Codigo                    As VW100_Cli_ClassP_Codigo,
	T11.ISOEntClaP_Descricao                 As VW100_Cli_ClassP_Descricao,
	T10.ISOEntClaPEsp_Codigo                 As VW100_Cli_EspecP_Codigo,
	T12.ISOEntClaPEsp_Descricao              As VW100_Cli_EspecP_Descricao,
	T10.ISOEntCli_CodigoExt                  As VW100_Cli_CodigoExt,
	T10.ISOEntCli_CodigoMatriz               As VW100_Cli_CodigoMatriz,
	T10.ISOEntCli_DataCadastro               As VW100_Cli_DataCadastro,
	Case
        When T03.ISOEntPes_Codigo is null  Then T04.ISOEntOrg_Observacao
        When T04.ISOEntOrg_Codigo is null Then T03.ISOEntPes_Observacao
        Else                                  null
    End						                 As VW100_Observacao,
	Case
        When T03.ISOEntPes_Codigo is null  Then T04.ISOEntOrg_DataAlteracao
        When T04.ISOEntOrg_Codigo is null Then T03.ISOEntPes_DataAlteracao
        Else                                  null
    End						                 As VW100_EntDataAlteracao,
	Case
        When T03.ISOEntPes_Codigo is null  Then T04.ISOEntOrg_UsuarioAlteracao
        When T04.ISOEntOrg_Codigo is null Then T03.ISOEntPes_UsuarioAlteracao
        Else                                  null
    End						                 As VW100_EntUsuAlteracao,
	T10.ISOEntCli_DataAlteracao     As VW100_CliDataAlteracao,
	T10.ISOEntCli_UsuarioAlteracao  As VW100_CliUsuAlteracao
	From ISOEmp_Entidade T01
		left Join ISOEntidade T02
			On T02.ISOEnt_Codigo = T01.ISOEnt_Codigo
        Left Join ISOENTPESSOA T03
			On T03.ISOEntPes_Codigo = T01.ISOEnt_Codigo
        Left join ISOENTORGANIZACAO T04
			On T04.ISOEntOrg_Codigo = T01.ISOEnt_Codigo
		Left join ISONIVESCOLARIDADE T05
			On T03.ISONivEsc_Codigo = T05.ISONivEsc_Codigo
		Left join ISOESTCIVIL T06
			On T03.ISOEstCiv_Codigo = T06.ISOEstCiv_Codigo
		Left join ISOPROFISSAO T07
			On T03.ISOProf_Codigo = T07.ISOProf_Codigo

		Left Join ISOENTSEGMENTO T08 -- Segmento da pessoa
			On T08.ISOEntSeg_Codigo = T03.ISOEntSeg_Codigo
		Left Join ISOENTSEGMENTO T08_B -- Segmento da organizacao
			On T08_B.ISOEntSeg_Codigo = T04.ISOEntSeg_Codigo

		Left Join ISOENTRAMOATIVIDADE T09
			On T04.ISOEntRamAtv_Codigo = T09.ISOEntRamAtv_Codigo
		 Left Join ISOENTCLIENTE T10
			On T10.ISOEmp_Codigo = T01.ISOEmp_Codigo
				And T10.ISOEntCli_Codigo = T01.ISOEnt_Codigo
        Left join ISOEntClassificacaoPapel T11
			On T10.ISOEmp_Codigo = T11.ISOEmp_Codigo
				And T10.ISOEntClaP_Codigo = T11.ISOEntClaP_Codigo
		Left join ISOENTCLAPESPECIALIDADE T12
			On T10.ISOEmp_Codigo = T12.ISOEmp_Codigo
				And T10.ISOEntClaP_Codigo = T12.ISOEntClaP_Codigo
				And T10.ISOEntClaPEsp_Codigo = T12.ISOEntClaPEsp_Codigo
        Left join ISOENTCLISITUACAO T13
			On T10.ISOEmp_Codigo = T13.ISOEmp_Codigo
				And T10.ISOEntCliSit_Codigo = T13.ISOEntCliSit_Codigo;


-- ConexaoISO.VW101_ExportCampanha source

CREATE VIEW VW101_ExportCampanha as

Select Distinct
	T01.ISOMkAteCmp_Codigo		 AS VW101_CodCampanha,
	T01.ISOMkAteCmpCnt_EntCodigo AS VW101_CodContato,
		'"' + RTrim(LTrim(Cast(T01.ISOMkAteCmp_Codigo as char(9)))) + '",'  +
		'"' + RTrim(LTrim(Cast(T01.ISOMkAteCmpCnt_EntCodigo as char(9)))) + '",' +
        '"' + RTrim(T02.ISOEnt_Nome) + '",' +
          RTrim(T03.Telefones)                                as VW101_Informacoes
  From ISOMKAteCmpContato T01
       Inner Join ISOEntidade T02
          on T02.ISOEnt_Codigo = T01.ISOMkAteCmpCnt_EntCodigo
       Inner Join (Select ISOEnt_Codigo,ISOEntTel_Flag,
                          Stuff((Select ';' + '"' + RTrim(T01A.ISOEntTel_DDI) + RTrim(T01A.ISOEntTel_DDD) + RTrim(Cast(T01A.ISOEntTel_Telefone as char(9))) + '"'
                                                    From ISOEntTelefone AS T01A
                                     Where T01A.ISOEnt_Codigo  = T01.ISOEnt_Codigo
                                       And T01A.ISOEntTel_Flag = 'A'
                                       FOR XML Path('')), 1, 1, '' ) As Telefones
                    From ISOENTTELEFONE As T01) T03
         On T03.ISOEnt_Codigo = T01.ISOMkAteCmpCnt_EntCodigo
		 And T03.ISOEntTel_Flag = 'A';


-- ConexaoISO.VW14_Funil_Vendas source

CREATE VIEW [VW14_Funil_Vendas] as
/*
    Autor    : Edison Washimi
    Data     : 18/06/2010
*/
Select T01.ISOEmp_Codigo                 as CodEmpresa,
       T01.ISOMKAteCmp_Codigo            as CodCampanha,
       T01.ISOMKAteCmp_Descricao         as DscCampanha,
       T02.ISOMKAteCmpCnt_EntCodigo      as CodCliente,
       T02.ISOMKAteCmpCnt_Sequencia      as CntSequencia,
       T02A.ISOEnt_Nome                  as NomeCliente,
       T13.ISOEntPes_CPF                 as CPF,
       T14.ISOEntOrg_CNPJ                as CNPJ,
       T15.ISOEntTel_DDD                 as DDD,
       T15.ISOEntTel_Telefone            as Telefone,
       T02.ISOMkCntSit_Codigo            as CodSitContato,
       T02B.ISOMkCntSit_Descricao        as DscSitContato,
       T09.ISOMKFinRsl_Codigo            as CodResultado,
       T10.ISOMKFinRsl_Descricao         as DscResultado,
       T09.ISOMKAteCmpCntDet_DataHora    as DtHrResultado,
       T09.ISOMkAteCmpCntDet_Descritivo  as DescritivoCmp,
       Cast(Cast(Year(T09.ISOMKAteCmpCntDet_DataHora) as char(4)) + '-' + Cast(Month(T09.ISOMKAteCmpCntDet_DataHora) as char(2)) + '-' + Cast(Day(T09.ISOMKAteCmpCntDet_DataHora) as char(2)) as DateTime)
                                         as DtResultado,
       T11.ISOMkAteCmpCntAttId           as CodPrgDadoComplementar,
       T12.ISOMkAteCmpCntAttName         as DscPrgDadoComplementar,
       T11.ISOMKAteCmpCntAttValue        as DscRespDadoComplementar,
       T12.ISOMkAteCmpCntAttCategory     as DscCategDadoComplementar
  From ISOMKAteCampanha T01
       Inner Join ISOMKAteCmpContato T02
          On T02.ISOEmp_Codigo              = T01.ISOEmp_Codigo
         And T02.ISOMKAteCmp_Codigo         = T01.ISOMKAteCmp_Codigo
       Inner Join ISOEntidade T02A
          On T02A.ISOEnt_Codigo             = T02.ISOMKAteCmpCnt_EntCodigo
       Left Join ISOEntPessoa T13
		  On T02A.ISOEnt_Codigo             = T13.ISOEntPes_Codigo
	   Left Join ISOEntOrganizacao T14
		  On T02A.ISOEnt_Codigo             = T14.ISOEntOrg_Codigo
	   Inner Join ISOENTTELEFONE T15
	      On T02A.ISOEnt_Codigo             = T15.ISOEnt_Codigo
	     And T15.ISOEntTel_Principal        = 'S'
       Inner Join ISOMKCNTSITUACAO T02B
          ON T02B.ISOEmp_Codigo             = T02.ISOEmp_Codigo
         And T02B.ISOMkCntSit_Codigo        = T02.ISOMkCntSit_Codigo
       Inner Join ISOMKAteCmpCntDetalhe T09
          On T09.ISOEmp_Codigo              = T02.ISOEmp_Codigo
         And T09.ISOMKAteCmp_Codigo         = T02.ISOMKAteCmp_Codigo
         And T09.ISOMKAteCmpCnt_Sequencia   = T02.ISOMKAteCmpCnt_Sequencia
         And T09.ISOMKFinRsl_Codigo         > 0
         And T09.ISOMKAteCmpCntDet_DataHora = (Select Max(TAux.ISOMKAteCmpCntDet_DataHora)
                                                 From ISOMKAteCmpCntDetalhe TAux
                                                Where TAux.ISOEmp_Codigo            = T09.ISOEmp_Codigo
                                                  And TAux.ISOMKAteCmp_Codigo       = T09.ISOMKAteCmp_Codigo
                                                  And TAux.ISOMKAteCmpCnt_Sequencia = T09.ISOMKAteCmpCnt_Sequencia)
       Inner Join ISOMkFinResultado T10
          On T10.ISOEmp_Codigo              = T02.ISOEmp_Codigo
         And T10.ISOMKFin_Codigo            = T01.ISOMKFin_Codigo
         And T10.ISOMKFinRsl_Codigo         = T09.ISOMKFinRsl_Codigo
        Left Join ISOMKAteCmpCntAttValues T11
          On T11.ISOEmp_Codigo              = T01.ISOEmp_Codigo
         And T11.ISOMKAteCmp_Codigo         = T01.ISOMKAteCmp_Codigo
         And T11.ISOMKAteCmpCnt_Sequencia   = T02.ISOMKAteCmpCnt_Sequencia
        Left JOin ISOMKATECMPCNTATT T12
          On T12.ISOEmp_Codigo              = T11.ISOEmp_Codigo
         And T12.ISOMkAteCmpCntAttId        = T11.ISOMkAteCmpCntAttId;


-- ConexaoISO.VW16_Pedidos source

CREATE VIEW VW16_Pedidos as
Select T01.ISOEmp_Codigo                            as VW16_CodEmpresa,
       T01.ISOPVPed_Codigo                          as VW16_CodPedido,
       T01.ISOPVPed_CliCodigo                       as VW16_CodCliente,
       T02.ISOEnt_Nome                              as VW16_NomCliente,
       T14.ISOEntTel_DDD                            as VW16_DDDTelPrincCliente,
       T14.ISOEntTel_Telefone                       as VW16_NumTelPrincCliente,
       T15.ISOEntTel_DDD                            as VW16_DDDTelMovCliente,
       T15.ISOEntTel_Telefone                       as VW16_NumTelMovCliente,
       T01.ISOPVPedSit_Codigo                       as VW16_CodSitPedido,
       T03.ISOPVPedSit_Descricao                    as VW16_DscSitPedido,
       T01.ISOPVPed_Contato                         as VW16_CodCntCliente,
       T04.ISOEnt_Nome                              as VW16_NomCntCliente,
       T01.ISOPVPed_DtaPedido                       as VW16_DtaPedido,
       T01.ISOPVPed_DtaAberPedido                   as VW16_DtaAbtPedido,
       T01.ISOPVPed_CodigoAtendente                 as VW16_CodAtePedido,
       T09.ISOEnt_Nome                              as VW16_NomAtePedido,
       T01.ISOPVPed_CodVendedorCD                   as VW16_CodVendPedido,
       T10.ISOEnt_Nome                              as VW16_NomVendPedido,
       Cast(T01.ISOPVPed_ValorTotalPedido as money) as VW16_VlrTotalPedido,
       T01.ISOPVPed_EndCEP                          as VW16_CEPEndEntrega,
       T01.ISOPVPed_EndLogradouro                   as VW16_LogrEndEntrega,
       T01.ISOPVPed_EndNumero                       as VW16_NumEndEntrega,
       T01.ISOPVPed_EndComplemento                  as VW16_CplEndEntrega,
       T01.ISOPVPed_EndBairro                       as VW16_BaiEndEntrega,
       T01.ISOPVPed_EndCidade                       as VW16_CodCidEndEntrega,
       T05.ISOLoc_Descricao                         as VW16_DscCidEndEntrega,
       T01.ISOPVPed_EndEstado                       as VW16_CodEstEndEntrega,
       T06.ISOEst_Descricao                         as VW16_DscEstEndEntrega,
       T06.ISOEst_Sigla                             as VW16_UFEstEndEntrega,
       T01.ISOPVPed_EndCEP1                         as VW16_CEPEndCobranca,
       T01.ISOPVPed_EndLogradouro1                  as VW16_LogrEndCobranca,
       T01.ISOPVPed_EndNumero1                      as VW16_NumEndCobranca,
       T01.ISOPVPed_EndComplemento1                 as VW16_CplEndCobranca,
       T01.ISOPVPed_EndBairro1                      as VW16_BaiEndCobranca,
       T01.ISOPVPed_EndCidade1                      as VW16_CodCidEndCobranca,
       T07.ISOLoc_Descricao                         as VW16_DscCidEndCobranca,
       T01.ISOPVPed_EndEstado1                      as VW16_CodEstEndCobranca,
       T08.ISOEst_Descricao                         as VW16_DscEstEndCobranca,
       T08.ISOEst_Sigla                             as VW16_UFEstEndCobranca,
       T11.ISOPVPedIte_Codigo                       as VW16_CodItemPedido,
       T11.ISOPrd_Codigo                            as VW16_CodPrdItem,
       T12.ISOPrd_Descricao                         as VW16_DscPrdItem,
       T11.ISOPVPedIte_Quantidade                   as VW16_QtdPrdItem,
       Cast(T11.ISOPVPedIte_PrecoLista as Decimal(13,2))
                                                    as VW16_VlrUnitPrdItem,
       Cast(T11.ISOPVPedIte_Quantidade * T11.ISOPVPedIte_PrecoLista as decimal(13,2))
                                                    as VW16_VlrTotPrdItem,
       T11.ISOPVPedIteSit_Codigo                    as VW16_CodSitItemPedido,
       T13.ISOPVPedIteSit_Descricao                 as VW16_DscSitItemPedido,

	   T16.ISOMrc_Codigo                            as VW16_MarcaCodigo,
	   T16.ISOMrc_Descricao                         as VW16_MarcaDescricao,
	   T17.ISOMrcMod_Codigo                         as VW16_ModeloCodigo,
	   T17.ISOMrcMod_Descricao                      as VW16_ModeloDescricao,
	   T18.ISOEnt_Codigo                            as VW16_FabricanteCodigo,
	   T18.ISOEnt_Nome                              as VW16_FabricanteNome,
	   T19.ISOPrdCls_Codigo                         as VW16_PrdClsCodigo,
	   T19.ISOPrdCls_Descricao                      as VW16_PrdClsDescricao,
	   T20.ISOPrdTip_Codigo                         as VW16_PrdTipCodigo,
	   T20.ISOPrdTip_Descricao                      as VW16_PrdTipDescricao,
	   T11.ISOPvPedIte_UnidadeOrigem                as VW16_UndOrigem,

	   T01.ISOPvPedOri_Codigo                       as VW16_OrigemPedidoCodigo,
	   T21.ISOPvPedOri_Descricao                    as VW16_OrigemPedidoDescricao,
	   Case
           When T22.ISOEntPes_Codigo is null  Then 'O'
           When T23.ISOEntOrg_Codigo is null  Then 'P'
           Else 'N'
	   End	                                        as VW16_TipoPessoa

  From ISOPVPedido T01
       Inner Join ISOEntidade T02
          On T02.ISOEnt_Codigo         = T01.ISOPVPed_CliCodigo
	   Inner Join ISOPVPedSituacao T03
          On T03.ISOEmp_Codigo         = T01.ISOEmp_Codigo
         And T03.ISOPVPedSit_Codigo    = T01.ISOPVPedSit_Codigo
       Left  Join ISOEntidade T04
          On T04.ISOEnt_Codigo         = T01.ISOPVPed_Contato
       Left  Join ISOLocalidade T05
          On T05.ISOLoc_Codigo         = T01.ISOPVPed_EndCidade
       Left Join ISOEstado T06
          On T06.ISOEst_Codigo         = T05.ISOEst_Codigo
       Left  Join ISOLocalidade T07
          On T07.ISOLoc_Codigo         = T01.ISOPVPed_EndCidade1
       Left Join ISOEstado T08
          On T08.ISOEst_Codigo         = T07.ISOEst_Codigo
       Inner Join ISOEntidade T09
          On T09.ISOEnt_Codigo         = T01.ISOPVPed_CodigoAtendente
       Left Join ISOEntidade T10
          On T10.ISOEnt_Codigo         = T01.ISOPVPed_CodVendedorCD
       Left Join ISOPVPedItem T11
          On T11.ISOEmp_Codigo         = T01.ISOEmp_Codigo
         And T11.ISOPVPed_Codigo       = T01.ISOPVPed_Codigo
       Left Join ISOProduto T12
          On T12.ISOPrd_Codigo         = T11.ISOPrd_Codigo
       Left Join ISOPVPedIteSituacao T13
          On T13.ISOEmp_Codigo         = T12.ISOEmp_Codigo
         And T13.ISOPVPedIteSit_Codigo = T11.ISOPVPedIteSit_Codigo
       Left Join ISOEntTelefone T14
          On T14.ISOEnt_Codigo         = T01.ISOPVPed_CliCodigo
         And T14.ISOEntTel_Principal   = 'S'
       Left Join ISOEntTelefone T15
          On T15.ISOEnt_Codigo         = T01.ISOPVPed_CliCodigo
         And T15.ISOEntTel_Movel       = 'S'
	   Left Join ISOMarcas T16
	      On T16.ISOEmp_Codigo         = T12.ISOEmp_Codigo
		 And T16.ISOMrc_Codigo         = T12.ISOMrc_Codigo
	   Left Join ISOMrcModelos T17
	      On T17.ISOEmp_Codigo         = T12.ISOEmp_Codigo
		 And T17.ISOMrc_Codigo         = T12.ISOMrc_Codigo
		 And T17.ISOMrcMod_Codigo      = T12.ISOMrcMod_Codigo
	   left Join ISOEntidade T18
	      On T18.ISOEnt_Codigo         = T16.ISOEntFab_Codigo
	   Left Join ISOPrdClassificacao T19
	      On T19.ISOEmp_Codigo         = T12.ISOEmp_Codigo
		 And T19.ISOPrdCls_Codigo      = T12.ISOPrdCls_Codigo
	   Left Join ISOPrdTipo T20
	      On T20.ISOEmp_Codigo         = T12.ISOEmp_Codigo
		 And T20.ISOPrdTip_Codigo      = T12.ISOPrdTip_Codigo
	   Left Join ISOPvPedOrigem T21
	      On T21.ISOEmp_Codigo         = T01.ISOEmp_Codigo
		 And T21.ISOPvPedOri_Codigo    = T01.ISOPvPedOri_Codigo
	   Left Join ISOEntPessoa T22
          On T22.ISOEntPes_Codigo      = T01.ISOPvPed_CliCodigo
       Left Join ISOEntOrganizacao T23
          On T23.ISOEntOrg_Codigo      = T01.ISOPvPed_CliCodigo;


-- ConexaoISO.VW17_ISOCTICli_Responsavel source

CREATE VIEW VW17_ISOCTICli_Responsavel as
select T2.ISOEmp_Codigo, T1.ISOEntTel_DDD, T1.ISOEntTel_Telefone, T3.ISOEntUsu_CTILogin
from ISOENTTELEFONE T1
inner join ISOENTRSP_CLIENTES T2
On T1.ISOEnt_Codigo = T2.ISOEntCli_Codigo
inner join ISOENTUSUARIO T3
On T2.ISOEntRsp_Codigo = T3.ISOEntUsu_Codigo;


-- ConexaoISO.VW30_Clientes_Contatos source

CREATE VIEW VW30_Clientes_Contatos as
Select T1.ISOEntPes_Codigo           as VW30_CodEntidade,
       T1.ISOEntPes_NomeCompleto     as VW30_NomeRazao ,
       ''                            as VW30_NomeFantasia,
       T1.ISOEntPes_Flag             as VW30_Ativo,
       T2.ISOEntEnd_Titulo           as VW30_TitLogradouro,
       T2.ISOEntEnd_Logradouro       as VW30_Logradouro,
       T2.ISOEntEnd_Numero           as VW30_NumLogradouro,
       T2.ISOEntEnd_Bairro           as VW30_Bairro,
       T2.ISOEntEnd_CEP              as VW30_CEP,
       T1.ISOEntSeg_Codigo           as VW30_CodSegmento,
       T9.ISOEntSeg_Descricao        as VW30_DscSegmento,
       T3.ISOLoc_Descricao           as VW30_Localidade,
       T4.ISOEst_Sigla               as VW30_SiglaUF,
       T8.ISOEntClaP_Descricao       as VW30_ClassificacaoPapel,
       T5.ISOEntRlc_Codigo           as VW30_CodEntRelacionada,
       T6.ISOEnt_Nome                as VW30_NomeEntRelacionada,
       'F'                           as VW30_TipoPessoa
  From ISOEntPessoa T1
       Inner Join ISOEntEndereco T2
          On T2.ISOEnt_Codigo       = T1.ISOEntPes_Codigo
         And T2.ISOEntEnd_Principal = 'S'
        Left Join ISOLocalidade T3
          On T3.ISOLoc_Codigo = T2.ISOLoc_Codigo
       Inner JOin ISOEstado T4
          On T4.ISOEst_Codigo = T3.ISOEst_Codigo
        Left Join ISOEnt_Relacao T5
          On T5.ISOEntRle_Codigo = T1.ISOEntPes_Codigo
        Left Join ISOEntidade T6
          On T6.ISOEnt_Codigo = T5.ISOEntRlc_Codigo
        Left Join ISOEntCliente T7
          On T7.ISOEntCli_Codigo = T1.ISOEntPes_Codigo
        Left Join ISOEntClassificacaoPapel T8
          On T8.ISOEntClaP_Codigo = T7.ISOEntClaP_Codigo
         And T8.ISOEntClaP_Papel = 'Cliente'
        Left Join ISOEntSegmento T9
          On T9.ISOEntSeg_Codigo = T1.ISOEntSeg_Codigo
Union

Select T1.ISOEntOrg_Codigo          as VW30_CodEntidade,
       T1.ISOEntOrg_RazaoSocial     as VW30_NomeRazao ,
       T1.ISOEntOrg_NomeFantasia    as VW30_NomeFantasia,
       T1.ISOEntOrg_Flag            as VW30_Ativo,
       T2.ISOEntEnd_Titulo          as VW30_TitLogradouro,
       T2.ISOEntEnd_Logradouro      as VW30_Logradouro,
       T2.ISOEntEnd_Numero          as VW30_NumLogradouro,
       T2.ISOEntEnd_Bairro          as VW30_Bairro,
       T2.ISOEntEnd_CEP             as VW30_CEP,
       T1.ISOEntSeg_Codigo          as VW30_CodSegmento,
       T9.ISOEntSeg_Descricao       as VW30_DscSegmento,
       T3.ISOLoc_Descricao          as VW30_Localidade,
       T4.ISOEst_Sigla              as VW30_SiglaUF,
       T8.ISOEntClaP_Descricao      as VW30_ClassificacaoPapel,
       T5.ISOEntRlc_Codigo          as VW30_CodEntRelacionada,
       T6.ISOEnt_Nome               as VW30_NomeEntRelacionada,
       'J'                          as VW30_TipoPessoa
  From ISOEntOrganizacao T1
       Inner Join ISOEntEndereco T2
          On T2.ISOEnt_Codigo       = T1.ISOEntOrg_Codigo
         And T2.ISOEntEnd_Principal = 'S'
        Left Join ISOLocalidade T3
          On T3.ISOLoc_Codigo = T2.ISOLoc_Codigo
       Inner JOin ISOEstado T4
          On T4.ISOEst_Codigo = T3.ISOEst_Codigo
        Left Join ISOEnt_Relacao T5
          On T5.ISOEntRle_Codigo = T1.ISOEntOrg_Codigo
        Left Join ISOEntidade T6
          On T6.ISOEnt_Codigo = T5.ISOEntRlc_Codigo
        Left Join ISOEntCliente T7
          On T7.ISOEntCli_Codigo = T1.ISOEntOrg_Codigo
        Left Join ISOEntClassificacaoPapel T8
          On T8.ISOEntClaP_Codigo = T7.ISOEntClaP_Codigo
         And T8.ISOEntClaP_Papel = 'Cliente'
        Left Join ISOEntSegmento T9
          On T9.ISOEntSeg_Codigo = T1.ISOEntSeg_Codigo;


-- ConexaoISO.VW32_ISOSAAtendimentoDC source

CREATE VIEW VW32_ISOSAAtendimentoDC AS

Select  Distinct
        T01.ISOEmp_Codigo            as VW32_CodEmpresa,          -- Codigo da Empresa
        T01.ISOSAAte_Codigo          as VW32_CodAtendimento,      -- Numero do atendimento
        T01.ISOSAAte_DataAbertura    as VW32_DataAbertAtend,      -- Data de abertura do SAC
        T01.ISOSAAte_DataFechamento  as VW32_DataFechamentoAtend, -- Data de Fechamento do SAC
        T03.ISOEnt_Codigo            as VW32_CodUsuAbertAtend,    -- Cdigo do usurio de abertura
        T03.ISOEnt_Nome              as VW32_NomeUsuAbertAtend,   -- Usuario de Abertura do SAC
        T04.ISOEnt_Codigo            as VW32_CodUsuAltAtend,      -- Cdigo do Usurio de alterao do SAC
        T04.ISOEnt_Nome              as VW32_NomeUsuAltAtend,     -- Usuario de alterao do SAC
        T05.ISOEnt_Codigo            as VW32_CodEntidadeAtend,    -- Cdigo da Entidade do SAC
        T05.ISOEnt_Nome              as VW32_NomeEntidadeAtend,   -- Nome da Entidade do SAC
        T06.ISOSASit_Codigo          as VW32_CodSituacaoAtend,    -- Cdigo da Situao SAC
        T06.ISOSASit_Descricao       as VW32_DscSituacaoAtend,    -- Descrio da Situao SAC
        T07.ISOEmpCan_Codigo         as VW32_CodCanalAtend,       -- Cdigo do Canal de comunicao
        T07.ISOEmpCan_Descricao      as VW32_DscCanalAtend,       -- Descrio do Canal de Comunicao
        T08.ISOSAMot_Codigo          as VW32_CodMotivoAtend,      -- Cdigo do Motivo
        T08.ISOSAMot_Descricao       as VW32_DscMotivoAtend,      -- Descrio do Motivo
        T09.ISOSAMotOcrCau_Codigo    as VW32_CodCausaAtend,       -- Cdigo da Causa
        T09.ISOSAMotOcrCau_Descricao as VW32_DscCausaAtend,       -- Descrio da Causa
        T10.ISOSAMotOcr_Codigo       as VW32_CodOcorrenciaAtend,  -- Cdigo da Ocorrncia
        T10.ISOSAMotOcr_Descricao    as VW32_DscOcorrenciaAtend,  -- Descrio da Ocorrncia
        T11.ISOEnt_Codigo            as VW32_CodUnidadeAtend,     -- Cdigo da Unidade
        T11.ISOEnt_Nome              as VW32_DscUnidadeAtend,     -- Nome da Unidade
		Case
           When T27.ISOEntPes_Codigo is null  Then 'Organizacao'
           When T28.ISOEntOrg_Codigo is null  Then 'Pessoa'
           Else 'Nao definido'
		End							 as VW32_TipoEntidadeAtend,    -- Tipo de Entidade
		Case
           When T27.ISOEntPes_Codigo is null  Then T28.ISOEntOrg_Estrangeiro
           When T28.ISOEntOrg_Codigo is null  Then T27.ISOEntPes_Estrangeiro
		End							 as VW32_EntidadeEstrangeiroAtend, -- Estrangeiro?
		Case
           When T27.ISOEntPes_Codigo is null  Then T28.ISOEntOrg_CNPJ
           When T28.ISOEntOrg_Codigo is null  Then T27.ISOEntPes_CPF
		End							 as VW32_EntidadeCPFCNPJ,          -- CPF/CNPJ
		T35.ISOSAAtendimentoFormDefName   as VW32_DadoCompSacAttForm,
		T33.ISOSAAtendimentoAttCategory   as VW32_DadoCompSacAttCat,
		T33.ISOSAAtendimentoAttName       as VW32_DadoCompSacAttPerg,
		T31.ISOSAAtendimentoAttOptId      as VW32_DadoCompSacAttOpt,
		T37.ISOSAAtendimentoAttOptValue   as VW32_DadoCompSacAttOptVal,
		T31.ISOSAAtendimentoAttValue      as VW32_DadoCompSacAttVal,
		T31.ISOSAAtendimentoAttOtherValue as VW32_DadoCompSacAttOtherVal
  From  ISOSAAtendimento T01
       	Left Join ISOSAAteDetalhe T02
          On T02.ISOEmp_Codigo          = T01.ISOEmp_Codigo
         And T02.ISOSAAte_Codigo        = T01.ISOSAAte_Codigo
		 And T02.ISOSAAteDet_Codigo     = 1
        Left Join ISOEntidade T03
          On T03.ISOEnt_Codigo          = T01.ISOSAAte_UsuCodigo
        Left Join ISOEntidade T04
          On T04.ISOEnt_Codigo          = T01.ISOSAAte_UsuarioAlteracao
        Left Join ISOEntidade T05
          On T05.ISOEnt_Codigo          = T01.ISOSAAte_EntCodigo
        Left Join ISOSASituacao T06
          On T06.ISOEmp_Codigo          = T01.ISOEmp_Codigo
         And T06.ISOSASit_Codigo        = T01.ISOSASit_Codigo
        Left Join ISOEmpCanal T07
          On T07.ISOEmp_Codigo          = T01.ISOEmp_Codigo
         And T07.ISOEmpCan_Codigo       = T02.ISOEmpCan_Codigo
        Left Join ISOSAMotivo T08
          On T08.ISOEmp_Codigo          = T01.ISOEmp_Codigo
         And T08.ISOSAMot_Codigo        = T01.ISOSAMot_Codigo
        Left Join ISOSAMotOcrCausa T09
          On T09.ISOEmp_Codigo          = T01.ISOEmp_Codigo
         And T09.ISOSAMot_Codigo        = T01.ISOSAMot_Codigo
         And T09.ISOSAMotOcr_Codigo     = T01.ISOSAMotOcr_Codigo
         And T09.ISOSAMotOcrCau_Codigo  = T01.ISOSAMotOcrCau_Codigo
        Left Join ISOSAMotOcorrencia T10
          On T10.ISOEmp_Codigo          = T01.ISOEmp_Codigo
         And T10.ISOSAMot_Codigo        = T01.ISOSAMot_Codigo
         And T10.ISOSAMotOcr_Codigo     = T01.ISOSAMotOcr_Codigo
        Left Join ISOEntidade T11
          On T11.ISOEnt_Codigo          = T01.ISOEntUnd_Codigo

        Left Join ISOEntCliente T17
          On T17.ISOEntCli_Codigo       = T05.ISOEnt_Codigo
        Left Join ISOEntidade T20
          On T20.ISOEnt_Codigo          = T02.ISOSAAte_EntContato
        Left Join ISOEntPessoa T27
          On T27.ISOEntPes_Codigo       = T01.ISOSAAte_EntCodigo
        Left Join ISOEntOrganizacao T28
          On T28.ISOEntOrg_Codigo       = T01.ISOSAAte_EntCodigo

        Left Join ISOSAAtendimentoAttValues T31
          On T31.ISOSAAte_Codigo            = T01.ISOSAAte_Codigo
        Left Join ISOSAAtendimentoATT T33
          on T33.ISOSAAtendimentoAttId      = T31.ISOSAAtendimentoAttId
        Left Join ISOSAAtendimentoFormDef T35
          On T35.ISOSAAtendimentoFormDefId  = T33.ISOSAAtendimentoFormDefId
        Left Join ISOSAATENDIMENTOATT1 T37
          On T37.ISOSAAtendimentoAttId      = T31.ISOSAAtendimentoAttId
         And T37.ISOSAAtendimentoAttOptId   = T31.ISOSAAtendimentoAttOptId;


-- ConexaoISO.VW40_AtendCampanha source

CREATE VIEW VW40_AtendCampanha as
Select T01.ISOEmp_Codigo                         as VW40_CodEmpresa,
       T01.ISOMKCmp_Codigo                       as VW40_CodCampanha,
       T01.ISOMKFin_Codigo                       as VW40_CodFinalidade,
       T02.ISOMKAteCmpCnt_Sequencia              as VW40_SeqContato,
       T02.ISOMkAteCmpCnt_EntCodigo              as VW40_CodContato,
	   T04.ISOEnt_Nome                           as VW40_NomeContato,
	   T10.ISOEntOrg_NomeFantasia                as VW40_NomeFantasia,
	   T02.ISOMKAteCmpCnt_FilaPrioridade         as VW40_FilaPrioridade,
	   T02.ISOMkAteCmpCnt_DataInsercao           as VW40_DataInsercao,
       T02.ISOMkAteCmpCnt_Prioridade             as VW40_Prioridade,
       T02.ISOMkAteCmpCnt_SeqDetalhe             as VW40_SeqContDetalhe,
       T03.ISOMkCntSit_Codigo                    as VW40_CodSitContato,
       T03.ISOMkCntSit_SituacaoTabulada          as VW40_SitTabContato,
       T03.ISOMkCntSit_Descricao                 as VW40_DscSitContato,
       T05.ISOMkAteCmpCntDet_CodigoRespon        as VW40_CodResponsavel,
       T06.ISOEnt_Nome                           as VW40_NomeResponsavel,
       T05.ISOMkAteCmpCntDet_Descritivo          as VW40_DscDetalhe,
       T05.ISOMkAteCmpCntDet_Sequencia           as VW40_SeqDetalhe,
       T05.ISOMkAteCmpCntDet_DataInicialR        as VW40_DtInicialReagenda,
       T05.ISOMkAteCmpCntDet_DataFinalRea        as VW40_DtFinalReagenda,
       T05.ISOMkAteCmpCntDet_FinalContato        as VW40_DtFinalContato,
       T05.ISOMkAteCmpCntDet_DataAlteraca        as VW40_DtAlteracao,
       T05.ISOMkAteCmpCntDet_Data                as VW40_DtContato,
       T05.ISOMkFinRsl_Codigo                    as VW40_CodResultado,
       T12.ISOMkFinRsl_Descricao		         as VW40_DscResultado,
       T05.ISOMkFinCla_Codigo                    as VW40_CodClassificacao,
	   T11.ISOMkFinCla_Descricao		         as VW40_DscClassificacao,
       T05.ISOMkFinRsl_Concluido                 as VW40_FlagConcluido,
       T08.ISOAgeSit_Codigo                      as VW40_CodSitAgenda,
       T09.ISOAgeSit_Situacao                    as VW40_SitTabAgenda,
       T08.ISOAge_Codigo                         as VW40_CodAgenda,
       Case
           When T05.ISOMkAteCmpCntDet_CodigoRespon Is Not Null   -- Dentro do prazo / Com Responsavel
--            And T09.ISOAgeSit_Situacao Not In (1,2)
            And T05.ISOMkAteCmpCntDet_DataInicialR <= GetDate()
            And T05.ISOMkAteCmpCntDet_DataFinalRea >= GetDate()
                Then 1
           When T05.ISOMkAteCmpCntDet_CodigoRespon Is Null      -- Agendamento Dentro do Prazo / Sem Responsavel
            And T05.ISOMkAteCmpCntDet_DataInicialR <= GetDate()
            And T05.ISOMkAteCmpCntDet_DataFinalRea >= GetDate()
            And T05.ISOMKAteCmpCntDet_Sequencia     = T02.ISOMkAteCmpCnt_SeqDetalhe
                Then 1
           When T05.ISOMkAteCmpCntDet_CodigoRespon Is Null      -- Agendamento Atrasado / Sem Responsavel
            And T05.ISOMkAteCmpCntDet_DataInicialR <= GetDate()
            And T05.ISOMkAteCmpCntDet_DataFinalRea <= GetDate()
            And T05.ISOMKAteCmpCntDet_Sequencia     = T02.ISOMkAteCmpCnt_SeqDetalhe
            And (T05.ISOMkAteCmpCntDet_DataInicialR <> '1753-01-01' Or T05.ISOMkAteCmpCntDet_DataFinalRea <> '1753-01-01')
                Then 2
           When T05.ISOMkAteCmpCntDet_CodigoRespon Is Not Null  -- Atrasado / Com Responsavel
--            And T09.ISOAgeSit_Situacao Not In (1,2)
            And T05.ISOMkAteCmpCntDet_DataInicialR <= GetDate()
            And T05.ISOMkAteCmpCntDet_DataFinalRea <= GetDate()
            And (T05.ISOMkAteCmpCntDet_DataInicialR <> '1753-01-01' Or T05.ISOMkAteCmpCntDet_DataFinalRea <> '1753-01-01')
                Then 2
           When T02.ISOMkAteCmpCnt_SeqDetalhe = 0               -- Sem contato
                Then 3
           When T05.ISOMkAteCmpCntDet_CodigoRespon Is Not Null  -- Sem Agendamento / Com Responsavel
--            And T09.ISOAgeSit_Situacao Not In (1,2)
			And T05.ISOMkAteCmpCntDet_AgeCodigo is null
                Then 4
           When T05.ISOMkAteCmpCntDet_CodigoRespon Is Not Null  -- Com Agendamento / Com Responsavel
--            And T09.ISOAgeSit_Situacao In (1,2)
			And T05.ISOMkAteCmpCntDet_AgeCodigo is not null
            And T05.ISOMKAteCmpCntDet_Sequencia     = T02.ISOMkAteCmpCnt_SeqDetalhe
                Then 4
		   When T05.ISOMkAteCmpCntDet_CodigoRespon Is Not Null  -- Com Agendamento / Com Responsavel
			And T05.ISOMkAteCmpCntDet_AgeCodigo is not null
            And T05.ISOMKAteCmpCntDet_Sequencia     = T02.ISOMkAteCmpCnt_SeqDetalhe
                Then 4
           When T05.ISOMkAteCmpCntDet_CodigoRespon Is Null      -- Sem Agendamento / Sem Responsavel
			And T05.ISOMkAteCmpCntDet_AgeCodigo is null
            And T05.ISOMKAteCmpCntDet_Sequencia     = T02.ISOMkAteCmpCnt_SeqDetalhe
                Then 4
           When T05.ISOMkAteCmpCntDet_CodigoRespon Is Not Null  -- Agendamento Futuro / Com Responsavel
--            And T09.ISOAgeSit_Situacao Not In (1,2)
            And T05.ISOMkAteCmpCntDet_DataInicialR >= GetDate()
            And T05.ISOMkAteCmpCntDet_DataFinalRea >= GetDate()
                Then 5
           When T05.ISOMkAteCmpCntDet_CodigoRespon Is Null      -- Agendamento Futuro / Sem Responsavel
            And T05.ISOMkAteCmpCntDet_DataInicialR >= GetDate()
            And T05.ISOMkAteCmpCntDet_DataFinalRea >= GetDate()
            And T05.ISOMKAteCmpCntDet_Sequencia     = T02.ISOMkAteCmpCnt_SeqDetalhe
                Then 5
           Else 0
       End                                       as VW40_ClsCntDetalhe,
       T05.ISOMKAteCmpCntDet_DataAlteraca        as VW40_UltimoContato,
	   RTrim(T13.ISOEntTel_DDD) + ' ' + Cast(T13.ISOEntTel_Telefone as char(10))
                                                 as VW40_TelefonePrincipal,
	   T15.ISOEst_Codigo                         as VW40_CodUFCliente,
	   T16.ISOEst_Sigla                          as VW40_UFCLiente,
	   T15.ISOLoc_Codigo                         as VW40_LocCodigo,
	   T15.ISOLoc_Descricao                      as VW40_LocDescricao,
	   T02.ISOMKAteCmpCnt_Fase                   as VW40_Fase,
	   T12.ISOMkFinRsl_Esc_Codigo                as VW40_CodEscala,
	   T02.ISOMKAteCmpCnt_DtHrFase               as VW40_DtHrFase,
	   T17.ISOPais_Codigo						 as VW40_CodPais,
	   T17.ISOPais_Descricao		             as VW40_Pais,
       T19.ISOEntClaP_Codigo					 as VW40_ClaPCodigo,
	   T20.ISOEntClaP_Descricao                  as VW40_ClaPDescricao,
	   T19.ISOEntClaPEsp_Codigo                  as VW40_ClaPEspCodigo,
	   T21.ISOEntClaPEsp_Descricao				 as VW40_ClaPEspDescricao,
	   T19.ISOEntCliSit_Codigo                   as VW40_SitCodigo,
	   T25.ISOEntCliSit_Descricao                as VW40_SitDescricao,
	   Case
           When T18.ISOEntPes_Codigo is null  Then T10.ISOEntSeg_Codigo
           When T10.ISOEntOrg_Codigo is null  Then T18.ISOEntSeg_Codigo
           Else                                  NULL
       End						                 as VW40_SegmentoCod,
       Case
           When T10.ISOEntSeg_Codigo is null  Then T23.ISOEntSeg_Descricao
           When T18.ISOEntSeg_Codigo is null  Then T22.ISOEntSeg_Descricao
           Else                                  NULL
       End						                 as VW40_SegmentoDsc,
	   T10.ISOEntRamAtv_Codigo                   as VW40_RamoAtvCod,
	   T24.ISOEntRamAtv_Descricao                as VW40_RamoAtvDsc,
	   T02.ISOMkAteCmpCnt_EmAtendimento			 as VW40_EmAtendimento,
	   T02.ISOMkAteCmpCnt_UsuarioAlteraca		 as VW40_UsuarioAlteracao,
	   T01.ISOMKAteCmp_Codigo                    as VW40_CodAteCampanha,
	   T14.ISOEntEnd_Bairro						 as VW40_Bairro,
       Case
           When T18.ISOEntPes_Codigo Is Null Then T10.ISOEntOrg_CNPJ
		   Else T18.ISOEntPes_CPF
       end                as VW40_CPFCNPJ
  From ISOMKATECAMPANHA T01
       Inner Join ISOMKATECMPCONTATO T02
          On T02.ISOEmp_Codigo               = T01.ISOEmp_Codigo
         And T02.ISOMkAteCmp_Codigo          = T01.ISOMkAteCmp_Codigo
         And T02.ISOMKAteCmpCnt_EntCodigo Not In (Select TA.ISOMKCmpCla_Prv_EntCodigo
                                                    From ISOMKCMPCLA_PRIVACIDADE TA
                                                         Inner Join ISOMKCampanha TB
                                                            On TB.ISOEmp_Codigo   = TA.ISOEmp_Codigo
                                                           And TB.ISOMKCmp_Codigo = T01.ISOMKCmp_Codigo
                                                   Where TA.ISOEmp_Codigo             = T02.ISOEmp_Codigo
                                                     And TA.ISOMKCmpCla_Codigo        = TB.ISOMKCmpCla_Codigo
                                                     And TA.ISOMKCmpCla_Prv_EntCodigo = T02.ISOMKAteCmpCnt_EntCodigo)
       Inner Join ISOMKCNTSITUACAO T03
          On T03.ISOEmp_Codigo               = T02.ISOEmp_Codigo
         And T03.ISOMkCntSit_Codigo          = T02.ISOMkCntSit_Codigo
       Inner Join ISOENTIDADE T04
          On T04.ISOEnt_Codigo               = T02.ISOMkAteCmpCnt_EntCodigo
        Left Join ISOMKATECMPCNTDETALHE T05
          On T05.ISOEmp_Codigo               = T02.ISOEmp_Codigo
         And T05.ISOMkAteCmp_Codigo          = T02.ISOMkAteCmp_Codigo
         And T05.ISOMkAteCmpCnt_Sequencia    = T02.ISOMkAteCmpCnt_Sequencia
         And T05.ISOMKAteCmpCntDet_Sequencia = T02.ISOMkAteCmpCnt_SeqDetalhe
        left Join ISOENTIDADE T06
          On T06.ISOEnt_Codigo               = T05.ISOMkAteCmpCntDet_CodigoRespon
        Left Join ISOAgenda T08
          On T08.ISOEmp_Codigo               = T05.ISOEmp_Codigo
		 And T08.ISOAge_Codigo               = T05.ISOMkAteCmpCntDet_AgeCodigo
        Left Join ISOAgeSituacao T09
          On T09.ISOEmp_Codigo               = T08.ISOEmp_Codigo
         And T09.ISOAgeSit_Codigo            = T08.ISOAgeSit_Codigo
		 And T09.ISOAgeSit_Situacao         <> 2
        Left Join ISOEntOrganizacao T10
          On T10.ISOEntOrg_Codigo            = T02.ISOMKAteCmpCnt_EntCodigo
		Left Join ISOMKFINCLASSIFICACAO T11
          On T11.ISOMkFin_Codigo             = T01.ISOMkFin_Codigo
		  and T11.ISOMkFinCla_Codigo		 = T05.ISOMkFinCla_Codigo
		Left Join ISOMKFINRESULTADO T12
          On T12.ISOMkFin_Codigo             = T01.ISOMkFin_Codigo
		  and T12.ISOMkFinRsl_Codigo		 = T05.ISOMkFinRsl_Codigo
		Left Join ISOENTTELEFONE T13
		  On T13.ISOEnt_Codigo				 = T04.ISOEnt_Codigo
		 and T13.ISOEntTel_Principal		 = 'S'
        Left Join ISOENTENDERECO T14
          On T14.ISOEnt_Codigo               = T04.ISOEnt_Codigo
         And T14.ISOEntEnd_Principal         = 'S'
        Left Join ISOLOCALIDADE T15
          On T15.ISOLoc_Codigo               = T14.ISOLoc_Codigo
        Left Join ISOESTADO T16
          On T16.ISOEst_Codigo               = T15.ISOEst_Codigo
         And T16.ISOPais_Codigo              = T15.ISOPais_Codigo
        Left Join ISOPAIS T17
          On T17.ISOPais_Codigo              = T15.ISOPais_Codigo
		  and T15.ISOLoc_Codigo              = T14.ISOLoc_Codigo
		Left Join ISOENTPESSOA T18
          On T18.ISOEntPes_Codigo            = T02.ISOMKAteCmpCnt_EntCodigo
		  Left Join ISOEntCliente T19 on T19.ISOEmp_Codigo = T01.ISOEmp_Codigo
         And T19.ISOEntCli_Codigo            = T02.ISOMKAteCmpCnt_EntCodigo
		Left join ISOEntClassificacaoPapel T20
          On T20.ISOEmp_Codigo               = T01.ISOEmp_Codigo
         And T20.ISOEntClaP_Codigo           = T19.ISOEntClaP_Codigo
		Left Join ISOEntClaPEspecialidade T21
		  On T21.ISOEmp_Codigo               = T01.ISOEmp_Codigo
         And T21.ISOEntClaP_Codigo           = T19.ISOEntClaP_Codigo
		 And T21.ISOEntClaPEsp_Codigo        = T19.ISOEntClaPEsp_Codigo
		LEFT JOIN ISOENTSEGMENTO T22
		  ON T22.ISOEntSeg_Codigo            = T10.ISOEntSeg_Codigo
		LEFT JOIN ISOENTSEGMENTO T23
		  ON T23.ISOEntSeg_Codigo            = T18.ISOEntSeg_Codigo
		LEFT JOIN ISOENTRAMOATIVIDADE T24
		  ON T24.ISOEntRamAtv_Codigo = T10.ISOEntRamAtv_Codigo
		Left join ISOEntCliSituacao T25
          On T25.ISOEmp_Codigo               = T01.ISOEmp_Codigo
         And T25.ISOEntCliSit_Codigo         = T19.ISOEntCliSit_Codigo;


-- ConexaoISO.VW42A_PrdBlq_Cli source

-- LISTA OS PRODUTOS BLOQUEADOS RELACIONANDO AO ARMAZÉM E CLIENTE.
CREATE VIEW VW42A_PrdBlq_Cli AS
SELECT
    T01.ISOEmp_Codigo          AS VW42A_ISOEmp_Codigo,
	T02.ISOPvBlqPrd_CodProduto AS VW42A_ISOPvBlqPrd_CodProduto,
	T02.ISOPvBlqPrd_CodArmazem AS VW42A_ISOPvBlqPrd_CodArmazem,
	T03.ISOPvBlqCli_CodCliente AS VW42A_ISOPvBlqCli_CodCliente,
	T04.ISOPrd_TipoPreco       AS VW42A_ISOPrd_TipoPreco
FROM ISOPvBloqueio T01
	INNER JOIN ISOPvBlqProduto T02
	   ON T02.ISOEmp_Codigo    = T01.ISOEmp_Codigo
	  AND T02.ISOPvBlq_Codigo  = T01.ISOPvBlq_Codigo
	  AND T02.ISOPvBlqPrd_Flag = 'A'
	INNER JOIN ISOPvBlqCliente T03
	   ON T03.ISOEmp_Codigo    = T01.ISOEmp_Codigo
	  AND T03.ISOPvBlq_Codigo  = T01.ISOPvBlq_Codigo
	  AND T03.ISOPvBlqCli_Flag = 'A'
	INNER JOIN ISOPRODUTO T04
	   ON T04.ISOEmp_Codigo    = T02.ISOEmp_Codigo
	  AND T04.ISOPrd_Codigo    = T02.ISOPvBlqPrd_CodProduto
WHERE T01.ISOPvBlq_Flag = 'A';


-- ConexaoISO.VW42A_PrdLib_Cli source

CREATE VIEW  VW42A_PrdLib_Cli AS
SELECT
T01.ISOEmp_Codigo AS VW42A_ISOEmp_Codigo,
T02.ISOPvBlqPrd_CodProduto AS VW42A_ISOPvBlqPrd_CodProduto,
T02.ISOPvBlqPrd_CodArmazem AS VW42A_ISOPvBlqPrd_CodArmazem,
T03.ISOPvBlqCli_CodCliente AS VW42A_ISOPvBlqCli_CodCliente,
T04.ISOPrd_TipoPreco AS VW42A_ISOPrd_TipoPreco
FROM ISOPvBloqueio T01
INNER JOIN ISOPvBlqProduto T02
ON T02.ISOEmp_Codigo = T01.ISOEmp_Codigo
AND T02.ISOPvBlq_Codigo = T01.ISOPvBlq_Codigo
AND T02.ISOPvBlqPrd_Flag = 'A'
INNER JOIN ISOPvBlqCliente T03
ON T03.ISOEmp_Codigo = T01.ISOEmp_Codigo
AND T03.ISOPvBlq_Codigo = T01.ISOPvBlq_Codigo
AND T03.ISOPvBlqCli_Flag = 'A'
INNER JOIN ISOPRODUTO T04
ON T04.ISOEmp_Codigo = T02.ISOEmp_Codigo
AND T04.ISOPrd_Codigo = T02.ISOPvBlqPrd_CodProduto
WHERE T01.ISOPvBlq_Flag = 'A';


-- ConexaoISO.VW42B_PrdLib_Cli source

CREATE VIEW  VW42B_PrdLib_Cli AS
SELECT
       T01.ISOEmp_Codigo			 AS VW42_Emp_Codigo,
       T01.ISOPrd_Codigo			 AS VW42_Prd_Codigo,
	   T0A.ISOPrd_Descricao			 AS VW42_Prd_Descricao,
	   T02.ISOArm_Codigo			 AS VW42_Arm_Codigo,
	   T03.ISOEntCli_Codigo			 AS VW42_Cli_Codigo,
	   T0B.ISOPrd_Codigo			 AS VW42_Prd2_Codigo,
       T0B.ISOPrd_Descricao			 AS VW42_Prd2_Descricao,
	   'K'							 AS VW42_PrdTipo,
	   T04.ISOPrdUndFatC_UndOrigem	 AS VW42_PrdUnidade,
	   T04.ISOPrdUndFatC_UndDestino	 AS VW42_UndDestino,
	   T04.ISOPrdUndFatC_FatorConversao AS VW42_FatorConversao,
	   T04.ISOPrdUndFatC_Armazem	 AS VW42_Armazem,
	   T04.ISOPrdUndFatC_CaixaMaster AS VW42_CaixaMaster,
	   T04.ISOPrdUndFatC_Flag		 AS VW42_PrdFatCFlag,
	   T0A.ISOPrd_DescontoCP		 AS VW42_PrdDescontoCP,
	   T0A.ISOPrd_DescricaoDetalhada AS VW42_PrdDscDetalhada,
	   T0A.ISOPrd_TipoPreco			 AS VW42_PrdTipoPreco,
	   T0A.ISOPrd_DataAlteracao		 AS VW42_PrdDataAlteracao
  FROM ISOPRDKIT T01
       INNER JOIN ISOProduto T0A
	      On T0A.ISOEmp_Codigo = T01.ISOEmp_Codigo
		 AND T0A.ISOPrd_Codigo = T01.ISOPrd_Codigo
		 AND T0A.ISOPrd_Flag   = 'A'
         AND T0A.ISOPrd_KitSeparado = 'S'
         AND T0A.ISOPrd_TipoPreco   = 'K'
       INNER JOIN ISOProduto T0B
          ON T0B.ISOEmp_Codigo = T01.ISOEmp_Codigo
         AND T0B.ISOPrd_Codigo = T01.ISOPrdKit_PrdCodigo
       INNER JOIN ISOArmProdutos T02
	      ON T02.ISOEmp_Codigo = T01.ISOEmp_Codigo
		 AND T02.ISOPrd_Codigo = T01.ISOPrd_Codigo
		 AND T02.ISOArmPrd_Flag = 'A'
	   INNER JOIN ISOEntCliente T03
	      ON T03.ISOEmp_Codigo = T01.ISOEmp_Codigo
	   INNER JOIN ISOPrdUndFatorConversao T04
	      ON T04.ISOEmp_Codigo = T01.ISOEmp_Codigo
		 AND T04.ISOPrdUndFatC_PrdCodigo = T01.ISOPrd_Codigo
		 AND T04.ISOPrdUndFatC_UndOrigem = T0A.ISOPrd_Unidade
 WHERE T01.ISOPrd_Codigo NOT IN (SELECT VW42A_ISOPvBlqPrd_CodProduto
                                   FROM VW42A_PrdBlq_Cli
								  WHERE VW42A_ISOEmp_Codigo = T01.ISOEmp_Codigo
								    AND VW42A_ISOPrd_TipoPreco = 'K'
								    AND ((VW42A_ISOPvBlqPrd_CodProduto = T01.ISOPrd_Codigo AND VW42A_ISOPvBlqPrd_CodArmazem = T02.ISOArm_Codigo AND VW42A_ISOPvBlqCli_CodCliente = T03.ISOEntCli_Codigo)
									 OR (VW42A_ISOPvBlqPrd_CodProduto = T01.ISOPrd_Codigo AND VW42A_ISOPvBlqPrd_CodArmazem = T02.ISOArm_Codigo AND VW42A_ISOPvBlqCli_CodCliente IS NULL)
									 OR (VW42A_ISOPvBlqPrd_CodProduto = T01.ISOPrd_Codigo AND VW42A_ISOPvBlqPrd_CodArmazem IS NULL AND VW42A_ISOPvBlqCli_CodCliente = T03.ISOEntCli_Codigo)
									 OR (VW42A_ISOPvBlqPrd_CodProduto = T01.ISOPrd_Codigo AND VW42A_ISOPvBlqPrd_CodArmazem = T02.ISOArm_Codigo AND VW42A_ISOPvBlqCli_CodCliente = T03.ISOEntCli_Codigo)))


UNION

SELECT T01.ISOEmp_Codigo			 AS VW42_Emp_Codigo,
       T01.ISOPrd_Codigo			 AS VW42_Prd_Codigo,
	   T01.ISOPrd_Descricao			 AS VW42_Prd_Descricao,
	   T02.ISOArm_Codigo			 AS VW42_Arm_Codigo,
	   T03.ISOEntCli_Codigo			 AS VW42_Cli_Codigo,
	   T01.ISOPrd_Codigo			 AS VW42_Prd2_Codigo,
	   T01.ISOPrd_Descricao			 AS VW42_Prd2_Descricao,
	   'P'							 AS VW42_PrdTipo,
	   T04.ISOPrdUndFatC_UndOrigem	 AS VW42_PrdUnidade,
	   T04.ISOPrdUndFatC_UndDestino	 AS VW42_UndDestino,
	   T04.ISOPrdUndFatC_FatorConversao AS VW42_FatorConversao,
	   T04.ISOPrdUndFatC_Armazem	 AS VW42_Armazem,
	   T04.ISOPrdUndFatC_CaixaMaster AS VW42_CaixaMaster,
	   T04.ISOPrdUndFatC_Flag		 AS VW42_PrdFatCFlag,
	   T01.ISOPrd_DescontoCP		 AS VW42_PrdDescontoCP,
	   T01.ISOPrd_DescricaoDetalhada AS VW42_PrdDscDetalhada,
	   T01.ISOPrd_TipoPreco			 AS VW42_PrdTipoPreco,
	   T01.ISOPrd_DataAlteracao		 AS VW42_PrdDataAlteracao
  FROM ISOProduto T01
       INNER JOIN ISOArmProdutos T02
	      ON T02.ISOEmp_Codigo = T01.ISOEmp_Codigo
		 AND T02.ISOPrd_Codigo = T01.ISOPrd_Codigo
		 AND T02.ISOArmPrd_Flag = 'A'
	   INNER JOIN ISOEntCliente T03
	      ON T03.ISOEmp_Codigo = T01.ISOEmp_Codigo
	   INNER JOIN ISOPrdUndFatorConversao T04
	      ON T04.ISOEmp_Codigo = T01.ISOEmp_Codigo
		 AND T04.ISOPrdUndFatC_PrdCodigo = T01.ISOPrd_Codigo
		 AND T04.ISOPrdUndFatC_UndOrigem = T01.ISOPrd_Unidade
 WHERE T01.ISOPrd_Flag        = 'A'
   AND T01.ISOPrd_KitSeparado = 'S'
   AND T01.ISOPrd_TipoPreco   = 'P'
   AND T01.ISOPrd_Codigo NOT IN (SELECT VW42A_ISOPvBlqPrd_CodProduto
                                   FROM VW42A_PrdBlq_Cli
								  WHERE VW42A_ISOEmp_Codigo = T01.ISOEmp_Codigo
								    AND VW42A_ISOPrd_TipoPreco = 'P'
								    AND ((VW42A_ISOPvBlqPrd_CodProduto = T01.ISOPrd_Codigo AND VW42A_ISOPvBlqPrd_CodArmazem = T02.ISOArm_Codigo AND VW42A_ISOPvBlqCli_CodCliente = T03.ISOEntCli_Codigo)
									 OR  (VW42A_ISOPvBlqPrd_CodProduto = T01.ISOPrd_Codigo AND VW42A_ISOPvBlqPrd_CodArmazem = T02.ISOArm_Codigo AND VW42A_ISOPvBlqCli_CodCliente IS NULL)
									 OR  (VW42A_ISOPvBlqPrd_CodProduto = T01.ISOPrd_Codigo AND VW42A_ISOPvBlqPrd_CodArmazem IS NULL AND VW42A_ISOPvBlqCli_CodCliente = T03.ISOEntCli_Codigo)
									 OR  (VW42A_ISOPvBlqPrd_CodProduto = T01.ISOPrd_Codigo AND VW42A_ISOPvBlqPrd_CodArmazem = T02.ISOArm_Codigo AND VW42A_ISOPvBlqCli_CodCliente = T03.ISOEntCli_Codigo)));


-- ConexaoISO.VW42_PrdLib_Cli source

CREATE VIEW  VW42_PrdLib_Cli AS
SELECT DISTINCT
       VW42_Emp_Codigo,
       VW42_Prd_Codigo,
	   VW42_Prd_Descricao,
	   VW42_Arm_Codigo,
	   VW42_Cli_Codigo,
	   VW42_Prd2_Codigo,
       VW42_Prd2_Descricao,
	   VW42_PrdTipo,
	   VW42_PrdUnidade,
	   VW42_UndDestino,
	   VW42_FatorConversao,
	   VW42_Armazem,
	   VW42_CaixaMaster,
	   VW42_PrdFatCFlag,
	   VW42_PrdDescontoCP,
	   VW42_PrdDscDetalhada,
	   VW42_PrdTipoPreco,
	   VW42_PrdDataAlteracao
  FROM VW42B_PrdLib_Cli;


-- ConexaoISO.VW44_Clientes_Responsavel source

CREATE VIEW VW44_Clientes_Responsavel as
Select A.ISOEmp_Codigo							 As VW44_Empresa,
	   A.ISOEnt_Codigo	                         As VW44_Codigo,
       J.ISOEntClaP_Codigo						 As VW44_ClaPCodigo,
       K.ISOEntClaP_Descricao					 As VW44_ClaPDescricao,
	   P.ISOEntClaPEsp_Codigo					 As VW44_ClaPEspCodigo,
       P.ISOEntClaPEsp_Descricao				 As VW44_ClaPEspDescricao,
       A2.ISOEntRsp_Codigo						 As VW44_RspCodigo,
       N2.ISOEnt_Nome	                         As VW44_RspNome,
       A2.ISOEntNivRsp_Codigo					 As VW44_NivCodigo,
	   O.ISOEntNivRsp_Descricao				     As VW44_NivDescricao,
      LTRIM(upper(N.ISOEnt_Nome))		             As VW44_Nome,
      Case
           When C.ISOEntPes_Codigo is null  Then 'O'
           When V.ISOEntOrg_Codigo is null  Then 'P'
           Else                                  'N'
      End						                 As VW44_Tipo,
      Case
           When C.ISOEntpes_CPF is null		Then V.ISOEntOrg_CNPJ
           When V.ISOEntOrg_CNPJ is null	Then C.ISOEntpes_CPF
           Else                                  0
      End						                 As VW44_CPFCNPJ,
      Case
           When C.ISOEntPes_RG is null		Then V.ISOEntOrg_InscEstadual
           When V.ISOEntOrg_InscEstadual is null Then C.ISOEntPes_RG
           Else                                  ''
      End						                 As VW44_Documento,
      D.ISOEntTel_Codigo						 As VW44_TelCodigo,
      D.ISOEntTel_ddd				             As VW44_DDD,
      D.ISOEntTel_telefone                       As VW44_Telefone,
      H.ISOEntEct_Codigo						 As VW44_EctCodigo,
      H.ISOEntEct_econtact                       As VW44_Email,
      E.ISOEntEnd_Codigo						 As VW44_EndCodigo,
	E.ISOEntEnd_Titulo						 As VW44_TitLogradouro,
	E.ISOEntEnd_Logradouro					 As VW44_Logradouro,
	E.ISOEntEnd_Numero						 As VW44_Numero,
	E.ISOEntEnd_Complemento					 As VW44_Complemento,
	E.ISOEntEnd_Bairro						 As VW44_Bairro,
	E.ISOEntEnd_CEP							 As VW44_CEP,
	E.ISOLoc_Codigo							 As VW44_CodCidade,
	F.ISOLoc_Descricao				         As VW44_Cidade,
	G.ISOEst_Codigo							 As VW44_CodEstado,
	G.ISOEst_Sigla					         As VW44_UF,
	J.ISOEntCli_Flag                         As VW44_Ativo,
	E.ISOEntEnd_Latitude					 As VW44_Latitude,
	E.ISOEntEnd_Longitude					 As VW44_Longitude,
	(6371 * acos( cos( radians(convert(float, cast(LTRIM(Q.ISOEntUsu_CheckinLatitude) AS money))) )
 * cos( radians( E.ISOEntEnd_Latitude ) )
 * cos( radians( E.ISOEntEnd_Longitude ) - radians(convert(float, cast(LTRIM(Q.ISOEntUsu_CheckinLongitude) AS money))) )
 + sin( radians(convert(float, cast(LTRIM(Q.ISOEntUsu_CheckinLatitude) AS money))) )
 * sin( radians( E.ISOEntEnd_Latitude ) ) ) ) AS VW44_Distancia,
	J.iSOEntCli_CodigoExt					  as VW44_CodigoExt,
	RTRIM(D.ISOEntTel_DDI) + RTRIM(D.ISOEntTel_ddd) + convert(varchar, D.ISOEntTel_telefone)     As VW44_TelefoneCompleto,
	D.ISOEntTel_DDI						      AS VW44_DDI,
	L.ISOEntCliSit_Situacao                   AS VW44_SituacaoInterna,
	J.ISOEntCliSit_Codigo                     AS VW44_SitCodigo,
	L.ISOEntCliSit_Descricao                  AS VW44_SitDescricao,
	Case
           When C.ISOEntPes_Codigo is null  Then V.ISOEntSeg_Codigo
           When V.ISOEntOrg_Codigo is null  Then C.ISOEntSeg_Codigo
           Else                                  NULL
    End						                 As VW44_SegmentoCod,
	Case
           When V.ISOEntSeg_Codigo is null  Then R.ISOEntSeg_Descricao
           When C.ISOEntSeg_Codigo is null  Then S.ISOEntSeg_Descricao
           Else                                  NULL
    End						                 As VW44_SegmentoDsc,
	V.ISOEntRamAtv_Codigo                    As VW44_RamoAtvCod,
	T.ISOEntRamAtv_Descricao                 As VW44_RamoAtvDsc,
	ROW_NUMBER() Over (Partition by A.ISOEnt_Codigo Order by A.ISOEnt_Codigo, A2.ISOEntRsp_Codigo)
	                                         As VW44_Sequencia,
	C.ISOEntPes_RG_Data               As VW44_RG_DataEmissao,
	C.ISOEntPes_RG_Orgao                     As VW44_RG_OrgaoEmissao,
	C.ISOEntPes_Sexo                         As VW44_Sexo,
	C.ISOProf_Codigo                         As VW44_ProfissaoCod,
	Y.ISOProf_Descricao                      As VW44_ProfissaoDsc,
	C.ISONivEsc_Codigo                       As VW44_NivelEscolCod,
	U.ISONivEsc_Descricao                    As VW44_NivelEscolDsc,
	C.ISOEstCiv_Codigo                       As VW44_EstadoCivilCod,
	X.ISOEstCiv_Descricao                    As VW44_EstadoCivilDsc,
	V.ISOEntOrg_NomeFantasia                 As VW44_Org_NomeFantasia,
	Case
        When C.ISOEntPes_Codigo is null  Then V.ISOEntOrg_DataCadastro
        When V.ISOEntOrg_Codigo is null Then C.ISOEntPes_DataCadastro
        Else                                  null
    End						                 As VW44_DataCadastro,
	Case
        When C.ISOEntPes_Codigo is null  Then V.ISOEntOrg_DataAbertura
        When V.ISOEntOrg_Codigo is null Then C.ISOEntPes_DataNascimento
        Else                                  null
    End						                 As VW44_DataNascAbert,
	Case
        When C.ISOEntPes_Codigo is null  Then V.ISOEntOrg_Observacao
        When V.ISOEntOrg_Codigo is null Then C.ISOEntPes_Observacao
        Else                                  null
    End						                 As VW44_Observacao,
	Case
        When C.ISOEntPes_Codigo is null  Then V.ISOEntOrg_DataAlteracao
        When V.ISOEntOrg_Codigo is null Then C.ISOEntPes_DataAlteracao
        Else                                  null
    End						                 As VW44_EntDataAlteracao,
	Case
        When C.ISOEntPes_Codigo is null  Then V.ISOEntOrg_UsuarioAlteracao
        When V.ISOEntOrg_Codigo is null Then C.ISOEntPes_UsuarioAlteracao
        Else                                  null
    End						                 As VW44_EntUsuAlteracao,
	D.ISOEntTel_DataAlteracao As VW44_TelDataAlteracao,
	D.ISOEntTel_UsuarioAlteracao As VW44_TelUsuAlteracao,
	H.ISOEntEml_DataAlteracao As VW44_EctDataAlteracao,
	H.ISOEntEml_UsuarioAlteracao As VW44_EctUsuAlteracao,
	E.ISOEntEnd_DataAlteracao As VW44_EndDataAlteracao,
	E.ISOEntEnd_UsuarioAlteracao As VW44_EndUsuAlteracao,
	J.ISOEntCli_DataAlteracao As VW44_CliDataAlteracao,
	J.ISOEntCli_UsuarioAlteracao As VW44_CliUsuAlteracao
  From ISOEmp_Entidade A
	    left Join ISOENTRSP_CLIENTES A2
		  On A2.ISOEntCli_Codigo         = A.ISOEnt_Codigo
        Left Join ISOENTPESSOA C
          On A.ISOEnt_Codigo         = C.isoentpes_Codigo
        Left join ISOENTORGANIZACAO V
          On A.ISOEnt_Codigo         = V.ISOEntOrg_Codigo
        Left Join ISOEntTelefone D
          On A.ISOEnt_Codigo         = D.ISOEnt_Codigo
         And D.ISOEntTel_Flag           = 'A'
		 And D.ISOEntTel_Principal		= 'S'
        Left Join ISOEntEndereco E
          On A.ISOEnt_Codigo         = E.ISOEnt_Codigo
         And E.ISOEntEnd_Flag           = 'A'
		 And E.ISOEntEnd_Principal		= 'S'
        Left Join ISOLocalidade F
          On E.ISOLoc_Codigo            = F.ISOLoc_Codigo
        Left Join ISOEstado G
          On F.ISOPais_Codigo           = G.ISOPais_Codigo
         And F.ISOEst_Codigo            = G.ISOEst_Codigo
        Left Join ISOPAIS B
		  On F.ISOPais_Codigo           = B.ISOPais_Codigo
        Left Join ISOEntEcontact H
          On A.ISOEnt_Codigo         = H.ISOEnt_Codigo
         And H.ISOEntEml_Flag           = 'A'
		 And H.ISOEntEctTip_Principal	= 'S'
        Left Join ISOEntCliente J
	      On J.ISOEntCli_Codigo         = A.ISOEnt_Codigo
	     And A.ISOEmp_Codigo            = J.ISOEmp_Codigo
        Left join ISOEntClassificacaoPapel K
          On K.ISOEmp_Codigo            = J.ISOEmp_Codigo
         And K.ISOEntClaP_Codigo        = J.ISOEntClaP_Codigo
        Left join ISOEntCliSituacao L
          On L.ISOEmp_Codigo            = J.ISOEmp_Codigo
         And L.ISOEntCliSit_Codigo      = J.ISOEntCliSit_Codigo
		Left join ISOENTIDADE N
		  On N.ISOEnt_Codigo			= A.ISOEnt_Codigo
	    Left join ISOENTIDADE N2
		  On N2.ISOEnt_Codigo			= A2.ISOEntRsp_Codigo
		Left Join ISOEntNivResponsabilidade O
		  On O.ISOEmp_Codigo 			= J.ISOEmp_Codigo
		  And O.ISOEntNivRsp_Codigo 	= A2.ISOEntNivRsp_Codigo
		Left Join ISOEntClaPEspecialidade P
		  On P.ISOEmp_Codigo            = J.ISOEmp_Codigo
         And P.ISOEntClaP_Codigo        = J.ISOEntClaP_Codigo
		 And P.ISOEntClaPEsp_Codigo     = J.ISOEntClaPEsp_Codigo
		Left Join ISOENTUSU_CHECKIN Q
		  On Q.ISOEntUsu_Codigo			= A2.ISOEntRsp_Codigo
		 And ISOEntUsu_CheckCodigo = (select max(ISOEntUsu_CheckCodigo) from ISOENTUSU_CHECKIN where ISOEntUsu_Codigo = Q.ISOEntUsu_Codigo)
		LEFT JOIN ISOENTSEGMENTO R
		  ON R.ISOEntSeg_Codigo = C.ISOEntSeg_Codigo
		LEFT JOIN ISOENTSEGMENTO S
		  ON S.ISOEntSeg_Codigo = V.ISOEntSeg_Codigo
		LEFT JOIN ISOENTRAMOATIVIDADE T
		  ON T.ISOEntRamAtv_Codigo = V.ISOEntRamAtv_Codigo
		Left join ISONIVESCOLARIDADE U
			On C.ISONivEsc_Codigo = U.ISONivEsc_Codigo
		Left join ISOESTCIVIL X
			On C.ISOEstCiv_Codigo = X.ISOEstCiv_Codigo
		Left join ISOPROFISSAO Y
			On C.ISOProf_Codigo = Y.ISOProf_Codigo;


-- ConexaoISO.VW44_Clientes_Responsavel_B source

CREATE VIEW VW44_Clientes_Responsavel_B as
Select distinct
	A.ISOEmp_Codigo							 As VW44_Empresa,
	A.ISOEnt_Codigo	                         As VW44_Codigo,
	J.ISOEntClaP_Codigo						 As VW44_ClaPCodigo,
	K.ISOEntClaP_Descricao					 As VW44_ClaPDescricao,
	P.ISOEntClaPEsp_Codigo					 As VW44_ClaPEspCodigo,
	P.ISOEntClaPEsp_Descricao				 As VW44_ClaPEspDescricao,
	null									 As VW44_RspCodigo,
	''								 		 As VW44_RspNome,
	null									 As VW44_NivCodigo,
	''										As VW44_NivDescricao,
	LTRIM(upper(N.ISOEnt_Nome))		         As VW44_Nome,
    Case
           When C.ISOEntPes_Codigo is null  Then 'O'
           When V.ISOEntOrg_Codigo is null  Then 'P'
           Else                                  'N'
    End						                 As VW44_Tipo,
	Case
           When C.ISOEntpes_CPF is null		Then V.ISOEntOrg_CNPJ
           When V.ISOEntOrg_CNPJ is null	Then C.ISOEntpes_CPF
           Else                                  0
    End						                 As VW44_CPFCNPJ,
	Case
           When C.ISOEntPes_RG is null		Then V.ISOEntOrg_InscEstadual
           When V.ISOEntOrg_InscEstadual is null Then C.ISOEntPes_RG
           Else                                  ''
    End						                 As VW44_Documento,
	D.ISOEntTel_Codigo						 As VW44_TelCodigo,
	D.ISOEntTel_ddd				             As VW44_DDD,
	D.ISOEntTel_telefone			         As VW44_Telefone,
	H.ISOEntEct_Codigo						 As VW44_EctCodigo,
	H.ISOEntEct_econtact			         As VW44_Email,
	E.ISOEntEnd_Codigo						 As VW44_EndCodigo,
	E.ISOEntEnd_Titulo						 As VW44_TitLogradouro,
	E.ISOEntEnd_Logradouro					 As VW44_Logradouro,
	E.ISOEntEnd_Numero						 As VW44_Numero,
	E.ISOEntEnd_Complemento					 As VW44_Complemento,
	E.ISOEntEnd_Bairro						 As VW44_Bairro,
	E.ISOEntEnd_CEP							 As VW44_CEP,
	E.ISOLoc_Codigo							 As VW44_CodCidade,
	F.ISOLoc_Descricao				         As VW44_Cidade,
	G.ISOEst_Codigo							 As VW44_CodEstado,
	G.ISOEst_Sigla					         As VW44_UF,
	J.ISOEntCli_Flag                         As VW44_Ativo,
	E.ISOEntEnd_Latitude					 As VW44_Latitude,
	E.ISOEntEnd_Longitude					 As VW44_Longitude,
	null									 AS VW44_Distancia,
	J.iSOEntCli_CodigoExt					 as VW44_CodigoExt,
	RTRIM(D.ISOEntTel_DDI) + RTRIM(D.ISOEntTel_ddd) + convert(varchar, D.ISOEntTel_telefone)     As VW44_TelefoneCompleto,
	D.ISOEntTel_DDI							AS VW44_DDI,
	L.ISOEntCliSit_Situacao                 AS VW44_SituacaoInterna,
	J.ISOEntCliSit_Codigo                   AS VW44_SitCodigo,
	L.ISOEntCliSit_Descricao                AS VW44_SitDescricao,
	Case
           When C.ISOEntPes_Codigo is null  Then V.ISOEntSeg_Codigo
           When V.ISOEntOrg_Codigo is null  Then C.ISOEntSeg_Codigo
           Else                                  NULL
    End						                 As VW44_SegmentoCod,
	Case
           When V.ISOEntSeg_Codigo is null  Then R.ISOEntSeg_Descricao
           When C.ISOEntSeg_Codigo is null  Then S.ISOEntSeg_Descricao
           Else                                  NULL
    End						                 As VW44_SegmentoDsc,
	V.ISOEntRamAtv_Codigo As VW44_RamoAtvCod,
	T.ISOEntRamAtv_Descricao As VW44_RamoAtvDsc
	From ISOEmp_Entidade A
	    Left Join ISOENTRSP_CLIENTES A2
		  On A2.ISOEntCli_Codigo         = A.ISOEnt_Codigo
        Left Join ISOENTPESSOA C
          On A.ISOEnt_Codigo         = C.isoentpes_Codigo
        Left join ISOENTORGANIZACAO V
          On A.ISOEnt_Codigo         = V.ISOEntOrg_Codigo
        Left Join ISOEntTelefone D
          On A.ISOEnt_Codigo         = D.ISOEnt_Codigo
         And D.ISOEntTel_Flag           = 'A'
		 And D.ISOEntTel_Principal		= 'S'
        Left Join ISOEntEndereco E
          On A.ISOEnt_Codigo         = E.ISOEnt_Codigo
         And E.ISOEntEnd_Flag           = 'A'
		 And E.ISOEntEnd_Principal		= 'S'
        Left Join ISOLocalidade F
          On E.ISOLoc_Codigo            = F.ISOLoc_Codigo
        Left Join ISOEstado G
          On F.ISOPais_Codigo           = G.ISOPais_Codigo
         And F.ISOEst_Codigo            = G.ISOEst_Codigo
        Left Join ISOPAIS B
		  On F.ISOPais_Codigo           = B.ISOPais_Codigo
        Left Join ISOEntEcontact H
          On A.ISOEnt_Codigo         = H.ISOEnt_Codigo
         And H.ISOEntEml_Flag           = 'A'
		 And H.ISOEntEctTip_Principal	= 'S'
        Left Join ISOEntCliente J
	      On J.ISOEntCli_Codigo         = A.ISOEnt_Codigo
	     And A.ISOEmp_Codigo            = J.ISOEmp_Codigo
        Left join ISOEntClassificacaoPapel K
          On K.ISOEmp_Codigo            = J.ISOEmp_Codigo
         And K.ISOEntClaP_Codigo        = J.ISOEntClaP_Codigo
        Left join ISOEntCliSituacao L
          On L.ISOEmp_Codigo            = J.ISOEmp_Codigo
         And L.ISOEntCliSit_Codigo      = J.ISOEntCliSit_Codigo
		Left join ISOENTIDADE N
		  On N.ISOEnt_Codigo			= A.ISOEnt_Codigo
		Left Join ISOEntClaPEspecialidade P
		  On P.ISOEmp_Codigo            = J.ISOEmp_Codigo
         And P.ISOEntClaP_Codigo        = J.ISOEntClaP_Codigo
		 And P.ISOEntClaPEsp_Codigo     = J.ISOEntClaPEsp_Codigo
		LEFT JOIN ISOENTSEGMENTO R
		  ON R.ISOEntSeg_Codigo = C.ISOEntSeg_Codigo
		LEFT JOIN ISOENTSEGMENTO S
		  ON S.ISOEntSeg_Codigo = V.ISOEntSeg_Codigo
		LEFT JOIN ISOENTRAMOATIVIDADE T
		  ON T.ISOEntRamAtv_Codigo = V.ISOEntRamAtv_Codigo
		WHERE A2.ISOEntRsp_Codigo  is not null;


-- ConexaoISO.VW48_AbasPedido source

CREATE VIEW VW48_AbasPedido AS

SELECT
T1.ISOEmp_Codigo					AS VW48_Empresa,
ISOPvPed_Codigo						AS VW48_Codigo,
null								AS VW48_CodCompl,
null								AS VW48_Sequencia,
'DADOS'								AS VW48_Tipo,
'<div class="nome"><b>Pedido:</b> ' + CAST(ISOPvPed_Codigo as nvarchar) + '<BR><b>Cliente:</b> ' + RTrim(T6.ISOEnt_Nome)
+ '</div><div class="detalhe"><b>Abertura:</b> ' + CAST(CONVERT(VARCHAR(12),ISOPvPed_DtaAberPedido, 103) as nvarchar) + ' <b>Faturamento:</b> ' + CAST(CONVERT(VARCHAR(12),ISOPvPed_DtaSolEntrega, 103) as nvarchar)
+ '<BR><b>Forma pagamento:</b> ' + RTrim(T3.ISOPeCndPgt_Descricao)
+ '<BR><b>Condiï¿½ï¿½o pagamento:</b> ' + RTrim(T7.ISOPvTV_Descricao)
+ '<BR><b>Local faturamento:</b> ' + RTrim(T8.ISOPvCD_Descricao)
+ '<BR><b>Situaï¿½ï¿½o:</b> ' + RTrim(T2.ISOPvPedSit_Descricao)
+ '<BR><b>Observaï¿½ï¿½o:</b>' + ISOPvPed_Observacao
+ '<BR><b>Endereï¿½o entrega:</b> ' + RTrim(ISNULL(ISOPvPed_EndLogradouro,'')) + ', ' + RTrim(ISNULL(ISOPvPed_EndNumero,'')) + ' - ' + RTrim(ISNULL(ISOPvPed_EndComplemento,''))
+ '<BR>' + RTrim(ISNULL(ISOPvPed_EndBairro,''))
+ '<BR>' + RTrim(ISNULL(ISOPvPed_EndCidade,'')) + ' - ' + RTrim(ISNULL(ISOPvPed_EndEstado,''))
+ '<BR><b>Atendente:</b> ' + RTrim(ISNULL(T4.ISOEnt_Nome,''))
+ '<BR><b>Vendedor:</b> ' + RTrim(ISNULL(T5.ISOEnt_Nome,''))
+ '<BR><b>Origem:</b> ' + RTrim(T9.ISOPvPedOri_Descricao)
+ '<BR><b>Total do pedido:</b> ' + CAST(CAST(ISOPvPed_ValorTotalPedido as money) as nvarchar) + '</div>'
									AS VW48_Descricao,
null								AS VW48_DescCompl,
null								AS VW48_Link,
ISOPvPed_DataAlteracao				AS VW48_DataAlteracao,
1									AS VW48_Ordem
FROM ISOPVPEDIDO T1
INNER JOIN ISOPVPEDSITUACAO T2
	On T1.ISOPvPedSit_Codigo = T2.ISOPvPedSit_Codigo
INNER JOIN ISOPECNDPAGAMENTO T3
	On T1.ISOPeCndPgt_Codigo = T3.ISOPeCndPgt_Codigo
INNER JOIN ISOENTIDADE T4
	On T1.ISOPvPed_CodigoAtendente = T4.ISOEnt_Codigo
INNER JOIN ISOENTIDADE T5
	On T1.ISOPvPed_CodVendedorCD = T5.ISOEnt_Codigo
INNER JOIN ISOENTIDADE T6
	On T1.ISOPvPed_CliCodigo = T6.ISOEnt_Codigo
INNER JOIN ISOPvTabelaVenda T7
	On T1.ISOPvPed_Pagamento = T7.ISOPvTV_Codigo
INNER JOIN ISOPVCD T8
	On T1.ISOPvPed_EstadoOrigem = T8.ISOPvCD_Origem
	And T1.ISOPvPed_EstadoDestino = T8.ISOPvCD_Destino
INNER JOIN ISOPVPEDORIGEM T9
	On T1.ISOPvPedOri_Codigo = T9.ISOPvPedOri_Codigo

UNION

SELECT
T1.ISOEmp_Codigo,
T1.ISOPvPed_Codigo,
T1.ISOPvPedIte_Codigo,
null,
'ITEM',
'Item: ' + CAST(T1.ISOPvPedIte_Codigo as nvarchar)
	+ '<br> Produto: ' + RTrim(T1.ISOPrd_Codigo) + ' - ' + RTrim(T2.ISOPrd_Descricao),
'Situaï¿½ï¿½o: ' + RTrim(T3.ISOPvPedIteSit_Descricao)
	+ '<br> Quantidade: ' + CAST(T1.ISOPvPedIte_Quantidade as nvarchar) + ' Unidade: ' + T1.ISOPvPedIte_UnidadeDestino
	+ '<br> Valor R$' + CAST(CAST(T1.ISOPvPedIte_ValorUnitario as money)as nvarchar) + ' Total R$' + CAST(CAST(T1.ISOPvPedIte_ValorUnitario * T1.ISOPvPedIte_Quantidade as money) as nvarchar),
null,
T1.ISOPvPedIte_DataAlteracao,
2
FROM ISOPVPEDITEM T1
Inner Join ISOPRODUTO T2
	On T1.ISOPrd_Codigo = T2.ISOPrd_Codigo
Inner Join ISOPVPEDITESITUACAO T3
	On T1.ISOPvPedIteSit_Codigo = T3.ISOPvPedIteSit_Codigo

UNION

SELECT
T1.ISOEmp_Codigo,
T1.ISOPvPed_Codigo,
null,
null,
'ALCADA',
'Item: ' + CAST(T1.ISOPvPedIte_Codigo as nvarchar) + ' Produto: ' + RTRIM(T2.ISOPrd_Codigo) + ' - ' + RTrim(T2.ISOPrd_Descricao),
'Alï¿½ada: ' + RTrim(T3.ISOPvMA_Descricao) + ' Responsï¿½vel: ' + RTrim(T4.ISOEnt_Nome),
null,
T1.ISOPvPedIte_DataAlteracao,
3
FROM ISOPVPEDITEM T1
Inner Join ISOPRODUTO T2
	On T1.ISOPrd_Codigo = T2.ISOPrd_Codigo
Inner Join ISOPVMATRIZALCADA T3
	On T1.ISOEmp_Codigo = T3.ISOEmp_Codigo
	And T1.ISOPvPedIte_MACodigo = T3.ISOPvMA_Codigo
Inner Join ISOENTIDADE T4
	On T1.ISOPvPedIte_MARspCodigo = T4.ISOEnt_Codigo

UNION

SELECT
T1.ISOEmp_Codigo,
T1.ISOPvPed_Codigo,
T1.ISOPvPedAnx_Codigo,
null,
'ANEXO',
RTrim(T1.ISOPvPedAnx_Descricao),
'Classificaï¿½ï¿½o: ' + RTrim(T2.ISOPvPedAnxCla_Descricao)
	+ '<br>Atendente: ' + T3.ISOEnt_Nome,
null,
T1.ISOPvPedAnx_DataAlteracao,
4
FROM ISOPVPEDANEXO T1
Inner Join ISOPVPEDANXCLASSIFICACAO T2
	On T1.ISOPvPedAnxCla_Codigo = T2.ISOPvPedAnxCla_Codigo
Inner Join ISOENTIDADE T3
	On T1.ISOPvPedAnx_UsuarioAlteracao = T3.ISOEnt_Codigo
WHERE T1.ISOPvPedAnx_Flag = 'A'

UNION

SELECT
ISOEmp_Codigo,
ISOPvPed_Codigo,
null,
null,
'OBSERVACAO',
RTrim(ISOPvPedObs_Descricao),
' Pick: ' + ISOPvPedObs_Pick +
' NF: ' + ISOPvPedObs_NF,
null,
ISOPvPedObs_DataAlteracao,
5
FROM ISOPVPEDOBSERVACAO
WHERE ISOPvPedObs_Flag = 'A'

UNION

/*  +++++++++++++++++++++++++++++++++ VAI RETORNAR Vï¿½RIOS NULLS LIMPAR NO WS ++++++++++++++++++++++++++++++++++++*/
SELECT
ISOEmp_Codigo,
ISOPvPed_Codigo,
null,
null,
'NOTAFISCAL',
'Nota fiscal: ' + RTrim(ISOPvPedIte_NrNotaFiscal)  + ' Sï¿½rie: ' + RTrim(ISOPvPedIte_SerieNotaFiscal)
	+ ' Ref. Fiscal: ' + RTrim(ISOPvPedIte_NFRefFiscal),
null,
null,
ISOPvPedIte_DataAlteracao,
6
FROM ISOPVPEDITEM
where LEN(ISOPvPedIte_NrNotaFiscal) > 0

UNION

SELECT
T1.ISOEmp_Codigo,
T1.ISOPvPed_Codigo,
T1.ISOPvPedIte_Codigo,
T2.ISOSA_PvIte_AteCodigo,
'ATENDIMENTO',
'Item: ' + CAST(T1.ISOPvPedIte_Codigo as nvarchar)  + ' Produto: ' + RTrim(T1.ISOPrd_Codigo) + ' SAC: ' + CAST(T2.ISOSA_PvIte_AteCodigo as nvarchar),
null,
null,
T1.ISOPvPedIte_DataAlteracao,
7
FROM ISOPVPEDITEM T1
Inner Join ISOSA_PVITEM T2
	On T1.ISOPvPed_Codigo = T2.ISOSA_PvIte_PedCodigo
	And T1.ISOPvPedIte_Codigo = T2.ISOSA_PvIte_PedIteCodigo

UNION

SELECT
T1.ISOEmp_Codigo,
T1.ISOPvPed_Codigo,
null,
null,
'TAREFA',
'Procedimento: ' + RTrim(T2.ISOWFPrc_Descricao)
	+ '<br> Tarefa: ' + RTrim(T3.ISOWFTrf_Descricao),
'Soluï¿½ï¿½o: ' + RTrim(T3.ISOWFTrf_Solucao)
	+ '<br> Situaï¿½ï¿½o: ' + RTrim(ISNULL(T4.ISOWFTrfPadSit_Descricao, ''))
	+ '<br> Responsï¿½vel: ' + RTrim(T5.ISOEnt_Nome)
	+ '<br> Data limite: ' + CAST(T3.ISOWFTrf_DataRecebimento as nvarchar)
	+ ' Data soluï¿½ï¿½o: ' + CAST(T3.ISOWFTrf_DataSolucao as nvarchar),
null,
T3.ISOWFTrf_DataAlteracao,
8
FROM ISOWFTRF_PEDIDO T1
Inner Join ISOWFPROCEDIMENTO T2
	On T1.ISOEmp_Codigo = T2.ISOEmp_Codigo
	And T1.ISOWFTrf_Ped_PrcCodigo = T2.ISOWFPrc_Codigo
Inner Join ISOWFTAREFA T3
	On T1.ISOEmp_Codigo = T3.ISOEmp_Codigo
	And T1.ISOWFTrf_Ped_TrfCodigo = T3.ISOWFTrf_Codigo
	And T2.ISOWFPrc_Codigo = T3.ISOWFPrc_Codigo
Left Join ISOWFTRFPADSITUACAO T4
	On T4.ISOEmp_Codigo = T3.ISOEmp_Codigo
	And T4.ISOWFPrcPad_Codigo = T2.ISOWFPrcPad_Codigo
	And T4.ISOWFTrfPad_Codigo = T3.ISOWFTrfPad_Codigo
	And T4.ISOWFTrfPadSit_Codigo = T3.ISOWFTrfPadSit_Codigo
Inner Join ISOENTIDADE T5
	On T5.ISOEnt_Codigo = T3.ISOWFTrf_RspCodigo
Left Join ISOWFTRFPADRAO T6
	On T1.ISOEmp_Codigo = T6.ISOEmp_Codigo
	And T3.ISOWFTrfPad_Codigo = T6.ISOWFTrfPad_Codigo
	And T4.ISOWFPrcPad_Codigo = T6.ISOWFPrcPad_Codigo
	And T6.ISOWFTrfPad_Automatica = 0

UNION

SELECT
ISOEmp_Codigo,
ISOPvPed_Codigo,
ISOPvPedHst_Codigo,
null,
'HISTORICO',
RTrim(ISOPvPedHst_ArquivoNome),
'Data: ' + CAST(ISOPvPedHst_DataHistorico as nchar),
null,--RTrim(ISOPvPedHst_ArquivoNome) + '.' + RTrim(ISOPvPedHst_ArquivoExtensao),
ISOPvPedHst_DataAlteracao,
9
FROM ISOPVPEDIDOHISTORICO;


-- ConexaoISO.VW49_Timeline source

CREATE VIEW VW49_Timeline As
Select Distinct
       'CLIENTE'                                      as VW49_Tipo,
       ''                                             as VW49_IsoIcon,
       T01.ISOEmp_Codigo                              as VW49_ISOEmp_Codigo,
       0                                              as VW49_Cod1,
       0                                              as VW49_Cod2,
       ''                                             as VW49_Desc1,
       'com situaÃ§Ã£o ' + T03.ISOEntCliSit_Descricao   as VW49_Situacao,
       GETDATE()                                      as VW49_DataAlteracao,
       0                                              as VW49_CodResp,
       T01.ISOEntCli_Codigo                           as VW49_CodCliResp,
       0                                              as VW49_Valor,
       '<B>RESPONSÃVEIS</B><BR>'+
       (Select COALESCE( (Select '<b>' + RTrim(TA2.ISOEnt_Nome) + '</b> - ' + RTrim(TA3.ISOEntNivRsp_Descricao) + '<br>'
                            From ISOENTRSP_CLIENTES TA1
                                 Inner Join ISOEntidade TA2
                                    On TA2.ISOEnt_Codigo = TA1.ISOEntRsp_Codigo
                                 Inner Join ISOENTNIVRESPONSABILIDADE TA3
                                    On TA3.ISOEmp_Codigo = TA1.ISOEmp_Codigo
                                   And TA3.ISOEntNivRsp_Codigo = TA1.ISOEntNivRsp_Codigo
                           Where TA1.ISOEmp_Codigo = T01.ISOEmp_Codigo and TA1.ISOEntCli_Codigo = T01.ISOEntCli_Codigo
                             FOR XML PATH(''), TYPE).value('.[1]', 'VARCHAR(MAX)'), ''))
                                                      as VW49_Desc2,
	   '<div class="nome">' + RTrim(T02.ISOEnt_Nome) + '</div><div class="detalhe"><b>CPF/CNPJ:</b> ' + CAST(T06.CPFCNPJ as nvarchar) + ' - <b>DOCUMENTO:</b> ' + RTrim(ISNULL(T06.Documento,''))
       + '<BR><b>RAMO DE ATIVIDADE:</b> ' + RTrim(ISNULL(T06.RamoAtividade,''))
       + '<BR><b>SEGMENTO:</b> ' + RTrim(ISNULL(T06.Segmento,''))
       + '<BR><b>ENDEREÃ‡O:</b> ' + RTrim(ISNULL(T06.Logradouro,'')) + ', ' + RTrim(ISNULL(T06.Numero,'')) + ' - ' + RTrim(ISNULL(T06.Complemento,''))
       + '<BR>' + RTrim(ISNULL(T06.Bairro,'')) + ', ' + RTrim(ISNULL(T06.Cidade,'')) + ' - ' + RTrim(ISNULL(T06.Estado,''))
       + '<BR><b>TELEFONE:</b> ' + RTrim(ISNULL(T06.DDD,'')) + '-' + CAST(ISNULL(T06.Telefone,'') as nvarchar) + '<BR><b>E-MAIL:</b> ' + RTrim(ISNULL(T06.Email,'')) + '</div>'
                                                      as VW49_Desc3,
       Null                                           as VW49_Data1,
       Null                                           as VW49_Data2
  From ISOEntCliente T01
       Inner Join ISOENTIDADE T02
	      On T01.ISOEntCli_Codigo    = T02.ISOEnt_Codigo
       Inner Join ISOENTCLISITUACAO T03
          On T01.ISOEntCliSit_Codigo = T03.ISOEntCliSit_Codigo
		 And T01.ISOEmp_Codigo       = T03.ISOEmp_Codigo
        Left Join ISOEntRsp_Clientes T04
          On T01.ISOEmp_Codigo       = T04.ISOEmp_Codigo
		 And T01.ISOEntCli_Codigo    = T04.ISOEntCli_Codigo
       Inner Join VW00_BuscaEntidade T06
          On T01.ISOEmp_Codigo    = T06.Empresa
         And T01.ISOEntCli_Codigo = T06.Codigo

Union All

Select
	   T01.ISOSitHst_Modulo,
	   'md-icon-attach-money',--'x-icon-el x-font-icon md-icon md-icon-attach-money',--'x-fa fa-usd',
	   T01.ISOEmp_Codigo,
	   T02.ISOPvPed_Codigo,
	   0,
       RTrim(T03.ISOEnt_Nome),
       RTrim(T01.ISOSitHst_DscSituacao),
       T02.ISOPvPed_DataAlteracao,
       T02.ISOPvPed_CodVendedorCD,
       T02.ISOPvPed_CliCodigo,
	   (T02.ISOPvPed_ValorTotalPedido - T02.ISOPvPed_VlrDesconto + T02.ISOPvPed_ValorFreteSemRateio),
	   '',
	   'SituaÃ§Ã£o <strong>' + RTrim(T01.ISOSitHst_DscSituacao) + '</strong> no valor de R$' +
	   Cast(Cast((IsNull(T02.ISOPvPed_ValorTotalPedido,0) - ISNULL(T02.ISOPvPed_VlrDesconto,0) + ISNULL(T02.ISOPvPed_ValorFreteSemRateio,0)) AS money) as nvarchar)
	   + ' do cliente ' + RTrim(T03.ISOEnt_Nome) +
	   ' com data de alteraÃ§Ã£o ' +
	   Convert(char(10), T01.ISOSitHst_DataHistorico, 103) + ' ' + Convert(char(10), T01.ISOSitHst_DataHistorico, 8),
       Null,
       Null
  FROM ISOSITHISTORICO T01
       Inner Join ISOPVPEDIDO T02
          On T02.ISOEmp_Codigo    = T01.ISOEmp_Codigo
         And T02.ISOPvPed_Codigo  = T01.ISOSitHst_CodModulo
       Inner Join ISOENTIDADE T03
          On T01.ISOEnt_Codigo    = T03.ISOEnt_Codigo
 Where T01.ISOSitHst_Modulo = 'PEDIDO'

Union All

Select
       T01.ISOSitHst_Modulo,
       'md-icon-person',
       T01.ISOEmp_Codigo,
       0,
       0,
       RTrim(T03.ISOEnt_Nome),
       'SituaÃ§Ã£o ' + RTrim(T01.ISOSitHst_DscSituacao),
       T01.ISOSitHst_DataHistorico,
       T04.ISOEntRsp_Codigo,
       T01.ISOEnt_Codigo,
       NULL,
       '',
       T05.ISOEnt_Nome,
       Null,
       Null
  From ISOSITHISTORICO T01
       Inner Join ISOENTIDADE T03
          On T03.ISOEnt_Codigo    = T01.ISOEnt_Codigo
        Left Join ISOEntRsp_Clientes T04
          On T04.ISOEmp_Codigo = T01.ISOEmp_Codigo
         And T04.ISOEntCli_Codigo = T01.ISOEnt_Codigo
       Inner Join ISOENTIDADE T05
          On T05.ISOEnt_Codigo    = T01.ISOSitHst_Usuario
 Where T01.ISOSitHst_Modulo = 'CADASTRO'

Union All

Select
       T01.ISOSitHst_Modulo,
       'md-icon-event',
       T01.ISOEmp_Codigo,
       T01.ISOSitHst_CodModulo,
       0,
       RTrim(T03.ISOEnt_Nome),
       RTrim(T01.ISOSitHst_DscSituacao),
       T01.ISOSitHst_DataHistorico,
       T02.ISOAgeEntRsp_Codigo,
       T02.ISOAgeEnt_Codigo,
       0,
       T02.ISOAge_Assunto,
       T02.ISOAge_Observacao,
       T02.ISOAge_DataInicio,
       T02.ISOAge_DataFinal
  From ISOSITHISTORICO T01
       Inner Join ISOAGENDA T02
          On T02.ISOEmp_Codigo = T01.ISOEmp_Codigo
         And T02.ISOAge_Codigo = T01.ISOSitHst_CodModulo
	   Inner Join ISOENTIDADE T03
          On T03.ISOEnt_Codigo = T01.ISOEnt_Codigo
 Where T01.ISOSitHst_Modulo = 'AGENDA'

Union

Select
       'TAREFAS',
       'md-icon-sort',
       T01.ISOEmp_Codigo,
       T01.ISOWFTrf_CodModulo,
       T01.ISOWFPrc_Codigo,
       RTrim(T03.ISOEnt_Nome) + '<br>Resp: ' + RTrim(T04.ISOEnt_Nome),
       RTrim(T02.ISOWFPrc_Descricao),
       T01.ISOWFtrf_DataAlteracao,
       T01.ISOWFTrf_RspRes_RspCodigo,
       T02.ISOWFPrc_EntCodigo,
       T01.ISOWFTrf_Codigo,
       Case
           When ISOWFtrf_DataSolucao is null or ISOWFtrf_DataSolucao = '1753-01-01' Then '<br>Em aberto'
           else
               '<br>SoluÃ§Ã£o em ' + CONVERT(char(10), T01.ISOWFtrf_DataSolucao, 103) + ' as ' + CONVERT(char(5), T01.ISOWFtrf_DataSolucao, 8) + '<br><i>' + RTrim(T01.ISOWFTrf_Solucao) + '</i>'
       End,
       RTrim(T01.ISOWFTrf_Descricao),
       T01.ISOWFTrf_DataRecebimento,
       T01.ISOWFTrf_DataLimite
  From ISOWFTAREFA T01
       Inner Join ISOWFProcedimento T02
          On T01.ISOEmp_Codigo      = T02.ISOEmp_Codigo
         And T01.ISOWFPrc_Codigo    = T02.ISOWFPrc_Codigo
       Inner Join ISOENTIDADE T03
          On T02.ISOWFPrc_EntCodigo = T03.ISOEnt_Codigo
       Inner Join ISOENTIDADE T04
          On T01.ISOWFTrf_RspCodigo = T04.ISOEnt_Codigo
 Where T01.ISOWFTrf_Automatica <> 1

UNION
/*
SELECT
       T01.ISOSitHst_Modulo                           as VW49_Tipo,
       'md-icon-supervisor-account'                   as VW49_IsoIcon,
       T01.ISOEmp_Codigo                              as VW49_ISOEmp_Codigo,
       T01.ISOSitHst_CodModulo                        as VW49_Cod1,
       0                                              as VW49_Cod2,
       RTrim(T04.ISOEnt_Nome)                         as VW49_Desc1, --nome do cliente
       RTrim(T01.ISOSitHst_DscSituacao)               as VW49_Situacao,
       T01.ISOSitHst_DataHistorico                    as VW49_DataAlteracao,
       T02.ISOSAAteDet_UsuarioAlteracao               as VW49_CodResp,
       T01.ISOEnt_Codigo                              as VW49_CodCliResp,
       0                                              as VW49_Valor,
       ''                                             as VW49_Desc2,
       RTrim(T02.ISOSAAteDet_Descricao)               as VW49_Desc3,
       Null                                           as VW49_Data1,
       Null                                           as VW49_Data2
  From ISOSITHISTORICO T01
       Inner Join ISOSAATEDETALHE T02
          On T02.ISOEmp_Codigo   = T01.ISOEmp_Codigo
         And T02.ISOSAAte_Codigo = T01.ISOSitHst_CodModulo
       Inner Join ISOSAATENDIMENTO T03
          On T03.ISOEmp_Codigo   = T02.ISOEmp_Codigo
         And T03.ISOSAAte_Codigo = T02.ISOSAAte_Codigo
       Inner Join ISOENTIDADE T04
          On T04.ISOEnt_Codigo   = T03.ISOSAAte_EntCodigo
 Where T01.ISOSitHst_Modulo = 'ATENDIMENTO'
*/
Select T03.ISOSitHst_Modulo                           as VW49_Tipo,
       'md-icon-supervisor-account'                   as VW49_IsoIcon,
       T01.ISOEmp_Codigo                              as VW49_ISOEmp_Codigo,
       T03.ISOSitHst_CodModulo                        as VW49_Cod1,
       0                                              as VW49_Cod2,
       RTrim(T04.ISOEnt_Nome)                         as VW49_Desc1, --nome do cliente
       RTrim(T03.ISOSitHst_DscSituacao)               as VW49_Situacao,
       T03.ISOSitHst_DataHistorico                    as VW49_DataAlteracao,
       T01.ISOSAAteDet_UsuarioAlteracao               as VW49_CodResp,
       T03.ISOEnt_Codigo                              as VW49_CodCliResp,
       0                                              as VW49_Valor,
       ''                                             as VW49_Desc2,
       RTrim(T01.ISOSAAteDet_Descricao)               as VW49_Desc3,
       Null                                           as VW49_Data1,
       Null                                           as VW49_Data2
  From ISOSAATEDETALHE T01
       Inner Join ISOSAATENDIMENTO T02
          On T02.ISOEmp_Codigo           = T01.ISOEmp_Codigo
         And T02.ISOSAAte_Codigo         = T01.ISOSAAte_Codigo
        Left Join ISOSITHISTORICO T03
          On T03.ISOEmp_Codigo           = T02.ISOEmp_Codigo
         And T03.ISOSitHst_CodModulo     = T02.ISOSAAte_Codigo
         And T03.ISOSitHst_DataHistorico = (Select Max(T03A.ISOSitHst_DataHistorico)
		                                      From ISOSITHISTORICO T03A
                                             Where T03A.ISOEmp_Codigo            = T03.ISOEmp_Codigo
                                               And T03A.ISOSitHst_CodModulo      = T03.ISOSitHst_CodModulo
											   And T03A.ISOSitHst_Modulo         = T03.ISOSitHst_Modulo
                                               And T03A.ISOSitHst_DataHistorico <= T01.ISOSAAteDet_DataAlteracao)
       Inner Join ISOENTIDADE T04
          On T04.ISOEnt_Codigo   = T02.ISOSAAte_EntCodigo
 Where T03.ISOSitHst_Modulo = 'ATENDIMENTO'

UNION

SELECT T04.ISOSitHst_Modulo,
       'md-icon-adjust',
       T01.ISOEmp_Codigo,
       T04.ISOSitHst_CodModulo,
       T02.ISOMkAteCmpCnt_Sequencia,--T01.ISOMkAteCmp_Codigo,
       RTrim(T05.ISOEnt_Nome),
       T04.ISOSitHst_DscSituacao,
       T04.ISOSitHst_DataHistorico,
       T01.ISOMkAteCmpCntDet_CodigoAgente,
       T04.ISOEnt_Codigo,
       0,
       RTrim(T05.ISOEnt_Nome),
       'Campanha ' + RTrim(T03.ISOMkAteCmp_Descricao)
       + '<br>Descritivo do contato: ' + RTrim(T01.ISOMkAteCmpCntDet_Descritivo),
       T01.ISOMkAteCmpCntDet_DataInicialR,
       Null
  From ISOMKATECMPCNTDETALHE T01
       Inner Join ISOMKATECMPCONTATO T02
          On T02.ISOEmp_Codigo            = T01.ISOEmp_Codigo
         And T02.ISOMkAteCmp_Codigo       = T01.ISOMkAteCmp_Codigo
         And T02.ISOMkAteCmpCnt_Sequencia = T01.ISOMkAteCmpCnt_Sequencia
       Inner Join ISOMKATECAMPANHA T03
          On T03.ISOEmp_Codigo            = T02.ISOEmp_Codigo
         And T03.ISOMkAteCmp_Codigo       = T02.ISOMkAteCmp_Codigo
       Inner Join ISOSITHISTORICO T04
          On T04.ISOEmp_Codigo            = T01.ISOEmp_Codigo
         And T04.ISOSitHst_CodModulo      = T01.ISOMkAteCmp_Codigo
         And T04.ISOSitHst_DataHistorico  = (Select MAX(T04A.ISOSitHst_DataHistorico)
                                               From ISOSITHISTORICO T04A
                                              Where T04A.ISOEmp_Codigo            = T04.ISOEmp_Codigo
                                                And T04A.ISOSitHst_Modulo         = T04.ISOSitHst_Modulo
                                                And T04A.ISOSitHst_CodModulo      = T04.ISOSitHst_CodModulo
												And T04A.ISOEnt_Codigo            = T02.ISOMkAteCmpCnt_EntCodigo
												And T04A.ISOSitHst_DataHistorico <> '1753-01-01'
												And T04A.ISOSitHst_DataHistorico <= T01.ISOMkAteCmpCntDet_DataAlteraca)
       Inner Join ISOENTIDADE T05
          On T05.ISOEnt_Codigo            = T04.ISOSitHst_Usuario
 Where T04.ISOSitHst_Modulo = 'MARKETING'

Union

Select
       'CHAT'                                              as VW49_Tipo,
       'md-icon-chat'                                      as VW49_IsoIcon,
       T01.ISOEmp_Codigo                                   as VW49_ISOEmp_Codigo,
       T01.ISOCht_Codigo                                   as VW49_Cod1,
       0                                                   as VW49_Cod2,
       RTrim(T04.ISOEnt_Nome)                              as VW49_Desc1,
       ''                                                  as VW49_Situacao,
       T02.ISOCht_DataAlteracao                            as VW49_DataAlteracao,
       T01.ISOChtPart_Codigo                               as VW49_CodResp,
       T04.ISOEnt_Codigo                                   as VW49_CodCliResp,
       Null                                                as VW49_Valor,
       Convert(nvarchar(MAX), T02.ISOCht_DataInicio, 3)    as VW49_Desc2,
       'ClassifiÃ§Ã£o ' + T05.ISOChtClass_Descricao        as VW49_Desc3,
       T02.ISOCht_DataInicio                               as VW49_Data1,
       Null                                                as VW49_Data2
  From ISOCHTPARTICIPANTES T01
       Inner Join ISOCHAT T02
          On T01.ISOEmp_Codigo      = T02.ISOEmp_Codigo
         And T01.ISOCht_Codigo      = T02.ISOCht_Codigo
       Inner Join ISOCHTPARTICIPANTES T03
          On T01.ISOEmp_Codigo      = T03.ISOEmp_Codigo
         And T01.ISOCht_Codigo      = T03.ISOCht_Codigo
         And T01.ISOChtPart_Codigo <> T03.ISOChtPart_Codigo
       Inner Join ISOENTIDADE T04
          On T03.ISOChtPart_Codigo  = T04.ISOEnt_Codigo
        Left Join ISOCHTCLASSIFICACAO T05
          On T02.ISOEmp_Codigo      = T05.ISOEmp_Codigo
         And T02.ISOChtClass_Codigo = T05.ISOChtClass_Codigo

Union

Select
       'WhatsApp'                                              as VW49_Tipo,
       'x-fa fa-whatsapp'                                      as VW49_IsoIcon,
       T01.ISOEmp_Codigo                                   as VW49_ISOEmp_Codigo,
       T01.ISOCht_Codigo                                   as VW49_Cod1,
       0                                                   as VW49_Cod2,
       RTrim(T04.ISOEnt_Nome)                              as VW49_Desc1,
       ''                                                  as VW49_Situacao,
       T02.ISOCht_DataAlteracao                            as VW49_DataAlteracao,
       T03.ISOChtPart_Codigo                               as VW49_CodResp,
       T04.ISOEnt_Codigo                                   as VW49_CodCliResp,
       Null                                                as VW49_Valor,
       Convert(nvarchar(MAX), T02.ISOCht_DataInicio, 3)    as VW49_Desc2,
       'ClassificaÃ§Ã£o ' + T05.ISOChtClass_Descricao        as VW49_Desc3,
       T02.ISOCht_DataInicio                               as VW49_Data1,
       Null                                                as VW49_Data2
  From ISOCHTWhatsApp T01
       Inner Join ISOCHAT T02
          On T01.ISOEmp_Codigo      = T02.ISOEmp_Codigo
         And T01.ISOCht_Codigo      = T02.ISOCht_Codigo
       Inner Join ISOCHTPARTICIPANTES T03
          On T01.ISOEmp_Codigo      = T03.ISOEmp_Codigo
         And T01.ISOCht_Codigo      = T03.ISOCht_Codigo
       Inner Join ISOENTIDADE T04
          On T03.ISOChtPart_Codigo  = T04.ISOEnt_Codigo
        Left Join ISOCHTCLASSIFICACAO T05
          On T02.ISOEmp_Codigo      = T05.ISOEmp_Codigo
         And T02.ISOChtClass_Codigo = T05.ISOChtClass_Codigo

Union

Select
       'EMAIL'                                        as VW49_Tipo,
       'md-icon-mail-outline'                         as VW49_IsoIcon,
       T01.ISOEmp_Codigo                              as VW49_ISOEmp_Codigo,
       T01.ISOEMemlEnt_Codigo                         as VW49_Cod1,
       0                                              as VW49_Cod2,
       RTrim(T04.ISOEnt_Nome)                         as VW49_Desc1, --nome do cliente
       RTrim(T06.ISOSASit_Descricao)                  as VW49_Situacao,
       T01.ISOEMemlEnt_DataRecebimento                as VW49_DataAlteracao,
       T01.ISOEMemlEnt_UsuarioAlteracao               as VW49_CodResp,
       T03.ISOEntCli_Codigo                           as VW49_CodCliResp,
       0                                              as VW49_Valor,
       ''                                             as VW49_Desc2,
       RTrim(T01.ISOEMemlEnt_Descricao)               as VW49_Desc3,
       Null                                           as VW49_Data1,
       Null                                           as VW49_Data2
  From ISOEMEMAILENTRADA T01
       Inner Join ISOSAATEDETALHE T02
          On T02.ISOEmp_Codigo      = T01.ISOEmp_Codigo
         And T02.ISOEMemlEnt_Codigo = T01.ISOEMemlEnt_Codigo
       Inner Join ISOSAATECLIENTE T03
          On T01.ISOEmp_Codigo      = T03.ISOEmp_Codigo
         And T02.ISOSAAte_Codigo    = T03.ISOSAAteCli_Codigo
       Inner Join ISOENTIDADE T04
          On T03.ISOEntCli_Codigo   = T04.ISOEnt_Codigo
       Inner Join ISOSAATENDIMENTO T05
          On T01.ISOEmp_Codigo      = T05.ISOEmp_Codigo
         And T02.ISOSAAte_Codigo    = T05.ISOSAAte_Codigo
       Inner Join ISOSASITUACAO T06
          On T06.ISOEmp_Codigo      = T01.ISOEmp_Codigo
         And T06.ISOSASit_Codigo    = T05.ISOSASit_Codigo

Union

Select
       T01.ISOSitHst_Modulo                           as VW49_Tipo,
       'md-icon-search'                               as VW49_IsoIcon,
       T01.ISOEmp_Codigo                              as VW49_ISOEmp_Codigo,
       T01.ISOSitHst_CodModulo                        as VW49_Cod1,
       0                                              as VW49_Cod2,
       RTrim(T04.ISOEnt_Nome)                         as VW49_Desc1, --nome do cliente
       RTrim(T01.ISOSitHst_DscSituacao)               as VW49_Situacao,
       T01.ISOSitHst_DataHistorico                    as VW49_DataAlteracao,
       T01.ISOSitHst_Usuario                          as VW49_CodResp,
       T01.ISOEnt_Codigo                              as VW49_CodCliResp,
       0                                              as VW49_Valor,
       ''                                             as VW49_Desc2,
       RTrim(T03.ISOPQPes_Descricao)                  as VW49_Desc3,
       Null                                           as VW49_Data1,
       Null                                           as VW49_Data2
  From ISOSITHISTORICO T01
       Inner Join ISOPQATENDIMENTO T02
          On T02.ISOEmp_Codigo   = T01.ISOEmp_Codigo
         And T02.ISOPQAte_Codigo = T01.ISOSitHst_CodModulo
       Inner Join ISOPQPESQUISA T03
          On T03.ISOEmp_Codigo   = T02.ISOEmp_Codigo
         And T03.ISOPQPes_Codigo = T02.ISOPQPes_Codigo
       Inner Join ISOENTIDADE T04
          On T04.ISOEnt_Codigo   = T01.ISOEnt_Codigo
 Where T01.ISOSitHst_Modulo = 'PESQUISA';


-- ConexaoISO.VW50_AbasAtendimento source

CREATE VIEW VW50_AbasAtendimento AS

SELECT
T1.ISOEmp_Codigo							AS VW50_Empresa,
T1.ISOSAAte_Codigo							AS VW50_Codigo,
null										AS VW50_CodCompl,
null										AS VW50_Sequencia,
'DADOS'										AS VW50_Tipo,
'<div class="nome"><b>Atendimento:</b> ' + CAST(T1.ISOSAAte_Codigo as nvarchar)
+ '<BR><b>Cliente:</b> ' + RTrim(T3.ISOEnt_Nome) + '</div>'
+ '<div class="detalhe"><b>Situação: ' + RTrim(T4.ISOSASit_Descricao) + '</b><br><b>Abertura: </b>' + CAST(CONVERT(VARCHAR(12),T1.ISOSAAte_DataAbertura, 103) as nvarchar)  + '</div>'
											AS VW50_Descricao,
null										AS VW50_DescCompl,
null										AS VW50_Link,
T1.ISOSAAte_DataAlteracao					AS VW50_DataAlteracao,
1											AS VW50_Ordem,
''											AS VW50_Cor
FROM ISOSAATENDIMENTO T1
INNER JOIN ISOSAATECLIENTE T2
	On T1.ISOSAAte_Codigo = T2.ISOSAAteCli_Codigo
INNER JOIN ISOENTIDADE T3
	On T2.ISOEntCli_Codigo = T3.ISOEnt_Codigo
Left join ISOSASITUACAO T4
    On T4.ISOEmp_Codigo = T1.ISOEmp_Codigo
	And T4.ISOSASit_Codigo = T1.ISOSASit_Codigo

UNION

SELECT
T1.ISOEmp_Codigo,
T1.ISOSAAte_Codigo,
null,
null,
'DETALHE',
RTrim(T1.ISOSAAteDet_Descricao),
'Resposta: ' + RTrim(T1.ISOSAAteDet_Resposta)
+ '<br>Canal: ' + RTrim(T2.ISOEmpCan_Descricao)
+ '<br>Data abertura: ' + CAST(CONVERT(VARCHAR(12),T1.ISOSAAteDet_DataAbertura, 103) as nvarchar)
+ '<br>Data resposta: ' + CAST(CONVERT(VARCHAR(12),T1.ISOSAAteDet_DataResposta, 103) as nvarchar)
+ '<br>Atendente: ' + T3.ISOEnt_Nome,
null,
T1.ISOSAAteDet_DataAlteracao,
2,
''
FROM ISOSAATEDETALHE T1
Inner Join ISOEMPCANAL T2
	On T1.ISOEmp_Codigo = T2.ISOEmp_Codigo
	And T1.ISOEmpCan_Codigo = T2.ISOEmpCan_Codigo
Left Join ISOENTIDADE T3
	On T1.ISOEntUsu_Codigo = T3.ISOEnt_Codigo

UNION

SELECT
T1.ISOEmp_Codigo,
T1.ISOSAAte_Codigo,
null,
null,
'SOLUCAO',
RTrim(T2.ISOSASol_Descricao),
'<br>Observação: ' + RTrim(T1.ISOSAAte_Sol_Observacao)
	+ '<br>Atendente: ' + T3.ISOEnt_Nome,
null,
T1.ISOSAAte_Sol_DataAlteracao,
3,
''
FROM ISOSAATE_SOLUCOES T1
Inner Join ISOSASOLUCOES T2
	On T1.ISOEmp_Codigo = T2.ISOEmp_Codigo
	And T1.ISOSASol_Codigo = T2.ISOSASol_Codigo
Inner Join ISOENTIDADE T3
	On T1.ISOSAAte_Sol_AteCodigo = T3.ISOEnt_Codigo

UNION

SELECT
T1.ISOEmp_Codigo,
T1.ISOSAAte_Codigo,
T1.ISOSAAnx_Codigo,
null,
'ANEXO',
RTrim(T1.ISOSAAnx_Descricao) ,
'Classificação: ' + RTrim(T2.ISOOSAnxCla_Descricao)
	+ '<br>Atendente: ' + T3.ISOEnt_Nome,
RTrim(T1.ISOSAAnx_Arquivo) + '.' + RTrim(T1.ISOSAAnx_Extensao),
T1.ISOSAAnx_DataAlteracao,
4,
''
FROM ISOSAANEXO T1
Inner Join ISOOSANXCLASSIFICACAO T2
	On T1.ISOEmp_Codigo = T2.ISOEmp_Codigo
	And T1.ISOOSAnxCla_Codigo = T2.ISOOSAnxCla_Codigo
Inner Join ISOENTIDADE T3
	On T1.ISOSAAnx_UsuarioAlteracao = T3.ISOEnt_Codigo

UNION

SELECT
T1.ISOEmp_Codigo,
T1.ISOSAAte_Codigo,
null,
null,
'TAREFA',
'Procedimento: ' + RTrim(T2.ISOWFPrc_Descricao)
	+ '<br>Tarefa: ' + RTrim(T3.ISOWFTrf_Descricao),
'<br>Solução: ' + RTrim(T3.ISOWFTrf_Solucao)
    + '<br>Situação: ' + RTrim(T4.ISOWFTrfPadSit_Descricao)
	+ '<br>Responsável: ' + RTrim(T5.ISOEnt_Nome)
	+ '<br>Data limite: ' +  CAST(CONVERT(VARCHAR(12),T3.ISOWFTrf_DataRecebimento, 103) as nvarchar)
	+ '<br>Data solução: ' + CAST(CONVERT(VARCHAR(12),T3.ISOWFTrf_DataSolucao, 103) as nvarchar),
null,
T3.ISOWFTrf_DataAlteracao,
5,
Case
	WHEN T3.ISOWFTrf_DataLimite < GETDATE() AND T3.ISOWFTrf_DataSolucao IS NULL then'red'
	WHEN T3.ISOWFTrf_DataLimite > GETDATE() AND T3.ISOWFTrf_DataSolucao IS NULL then 'yellow'
	ELSE 'green'
End
FROM ISOWFTRF_SAC T1
Inner Join ISOWFPROCEDIMENTO T2
	On T1.ISOEmp_Codigo = T2.ISOEmp_Codigo
	And T1.ISOWFTrf_SAC_PrcCodigo = T2.ISOWFPrc_Codigo
Inner Join ISOWFTAREFA T3
	On T1.ISOEmp_Codigo = T3.ISOEmp_Codigo
	And T1.ISOWFTrf_SAC_TrfCodigo = T3.ISOWFTrf_Codigo
	And T2.ISOWFPrc_Codigo = T3.ISOWFPrc_Codigo
Left Join ISOWFTRFPADSITUACAO T4
	On T4.ISOEmp_Codigo = T3.ISOEmp_Codigo
	And T4.ISOWFPrcPad_Codigo = T2.ISOWFPrcPad_Codigo
	And T4.ISOWFTrfPad_Codigo = T3.ISOWFTrfPad_Codigo
	And T4.ISOWFTrfPadSit_Codigo = T3.ISOWFTrfPadSit_Codigo
Inner Join ISOENTIDADE T5
	On T5.ISOEnt_Codigo = T3.ISOWFTrf_RspCodigo
Left Join ISOWFTRFPADRAO T6
	On T1.ISOEmp_Codigo = T6.ISOEmp_Codigo
	And T3.ISOWFTrfPad_Codigo = T6.ISOWFTrfPad_Codigo
	And T4.ISOWFPrcPad_Codigo = T6.ISOWFPrcPad_Codigo
	And T6.ISOWFTrfPad_Automatica = 0;


-- ConexaoISO.VW52_AbasCampanha source

CREATE VIEW VW52_AbasCampanha As


SELECT
T1.ISOEmp_Codigo							AS VW52_Empresa,
T2.ISOMkAteCmpCnt_EntCodigo					AS VW52_Codigo,
T1.ISOMkAteCmp_Codigo						AS VW52_CodCompl,
T2.ISOMkAteCmpCnt_Sequencia					AS VW52_Sequencia,
'DADOS'										AS VW52_Tipo,
'<div class="nome"><b>Campanha:</b> ' + RTRIM(T1.ISOMkAteCmp_Descricao)
+ '<BR><b>Cliente:</b> ' + RTrim(T8.ISOEnt_Nome) + '</div>'
+ '<div class="detalhe"><b>Situação: ' + RTrim(T5.ISOMkCntSit_Descricao) + '</b></div>'
											AS VW52_Descricao,
Null										AS VW52_DescCompl,
null										AS VW52_Link,
NULL				AS VW52_DataAlteracao,
1											AS VW52_Ordem
FROM ISOMKATECAMPANHA T1
INNER JOIN ISOMKATECMPCONTATO T2
	ON T1.ISOEmp_Codigo = T2.ISOEmp_Codigo
	AND T1.ISOMkAteCmp_Codigo = T2.ISOMkAteCmp_Codigo
/*INNER JOIN ISOENTIDADE T3
	ON T2.ISOMkAteCmpCnt_EntCodigo = T3.ISOEnt_Codigo*/
INNER JOIN ISOMKCNTSITUACAO T5
	ON T1.ISOEmp_Codigo = T5.ISOEmp_Codigo
	AND T2.ISOMkCntSit_Codigo = T5.ISOMkCntSit_Codigo
INNER JOIN ISOENTIDADE T8
	ON T8.ISOEnt_Codigo = T2.ISOMkAteCmpCnt_EntCodigo

UNION

SELECT
T1.ISOEmp_Codigo							AS VW52_Empresa,
T2.ISOMkAteCmpCnt_EntCodigo					AS VW52_Codigo,
T1.ISOMkAteCmp_Codigo						AS VW52_CodCompl,
T2.ISOMkAteCmpCnt_Sequencia					AS VW52_Sequencia,
'DETALHE'									AS VW52_Tipo,
--'Campanha: ' + T1.ISOMkAteCmp_Descricao		AS VW52_Descricao,
Null										AS VW52_Descricao,
CASE
	When T6.ISOMkFinCla_Descricao is not Null Then
	'Descritivo do contato: ' + T4.ISOMkAteCmpCntDet_Descritivo + '<br>Classificação: ' + RTRIM(T6.ISOMkFinCla_Descricao) + ' <br> Usuário alteração: ' + T8.ISOEnt_Nome
	When  T4.ISOMkAteCmpCntDet_DataInicialR > '01/01/1753 00:00:00' Then 'Descritivo do contato: ' + T4.ISOMkAteCmpCntDet_Descritivo + '<br>Resultado: ' + RTRIM(T7.ISOMkFinRsl_Descricao) +
	'<br>Data reagendamento: ' + Convert(char(10), T4.ISOMkAteCmpCntDet_DataInicialR, 103) + ' ' + Convert(nvarchar(MAX), T4.ISOMkAteCmpCntDet_DataInicialR, 108)    +
	'<br>Usuário alteração: ' + T8.ISOEnt_Nome
	Else
	'Descritivo do contato: ' + T4.ISOMkAteCmpCntDet_Descritivo + '<br>Resultado: ' + RTRIM(T7.ISOMkFinRsl_Descricao) +
	'<br>Usuário alteração: ' + T8.ISOEnt_Nome
End AS VW52_DescCompl,
null										AS VW52_Link,
T4.ISOMkAteCmpCntDet_DataAlteraca			AS VW52_DataAlteracao,
2											AS VW52_Ordem
FROM ISOMKATECAMPANHA T1
INNER JOIN ISOMKATECMPCONTATO T2
	ON T1.ISOEmp_Codigo = T2.ISOEmp_Codigo
	AND T1.ISOMkAteCmp_Codigo = T2.ISOMkAteCmp_Codigo
/*INNER JOIN ISOENTIDADE T3
	ON T2.ISOMkAteCmpCnt_EntCodigo = T3.ISOEnt_Codigo*/
INNER JOIN ISOMKATECMPCNTDETALHE T4
	ON T4.ISOEmp_Codigo = T1.ISOEmp_Codigo
	AND T4.ISOMkAteCmp_Codigo = T1.ISOMkAteCmp_Codigo
	AND T4.ISOMkAteCmpCnt_Sequencia = T2.ISOMkAteCmpCnt_Sequencia
/*INNER JOIN ISOMKCNTSITUACAO T5
	ON T1.ISOEmp_Codigo = T5.ISOEmp_Codigo
	AND T2.ISOMkCntSit_Codigo = T5.ISOMkCntSit_Codigo*/
LEFT JOIN ISOMKFINCLASSIFICACAO T6
	ON T6.ISOEmp_Codigo = T1.ISOEmp_Codigo
	AND T6.ISOMkFin_Codigo = T1.ISOMkFin_Codigo
	AND T6.ISOMkFinCla_Codigo = T4.ISOMkFinCla_Codigo
LEFT JOIN ISOMKFINRESULTADO T7
	ON T7.ISOEmp_Codigo = T1.ISOEmp_Codigo
	AND T7.ISOMkFin_Codigo = T1.ISOMkFin_Codigo
	AND T7.ISOMkFinRsl_Codigo = T4.ISOMkFinRsl_Codigo
INNER JOIN ISOENTIDADE T8
	ON T8.ISOEnt_Codigo = T4.ISOMkAteCmpCntDet_UsuarioAlter
UNION

SELECT
T1.ISOEmp_Codigo,
T2.ISOMkAteCmp_Codigo,
T2.ISOMkAteCmpCnt_EntCodigo,
null,
'ANEXO',
RTrim(T1.ISOMkAteCmpCntAnx_Descricao),
'Classificação: ' + T3.ISOMkAteCmpCntAnxCla_Descricao,
null,
T1.ISOMkAteCmpCntAnx_DataAlteraca,
3
FROM ISOMKATECMPCNTANEXO T1
INNER JOIN ISOMKATECMPCONTATO T2
	ON T1.ISOEmp_Codigo = T2.ISOEmp_Codigo
	AND T1.ISOMkAteCmp_Codigo = T2.ISOMkAteCmp_Codigo
Inner Join ISOMKATECMPCNTANXCLASSIFICACAO T3
	On T1.ISOEmp_Codigo = T3.ISOEmp_Codigo
	And T1.ISOMkAteCmpCntAnxCla_Codigo = T3.ISOMkAteCmpCntAnxCla_Codigo

UNION

SELECT
T1.ISOEmp_Codigo,
T2.ISOMkAteCmp_Codigo,
T2.ISOMkAteCmpCnt_EntCodigo,
T2.ISOMkAteCmpCnt_Sequencia,
'TAREFA',
'Procedimento: ' + RTrim(T3.ISOWFPrc_Descricao)
	+ '<br>Tarefa: ' + RTrim(T4.ISOWFTrf_Descricao) ,
	+ ' Solução: ' + RTrim(T4.ISOWFTrf_Solucao) + ' Situação: ' + RTrim(T5.ISOWFTrfPadSit_Descricao)
	+ ' Responsável: ' + RTrim(T6.ISOEnt_Nome)
	+ ' Data limite: ' + CAST(T4.ISOWFTrf_DataRecebimento as nvarchar)
	+ ' Data solução: ' + CAST(T4.ISOWFTrf_DataSolucao as nvarchar),
null,
T4.ISOWFTrf_DataAlteracao,
3
FROM ISOWFTRF_MK T1
INNER JOIN ISOMKATECMPCONTATO T2
	ON T1.ISOEmp_Codigo = T2.ISOEmp_Codigo
	AND T1.ISOMkAteCmp_Codigo = T2.ISOMkAteCmp_Codigo
Inner Join ISOWFPROCEDIMENTO T3
	On T1.ISOEmp_Codigo = T3.ISOEmp_Codigo
	And T1.ISOWFTrf_MK_PrcCodigo = T3.ISOWFPrc_Codigo
Inner Join ISOWFTAREFA T4
	On T1.ISOEmp_Codigo = T3.ISOEmp_Codigo
	And T1.ISOWFTrf_MK_TrfCodigo = T4.ISOWFTrf_Codigo
	And T3.ISOWFPrc_Codigo = T4.ISOWFPrc_Codigo
Left Join ISOWFTRFPADSITUACAO T5
	On T5.ISOEmp_Codigo = T3.ISOEmp_Codigo
	And T5.ISOWFPrcPad_Codigo = T3.ISOWFPrcPad_Codigo
	And T5.ISOWFTrfPad_Codigo = T4.ISOWFTrfPad_Codigo
	And T5.ISOWFTrfPadSit_Codigo = T4.ISOWFTrfPadSit_Codigo
Inner Join ISOENTIDADE T6
	On T6.ISOEnt_Codigo = T4.ISOWFTrf_RspCodigo
Left Join ISOWFTRFPADRAO T7
	On T1.ISOEmp_Codigo = T7.ISOEmp_Codigo
	And T4.ISOWFTrfPad_Codigo = T7.ISOWFTrfPad_Codigo
	And T5.ISOWFPrcPad_Codigo = T7.ISOWFPrcPad_Codigo
	And T7.ISOWFTrfPad_Automatica = 0;


-- ConexaoISO.VW55_DadosParametros source

CREATE VIEW VW55_DadosParametros As
Select T01.ISOEmp_Codigo                 as VW55_CodEmpresa,
       T01.ISOEmpPrm_Descricao           as VW55_DescParametro,
	   T01.ISOEmpPrm_Flag                as VW55_PrmFlag,
       T02.ISOEmpPrm_GrpUsu_Codigo       as VW55_CodGrpUsu,
	   T02.ISOEntGrp_Codigo              as VW55_CodGrupo,
	   T02.ISOEntUsu_Codigo              as VW55_CodUsuario,
	   T03.ISOEmpPrm_GrpUsuDet_Codigo    as VW55_CodDetalhe,
	   T03.ISOEmpPrm_GrpUsuDet_Descricao as VW55_DescDetalhe,
	   T03.ISOEmpPrm_GrpUsuDet_Valor     as VW55_DescValor,
	   T03.ISOEmpPrm_GrpUsuDet_Ordem     as VW55_PosOrdem
  From ISOEMPPARAMETROS T01
       Inner Join ISOEMPPRM_GRPUSUARIO T02
          On T02.ISOEmp_Codigo           = T01.ISOEmp_Codigo
         And T02.ISOEmpPrm_Codigo        = T01.ISOEmpPrm_Codigo
       Inner Join ISOEMPPRM_GRPUSUDETALHE T03
          On T03.ISOEmp_Codigo           = T02.ISOEmp_Codigo
         And T03.ISOEmpPrm_Codigo        = T02.ISOEmpPrm_Codigo
         And T03.ISOEmpPrm_GrpUsu_Codigo = T02.ISOEmpPrm_GrpUsu_Codigo;


-- ConexaoISO.VW57_CaixaEntrada source

CREATE VIEW VW57_CaixaEntrada as
SELECT
T1.ISOEmp_Codigo							AS VW57_ISOEmpresa,
'Chat'									AS VW57_ISOCanal,
T1.ISOCht_Codigo							AS VW57_ISOCodigo,
T1.ISOCht_AtendCodigo							AS VW57_ISOCodAtendente,
T5.ISOEnt_Nome								AS VW57_ISOAtendente,
T4.ISOChtDet_UsuarioDestino						AS VW57_ISOCodCliente,
CASE
	WHEN T4.ISOChtDet_NomeSI is null
	  or T4.ISOChtDet_NomeSI = ''
	THEN T4.ISOChtDet_emailSI
	ELSE T4.ISOChtDet_NomeSI
END									AS VW57_ISOCliente,
T1.ISOChtClass_Codigo							AS VW57_ISOCodClassificacao,
T2.ISOChtClass_Descricao						AS VW57_ISOClassificacao,
T1.ISOChtSit_Codigo							AS VW57_ISOCodSituacao,
T3.ISOChtSit_Descricao							AS VW57_ISOSituacao,
T3.ISOChtSit_SituacaoInterna						AS VW57_ISOSituacaoInterna,
T1.ISOCht_DataInicio							AS VW57_ISODataInicio,
T1.ISOCht_DataFim							AS VW57_ISODataFim,
T6.ISOSAAte_Codigo                          				AS VW57_ISOSACCodigo,
T7.ISOEnt_Nome								AS VW57_ISOCli_Nome,
(select count(*) from ISOChtDetalhe T01
 where (T1.ISOCht_DataVisualizacao is null
    or T1.ISOCht_DataVisualizacao < T01.ISOChtDet_DataAlteracao)
   and T1.ISOEmp_Codigo = T01.ISOEmp_Codigo
   and T1.ISOCht_Codigo = T01.ISOCht_Codigo
   and T1.ISOCht_AtendCodigo <> T01.ISOChtDet_UsuOrigem ) AS VW57_MensagensNLidas,
T1.ISOCht_CPF								AS VW57_ISOCpf,
T1.ISOCht_CNPJ								AS VW57_ISOCnpj,
T4.ISOChtDet_emailSI							AS VW57_ISOEmailInformado,
T1.ISOCht_TelDDD                            				AS VW57_ISOTelDDD,
T1.ISOCht_TelTelefone                       				AS VW57_ISOTelTelefone,
T1.ISOCht_WhatsApp AS VW57_WhatsApp
FROM ISOCHAT T1
INNER JOIN ISOCHTCLASSIFICACAO T2
	On T1.ISOEmp_Codigo = T2.ISOEmp_Codigo
	And T1.ISOChtClass_Codigo = T2.ISOChtClass_Codigo
INNER JOIN ISOCHTSITUACAO T3
	On T1.ISOEmp_Codigo = T3.ISOEmp_Codigo
	And T1.ISOChtSit_Codigo = T3.ISOChtSit_Codigo
INNER JOIN ISOCHTDETALHE T4
	On T1.ISOEmp_Codigo = T4.ISOEmp_Codigo
	And T1.ISOCht_Codigo = T4.ISOCht_Codigo
	And T4.ISOChtDet_Codigo = 1
LEFT JOIN ISOENTIDADE T5
	On T1.ISOCht_AtendCodigo = T5.ISOEnt_Codigo
LEFT JOIN ISOSAAteDetalhe T6
	On T1.ISOEmp_Codigo = T6.ISOEmp_Codigo
	And T1.ISOCht_Codigo = T6.ISOSAAteDet_ChtCodigo
LEFT JOIN ISOEntidade T7
	On T7.ISOEnt_Codigo = T4.ISOChtDet_UsuarioDestino;


-- ConexaoISO.VW62_ISOSAAtendimentoDC source

CREATE VIEW VW62_ISOSAAtendimentoDC AS

Select  Distinct
        T01.ISOEmp_Codigo            as VW62_CodEmpresa,          -- Codigo da Empresa
        T01.ISOSAAte_Codigo          as VW62_CodAtendimento,      -- Numero do atendimento
        T01.ISOSAAte_DataAbertura    as VW62_DataAbertAtend,      -- Data de abertura do SAC
        T01.ISOSAAte_DataFechamento  as VW62_DataFechamentoAtend, -- Data de Fechamento do SAC
		T02.ISOSAAteDet_Descricao    as VW62_DescricaoAtend,
		T02.ISOSAAteDet_Resposta     as VW62_RespostaAtend,
        T03.ISOEnt_Codigo            as VW62_CodUsuAbertAtend,    -- Cdigo do usurio de abertura
        T03.ISOEnt_Nome              as VW62_NomeUsuAbertAtend,   -- Usuario de Abertura do SAC
        T04.ISOEnt_Codigo            as VW62_CodUsuAltAtend,      -- Cdigo do Usurio de alterao do SAC
        T04.ISOEnt_Nome              as VW62_NomeUsuAltAtend,     -- Usuario de alterao do SAC
        T05.ISOEnt_Codigo            as VW62_CodEntidadeAtend,    -- Cdigo da Entidade do SAC
        T05.ISOEnt_Nome              as VW62_NomeEntidadeAtend,   -- Nome da Entidade do SAC
        T06.ISOSASit_Codigo          as VW62_CodSituacaoAtend,    -- Cdigo da Situao SAC
        T06.ISOSASit_Descricao       as VW62_DscSituacaoAtend,    -- Descrio da Situao SAC
        T07.ISOEmpCan_Codigo         as VW62_CodCanalAtend,       -- Cdigo do Canal de comunicao
        T07.ISOEmpCan_Descricao      as VW62_DscCanalAtend,       -- Descrio do Canal de Comunicao
        T08.ISOSAMot_Codigo          as VW62_CodMotivoAtend,      -- Cdigo do Motivo
        T08.ISOSAMot_Descricao       as VW62_DscMotivoAtend,      -- Descrio do Motivo
        T09.ISOSAMotOcrCau_Codigo    as VW62_CodCausaAtend,       -- Cdigo da Causa
        T09.ISOSAMotOcrCau_Descricao as VW62_DscCausaAtend,       -- Descrio da Causa
        T10.ISOSAMotOcr_Codigo       as VW62_CodOcorrenciaAtend,  -- Cdigo da Ocorrncia
        T10.ISOSAMotOcr_Descricao    as VW62_DscOcorrenciaAtend,  -- Descrio da Ocorrncia
        T11.ISOEnt_Codigo            as VW62_CodUnidadeAtend,     -- Cdigo da Unidade
        T11.ISOEnt_Nome              as VW62_DscUnidadeAtend,     -- Nome da Unidade
		Case
           When T27.ISOEntPes_Codigo is null  Then 'Organizacao'
           When T28.ISOEntOrg_Codigo is null  Then 'Pessoa'
           Else 'Nao definido'
		End							 as VW62_TipoEntidadeAtend,    -- Tipo de Entidade
		Case
           When T27.ISOEntPes_Codigo is null  Then T28.ISOEntOrg_Estrangeiro
           When T28.ISOEntOrg_Codigo is null  Then T27.ISOEntPes_Estrangeiro
		End							 as VW62_EntidadeEstrangeiroAtend, -- Estrangeiro?
		Case
           When T27.ISOEntPes_Codigo is null  Then T28.ISOEntOrg_CNPJ
           When T28.ISOEntOrg_Codigo is null  Then T27.ISOEntPes_CPF
		End							 as VW62_EntidadeCPFCNPJ,          -- CPF/CNPJ
		T31.ISOSAAtendimentoAttValue      as VW62_PrevisaoEntrega,
		Cast(T32.ISOSAAtendimentoAttValue as decimal(18,2))      as VW62_QtdeHoras,
		Cast(T33.ISOSAAtendimentoAttValue as decimal(3,0))       as VW62_PrioridadeOrdem,
		T34.ISOSAAtendimentoAttValue      as VW62_NomeResponsavel,
		Cast(T35.ISOSAAtendimentoAttValue as decimal(3,0))       as VW62_PrioridadeSprint
  From  ISOSAAtendimento T01
       	Left Join ISOSAAteDetalhe T02
          On T02.ISOEmp_Codigo          = T01.ISOEmp_Codigo
         And T02.ISOSAAte_Codigo        = T01.ISOSAAte_Codigo
		 And T02.ISOSAAteDet_Codigo     = 1
        Left Join ISOEntidade T03
          On T03.ISOEnt_Codigo          = T01.ISOSAAte_UsuCodigo
        Left Join ISOEntidade T04
          On T04.ISOEnt_Codigo          = T01.ISOSAAte_UsuarioAlteracao
        Left Join ISOEntidade T05
          On T05.ISOEnt_Codigo          = T01.ISOSAAte_EntCodigo
        Left Join ISOSASituacao T06
          On T06.ISOEmp_Codigo          = T01.ISOEmp_Codigo
         And T06.ISOSASit_Codigo        = T01.ISOSASit_Codigo
        Left Join ISOEmpCanal T07
          On T07.ISOEmp_Codigo          = T01.ISOEmp_Codigo
         And T07.ISOEmpCan_Codigo       = T02.ISOEmpCan_Codigo
        Left Join ISOSAMotivo T08
          On T08.ISOEmp_Codigo          = T01.ISOEmp_Codigo
         And T08.ISOSAMot_Codigo        = T01.ISOSAMot_Codigo
        Left Join ISOSAMotOcrCausa T09
          On T09.ISOEmp_Codigo          = T01.ISOEmp_Codigo
         And T09.ISOSAMot_Codigo        = T01.ISOSAMot_Codigo
         And T09.ISOSAMotOcr_Codigo     = T01.ISOSAMotOcr_Codigo
         And T09.ISOSAMotOcrCau_Codigo  = T01.ISOSAMotOcrCau_Codigo
        Left Join ISOSAMotOcorrencia T10
          On T10.ISOEmp_Codigo          = T01.ISOEmp_Codigo
         And T10.ISOSAMot_Codigo        = T01.ISOSAMot_Codigo
         And T10.ISOSAMotOcr_Codigo     = T01.ISOSAMotOcr_Codigo
        Left Join ISOEntidade T11
          On T11.ISOEnt_Codigo          = T01.ISOEntUnd_Codigo

        Left Join ISOEntCliente T17
          On T17.ISOEntCli_Codigo       = T05.ISOEnt_Codigo
        Left Join ISOEntidade T20
          On T20.ISOEnt_Codigo          = T02.ISOSAAte_EntContato
        Left Join ISOEntPessoa T27
          On T27.ISOEntPes_Codigo       = T01.ISOSAAte_EntCodigo
        Left Join ISOEntOrganizacao T28
          On T28.ISOEntOrg_Codigo       = T01.ISOSAAte_EntCodigo

        Left Join ISOSAAtendimentoAttValues T31
          On T31.ISOSAAte_Codigo            = T01.ISOSAAte_Codigo
		 and T31.ISOSAAtendimentoAttId      = 22
		Left Join ISOSAAtendimentoAttValues T32
          On T32.ISOSAAte_Codigo            = T01.ISOSAAte_Codigo
		 and T32.ISOSAAtendimentoAttId      = 23
		Left Join ISOSAAtendimentoAttValues T33
          On T33.ISOSAAte_Codigo            = T01.ISOSAAte_Codigo
		 and T33.ISOSAAtendimentoAttId      = 24
		Left Join ISOSAAtendimentoAttValues T34
          On T34.ISOSAAte_Codigo            = T01.ISOSAAte_Codigo
		 and T34.ISOSAAtendimentoAttId      = 25
		Left Join ISOSAAtendimentoAttValues T35
          On T35.ISOSAAte_Codigo            = T01.ISOSAAte_Codigo
		 and T35.ISOSAAtendimentoAttId      = 26

        --Left Join ISOSAAtendimentoATT T33
        --  on T33.ISOSAAtendimentoAttId      = T31.ISOSAAtendimentoAttId
        --Left Join ISOSAAtendimentoFormDef T35
        --  On T35.ISOSAAtendimentoFormDefId  = T33.ISOSAAtendimentoFormDefId
        --Left Join ISOSAATENDIMENTOATT1 T37
        --  On T37.ISOSAAtendimentoAttId      = T31.ISOSAAtendimentoAttId
        -- And T37.ISOSAAtendimentoAttOptId   = T31.ISOSAAtendimentoAttOptId;


-- ConexaoISO.VW65_FunilPedido source

CREATE VIEW VW65_FunilPedido as
SELECT
	T1.ISOEmp_Codigo as VW65_Empresa,
	T1.ISOPvPedSit_Codigo as VW65_Codigo,
	T1.ISOPvPedSit_Descricao as VW65_Descricao,
	T2.ISOPvPed_CliCodigo as VW65_Cliente,
	count(T2.ISOPvPedSit_Codigo) as VW65_Total
	FROM ISOPVPEDSITUACAO T1
	Left join ISOPVPEDIDO T2
		on T1.ISOEmp_Codigo = T2.ISOEmp_Codigo AND T1.ISOPvPedSit_Codigo = T2.ISOPvPedSit_Codigo
	Group by T1.ISOEmp_Codigo, T1.ISOPvPedSit_Codigo, T1.ISOPvPedSit_Descricao, T2.ISOPvPed_CliCodigo;


-- ConexaoISO.VW66_ISOSAtendimentoDet source

CREATE VIEW VW66_ISOSAtendimentoDet AS
SELECT DISTINCT
	T1.ISOEmp_Codigo              AS VW66_ISOEmp_Codigo,
	T1.ISOSAAte_Codigo			AS VW66_ISOSAAte_Codigo,
	T1.ISOSAAte_DataAbertura		AS VW66_ISOSAAte_DataAbertura,
	T1.ISOSAMot_Codigo            AS VW66_ISOSAMot_Codigo,
	T3.ISOSAMot_Descricao			AS VW66_ISOSAMot_Descricao,
	T4.ISOSAMotOcr_Descricao		AS VW66_ISOSAMotOcr_Descricao,
	T5.ISOSAMotOcrCau_Descricao	AS VW66_ISOSAMotOcrCau_Descricao,
	T6.ISOEnt_Nome				AS VW66_ISOEntUnd_Nome,
	T1.ISOSASit_Codigo			AS VW66_ISOSASit_Codigo,
	T7.ISOSASit_Descricao			AS VW66_ISOSASit_Descricao,
	T7.ISOSASit_Situacao			AS VW66_ISOSASit_Situacao,
	T1.ISOSAAteRel_Observacao		AS VW66_ISOSAAteRel_Observacao,
	T1.ISOSAAte_AlcCodigo         AS VW66_ISOSAAte_AlcCodigo,
	T1.ISOSAAte_EntCodigo         AS VW66_ISOSAAte_EntCodigo,
	REPLACE(T2.ISOSAAteDet_Descricao, nchar(0x001F), '')		AS VW66_ISOSAAteDet_Descricao,
	T9.ISOEnt_Nome              AS VW66_ISOSAAte_EntNome,
	T1.ISOSAMotOcr_Codigo       AS VW66_ISOSAMotOcr_Codigo,
	T1.ISOSAMotOcrCau_Codigo    AS VW66_ISOSAMotOcrCau_Codigo,
	T1.ISOEntUnd_Codigo         AS VW66_ISOEntUnd_Codigo,
	T1.ISOSAAte_UsuCodigo       AS VW66_ISOSAAte_UsuCodigo,
	T8.ISOEnt_Nome              AS VW66_ISOSAAte_UsuNome,
	0                           AS VW66_ISOEmpCan_Codigo,
	''                          AS VW66_ISOEmpCan_Descricao,
	''                          AS VW66_ISOSAAte_EntContato,
	''                          AS VW66_ISOSAAte_EntContatoNome,
	T1.ISOSAAte_ChtCodigo       AS VW66_ISOSAAte_ChtCodigo,
	T5.ISOSAMotOcrCau_PesCodigo AS VW66_ISOSAMotOcrCau_PesCodigo,
	T10.ISOSAAteDet_Resposta    AS VW66_ISOSAAteDet_Resposta,
	T1.ISOSAAte_DataAlteracao    AS VW66_ISOSAAte_DataAlteracao,
	T1.ISOSAAte_UsuarioAlteracao AS VW66_ISOSAAte_UsuarioAlteracao,
    T1.ISOSAAteRel_Codigo         AS VW66_ISOSAAteRel_Codigo
FROM ISOSAATENDIMENTO T1
Left Join
    (SELECT ISOEmp_Codigo, ISOSAAte_Codigo, COALESCE(
		(SELECT  RTRIM(
		--REPLACE(isosaatedet_descricao, nchar(0x001F), '')
		REPLACE( REPLACE( REPLACE( REPLACE( REPLACE(
		REPLACE( REPLACE( REPLACE( REPLACE( REPLACE(
		REPLACE( REPLACE( REPLACE( REPLACE( REPLACE(
		REPLACE( REPLACE( REPLACE( REPLACE( REPLACE(
		REPLACE( REPLACE( REPLACE( REPLACE( REPLACE(
		REPLACE( REPLACE( REPLACE( REPLACE(ISOSAAteDet_Descricao
		,nchar(0x0000),'') ,nchar(0x0001),'') ,nchar(0x0002),'') ,nchar(0x0003),'') ,nchar(0x0004),'')
		,nchar(0x0005),'') ,nchar(0x0006),'') ,nchar(0x0007),'') ,nchar(0x0008),'') ,nchar(0x000B),'')
		,nchar(0x000C),'') ,nchar(0x000E),'') ,nchar(0x000F),'') ,nchar(0x0010),'') ,nchar(0x0011),'')
		,nchar(0x0012),'') ,nchar(0x0013),'') ,nchar(0x0014),'') ,nchar(0x0015),'') ,nchar(0x0016),'')
		,nchar(0x0017),'') ,nchar(0x0018),'') ,nchar(0x0019),'') ,nchar(0x001A),'') ,nchar(0x001B),'')
		,nchar(0x001C),'') ,nchar(0x001D),'') ,nchar(0x001E),'') ,nchar(0x001F),'')
		) AS [text()]
			FROM ISOSAAteDetalhe AS T3
			WHERE T3.ISOEmp_Codigo = T4.ISOEmp_Codigo
			  and T3.ISOSAAte_Codigo = T4.ISOSAAte_Codigo
			  and T3.ISOSAAteDet_Flag = 'A'
			FOR XML PATH(''), TYPE).value('.[1]', 'VARCHAR(MAX)'), '') As ISOSAAteDet_Descricao
		FROM ISOSAATEDETALHE AS T4) T2
   On T2.ISOEmp_Codigo = T1.ISOEmp_Codigo
  and T2.ISOSAAte_Codigo = T1.ISOSAAte_Codigo
Left Join ISOSAMotivo T3
     ON T3.ISOEmp_Codigo = T1.ISOEmp_Codigo
	AND T3.ISOSAMot_Codigo = T1.ISOSAMot_Codigo
Left Join ISOSAMotOcorrencia T4
     ON T4.ISOEmp_Codigo = T1.ISOEmp_Codigo
	AND T4.ISOSAMot_Codigo = T1.ISOSAMot_Codigo
	AND T4.ISOSAMotOcr_Codigo = T1.ISOSAMotOcr_Codigo
Left Join ISOSAMotOcrCausa T5
     ON T5.ISOEmp_Codigo = T1.ISOEmp_Codigo
	AND T5.ISOSAMot_Codigo = T1.ISOSAMot_Codigo
	AND T5.ISOSAMotOcr_Codigo = T1.ISOSAMotOcr_Codigo
	And T5.ISOSAMotOcrCau_Codigo = T1.ISOSAMotOcrCau_Codigo
Left Join ISOEntidade T6
     ON T6.ISOEnt_Codigo = T1.ISOEntUnd_Codigo
Left Join ISOSASituacao T7
     ON T7.ISOEmp_Codigo = T1.ISOEmp_Codigo
	AND T7.ISOSASit_Codigo = T1.ISOSASit_Codigo
Left Join ISOEntidade T8
     ON T8.ISOEnt_Codigo = T1.ISOSAAte_UsuCodigo
Left Join ISOEntidade T9
     ON T9.ISOEnt_Codigo = T1.ISOSAAte_EntCodigo
Left Join
    (SELECT ISOEmp_Codigo, ISOSAAte_Codigo, COALESCE(
		(SELECT  RTRIM(
		--REPLACE(ISOSAAteDet_Resposta, nchar(0x001F), '')
		REPLACE( REPLACE( REPLACE( REPLACE( REPLACE(
		REPLACE( REPLACE( REPLACE( REPLACE( REPLACE(
		REPLACE( REPLACE( REPLACE( REPLACE( REPLACE(
		REPLACE( REPLACE( REPLACE( REPLACE( REPLACE(
		REPLACE( REPLACE( REPLACE( REPLACE( REPLACE(
		REPLACE( REPLACE( REPLACE( REPLACE(ISOSAAteDet_Resposta
		,nchar(0x0000),'') ,nchar(0x0001),'') ,nchar(0x0002),'') ,nchar(0x0003),'') ,nchar(0x0004),'')
		,nchar(0x0005),'') ,nchar(0x0006),'') ,nchar(0x0007),'') ,nchar(0x0008),'') ,nchar(0x000B),'')
		,nchar(0x000C),'') ,nchar(0x000E),'') ,nchar(0x000F),'') ,nchar(0x0010),'') ,nchar(0x0011),'')
		,nchar(0x0012),'') ,nchar(0x0013),'') ,nchar(0x0014),'') ,nchar(0x0015),'') ,nchar(0x0016),'')
		,nchar(0x0017),'') ,nchar(0x0018),'') ,nchar(0x0019),'') ,nchar(0x001A),'') ,nchar(0x001B),'')
		,nchar(0x001C),'') ,nchar(0x001D),'') ,nchar(0x001E),'') ,nchar(0x001F),'')
		) AS [text()]
			FROM ISOSAAteDetalhe AS T30
			WHERE T30.ISOEmp_Codigo = T40.ISOEmp_Codigo
			  and T30.ISOSAAte_Codigo = T40.ISOSAAte_Codigo
			  and T30.ISOSAAteDet_Flag = 'A'
			FOR XML PATH(''), TYPE).value('.[1]', 'VARCHAR(MAX)'), '') As ISOSAAteDet_Resposta
		FROM ISOSAATEDETALHE AS T40) T10
   On T10.ISOEmp_Codigo = T1.ISOEmp_Codigo
  and T10.ISOSAAte_Codigo = T1.ISOSAAte_Codigo;


-- ConexaoISO.VW68_A_ContratoItemPedGerado source

CREATE VIEW ConexaoISO.VW68_A_ContratoItemPedGerado AS
--CREATE VIEW VW68_A_ContratoItemPedGerado AS
-- Retorna o valor consumido de cada item do contrato (pedido gerado onde baixou o estoque)
SELECT
	T01.ISOEmp_Codigo AS VW68_A_EmpCodigo,
	T01.ISOCtt_Codigo AS VW68_A_ContratoCodigo,
	T01.ISOCttIte_Codigo AS VW68_A_CTItemCodigo,
	T02.ISOCttIte_Quantidade AS VW68_A_CTItemQtdContratada,
	(T02.ISOCttIte_ValorUnitario * T02.ISOCttIte_FatorConversao) AS VW68_A_CTItemVlrUnitVenda,
	T02.ISOCttIte_UnidadeVenda AS VW68_A_CTItemUndVenda,
	T02.ISOCttIteSit_Codigo AS VW68_A_CTItemSitCodigo,
	T03.ISOCttIteSit_Situacao AS VW68_A_CTItemSitSituacao,
	T03.ISOCttIteSit_Descricao AS VW68_A_CTItemSitDescricao,
	T01.ISOCttPedConIte_PedCodigo AS VW68_A_PedidoCodigo,
	T04.ISOPvPedSit_Codigo AS VW68_A_PedidoSitCodigo,
	T05.ISOPvPedSit_Situacao AS VW68_A_PedidoSitSituacao,
	T05.ISOPvPedSit_Descricao AS VW68_A_PedidoSitDescricao,
	T01.ISOCttPedConIte_PedIteCodigo AS VW68_A_PedidoItemCodigo,
	T06.ISOPrd_Codigo AS VW68_A_PedidoItemPrdCodigo,
	T06.ISOPvPedIte_Quantidade AS VW68_A_PedidoItemQuantidade,
	T06.ISOPvPedIteSit_Codigo AS VW68_A_PedidoItemSitCodigo,
	T07.ISOPvPedIteSit_Situacao AS VW68_A_PedidoItemSitSituacao,
	T07.ISOPvPedIteSit_Descricao AS VW68_A_PedidoItemSitDescricao,
	T06.ISOPvPedIte_DataHoraBaixa AS VW68_A_PedidoItemDataBaixa,
	(T06.ISOPvPedIte_QuantidadeBaixada * T08.ISOPrdUndFatC_FatorConversao) AS VW68_A_PedidoItemQtdBaixa, -- CALCULO BASEADO NA UNIDADE CONTRATADA
	(T06.ISOPvPedIte_QuantidadeBaixada * (T02.ISOCttIte_ValorUnitario * T02.ISOCttIte_FatorConversao)) AS VW68_A_PedidoItemTotal
FROM ISOCTPedConItem T01
	INNER JOIN ISOCTCttItem T02
		ON T02.ISOEmp_Codigo = T01.ISOEmp_Codigo AND T02.ISOCtt_Codigo = T01.ISOCtt_Codigo AND T02.ISOCttIte_Codigo = T01.ISOCttIte_Codigo
	INNER JOIN ISOCTCttIteSituacao T03
		ON T03.ISOEmp_Codigo = T01.ISOEmp_Codigo AND T03.ISOCttIteSit_Codigo = T02.ISOCttIteSit_Codigo
	INNER JOIN ISOPvPedido T04
		ON T04.ISOEmp_Codigo = T01.ISOEmp_Codigo AND T04.ISOPvPed_Codigo = T01.ISOCttPedConIte_PedCodigo
	INNER JOIN ISOPVPEDSITUACAO T05
		ON T05.ISOEmp_Codigo = T01.ISOEmp_Codigo AND T05.ISOPvPedSit_Codigo = T04.ISOPvPedSit_Codigo
	INNER JOIN ISOPVPEDITEM T06
		ON T06.ISOEmp_Codigo = T01.ISOEmp_Codigo AND T06.ISOPvPed_Codigo = T01.ISOCttPedConIte_PedCodigo AND T06.ISOPvPedIte_Codigo = T01.ISOCttPedConIte_PedIteCodigo
	INNER JOIN ISOPVPEDITESITUACAO T07
		ON T07.ISOEmp_Codigo = T01.ISOEmp_Codigo AND T07.ISOPvPedIteSit_Codigo = T06.ISOPvPedIteSit_Codigo
	INNER JOIN ISOPrdUndFatorConversao T08
		ON T06.ISOEmp_Codigo = T08.ISOEmp_Codigo AND T06.ISOPrd_Codigo = T08.ISOPrdUndFatC_PrdCodigo AND T06.ISOPvPedIte_UnidadeOrigem = T08.ISOPrdUndFatC_UndOrigem
					AND T06.ISOPvPedIte_UnidadeDestino = T08.ISOPrdUndFatC_UndDestino AND (T06.ISOPvPedIte_ArmProgData = T08.ISOPrdUndFatC_Armazem OR T08.ISOPrdUndFatC_Armazem = '')
					AND T08.ISOPrdUndFatC_Flag = 'A'
WHERE
	T05.ISOPvPedSit_Situacao <> 9
	AND T07.ISOPvPedIteSit_Situacao <> 9
	AND T06.ISOPvPedIte_QuantidadeBaixada > 0;


-- ConexaoISO.VW68_B_ContratoVlrConsumido source

CREATE VIEW VW68_B_ContratoVlrConsumido AS
--CREATE VIEW VW68_B_ContratoVlrConsumido AS
-- retorna a quantidade consumida de cada contrato (pedido gerado onde baixou o estoque)
SELECT
	T01.VW68_A_EmpCodigo AS VW68_B_EmpCodigo,
	T01.VW68_A_ContratoCodigo AS VW68_B_ContratoCodigo,
	SUM(T01.VW68_A_PedidoItemTotal) AS VW68_B_ContratoVlrConsumido
FROM VW68_A_ContratoItemPedGerado T01
GROUP BY
	T01.VW68_A_EmpCodigo, T01.VW68_A_ContratoCodigo;


-- ConexaoISO.VW68_C_ContratoVlrTotal source

CREATE VIEW VW68_C_ContratoVlrTotal AS
--CREATE VIEW VW68_C_ContratoVlrTotal AS
-- retorna a quantidade total de cada contrato (situação interna do item <> CANCELADA)
SELECT
	T01.ISOEmp_Codigo AS VW68_C_EmpCodigo,
	T01.ISOCtt_codigo AS VW68_C_ContratoCodigo,
	SUM(T01.ISOCttIte_Quantidade * T01.ISOCttIte_ValorUnitario) AS VW68_C_ContratoVlrTotal
FROM isoctcttitem T01
	INNER JOIN ISOCTCttIteSituacao T03
		ON T03.ISOEmp_Codigo = T01.ISOEmp_Codigo AND T03.ISOCttIteSit_Codigo = T01.ISOCttIteSit_Codigo
WHERE
	T03.ISOCttIteSit_Situacao <> 9
GROUP BY
	T01.ISOEmp_Codigo, T01.ISOCtt_Codigo;


-- ConexaoISO.VW68_D_ContratoVlrGanho source

CREATE VIEW VW68_D_ContratoVlrGanho AS
--CREATE VIEW VW68_D_ContratoVlrGanho AS
-- retorna a quantidade ganha de cada contrato (situação interna do item = GANHO)
SELECT
	T01.ISOEmp_Codigo AS VW68_D_EmpCodigo,
	T01.ISOCtt_codigo AS VW68_D_ContratoCodigo,
	SUM(T01.ISOCttIte_Quantidade * T01.ISOCttIte_ValorUnitario) AS VW68_D_ContratoVlrGanho
FROM isoctcttitem T01
	INNER JOIN ISOCTCttIteSituacao T03
		ON T03.ISOEmp_Codigo = T01.ISOEmp_Codigo AND T03.ISOCttIteSit_Codigo = T01.ISOCttIteSit_Codigo
WHERE
	T03.ISOCttIteSit_Situacao = 4
GROUP BY
	T01.ISOEmp_Codigo, T01.ISOCtt_Codigo;


-- ConexaoISO.VW68_E_ContratoTotais source

CREATE VIEW VW68_E_ContratoTotais AS
--CREATE VIEW VW68_E_ContratoTotais AS
-- retorna os totais dos contratos
SELECT
	T01.ISOEmp_Codigo AS VW68_E_EmpCodigo,
	T01.ISOCtt_codigo AS VW68_E_ContratoCodigo,
	CASE
		 WHEN T04.VW68_C_ContratoVlrTotal is null Then
			0.00
		 Else T04.VW68_C_ContratoVlrTotal
	END AS VW68_E_ContratoVlrTotal,
	CASE
		 WHEN T02.VW68_D_ContratoVlrGanho is null Then
			0.00
		 Else T02.VW68_D_ContratoVlrGanho
	END AS VW68_E_ContratoVlrGanho,
	CASE
		 WHEN T03.VW68_B_ContratoVlrConsumido is null Then
			0.00
		 Else T03.VW68_B_ContratoVlrConsumido
	END AS VW68_E_ContratoVlrConsumido,
	CASE
		 WHEN (T02.VW68_D_ContratoVlrGanho is null AND T03.VW68_B_ContratoVlrConsumido is null) Then
			0.00
		 WHEN T03.VW68_B_ContratoVlrConsumido is null Then
			T02.VW68_D_ContratoVlrGanho
		 WHEN T02.VW68_D_ContratoVlrGanho is null Then
			T03.VW68_B_ContratoVlrConsumido
		 Else (T02.VW68_D_ContratoVlrGanho - T03.VW68_B_ContratoVlrConsumido)
	END AS VW68_E_ContratoVlrRestante,
	(100 - ((T02.VW68_D_ContratoVlrGanho - T03.VW68_B_ContratoVlrConsumido) / VW68_D_ContratoVlrGanho * 100) ) as VW68_E_ContratoPercConsumido
FROM ISOCTCONTRATO T01
	LEFT JOIN VW68_D_ContratoVlrGanho T02
		ON T02.VW68_D_EmpCodigo = T01.ISOEmp_Codigo AND T02.VW68_D_ContratoCodigo = T01.ISOCtt_Codigo
	LEFT JOIN VW68_B_ContratoVlrConsumido T03
		ON T03.VW68_B_EmpCodigo = T01.ISOEmp_Codigo AND T03.VW68_B_ContratoCodigo = T01.ISOCtt_Codigo
	LEFT JOIN VW68_C_ContratoVlrTotal T04
		ON T04.VW68_C_EmpCodigo = T01.ISOEmp_Codigo AND T04.VW68_C_ContratoCodigo = T01.ISOCtt_Codigo;


-- ConexaoISO.VW68_F_ContratoItemVlrGanho source

CREATE VIEW VW68_F_ContratoItemVlrGanho AS
--CREATE VIEW VW68_F_ContratoItemVlrGanho AS
-- retorna o valor R$ ganho de cada item do contrato (situação interna do item = GANHO)
SELECT
	T01.ISOEmp_Codigo AS VW68_F_EmpCodigo,
	T01.ISOCtt_codigo AS VW68_F_ContratoCodigo,
	T01.ISOCttIte_Codigo AS VW68_F_ContratoItemCodigo,
	SUM(T01.ISOCttIte_Quantidade * (T01.ISOCttIte_ValorUnitario)) AS VW68_D_ContratoItemVlrGanho
FROM ISOCTCTTITEM T01
	INNER JOIN ISOCTCttIteSituacao T03
		ON T03.ISOEmp_Codigo = T01.ISOEmp_Codigo AND T03.ISOCttIteSit_Codigo = T01.ISOCttIteSit_Codigo
WHERE
	T03.ISOCttIteSit_Situacao = 4
GROUP BY
	T01.ISOEmp_Codigo, T01.ISOCtt_codigo, T01.ISOCttIte_Codigo;


-- ConexaoISO.VW68_G_ContratoItemQtdVlrUsado source

CREATE VIEW VW68_G_ContratoItemQtdVlrUsado AS
--CREATE VIEW VW68_G_ContratoItemQtdVlrUsado AS
-- retorna o saldo utilizado de cada item do contrato
SELECT
	T01.VW68_A_EmpCodigo AS VW68_G_EmpCodigo,
	T01.VW68_A_ContratoCodigo AS VW68_G_ContratoCodigo,
	T01.VW68_A_CTItemCodigo AS VW68_G_ContratoItemCodigo,
	SUM(VW68_A_PedidoItemQtdBaixa) AS VW68_G_ContratoItemQtdUsado,
	SUM(VW68_A_PedidoItemTotal) AS VW68_G_ContratoItemVlrUsado
FROM VW68_A_ContratoItemPedGerado T01
GROUP BY
	T01.VW68_A_EmpCodigo, T01.VW68_A_ContratoCodigo, T01.VW68_A_CTItemCodigo;


-- ConexaoISO.VW68_H_ContratoItemTotais source

CREATE VIEW ConexaoISO.VW68_H_ContratoItemTotais AS
--CREATE VIEW VW68_H_ContratoItemTotais AS
-- retorna os totais dos itens dos contratos
SELECT
	T01.ISOEmp_Codigo AS VW68_H_EmpCodigo,
	T01.ISOCtt_Codigo AS VW68_H_ContratoCodigo,
	T01.ISOCttIte_Codigo AS VW68_H_ContratoItemCodigo,
	T01.ISOCttIte_Quantidade AS VW68_H_ContratoItemQtdTotal,
	CASE
		 WHEN T02.VW68_G_ContratoItemQtdUsado is null Then
			0.00
		 Else (T02.VW68_G_ContratoItemQtdUsado * T01.ISOCttIte_FatorConversao)
	END AS VW68_H_ContratoItemQtdUsada,
	CASE
		 WHEN T03.ISOCttIteSit_Situacao <> 4 Then
			0
		 WHEN T02.VW68_G_ContratoItemQtdUsado is null Then
			T01.ISOCttIte_Quantidade
		 --Else (T01.ISOCttIte_Quantidade - (T02.VW68_G_ContratoItemQtdUsado * T01.ISOCttIte_FatorConversao))
		 Else (T01.ISOCttIte_Quantidade - (T02.VW68_G_ContratoItemQtdUsado)) -- QUANTIDADE JÁ CONVERTIDO NA UNIDADE CONTRATADA
	END AS VW68_H_ContratoItemQtdRestante,
	(T01.ISOCttIte_ValorUnitario * T01.ISOCttIte_Quantidade) AS VW68_H_ContratoItemVlrTotal,
	CASE
		 WHEN T02.VW68_G_ContratoItemQtdUsado is null Then
			0
		 Else ((T01.ISOCttIte_ValorUnitario * T01.ISOCttIte_FatorConversao) * T02.VW68_G_ContratoItemQtdUsado)
	END AS VW68_H_ContratoItemVlrUsado,
	CASE
		 WHEN T03.ISOCttIteSit_Situacao <> 4 Then
			0
		 WHEN T02.VW68_G_ContratoItemQtdUsado is null Then
			(T01.ISOCttIte_ValorUnitario * T01.ISOCttIte_Quantidade)
		 --Else ((T01.ISOCttIte_ValorUnitario * T01.ISOCttIte_Quantidade) - ((T01.ISOCttIte_ValorUnitario * T01.ISOCttIte_FatorConversao) * T02.VW68_G_ContratoItemQtdUsado))
		 Else ((T01.ISOCttIte_ValorUnitario * T01.ISOCttIte_Quantidade) - ((T01.ISOCttIte_ValorUnitario ) * T02.VW68_G_ContratoItemQtdUsado)) -- QUANTIDADE JÁ CONVERTIDO NA UNIDADE CONTRATADA
	END AS VW68_H_ContratoItemVlrRestante
FROM ISOCTCTTITEM T01
	LEFT JOIN VW68_G_ContratoItemQtdVlrUsado T02
		ON T02.VW68_G_EmpCodigo = T01.ISOEmp_Codigo AND T02.VW68_G_ContratoCodigo = T01.ISOCtt_Codigo AND T02.VW68_G_ContratoItemCodigo = T01.ISOCttIte_Codigo
	INNER JOIN ISOCTCttIteSituacao T03
		ON T03.ISOEmp_Codigo = T01.ISOEmp_Codigo AND T03.ISOCttIteSit_Codigo = T01.ISOCttIteSit_Codigo;


-- ConexaoISO.VW69_AgrupaFonema source

CREATE VIEW VW69_AgrupaFonema AS
SELECT
	T01.ISOEmp_Codigo AS VW67_ISOEmp_Codigo,
	T01.ISOInd_Codigo AS VW67_ISOInd_Codigo,
	T01.ISOIndFon_Fonema AS VW67_ISOIndFon_Fonema,
	count(*) AS VW67_Contagem
FROM
	ISOINDFONETICA T01
GROUP BY T01.ISOEmp_Codigo, T01.ISOInd_Codigo, T01.ISOIndFon_Fonema
HAVING count(*) > 0;


-- ConexaoISO.VW70_ISOAnexos_Atendimento source

CREATE VIEW VW70_ISOAnexos_Atendimento AS
Select Distinct
       T01.ISOEmp_Codigo                         as VW70_ISOEmp_Codigo,
       T01.isosaate_codigo                       as VW70_ISOSAAte_Codigo,
       'Anexos do atendimento'                   as VW70_ISOAnx_Categoria,
       T02.ISOSAAnx_Codigo                       as VW70_ISOSAAnx_Codigo,
       null                                      as VW70_ISOEmEmlEnt_Codigo,
       null                                      as VW70_ISOEmEmlSai_Codigo,
       null                                      as VW70_ISOCht_Codigo,
	   T02.ISOSAAnx_Codigo                       as VW70_ISOCodigo,
       T02.isosaanx_descricao                    as VW70_ISOAnx_Descricao,
	   T02.ISOSAAnx_Arquivo                      as VW70_ISOAnx_NomeArquivo,
	   T02.ISOSAAnx_Extensao                     as VW70_ISOAnx_Extensao,
	   T02.ISOSAAnx_Arquivo + '.' + T02.ISOSAAnx_Extensao   as VW70_ISOAnx_NomeCompleto,
       T02.ISOSAAnx_Anexo                        as VW70_ISOAnx_Anexo,
	   T02.ISOSAAnx_DataInsercao                 as VW70_ISOAnx_DataInclusao,
       T02.ISOSAAnx_DataAlteracao                as VW70_ISOAnx_DataAlteracao,
       T02.ISOSAAnx_UsuarioAlteracao             as VW70_ISOSAAnx_UsuarioAlteracao
  From ISOSAATENDIMENTO T01
        right Join ISOSAAnexo T02
          On T02.ISOEmp_Codigo        = T01.ISOEmp_Codigo
	     And T02.ISOSAAte_Codigo      = T01.ISOSAAte_Codigo
	     And T02.ISOSAAnx_Flag        = 'A'
 Where T01.ISOSAAte_Flag = 'A'
   and T02.ISOSAAnx_Flag = 'A'

Union

Select Distinct
       T02.ISOEmp_Codigo                         as VW70_ISOEmp_Codigo,
       T01.isosaate_codigo                       as VW70_ISOSAAte_Codigo,
       'Anexos de emails recebidos'              as VW70_ISOAnx_Categoria,
       null                                      as VW70_ISOSAAnx_Codigo,
       T02.ISOEMemlEnt_Codigo                    as VW70_ISOEmEmlEnt_Codigo,
       null                                      as VW70_ISOEmEmlSai_Codigo,
       null                                      as VW70_ISOCht_Codigo,
	   T02.ISOEMemlEntAnx_Codigo                 as VW70_ISOCodigo,
       T02.ISOEMemlEntAnx_Descricao              as VW70_ISOAnx_Descricao,
	   T02.ISOEMemlEntAnx_Arquivo                as VW70_ISOAnx_NomeArquivo,
	   T02.ISOEMemlEntAnx_Extensao               as VW70_ISOAnx_Extensao,
	   T02.ISOEMemlEntAnx_Arquivo + '.' + T02.ISOEMemlEntAnx_Extensao   as VW70_ISOAnx_NomeCompleto,
       T02.ISOEMemlEntAnx_Anexo                  as VW70_ISOAnx_Anexo,
	   T02.ISOEMemlEntAnx_DataAlteracao          as VW70_ISOAnx_DataInclusao,
       T02.ISOEMemlEntAnx_DataAlteracao          as VW70_ISOAnx_DataAlteracao,
       T02.ISOEMemlEntAnx_UsuarioAlteraca        as VW70_ISOSAAnx_UsuarioAlteracao
  From ISOEMEMLENTANEXO T02
    left join ISOSAAteDetalhe T01
	       on T02.ISOEmp_Codigo      = T01.ISOEmp_Codigo
		  and T02.ISOEMemlEnt_Codigo = T01.ISOEMemlEnt_Codigo
		  and T01.ISOSAAteDet_Flag = 'A'
    where T02.ISOEMemlEntAnx_Flag = 'A'
	  and T02.ISOEMemlEntAnx_CorpoEmail <> 'S'

Union

Select Distinct
       T03.ISOEmp_Codigo                         as VW70_ISOEmp_Codigo,
       T01.isosaate_codigo                       as VW70_ISOSAAte_Codigo,
       'Anexos de emails enviados'              as VW70_ISOAnx_Categoria,
       null                                      as VW70_ISOSAAnx_Codigo,
       null                                      as VW70_ISOEmEmlEnt_Codigo,
       T03.ISOEMemlSai_Codigo                    as VW70_ISOEmEmlSai_Codigo,
       null                                      as VW70_ISOCht_Codigo,
	   T03.ISOEMemlSaiAnx_Codigo                 as VW70_ISOCodigo,
       T03.ISOEMemlSaiAnx_Descricao              as VW70_ISOAnx_Descricao,
	   T03.ISOEMemlSaiAnx_Arquivo                as VW70_ISOAnx_NomeArquivo,
	   T03.ISOEMemlSaiAnx_Extensao               as VW70_ISOAnx_Extensao,
	   T03.ISOEMemlSaiAnx_Arquivo + '.' + T03.ISOEMemlSaiAnx_Extensao   as VW70_ISOAnx_NomeCompleto,
       T03.ISOEMemlSaiAnx_Anexo                  as VW70_ISOAnx_Anexo,
	   T03.ISOEMemlSaiAnx_DataAlteracao          as VW70_ISOAnx_DataInclusao,
       T03.ISOEMemlSaiAnx_DataAlteracao          as VW70_ISOAnx_DataAlteracao,
       T03.ISOEMemlSaiAnx_UsuarioAlteraca        as VW70_ISOSAAnx_UsuarioAlteracao
  From ISOEMEMLSAIANEXO T03
    left join ISOSAATEDET_EMAILSAIDA T02
	       on T03.ISOEmp_Codigo      = T02.ISOEmp_Codigo
		  and T03.ISOEMemlSai_Codigo = T02.ISOEMemlSai_Codigo
		  and T02.ISOSAAteDet_eml_Flag = 'A'
    left join ISOSAAteDetalhe T01
	       on T02.ISOEmp_Codigo = T01.ISOEmp_Codigo
		  and T02.ISOSAAte_Codigo = T01.ISOSAAte_Codigo
		  and T02.ISOSAAteDet_Codigo = T01.ISOSAAteDet_Codigo
		  and T01.ISOSAAteDet_Flag = 'A'

    where T03.ISOEMemlSaiAnx_Flag = 'A'

Union

Select Distinct
       T02.ISOEmp_Codigo                         as VW70_ISOEmp_Codigo,
       T01.isosaate_codigo                       as VW70_ISOSAAte_Codigo,
       'Anexos de chats'                         as VW70_ISOAnx_Categoria,
       null                                      as VW70_ISOSAAnx_Codigo,
       null                                      as VW70_ISOEmEmlEnt_Codigo,
       null                                      as VW70_ISOEmEmlSai_Codigo,
       T02.ISOCht_Codigo                         as VW70_ISOCht_Codigo,
	   T02.ISOChtAnx_Codigo                      as VW70_ISOCodigo,
       T02.ISOChtAnx_Descricao                   as VW70_ISOAnx_Descricao,
	   T02.ISOChtAnx_NomeAnexo                   as VW70_ISOAnx_NomeArquivo,
	   T02.ISOChtAnx_ExtensaoAnexo               as VW70_ISOAnx_Extensao,
	   T02.ISOChtAnx_NomeAnexo + '.' + T02.ISOChtAnx_ExtensaoAnexo   as VW70_ISOAnx_NomeCompleto,
       T02.ISOChtAnx_Arquivo                     as VW70_ISOAnx_Anexo,
	   T02.ISOChtAnx_DataAlteracao               as VW70_ISOAnx_DataInclusao,
       T02.ISOChtAnx_DataAlteracao               as VW70_ISOAnx_DataAlteracao,
       T02.ISOChtAnx_UsuarioAlteracao            as VW70_ISOSAAnx_UsuarioAlteracao
  From ISOCHTANEXOS T02
    left join ISOSAAteDetalhe T01
	       on T02.ISOEmp_Codigo = T01.ISOEmp_Codigo
		  and T02.ISOCht_Codigo = T01.ISOSAAteDet_ChtCodigo
		  and T01.ISOSAAteDet_Flag = 'A'
    where T02.ISOChtAnx_Flag = 'A';


-- ConexaoISO.VW75_Clientes_CatFiscal_UF source

CREATE VIEW VW75_Clientes_CatFiscal_UF as -- Para criar a view
SELECT
	T5.ISOEntCatF_Codigo AS VW75_Seq,
	T1.ISOEnt_Codigo AS VW75_Codigo,
	T1.ISOEnt_Nome AS VW75_Nome,
	T4.ISOEst_Sigla AS VW75_UF,
	T5.ISOEntCatF_CategFiscalCod AS VW75_CatFiscal,
	T5.ISOEntCatF_ContribICMS AS VW75_ContribICMS,
	T5.ISOEntCatF_RepICMS AS VW75_RepICMS,
	T5.ISOEntCatF_RepPISCOFINS AS VW75_RepPISCOFINS,
	convert(varchar(9),T1.ISOEnt_Codigo) AS VW75_CodChar,
	T08.ISOEntPes_CPF AS VW75_CPF,
	T09.ISOEntOrg_CNPJ AS VW75_CNPJ,
	convert(varchar(11),T08.ISOEntPes_CPF) AS VW75_CPFChar,
	convert(varchar(14),T09.ISOEntOrg_CNPJ) AS VW75_CNPJChar
FROM  ISOENTCLIENTE T0
	INNER JOIN ISOENTIDADE T1 ON T0.ISOEntCli_Codigo = T1.ISOEnt_Codigo
	LEFT join ISOENTCATEGORIAFISCAL T5
		on T0.ISOEntCli_Codigo = T5.ISOEnt_Codigo
			And T5.ISOEntCatF_Flag = 'A'
			And T0.ISOEntCli_Flag = 'A'
	inner join ISOENTENDERECO T2
		on T0.ISOEntCli_Codigo = T2.ISOEnt_Codigo
			And T2.ISOEntEnd_Flag           = 'A'
			And T2.ISOEntEnd_Principal		= 'S'
	inner join ISOLOCALIDADE T3
		on T3.ISOLoc_Codigo = T2.ISOLoc_Codigo
	inner join ISOESTADO T4
		on T3.ISOEst_Codigo = T4.ISOEst_Codigo
	Left Join ISOEntPessoa T08
		On T08.ISOEntPes_Codigo     = T0.ISOEntCli_Codigo
		And T08.ISOEntPes_Flag = 'A'
	Left Join ISOEntOrganizacao T09
		On T09.ISOEntOrg_Codigo     = T0.ISOEntCli_Codigo
		And T09.ISOEntOrg_Flag = 'A';


-- ConexaoISO.VW76A_PessoaValidaDCObrig source

CREATE VIEW VW76A_PessoaValidaDCObrig as
Select T01.ISOEntPes_Codigo                      as VW76A_CodPessoa,
       RTRIM(T01.ISOEntPes_NomeCompleto)         as VW76A_NomePessoa,
       T02.ISOEntPessoaAttId                     as VW76A_CodDadoCompl,
       RTRIM(T02.ISOEntPessoaAttName)            as VW76A_DescDadoCompl,
       T02.ISOEntPessoaFormDefId                 as VW76A_CodFormulario,
       RTRIM(T03.ISOEntPessoaFormDefName)        as VW76A_DescFormulario,
       T02.ISOEntPessoaAttObrigatorio            as VW76A_DCPesObrig
  From ISOENTPESSOA T01, ISOEntPessoaAtt T02, ISOENTPESSOAFORMDEF T03
 Where T03.ISOEntPessoaFormDefId = T02.ISOEntPessoaFormDefId
 AND T03.ISOEntPessoaFormDef_Flag = 'A' AND T02.ISOEntPessoaAttFlag = 'A';


-- ConexaoISO.VW76B_PessoaValidaDCObrig source

CREATE VIEW VW76B_PessoaValidaDCObrig as
Select T01.ISOEntPes_Codigo                      as VW76B_CodPessoa,
       T02.ISOEntPessoaAttId                     as VW76B_CodDadoCompl,
       RTrim(T02.ISOEntPessoaAttName)            as VW76B_DescDadoCompl,
       T02.ISOEntPessoaAttObrigatorio            as VW76B_DCPesObrig
  From ISOENTPESSOAATT T02
        left Join ISOENTPESSOAATTVALUES T01
          On T02.ISOEntPessoaAttId   = T01.ISOEntPessoaAttId
 Where RTrim(T01.ISOEntPessoaAttValue) <> ''
   And T02.ISOEntPessoaAttType = 0

Union
-- Buscando Dado Complementar Numï¿½rico
Select T01.ISOEntPes_Codigo                      as VW76B_CodPessoa,
       T02.ISOEntPessoaAttId                     as VW76B_CodDadoCompl,
       RTrim(T02.ISOEntPessoaAttName)            as VW76B_DescDadoCompl,
       T02.ISOEntPessoaAttObrigatorio            as VW76B_DCPesObrig
  From ISOENTPESSOAATT T02
        left Join ISOENTPESSOAATTVALUES T01
          On T02.ISOEntPessoaAttId   = T01.ISOEntPessoaAttId
 Where T02.ISOEntPessoaAttType = 1
   And T01.ISOEntPessoaAttValue <> '' --ISOUdf_TiraLetras(T01.ISOEntPessoaAttValue) > 0

Union
-- Buscando Dado Complementar de data ou data/hora
Select T01.ISOEntPes_Codigo                      as VW76B_CodPessoa,
       T02.ISOEntPessoaAttId                     as VW76B_CodDadoCompl,
       RTrim(T02.ISOEntPessoaAttName)            as VW76B_DescDadoCompl,
       T02.ISOEntPessoaAttObrigatorio            as VW76B_DCPesObrig
  From ISOENTPESSOAATT T02
        left Join ISOENTPESSOAATTVALUES T01
          On T02.ISOEntPessoaAttId   = T01.ISOEntPessoaAttId
 Where Substring(LTrim(T01.ISOEntPessoaAttValue), 1, 1) <> '/'
   And T02.ISOEntPessoaAttType in (2, 3)

Union
-- Buscando Dado Complementar de Combobox
Select T01.ISOEntPes_Codigo                      as VW76B_CodPessoa,
       T02.ISOEntPessoaAttId                     as VW76B_CodDadoCompl,
       RTrim(T02.ISOEntPessoaAttName)            as VW76B_DescDadoCompl,
       T02.ISOEntPessoaAttObrigatorio            as VW76B_DCPesObrig
  From ISOENTPESSOAATT T02
        left Join ISOENTPESSOAATTVALUES T01
          On T02.ISOEntPessoaAttId   = T01.ISOEntPessoaAttId
 Where T01.ISOEntPessoaAttOptId Is Not Null
   And T02.ISOEntPessoaAttType = 4

Union
-- Buscando Dado Complementar de texto longo
Select T01.ISOEntPes_Codigo                      as VW76B_CodPessoa,
       T02.ISOEntPessoaAttId                     as VW76B_CodDadoCompl,
       RTrim(T02.ISOEntPessoaAttName)            as VW76B_DescDadoCompl,
       T02.ISOEntPessoaAttObrigatorio            as VW76B_DCPesObrig
  From ISOENTPESSOAATT T02
        left Join ISOENTPESSOAATTVALUES T01
          On T02.ISOEntPessoaAttId   = T01.ISOEntPessoaAttId
 Where RTrim(T01.ISOEntPessoaAttValueLong) <> ''
   And T02.ISOEntPessoaAttType = 5

Union
-- Buscando Dado Complementar de arquivo
Select T01.ISOEntPes_Codigo                      as VW76B_CodPessoa,
       T02.ISOEntPessoaAttId                     as VW76B_CodDadoCompl,
       RTrim(T02.ISOEntPessoaAttName)            as VW76B_DescDadoCompl,
       T02.ISOEntPessoaAttObrigatorio            as VW76B_DCPesObrig
  From ISOENTPESSOAATT T02
        left Join ISOENTPESSOAATTVALUES T01
          On T02.ISOEntPessoaAttId   = T01.ISOEntPessoaAttId
 Where T01.ISOEntPessoaAttArquivo is not null
   And T02.ISOEntPessoaAttType = 6;


-- ConexaoISO.VW76_PessoaValidaDCObrigatorio source

CREATE VIEW VW76_PessoaValidaDCObrigatorio as

Select T01.VW76A_CodPessoa                       as VW76_CodPessoa,
       T01.VW76A_NomePessoa                      as VW76_NomePessoa,
       T01.VW76A_CodFormulario                   as VW76_CodFormulario,
       T01.VW76A_DescFormulario                  as VW76_DescFormulario,
	   T01.VW76A_CodDadoCompl                    as VW76_CodDadoCompl,
       T01.VW76A_DescDadoCompl                   as VW76_DescDadoCompl,
       Case
            When T03.VW76B_DescDadoCompl Is Null Then 'NOK'
			Else 'OK'
       End                                       as VW76_DCSituacao,
       T01.VW76A_DCPesObrig                      as VW76_DCPesObrig,
       Case
            When T03.VW76B_DescDadoCompl Is Null Then RTrim(T01.VW76A_DescDadoCompl) + ' nï¿½o respondido.'
			Else ''
       End                                       as VW76_Mensagem,
       Case
            When T03.VW76B_DescDadoCompl Is Null Then 1
	    	        Else 0
       End                                       as VW76_Erro
  From VW76A_PessoaValidaDCObrig T01
         Left Join VW76B_PessoaValidaDCObrig T03
           On T03.VW76B_CodDadoCompl = T01.VW76A_CodDadoCompl
          And T03.VW76B_CodPessoa    = T01.VW76A_CodPessoa
 Where T01.VW76A_DCPesObrig = 'S';


-- ConexaoISO.VW77A_OrganizacaoValidaDCObrig source

CREATE VIEW VW77A_OrganizacaoValidaDCObrig as
Select T01.ISOEntOrg_Codigo                      as VW77A_CodOrganizacao,
       RTRIM(T01.ISOEntOrg_RazaoSocial)          as VW77A_NomeOrganizacao,
       T02.ISOEntOrganizacaoAttId                as VW77A_CodDadoCompl,
       RTRIM(T02.ISOEntOrganizacaoAttName)       as VW77A_DescDadoCompl,
       T02.ISOEntOrganizacaoFormDefId            as VW77A_CodFormulario,
       RTRIM(T03.ISOEntOrganizacaoFormDefName)   as VW77A_DescFormulario,
       T02.ISOEntOrganizacaoAttObrigatori        as VW77A_DCOrgObrig
  From ISOENTOrganizacao T01, ISOEntOrganizacaoAtt T02, ISOENTOrganizacaoFORMDEF T03
 Where T03.ISOEntOrganizacaoFormDefId = T02.ISOEntOrganizacaoFormDefId
 AND T03.ISOEntOrganizacaoFormDef_Flag = 'A' AND T02.ISOEntOrganizacaoAttFlag = 'A';


-- ConexaoISO.VW77B_OrganizacaoValidaDCObrig source

CREATE VIEW VW77B_OrganizacaoValidaDCObrig as

Select T01.ISOEntOrg_Codigo                      as VW77B_CodOrganizacao,
       T02.ISOEntOrganizacaoAttId                as VW77B_CodDadoCompl,
       RTrim(T02.ISOEntOrganizacaoAttName)       as VW77B_DescDadoCompl,
       T02.ISOEntOrganizacaoAttObrigatori        as VW77B_DCPesObrig
  From ISOENTOrganizacaoATT T02
        left Join ISOENTOrganizacaoATTVALUES T01
          On T02.ISOEntOrganizacaoAttId   = T01.ISOEntOrganizacaoAttId
 Where T02.ISOEntOrganizacaoAttType = 0
   And RTrim(T01.ISOEntOrganizacaoAttValue) <> ''

Union
-- Buscando Dado Complementar Numï¿½rico
Select T01.ISOEntOrg_Codigo                      as VW77B_CodOrganizacao,
       T02.ISOEntOrganizacaoAttId                as VW77B_CodDadoCompl,
       RTrim(T02.ISOEntOrganizacaoAttName)       as VW77B_DescDadoCompl,
       T02.ISOEntOrganizacaoAttObrigatori        as VW77B_DCPesObrig
  From ISOENTOrganizacaoATT T02
        left Join ISOENTOrganizacaoATTVALUES T01
          On T02.ISOEntOrganizacaoAttId   = T01.ISOEntOrganizacaoAttId
 Where T02.ISOEntOrganizacaoAttType = 1
   And RTrim(T01.ISOEntOrganizacaoAttValue) <> '' --ISOUdf_TiraLetras(T01.ISOEntOrganizacaoAttValue) > 0

Union
-- Buscando Dado Complementar de data ou data/hora
Select T01.ISOEntOrg_Codigo                      as VW77B_CodOrganizacao,
       T02.ISOEntOrganizacaoAttId                as VW77B_CodDadoCompl,
       RTrim(T02.ISOEntOrganizacaoAttName)       as VW77B_DescDadoCompl,
       T02.ISOEntOrganizacaoAttObrigatori        as VW77B_DCPesObrig
  From ISOENTOrganizacaoATT T02
        left Join ISOENTOrganizacaoATTVALUES T01
          On T02.ISOEntOrganizacaoAttId   = T01.ISOEntOrganizacaoAttId
 Where T02.ISOEntOrganizacaoAttType in (2, 3)
   And Substring(LTrim(T01.ISOEntOrganizacaoAttValue), 1, 1) <> '/'

Union
-- Buscando Dado Complementar de Combobox
Select T01.ISOEntOrg_Codigo                      as VW77B_CodOrganizacao,
       T02.ISOEntOrganizacaoAttId                as VW77B_CodDadoCompl,
       RTrim(T02.ISOEntOrganizacaoAttName)       as VW77B_DescDadoCompl,
       T02.ISOEntOrganizacaoAttObrigatori        as VW77B_DCPesObrig
  From ISOENTOrganizacaoATT T02
        left Join ISOENTOrganizacaoATTVALUES T01
          On T02.ISOEntOrganizacaoAttId   = T01.ISOEntOrganizacaoAttId
 Where T02.ISOEntOrganizacaoAttType = 4
   And T01.ISOEntOrganizacaoAttOptId Is Not Null

Union
-- Buscando Dado Complementar de texto longo
Select T01.ISOEntOrg_Codigo                      as VW77B_CodOrganizacao,
       T02.ISOEntOrganizacaoAttId                as VW77B_CodDadoCompl,
       RTrim(T02.ISOEntOrganizacaoAttName)       as VW77B_DescDadoCompl,
       T02.ISOEntOrganizacaoAttObrigatori        as VW77B_DCPesObrig
  From ISOENTOrganizacaoATT T02
        left Join ISOENTOrganizacaoATTVALUES T01
          On T02.ISOEntOrganizacaoAttId   = T01.ISOEntOrganizacaoAttId
 Where T02.ISOEntOrganizacaoAttType = 5
   And RTrim(T01.ISOEntOrganizacaoAttValueLong) <> ''

Union
-- Buscando Dado Complementar de arquivo
Select T01.ISOEntOrg_Codigo                      as VW76B_CodOrganizacao,
       T02.ISOEntOrganizacaoAttId                as VW76B_CodDadoCompl,
       RTrim(T02.ISOEntOrganizacaoAttName)       as VW76B_DescDadoCompl,
       T02.ISOEntOrganizacaoAttObrigatori        as VW76B_DCPesObrig
  From ISOENTORGANIZACAOATT T02
        left Join ISOENTORGANIZACAOATTVALUES T01
          On T02.ISOEntOrganizacaoAttId   = T01.ISOEntOrganizacaoAttId
 Where T02.ISOEntOrganizacaoAttType = 6
   And T01.ISOEntOrganizacaoAttArquivo is not null;


-- ConexaoISO.VW77_OrgValidaDCObrigatorio source

CREATE VIEW VW77_OrgValidaDCObrigatorio as
/*
Select T01.ISOEntOrg_Codigo                      as VW77_CodOrganizacao,
       RTrim(T01.ISOEntOrg_NomeCompleto)         as VW77_NomeOrganizacao,
	   T02.ISOEntOrganizacaoAttId                     as VW77_CodDadoCompl,
       T03.VW77B_DescDadoCompl                   as VW77_DescDadoCompl,
       T04.ISOEntOrganizacaoAtt_Grp_Obrigatori        as VW77_DCObrigatorio,
       Case
            When T03.VW77B_DescDadoCompl Is Null Then 'NOK'
			Else 'OK'
       End                                       as VW77_DCSituacao,

       Case
            When T03.VW77B_DescDadoCompl Is Null Then RTrim(T02.ISOEntOrganizacaoAttName) + ' nï¿½o respondido'
			Else ''
       End                                       as VW77_Mensagem
  From ISOENTOrganizacao T01
       Cross Apply ISOEntOrganizacaoAtt T02
        Left Join VW77B_OrganizacaoValidaDCObrig T03
           On T03.VW77B_CodDadoCompl = T02.ISOEntOrganizacaoAttId
         Left Join ISOENTOrganizacaoATTGRUPO T04
           On T04.ISOEntOrganizacaoAttId = T02.ISOEntOrganizacaoAttId
 Where T01.ISOEntOrg_Codigo = 34
   And T04.ISOEntOrganizacaoAtt_Grp_Obrigatori = 'S'
*/

Select T01.VW77A_CodOrganizacao                  as VW77_CodOrganizacao,
       T01.VW77A_NomeOrganizacao                 as VW77_NomeOrganizacao,
       T01.VW77A_CodFormulario                   as VW77_CodFormulario,
       T01.VW77A_DescFormulario                  as VW77_DescFormulario,
	   T01.VW77A_CodDadoCompl                    as VW77_CodDadoCompl,
       T01.VW77A_DescDadoCompl                   as VW77_DescDadoCompl,
       Case
            When T03.VW77B_DescDadoCompl Is Null Then 'NOK'
			Else 'OK'
       End                                       as VW77_DCSituacao,
       T01.VW77A_DCOrgObrig                      as VW77_DCOrgObrig,
       Case
            When T03.VW77B_DescDadoCompl Is Null Then RTrim(T01.VW77A_DescDadoCompl) + ' nï¿½o respondido.'
			Else ''
       End                                       as VW77_Mensagem
  From VW77A_OrganizacaoValidaDCObrig T01
         Left Join VW77B_OrganizacaoValidaDCObrig T03
           On T03.VW77B_CodDadoCompl = T01.VW77A_CodDadoCompl
          And T03.VW77B_CodOrganizacao    = T01.VW77A_CodOrganizacao
 Where T01.VW77A_DCOrgObrig = 'S';


-- ConexaoISO.VW77_OrganizacaoValidaDCObrigatorio source

CREATE VIEW VW77_OrganizacaoValidaDCObrigatorio as

Select T01.VW77A_CodOrganizacao                  as VW77_CodOrganizacao,
       T01.VW77A_NomeOrganizacao                 as VW77_NomeOrganizacao,
       T01.VW77A_CodFormulario                   as VW77_CodFormulario,
       T01.VW77A_DescFormulario                  as VW77_DescFormulario,
       T01.VW77A_CodDadoCompl                    as VW77_CodDadoCompl,
       T01.VW77A_DescDadoCompl                   as VW77_DescDadoCompl,
       Case
            When T03.VW77B_DescDadoCompl Is Null Then 'NOK'
			Else 'OK'
       End                                       as VW77_DCSituacao,
       T01.VW77A_DCOrgObrig                      as VW77_DCOrgObrig,
       Case
            When T03.VW77B_DescDadoCompl Is Null Then RTrim(T01.VW77A_DescDadoCompl) + ' nï¿½o respondido.'
			Else ''
       End                                       as VW77_Mensagem,
       Case
            When T03.VW77B_DescDadoCompl Is Null Then 1
			Else 0
       End                                       as VW77_Erro
  From VW77A_OrganizacaoValidaDCObrig T01
         Left Join VW77B_OrganizacaoValidaDCObrig T03
           On T03.VW77B_CodDadoCompl = T01.VW77A_CodDadoCompl
          And T03.VW77B_CodOrganizacao    = T01.VW77A_CodOrganizacao
 Where T01.VW77A_DCOrgObrig = 'S';


-- ConexaoISO.VW80_PessoaValidaFormDC source

CREATE VIEW VW80_PessoaValidaFormDC as

  SELECT
     T0.VW76_CodPessoa      as VW80_CodPessoa,
     T0.VW76_CodFormulario  as VW80_CodFormulario,
     SUM(T0.VW76_Erro)      as VW80_Erro,
     Case
        When SUM(T0.VW76_Erro) > 0 Then 1
        Else 0
     End                    as VW80_ErroForm,
     T1.ISOEntPessoaFormDefGrp_Codigo      as VW80_GrpCodigo
  FROM VW76_PessoaValidaDCObrigatorio T0
	left join ISOEntPessoaFormDefGrupo T1
	       on T0.VW76_CodFormulario = T1.ISOEntPessoaFormDefId
		  and T1.ISOEntPessoaFormDefGrp_Flag = 'A'
	left join ISOEntPessoaFormDef T2
	       on T2.ISOEntPessoaFormDefId = T1.ISOEntPessoaFormDefId
		  and T2.ISOEntPessoaFormDef_Flag = 'A'
  GROUP BY T0.VW76_CodPessoa, T0.VW76_CodFormulario, T1.ISOEntPessoaFormDefGrp_Codigo;


-- ConexaoISO.VW81_OrganizacaoValidaFormDC source

CREATE VIEW VW81_OrganizacaoValidaFormDC as
  SELECT
     T0.VW77_CodOrganizacao as VW81_CodOrganizacao,
     T0.VW77_CodFormulario  as VW81_CodFormulario,
     SUM(T0.VW77_Erro)      as VW81_Erro,
     Case
        When SUM(T0.VW77_Erro) > 0 Then 1
	Else 0
    End                     as VW81_ErroForm,
    T1.ISOEntOrganizacaoFormDefGrp_Co	    as VW81_GrpCodigo
  FROM VW77_OrganizacaoValidaDCObrigatorio T0
    left join ISOEntOrganizacaoFormDefGrupo T1
	       on T0.VW77_CodFormulario = T1.ISOEntOrganizacaoFormDefId
		  and T1.ISOEntOrganizacaoFormDefGrp_Fl = 'A'
	left join ISOEntOrganizacaoFormDef T2
	       on T2.ISOEntOrganizacaoFormDefId = T1.ISOEntOrganizacaoFormDefId
		  and T2.ISOEntOrganizacaoFormDef_Flag = 'A'
GROUP BY T0.VW77_CodOrganizacao, T0.VW77_CodFormulario, T1.ISOEntOrganizacaoFormDefGrp_Co;


-- ConexaoISO.VW82_EntidadeValidaFormDC source

CREATE VIEW VW82_EntidadeValidaFormDC as

  SELECT
    VW80_CodPessoa      as VW82_CodigoEntidade,
    sum(VW80_ErroForm)  as VW82_ErroForm,
    VW80_GrpCodigo      as VW82_GrpCodigo
  FROM VW80_PessoaValidaFormDC
    GROUP BY VW80_CodPessoa, VW80_GrpCodigo

UNION

  SELECT
     VW81_CodOrganizacao as VW82_CodigoEntidade,
     sum(VW81_ErroForm)	 as VW82_ErroForm,
     VW81_GrpCodigo      as VW82_GrpCodigo
  FROM VW81_OrganizacaoValidaFormDC
    GROUP BY VW81_CodOrganizacao, VW81_GrpCodigo;


-- ConexaoISO.VW83B_ISOEntRsp_Clientes source

CREATE VIEW VW83B_ISOEntRsp_Clientes as
Select
	A.ISOEmp_Codigo							 As VW83B_Empresa,
	A.ISOEntCli_Codigo	                     As VW83B_Codigo,
	LTRIM(upper(N.ISOEnt_Nome))		         As VW83B_Nome,
	B.ISOEntRsp_Codigo						 As VW83B_RspCodigo,
	N2.ISOEnt_Nome	                         As VW83B_RspNome,
	B.ISOEntRsp_Cli_Principal                As VW83B_RspPrincipal,
	A.ISOEntClaP_Codigo						 As VW83B_ClaPCodigo,
	K.ISOEntClaP_Descricao					 As VW83B_ClaPDescricao,
	P.ISOEntClaPEsp_Codigo					 As VW83B_ClaPEspCodigo,
	P.ISOEntClaPEsp_Descricao				 As VW83B_ClaPEspDescricao,
	B.ISOEntNivRsp_Codigo					 As VW83B_NivCodigo,
	O.ISOEntNivRsp_Descricao				 As VW83B_NivDescricao,
    Case
           When C.ISOEntPes_Codigo is null  Then  'O'
           When C2.ISOEntOrg_Codigo is null  Then 'P'
           Else                                   'N'
    End						                 As VW83B_Tipo,
	Case
           When C.ISOEntpes_CPF is null		Then C2.ISOEntOrg_CNPJ
           When C2.ISOEntOrg_CNPJ is null	Then C.ISOEntpes_CPF
           Else                                  0
    End						                 As VW83B_CPFCNPJ,
	Case
           When C.ISOEntPes_RG is null		Then C2.ISOEntOrg_InscEstadual
           When C2.ISOEntOrg_InscEstadual is null Then C.ISOEntPes_RG
           Else                                  ''
    End						                 As VW83B_Documento,
	D.ISOEntTel_Codigo						 As VW83B_TelCodigo,
	D.ISOEntTel_ddd				             As VW83B_DDD,
	D.ISOEntTel_telefone			         As VW83B_Telefone,
	H.ISOEntEct_Codigo						 As VW83B_EctCodigo,
	H.ISOEntEct_econtact			         As VW83B_Email,
	E.ISOEntEnd_Codigo						 As VW83B_EndCodigo,
	E.ISOEntEnd_Titulo						 As VW83B_TitLogradouro,
	E.ISOEntEnd_Logradouro					 As VW83B_Logradouro,
	E.ISOEntEnd_Numero						 As VW83B_Numero,
	E.ISOEntEnd_Complemento					 As VW83B_Complemento,
	E.ISOEntEnd_Bairro						 As VW83B_Bairro,
	E.ISOEntEnd_CEP							 As VW83B_CEP,
	E.ISOLoc_Codigo							 As VW83B_CodCidade,
	F.ISOLoc_Descricao				         As VW83B_Cidade,
	G.ISOEst_Codigo							 As VW83B_CodEstado,
	G.ISOEst_Sigla					         As VW83B_UF,
	E.ISOEntEnd_Latitude					 As VW83B_Latitude,
	E.ISOEntEnd_Longitude					 As VW83B_Longitude,
	CASE
		WHEN T.ISOEntUsu_CheckinLatitude is NOT null	AND T.ISOEntUsu_CheckinLatitude <> ''
		 AND E.ISOEntEnd_Latitude is NOT null			AND E.ISOEntEnd_Latitude <> ''
		 AND T.ISOEntUsu_CheckinLongitude is NOT null	AND T.ISOEntUsu_CheckinLongitude <> ''
		 AND E.ISOEntEnd_Longitude is NOT null			AND E.ISOEntEnd_Longitude <> ''
		THEN
				(6371 * acos( cos( radians(convert(float, cast(LTRIM(T.ISOEntUsu_CheckinLatitude) AS money))) )
			 * cos( radians( E.ISOEntEnd_Latitude ) )
			 * cos( radians( E.ISOEntEnd_Longitude ) - radians(convert(float, cast(LTRIM(T.ISOEntUsu_CheckinLongitude) AS money))) )
			 + sin( radians(convert(float, cast(LTRIM(T.ISOEntUsu_CheckinLatitude) AS money))) )
			 * sin( radians( E.ISOEntEnd_Latitude ) ) ) )
		ELSE
			999999999
	END AS VW83B_Distancia,
	A.ISOEntCli_Flag                         As VW83B_Ativo,
	A.iSOEntCli_CodigoExt					 as VW83B_CodigoExt,
	RTRIM(D.ISOEntTel_DDI) + RTRIM(D.ISOEntTel_ddd) + convert(varchar, D.ISOEntTel_telefone)     As VW83B_TelefoneCompleto,
	D.ISOEntTel_DDI							AS VW83B_DDI,
	L.ISOEntCliSit_Situacao                 AS VW83B_SituacaoInterna,
	A.ISOEntCliSit_Codigo                   AS VW83B_SitCodigo,
	L.ISOEntCliSit_Descricao                AS VW83B_SitDescricao,
	Case
           When C.ISOEntPes_Codigo is null  Then C2.ISOEntSeg_Codigo
           When C2.ISOEntOrg_Codigo is null  Then C.ISOEntSeg_Codigo
           Else                                  NULL
    End						                 As VW83B_SegmentoCod,
	Case
           When C2.ISOEntSeg_Codigo is null  Then Q.ISOEntSeg_Descricao
           When C.ISOEntSeg_Codigo is null  Then R.ISOEntSeg_Descricao
           Else                                  NULL
    End						                 As VW83B_SegmentoDsc,
	C2.ISOEntRamAtv_Codigo As VW83B_RamoAtvCod,
	S.ISOEntRamAtv_Descricao As VW83B_RamoAtvDsc,

	C.ISOEntPes_RG_Data                      As VW83B_RG_EmissaoData,
	C.ISOEntPes_RG_Orgao                     As VW83B_RG_EmissaoOrgao,
	C.ISOEntPes_Sexo                         As VW83B_Sexo,
	C.ISOProf_Codigo                         As VW83B_ProfissaoCod,
	X.ISOProf_Descricao                      As VW83B_ProfissaoDsc,
	C.ISONivEsc_Codigo                       As VW83B_NivelEscolCod,
	U.ISONivEsc_Descricao                    As VW83B_NivelEscolDsc,
	C.ISOEstCiv_Codigo                       As VW83B_EstadoCivilCod,
	V.ISOEstCiv_Descricao                    As VW83B_EstadoCivilDsc,
	C2.ISOEntOrg_NomeFantasia                As VW83B_Org_NomeFantasia,
	Case
        When C.ISOEntPes_Codigo is null  Then C2.ISOEntOrg_DataCadastro
        When C2.ISOEntOrg_Codigo is null Then C.ISOEntPes_DataCadastro
        Else                                  null
    End						                 As VW83B_DataCadastro,
	Case
        When C.ISOEntPes_Codigo is null  Then C2.ISOEntOrg_DataAbertura
        When C2.ISOEntOrg_Codigo is null Then C.ISOEntPes_DataNascimento
        Else                                  null
    End						                 As VW83B_DataNascAbert,
	Case
        When C.ISOEntPes_Codigo is null  Then C2.ISOEntOrg_Observacao
        When C2.ISOEntOrg_Codigo is null Then C.ISOEntPes_Observacao
        Else                                  null
    End						                 As VW83B_Observacao,
	Case
        When C.ISOEntPes_Codigo is null  Then C2.ISOEntOrg_DataAlteracao
        When C2.ISOEntOrg_Codigo is null Then C.ISOEntPes_DataAlteracao
        Else                                  null
    End						                 As VW83B_EntDataAlteracao,
	Case
        When C.ISOEntPes_Codigo is null  Then C2.ISOEntOrg_UsuarioAlteracao
        When C2.ISOEntOrg_Codigo is null Then C.ISOEntPes_UsuarioAlteracao
        Else                                  null
    End						                 As VW83B_EntUsuAlteracao,
	D.ISOEntTel_DataAlteracao As VW83B_TelDataAlteracao,
	D.ISOEntTel_UsuarioAlteracao As VW83B_TelUsuAlteracao,
	H.ISOEntEml_DataAlteracao As VW83B_EctDataAlteracao,
	H.ISOEntEml_UsuarioAlteracao As VW83B_EctUsuAlteracao,
	E.ISOEntEnd_DataAlteracao As VW83B_EndDataAlteracao,
	E.ISOEntEnd_UsuarioAlteracao As VW83B_EndUsuAlteracao,
	A.ISOEntCli_DataAlteracao As VW83B_CliDataAlteracao,
	A.ISOEntCli_UsuarioAlteracao As VW83B_CliUsuAlteracao
	From ISOEntCliente A
	    left Join ISOENTRSP_CLIENTES B
		  On B.ISOEmp_Codigo            = A.ISOEmp_Codigo
		 And B.ISOEntCli_Codigo         = A.ISOEntCli_Codigo
         And B.ISOEntRsp_Cli_Flag       = 'A'
        Left Join ISOENTPESSOA C
          On A.ISOEntCli_Codigo         = C.isoentpes_Codigo
        Left join ISOENTORGANIZACAO C2
          On A.ISOEntCli_Codigo         = C2.ISOEntOrg_Codigo
        Left Join ISOEntTelefone D
          On A.ISOEntCli_Codigo         = D.ISOEnt_Codigo
         And D.ISOEntTel_Flag           = 'A'
		 And D.ISOEntTel_Principal		= 'S'
        Right Join ISOEntEndereco E
          On A.ISOEntCli_Codigo         = E.ISOEnt_Codigo
         And E.ISOEntEnd_Flag           = 'A'
		 --And E.ISOEntEnd_Principal		= 'S'
        Left Join ISOLocalidade F
          On E.ISOLoc_Codigo            = F.ISOLoc_Codigo
        Left Join ISOEstado G
          On F.ISOPais_Codigo           = G.ISOPais_Codigo
         And F.ISOEst_Codigo            = G.ISOEst_Codigo
        Left Join ISOEntEcontact H
          On A.ISOEntCli_Codigo         = H.ISOEnt_Codigo
         And H.ISOEntEml_Flag           = 'A'
		 And H.ISOEntEctTip_Principal	= 'S'
        Left join ISOEntClassificacaoPapel K
          On K.ISOEmp_Codigo            = A.ISOEmp_Codigo
         And K.ISOEntClaP_Codigo        = A.ISOEntClaP_Codigo
        Left join ISOEntCliSituacao L
          On L.ISOEmp_Codigo            = A.ISOEmp_Codigo
         And L.ISOEntCliSit_Codigo      = A.ISOEntCliSit_Codigo
		Left join ISOENTIDADE N
		  On N.ISOEnt_Codigo			= A.ISOEntCli_Codigo
	    Left join ISOENTIDADE N2
		  On N2.ISOEnt_Codigo			= B.ISOEntRsp_Codigo
		Left Join ISOEntNivResponsabilidade O
		  On O.ISOEmp_Codigo 			= A.ISOEmp_Codigo
		  And O.ISOEntNivRsp_Codigo 	= B.ISOEntNivRsp_Codigo
		Left Join ISOEntClaPEspecialidade P
		  On P.ISOEmp_Codigo            = A.ISOEmp_Codigo
         And P.ISOEntClaP_Codigo        = A.ISOEntClaP_Codigo
		 And P.ISOEntClaPEsp_Codigo     = A.ISOEntClaPEsp_Codigo
		LEFT JOIN ISOENTSEGMENTO Q
		  ON Q.ISOEntSeg_Codigo = C.ISOEntSeg_Codigo
		LEFT JOIN ISOENTSEGMENTO R
		  ON R.ISOEntSeg_Codigo = C2.ISOEntSeg_Codigo
		LEFT JOIN ISOENTRAMOATIVIDADE S
		  ON S.ISOEntRamAtv_Codigo = C2.ISOEntRamAtv_Codigo
		LEFT JOIN ISOENTUSU_CHECKIN T
		  On T.ISOEntUsu_Codigo			= B.ISOEntRsp_Codigo
		 And ISOEntUsu_CheckCodigo = (select max(ISOEntUsu_CheckCodigo) from ISOENTUSU_CHECKIN where ISOEntUsu_Codigo = T.ISOEntUsu_Codigo)
		Left join ISONIVESCOLARIDADE U
			On C.ISONivEsc_Codigo = U.ISONivEsc_Codigo
		Left join ISOESTCIVIL V
			On C.ISOEstCiv_Codigo = V.ISOEstCiv_Codigo
		Left join ISOPROFISSAO X
			On C.ISOProf_Codigo = X.ISOProf_Codigo;


-- ConexaoISO.VW83_ISOEntRsp_Clientes source

CREATE VIEW VW83_ISOEntRsp_Clientes as
Select
	A.ISOEmp_Codigo							 As VW83_Empresa,
	A.ISOEntCli_Codigo	                     As VW83_Codigo,
	LTRIM(upper(N.ISOEnt_Nome))		         As VW83_Nome,
	B.ISOEntRsp_Codigo						 As VW83_RspCodigo,
	N2.ISOEnt_Nome	                         As VW83_RspNome,
	B.ISOEntRsp_Cli_Principal                As VW83_RspPrincipal,
	A.ISOEntClaP_Codigo						 As VW83_ClaPCodigo,
	K.ISOEntClaP_Descricao					 As VW83_ClaPDescricao,
	P.ISOEntClaPEsp_Codigo					 As VW83_ClaPEspCodigo,
	P.ISOEntClaPEsp_Descricao				 As VW83_ClaPEspDescricao,
	B.ISOEntNivRsp_Codigo					 As VW83_NivCodigo,
	O.ISOEntNivRsp_Descricao				 As VW83_NivDescricao,
    Case
           When C.ISOEntPes_Codigo is null  Then  'O'
           When C2.ISOEntOrg_Codigo is null  Then 'P'
           Else                                   'N'
    End						                 As VW83_Tipo,
	Case
           When C.ISOEntpes_CPF is null		Then C2.ISOEntOrg_CNPJ
           When C2.ISOEntOrg_CNPJ is null	Then C.ISOEntpes_CPF
           Else                                  0
    End						                 As VW83_CPFCNPJ,
	Case
           When C.ISOEntPes_RG is null		Then C2.ISOEntOrg_InscEstadual
           When C2.ISOEntOrg_InscEstadual is null Then C.ISOEntPes_RG
           Else                                  ''
    End						                 As VW83_Documento,
	D.ISOEntTel_Codigo						 As VW83_TelCodigo,
	D.ISOEntTel_ddd				             As VW83_DDD,
	D.ISOEntTel_telefone			         As VW83_Telefone,
	H.ISOEntEct_Codigo						 As VW83_EctCodigo,
	H.ISOEntEct_econtact			         As VW83_Email,
	E.ISOEntEnd_Codigo						 As VW83_EndCodigo,
	E.ISOEntEnd_Titulo						 As VW83_TitLogradouro,
	E.ISOEntEnd_Logradouro					 As VW83_Logradouro,
	E.ISOEntEnd_Numero						 As VW83_Numero,
	E.ISOEntEnd_Complemento					 As VW83_Complemento,
	E.ISOEntEnd_Bairro						 As VW83_Bairro,
	E.ISOEntEnd_CEP							 As VW83_CEP,
	E.ISOLoc_Codigo							 As VW83_CodCidade,
	F.ISOLoc_Descricao				         As VW83_Cidade,
	G.ISOEst_Codigo							 As VW83_CodEstado,
	G.ISOEst_Sigla					         As VW83_UF,
	E.ISOEntEnd_Latitude					 As VW83_Latitude,
	E.ISOEntEnd_Longitude					 As VW83_Longitude,
	(6371 * acos( cos( radians(convert(float, cast(LTRIM(T.ISOEntUsu_CheckinLatitude) AS money))))
 * cos( radians( convert(float, cast(LTRIM(E.ISOEntEnd_Latitude ) as money))))
 * cos( radians( convert(float, cast(LTRIM( E.ISOEntEnd_Longitude ) as money)))
 - radians(convert(float, cast(LTRIM(T.ISOEntUsu_CheckinLongitude) AS money))))
 + sin( radians(convert(float, cast(LTRIM(T.ISOEntUsu_CheckinLatitude) AS money))))
 * sin( radians( convert(float, cast(LTRIM(E.ISOEntEnd_Latitude ) as money)))))) AS VW83_Distancia,
	A.ISOEntCli_Flag                         As VW83_Ativo,
	A.iSOEntCli_CodigoExt					 as VW83_CodigoExt,
	RTRIM(D.ISOEntTel_DDI) + RTRIM(D.ISOEntTel_ddd) + convert(varchar, D.ISOEntTel_telefone)     As VW83_TelefoneCompleto,
	D.ISOEntTel_DDI							AS VW83_DDI,
	L.ISOEntCliSit_Situacao                 AS VW83_SituacaoInterna,
	A.ISOEntCliSit_Codigo                   AS VW83_SitCodigo,
	L.ISOEntCliSit_Descricao                AS VW83_SitDescricao,
	Case
           When C.ISOEntPes_Codigo is null  Then C2.ISOEntSeg_Codigo
           When C2.ISOEntOrg_Codigo is null  Then C.ISOEntSeg_Codigo
           Else                                  NULL
    End						                 As VW83_SegmentoCod,
	Case
           When C2.ISOEntSeg_Codigo is null  Then Q.ISOEntSeg_Descricao
           When C.ISOEntSeg_Codigo is null  Then R.ISOEntSeg_Descricao
           Else                                  NULL
    End						                 As VW83_SegmentoDsc,
	C2.ISOEntRamAtv_Codigo As VW83_RamoAtvCod,
	S.ISOEntRamAtv_Descricao As VW83_RamoAtvDsc,

	C.ISOEntPes_RG_Data                      As VW83_RG_EmissaoData,
	C.ISOEntPes_RG_Orgao                     As VW83_RG_EmissaoOrgao,
	C.ISOEntPes_Sexo   As VW83_Sexo,
	C.ISOProf_Codigo                         As VW83_ProfissaoCod,
	X.ISOProf_Descricao                      As VW83_ProfissaoDsc,
	C.ISONivEsc_Codigo                       As VW83_NivelEscolCod,
	U.ISONivEsc_Descricao                    As VW83_NivelEscolDsc,
	C.ISOEstCiv_Codigo                       As VW83_EstadoCivilCod,
	V.ISOEstCiv_Descricao                    As VW83_EstadoCivilDsc,
	C2.ISOEntOrg_NomeFantasia                As VW83_Org_NomeFantasia,
	Case
        When C.ISOEntPes_Codigo is null  Then C2.ISOEntOrg_DataCadastro
        When C2.ISOEntOrg_Codigo is null Then C.ISOEntPes_DataCadastro
        Else                                  null
    End						                 As VW83_DataCadastro,
	Case
        When C.ISOEntPes_Codigo is null  Then C2.ISOEntOrg_DataAbertura
        When C2.ISOEntOrg_Codigo is null Then C.ISOEntPes_DataNascimento
        Else                                  null
    End						                 As VW83_DataNascAbert,
	Case
        When C.ISOEntPes_Codigo is null  Then C2.ISOEntOrg_Observacao
        When C2.ISOEntOrg_Codigo is null Then C.ISOEntPes_Observacao
        Else                                  null
    End						                 As VW83_Observacao,
	Case
        When C.ISOEntPes_Codigo is null  Then C2.ISOEntOrg_DataAlteracao
        When C2.ISOEntOrg_Codigo is null Then C.ISOEntPes_DataAlteracao
        Else                                  null
    End						                 As VW83_EntDataAlteracao,
	Case
        When C.ISOEntPes_Codigo is null  Then C2.ISOEntOrg_UsuarioAlteracao
        When C2.ISOEntOrg_Codigo is null Then C.ISOEntPes_UsuarioAlteracao
        Else                                  null
    End						                 As VW83_EntUsuAlteracao,
	D.ISOEntTel_DataAlteracao As VW83_TelDataAlteracao,
	D.ISOEntTel_UsuarioAlteracao As VW83_TelUsuAlteracao,
	H.ISOEntEml_DataAlteracao As VW83_EctDataAlteracao,
	H.ISOEntEml_UsuarioAlteracao As VW83_EctUsuAlteracao,
	E.ISOEntEnd_DataAlteracao As VW83_EndDataAlteracao,
	E.ISOEntEnd_UsuarioAlteracao As VW83_EndUsuAlteracao,
	A.ISOEntCli_DataAlteracao As VW83_CliDataAlteracao,
	A.ISOEntCli_UsuarioAlteracao As VW83_CliUsuAlteracao
	From ISOEntCliente A
	    left Join ISOENTRSP_CLIENTES B
		  On B.ISOEmp_Codigo            = A.ISOEmp_Codigo
		 And B.ISOEntCli_Codigo         = A.ISOEntCli_Codigo
         And B.ISOEntRsp_Cli_Flag       = 'A'
        Left Join ISOENTPESSOA C
          On A.ISOEntCli_Codigo         = C.isoentpes_Codigo
        Left join ISOENTORGANIZACAO C2
          On A.ISOEntCli_Codigo         = C2.ISOEntOrg_Codigo
        Left Join ISOEntTelefone D
          On A.ISOEntCli_Codigo         = D.ISOEnt_Codigo
         And D.ISOEntTel_Flag           = 'A'
		 And D.ISOEntTel_Principal		= 'S'
        Left Join ISOEntEndereco E
          On A.ISOEntCli_Codigo         = E.ISOEnt_Codigo
         And E.ISOEntEnd_Flag           = 'A'
		 And E.ISOEntEnd_Principal		= 'S'
        Left Join ISOLocalidade F
          On E.ISOLoc_Codigo            = F.ISOLoc_Codigo
        Left Join ISOEstado G
          On F.ISOPais_Codigo           = G.ISOPais_Codigo
         And F.ISOEst_Codigo            = G.ISOEst_Codigo
        Left Join ISOEntEcontact H
          On A.ISOEntCli_Codigo         = H.ISOEnt_Codigo
         And H.ISOEntEml_Flag           = 'A'
		 And H.ISOEntEctTip_Principal	= 'S'
        Left join ISOEntClassificacaoPapel K
          On K.ISOEmp_Codigo            = A.ISOEmp_Codigo
         And K.ISOEntClaP_Codigo        = A.ISOEntClaP_Codigo
        Left join ISOEntCliSituacao L
          On L.ISOEmp_Codigo            = A.ISOEmp_Codigo
         And L.ISOEntCliSit_Codigo      = A.ISOEntCliSit_Codigo
		Left join ISOENTIDADE N
		  On N.ISOEnt_Codigo			= A.ISOEntCli_Codigo
	    Left join ISOENTIDADE N2
		  On N2.ISOEnt_Codigo			= B.ISOEntRsp_Codigo
		Left Join ISOEntNivResponsabilidade O
		  On O.ISOEmp_Codigo 			= A.ISOEmp_Codigo
		  And O.ISOEntNivRsp_Codigo 	= B.ISOEntNivRsp_Codigo
		Left Join ISOEntClaPEspecialidade P
		  On P.ISOEmp_Codigo            = A.ISOEmp_Codigo
         And P.ISOEntClaP_Codigo        = A.ISOEntClaP_Codigo
		 And P.ISOEntClaPEsp_Codigo     = A.ISOEntClaPEsp_Codigo
		LEFT JOIN ISOENTSEGMENTO Q
		  ON Q.ISOEntSeg_Codigo = C.ISOEntSeg_Codigo
		LEFT JOIN ISOENTSEGMENTO R
		  ON R.ISOEntSeg_Codigo = C2.ISOEntSeg_Codigo
		LEFT JOIN ISOENTRAMOATIVIDADE S
		  ON S.ISOEntRamAtv_Codigo = C2.ISOEntRamAtv_Codigo
		LEFT JOIN ISOENTUSU_CHECKIN T
		  On T.ISOEntUsu_Codigo			= B.ISOEntRsp_Codigo
		 And ISOEntUsu_CheckCodigo = (select max(ISOEntUsu_CheckCodigo) from ISOENTUSU_CHECKIN where ISOEntUsu_Codigo = T.ISOEntUsu_Codigo)
		Left join ISONIVESCOLARIDADE U
			On C.ISONivEsc_Codigo = U.ISONivEsc_Codigo
		Left join ISOESTCIVIL V
			On C.ISOEstCiv_Codigo = V.ISOEstCiv_Codigo
		Left join ISOPROFISSAO X
			On C.ISOProf_Codigo = X.ISOProf_Codigo;


-- ConexaoISO.VW84A_SacValidaDCObrig source

CREATE VIEW VW84A_SacValidaDCObrig as
Select T01.ISOEmp_Codigo                         as VW84A_Empresa,
	   T01.ISOSAAte_Codigo                       as VW84A_Codigo,
       T02.ISOSAAtendimentoAttId                 as VW84A_CodDadoCompl,
       RTRIM(T02.ISOSAAtendimentoAttName)        as VW84A_DescDadoCompl,
       T02.ISOSAAtendimentoFormDefId             as VW84A_CodFormulario,
       RTRIM(T03.ISOSAAtendimentoFormDefName)    as VW84A_DescFormulario,
       T02.ISOSAAtendimentoAttObrigatorio        as VW84A_DCOrgObrig
  From ISOSAAtendimento T01, ISOSAAtendimentoAtt T02, ISOSAAtendimentoFormDef T03
 Where T03.ISOSAAtendimentoFormDefId = T02.ISOSAAtendimentoFormDefId
 and T02.ISOSAAtendimentoAttFlag = 'A' AND T03.ISOSAAtendimentoFormDef_Flag = 'A';


-- ConexaoISO.VW84B_SacValidaDCObrig source

CREATE VIEW VW84B_SacValidaDCObrig as
Select T01.ISOEmp_Codigo                        as VW84B_Empresa,
	   T01.ISOSAAte_Codigo                      as VW84B_Codigo,
       T02.ISOSAAtendimentoAttId                as VW84B_CodDadoCompl,
       RTrim(T02.ISOSAAtendimentoAttName)       as VW84B_DescDadoCompl,
       T02.ISOSAAtendimentoAttObrigatorio       as VW84B_DCPesObrig
  From ISOSAAtendimentoATT T02
        left Join ISOSAAtendimentoATTVALUES T01
          On T02.ISOSAAtendimentoAttId   = T01.ISOSAAtendimentoAttId
 Where T02.ISOSAAtendimentoAttType = 0
   And RTrim(RTrim(T01.ISOSAAtendimentoAttValue)) <> ''
Union
-- Buscando Dado Complementar Numérico
Select T01.ISOEmp_Codigo                        as VW84B_Empresa,
	   T01.ISOSAAte_Codigo                      as VW84B_Codigo,
       T02.ISOSAAtendimentoAttId                as VW84B_CodDadoCompl,
       RTrim(T02.ISOSAAtendimentoAttName)       as VW84B_DescDadoCompl,
       T02.ISOSAAtendimentoAttObrigatorio       as VW84B_DCPesObrig
  From ISOSAAtendimentoATT T02
        left Join ISOSAAtendimentoATTVALUES T01
          On T02.ISOSAAtendimentoAttId   = T01.ISOSAAtendimentoAttId
 Where T02.ISOSAAtendimentoAttType = 1
   And RTrim(RTrim(T01.ISOSAAtendimentoAttValue)) <> '' And RTrim(RTrim(T01.ISOSAAtendimentoAttValue)) <> '0'
   And RTrim(RTrim(T01.ISOSAAtendimentoAttValue)) <> '0,00' And RTrim(RTrim(T01.ISOSAAtendimentoAttValue)) <> '0.00' --ISOUdf_TiraLetras(T01.ISOEntOrganizacaoAttValue) > 0
Union
-- Buscando Dado Complementar de data ou data/hora
Select T01.ISOEmp_Codigo                        as VW84B_Empresa,
	   T01.ISOSAAte_Codigo                      as VW84B_Codigo,
       T02.ISOSAAtendimentoAttId                as VW84B_CodDadoCompl,
       RTrim(T02.ISOSAAtendimentoAttName)       as VW84B_DescDadoCompl,
       T02.ISOSAAtendimentoAttObrigatorio       as VW84B_DCPesObrig
  From ISOSAAtendimentoATT T02
        left Join ISOSAAtendimentoATTVALUES T01
          On T02.ISOSAAtendimentoAttId   = T01.ISOSAAtendimentoAttId
 Where T02.ISOSAAtendimentoAttType in (2, 3)
   And Substring(RTrim(RTrim(T01.ISOSAAtendimentoAttValue)), 1, 1) <> '/' AND RTrim(RTrim(T01.ISOSAAtendimentoAttValue)) <> ''
Union
-- Buscando Dado Complementar de Combobox
Select T01.ISOEmp_Codigo                        as VW84B_Empresa,
	   T01.ISOSAAte_Codigo                      as VW84B_Codigo,
       T02.ISOSAAtendimentoAttId                as VW84B_CodDadoCompl,
       RTrim(T02.ISOSAAtendimentoAttName)       as VW84B_DescDadoCompl,
       T02.ISOSAAtendimentoAttObrigatorio       as VW84B_DCPesObrig
  From ISOSAAtendimentoATT T02
        left Join ISOSAAtendimentoATTVALUES T01
          On T02.ISOSAAtendimentoAttId   = T01.ISOSAAtendimentoAttId
 Where T02.ISOSAAtendimentoAttType = 4
   And T01.ISOSAAtendimentoAttOptId is not null
Union
-- Buscando Dado Complementar de texto longo
Select T01.ISOEmp_Codigo                        as VW84B_Empresa,
	   T01.ISOSAAte_Codigo                      as VW84B_Codigo,
       T02.ISOSAAtendimentoAttId                as VW84B_CodDadoCompl,
       RTrim(T02.ISOSAAtendimentoAttName)       as VW84B_DescDadoCompl,
       T02.ISOSAAtendimentoAttObrigatorio       as VW84B_DCPesObrig
  From ISOSAAtendimentoATT T02
        left Join ISOSAAtendimentoATTVALUES T01
          On T02.ISOSAAtendimentoAttId   = T01.ISOSAAtendimentoAttId
 Where T02.ISOSAAtendimentoAttType = 5
   And RTrim(RTrim(T01.ISOSAAtendimentoAttValue)) <> '';


-- ConexaoISO.VW84_SacValidaDCObrigatorio source

CREATE VIEW VW84_SacValidaDCObrigatorio as
Select T01.VW84A_Empresa                         as VW84_Empresa,
	   T01.VW84A_Codigo                          as VW84_Codigo,
       T01.VW84A_CodFormulario                   as VW84_CodFormulario,
       T01.VW84A_DescFormulario                  as VW84_DescFormulario,
       T01.VW84A_CodDadoCompl                    as VW84_CodDadoCompl,
       T01.VW84A_DescDadoCompl                   as VW84_DescDadoCompl,
       Case
            When T03.VW84B_DescDadoCompl Is Null Then 'NOK'
			Else 'OK'
       End                                       as VW84_DCSituacao,
       T01.VW84A_DCOrgObrig                      as VW84_DCObrig,
       Case
            When T03.VW84B_DescDadoCompl Is Null Then RTrim(T01.VW84A_DescDadoCompl) + ' não respondido.'
			Else ''
       End                                       as VW84_Mensagem,
       Case
            When T03.VW84B_DescDadoCompl Is Null Then 1
			Else 0
       End                                       as VW84_Erro
  From VW84A_SacValidaDCObrig T01
         Left Join VW84B_SacValidaDCObrig T03
           On T03.VW84B_CodDadoCompl = T01.VW84A_CodDadoCompl
		  And T03.VW84B_Empresa    = T01.VW84A_Empresa
          And T03.VW84B_Codigo    = T01.VW84A_Codigo
 Where T01.VW84A_DCOrgObrig = 'S';


-- ConexaoISO.VW85_SacValidaFormDC source

CREATE VIEW VW85_SacValidaFormDC as
  SELECT
     T0.VW84_Empresa as VW85_Empresa,
     T0.VW84_Codigo as VW85_Codigo
    ,T0.VW84_CodFormulario as VW85_CodFormulario
	,SUM(T0.VW84_Erro) as VW85_Erro,
	Case
        When SUM(T0.VW84_Erro) > 0 Then 1
	    Else 0
    End										as VW85_ErroForm,
	T1.ISOSAAtendimentoFormDefGrp_Cod	    as VW85_GrpCodigo
  FROM VW84_SacValidaDCObrigatorio T0
    left join ISOSAAtendimentoFormDefGrupo T1
	       on T0.VW84_CodFormulario = t1.ISOSAAtendimentoFormDefId
		  and T1.ISOSAAtendimentoFormDefGrp_Fla = 'A'
	left join ISOSAAtendimentoFormDef T2
	       on T2.ISOSAAtendimentoFormDefId = T1.ISOSAAtendimentoFormDefId
		  and T2.ISOSAAtendimentoFormDef_Flag = 'A'
 GROUP BY T0.VW84_Empresa, T0.VW84_Codigo, T0.VW84_CodFormulario, T1.ISOSAAtendimentoFormDefGrp_Cod;


-- ConexaoISO.VW86_ItensDoCatalogo source

CREATE VIEW VW86_ItensDoCatalogo AS
select
    t01.ISOEmp_Codigo     as VW86_ISOEmp_Codigo,
	case
	  when t01.ISOCtg_CategPai = 0 then t01.ISOCat_Codigo
	  else 0
	end as VW86_ISOCat_Codigo,
    t03.ISOCtg_Codigo     as VW86_ISO_Codigo,
    t03.ISOCtg_Descricao  as VW86_ISO_Nome,
	t03.ISOCtg_Icone      as VW86_ISO_Icone,
	t03.ISOCtg_IconeNome  as VW86_ISO_IconeNome,
	t03.ISOCtg_IconeExtensao as VW86_ISO_IconeExtensao,
	t03.ISOCtg_DataValidade as VW86_ISO_Validade,
	t01.ISOCtg_CategPai   as VW86_ISOCtg_CodigoPai,
	'c'					  as VW86_ISO_Tipo,
	t01.ISOCat_Ctg_Flag   as VW86_ISO_Ativo,
	t03.ISOCtg_Flag       as VW86_ISO_AtivoOri,
	t01.ISOCat_Ctg_Ordem  as VW86_ISO_Ordem,
	t03.ISOCtg_DescricaoLista as VW86_ISOCtg_Descricao,
	0  as VW86_ISO_APartirDe,
	0  as VW86_ISO_PrecoLista,
	0  as VW86_ISO_PrecoSugerido,
	'' as VW86_ISO_Unidade,
	'' as VW86_ISO_UnidadePL
  from ISOCtg_Catalogo t01
    left join isocatalogo t02
	       on t02.ISOEmp_Codigo = t01.ISOEmp_Codigo
		  and t02.ISOCat_Codigo = t01.ISOCat_Codigo
	left join isocategoria t03
	       on t03.ISOEmp_Codigo = t01.ISOEmp_Codigo
		  and t03.ISOCtg_Codigo = t01.ISOCtg_Codigo

union
select
	t03.ISOEmp_Codigo     as VW86_ISOEmp_Codigo,
	0     as VW86_ISOCat_Codigo,
    t03.ISOCtgIte_Codigo  as VW86_ISO_Codigo,
    t03.ISOCtgIte_Nome    as VW86_ISO_Nome,
	t03.ISOCtgIte_Icone      as VW86_ISO_Icone,
	t03.ISOCtgIte_IconeNome  as VW86_ISO_IconeNome,
	t03.ISOCtgIte_IconeExtensao as VW86_ISO_IconeExtensao,
	t03.ISOCtgIte_DataValidade as VW86_ISO_Validade,
	t01.ISOCtg_Codigo     as VW86_ISOCtg_CodigoPai,
	'i'                   as VW86_ISO_Tipo,
	t01.ISOCtg_CtgIte_Flag   as VW86_ISO_Ativo,
	t03.ISOCtgIte_Flag       as VW86_ISO_AtivoOri,
	t01.ISOCtg_CtgIte_Ordem  as VW86_ISO_Ordem,
	t03.ISOCtgIte_Descricao as VW86_ISOCtg_Descricao,
	dbo.ISOFn_Ctg_MenorPreco(2, T03.ISOEmp_Codigo, T03.ISOCtgIte_Codigo) as VW86_ISO_APartirDe,
	dbo.ISOFn_Ctg_MenorPreco(1, T03.ISOEmp_Codigo, T03.ISOCtgIte_Codigo) as VW86_ISO_PrecoLista,
	dbo.ISOFn_Ctg_MenorPreco(0, T03.ISOEmp_Codigo, T03.ISOCtgIte_Codigo) as VW86_ISO_PrecoSugerido,
	'' as VW86_ISO_Unidade,
	'' as VW86_ISO_UnidadePL
  from ISOCTGITEM T03
    Left Join ISOCTG_CTGITEM T01
		   on T03.ISOEmp_Codigo = T01.ISOEmp_Codigo
	      and T03.ISOCtgIte_Codigo = T01.ISOCtgIte_Codigo
    Left Join ISOCTGITE_PRODUTO T02
	       On T02.ISOEmp_Codigo               = T01.ISOEmp_Codigo
	      And T02.ISOCtgIte_Codigo            = T01.ISOCtgIte_Codigo
group by  t03.ISOEmp_Codigo, T01.ISOEmp_Codigo, T01.ISOCtgIte_Codigo, t03.ISOCtgIte_Codigo, t03.ISOCtgIte_Nome, t03.ISOCtgIte_Icone, t03.ISOCtgIte_IconeNome, t03.ISOCtgIte_IconeExtensao, t03.ISOCtgIte_DataValidade, t01.ISOCtg_Codigo, t01.ISOCtg_CtgIte_Flag, t03.ISOCtgIte_Flag, t01.ISOCtg_CtgIte_Ordem, t03.ISOCtgIte_Descricao;


-- ConexaoISO.VW88_ClienteOmniBox source

CREATE VIEW VW88_ClienteOmniBox as
Select T01.ISOEnt_Codigo               as VW88_CodEntidade,
       T01.ISOEnt_Nome                 as VW88_NomeEntidade,
       Coalesce(
       (Select 'Nome: ' + RTrim(T01.ISOEnt_Nome) + '; ' + 'CPF/CNPJ:' +
               Case
                    When T02.ISOEntPes_Codigo Is Not Null Then  RTrim(Cast(T02.ISOEntPes_CPF as char(11)))
			        Else RTrim(Cast(T03.ISOEntOrg_CNPJ as char(14)))
               End  + '; Fone:' + TA2.Telefone + '; email:' + TA3.Email
          From (Select T01.ISOEnt_Codigo, T01.ISOEnt_Nome,
                       Coalesce((Select ' (' + RTrim(T02.ISOEntTel_DDD) + ')' + RTrim(Cast(T02.ISOEntTel_Telefone as char(10)))-- + ';'
                                   From ISOENTTELEFONE T02
                                             Where T02.ISOEnt_Codigo = T01.ISOEnt_Codigo
										       FOR XML PATH(''), TYPE).value('.[1]', 'VARCHAR(MAX)'), '') As Telefone
                             From ISOENTIDADE T01
				) TA2
		        Left Join (Select T01.ISOEnt_Codigo, T01.ISOEnt_Nome,
                                  Coalesce((Select ' ' + RTrim(T02.ISOEntEct_Econtact)
                                              From ISOEntEcontact T02
                                             Where T02.ISOEnt_Codigo = T01.ISOEnt_Codigo
										       FOR XML PATH(''), TYPE).value('.[1]', 'VARCHAR(MAX)'), '') as Email
                             From ISOENTIDADE T01
				) TA3
		          On TA3.ISOEnt_Codigo = T01.ISOEnt_Codigo
         Where TA2.ISOEnt_Codigo = T01.ISOEnt_Codigo
           FOR XML PATH(''), TYPE).value('.[1]', 'VARCHAR(MAX)'), '')
		                               as VW88_DadosCompletos
  From ISOENTIDADE T01
        Left Join ISOENTPESSOA T02
          On T02.ISOEntPes_Codigo = T01.ISOEnt_Codigo
        Left Join ISOENTORGANIZACAO T03
          On T03.ISOEntOrg_Codigo = T01.ISOEnt_Codigo;


-- ConexaoISO.VW89_ProdutoOmniBox source

CREATE VIEW VW89_ProdutoOmniBox as
Select T01.ISOEmp_Codigo               as VW89_CodEmpresa,
       T01.ISOPrd_Codigo               as VW89_CodProduto,
       T01.ISOPrd_Descricao            as VW89_DscProduto,
       T01.ISOPrd_Concorrente          as VW89_PrdConcorrente,
       T01.ISOPrd_Referenciado         as VW89_PrdReferenciado,
       T01.ISOPrd_Flag                 as VW89_PrdFlag,
       T01.ISOPrd_TipoPreco            as VW89_PrdTipoPreco,
       T01.ISOPrd_KitSeparado          as VW89_PrdKitSeparado,
       T01.ISOPrd_Unidade              as VW89_PrdUnidade,
       T01.ISOPrd_DescontoCP           as VW89_PrdDescontoCP,
       T01.ISOPrd_DescricaoDetalhada   as VW89_PrdDescDetalhada,
       Coalesce((Select Case
                            When T07.Linhas is Null Then
                                 'Produto: ' + RTrim(TA1.ISOPrd_Codigo) + ' Descrição: ' + Rtrim(TA1.ISOPrd_Descricao) +
                                 ' Desc Detalhada: ' + RTrim(T01.ISOPrd_DescricaoDetalhada) +
                                 ' Marca: ' + RTrim(T02.ISOMrc_Descricao) +
                                 ' Modelo: ' + RTrim(T03.ISOMrcMod_Descricao) +
                                 ' Fabricante: ' + RTrim(T04.ISOEnt_Nome) +
                                 ' Classificação: ' + RTrim(T05.ISOPrdCls_Descricao)
                            Else
                                 'Produto: ' + RTrim(TA1.ISOPrd_Codigo) + ' Descrição: ' + Rtrim(TA1.ISOPrd_Descricao) +
                                 ' Desc Detalhada: ' + RTrim(T01.ISOPrd_DescricaoDetalhada) +
                                 ' Marca: ' + RTrim(T02.ISOMrc_Descricao) +
                                 ' Modelo: ' + RTrim(T03.ISOMrcMod_Descricao) +
                                 ' Fabricante: ' + RTrim(T04.ISOEnt_Nome) +
                                 ' Classificação: ' + RTrim(T05.ISOPrdCls_Descricao)
                                 + RTrim(T07.Linhas)
                        End
                  From ISOProduto TA1
                 Where TA1.ISOEmp_Codigo = T01.ISOEmp_Codigo
                   And TA1.ISOPrd_Codigo = T01.ISOPrd_Codigo
       FOR XML PATH(''), TYPE).value('.[1]', 'VARCHAR(MAX)'), '')
                                        as VW89_DadosCompletos
  From ISOPRODUTO T01
        Left Join ISOMARCAS T02
          On T02.ISOEmp_Codigo    = T01.ISOEmp_Codigo
         And T02.ISOMrc_Codigo    = T01.ISOMrc_Codigo
        Left Join ISOMRCMODELOS T03
          On T03.ISOEmp_Codigo    = T02.ISOEmp_Codigo
         And T03.ISOMrc_Codigo    = T02.ISOMrc_Codigo
         And T03.ISOMrcMod_Codigo = T01.ISOMrcMod_Codigo
        Left Join ISOENTIDADE T04
          On T04.ISOEnt_Codigo    = T02.ISOEntFab_Codigo
        Left Join ISOPRDCLASSIFICACAO T05
          On T05.ISOEmp_Codigo    = T01.ISOEmp_Codigo
         And T05.ISOPrdCls_Codigo = T01.ISOPrdCls_Codigo
        Left Join ISOPRDTIPO T06
          On T06.ISOEmp_Codigo    = T01.ISOEmp_Codigo
         And T06.ISOPrdTip_Codigo = T01.ISOPrdTip_Codigo
        Left Join (Select T01.ISOEmp_Codigo, T01.ISOPrd_Codigo, T01.ISOPrd_Descricao,
                           Stuff(Coalesce((Select ', ' + RTrim(T03.ISOLin_Descricao)
                                             From ISOPrdLinha T02
                                                  Inner Join ISOLinha T03
                                                     On T03.ISOEmp_Codigo = T02.ISOEmp_Codigo
                                                    And T03.ISOLin_Codigo = T02.ISOLin_Codigo
                                            Where T02.ISOEmp_Codigo = T01.ISOEmp_Codigo AND T02.ISOPrd_Codigo = T01.ISOPrd_Codigo
		                                    FOR XML PATH(''), TYPE).value('.[1]', 'VARCHAR(MAX)'), ''), 1, 1, ' Linha: ') As Linhas
                     From ISOPRODUTO T01) T07
          On T07.ISOEmp_Codigo = T01.ISOEmp_Codigo
         And T07.ISOPrd_Codigo = T01.ISOPrd_Codigo;


-- ConexaoISO.VW90_ClienteSearch source

CREATE VIEW VW90_ClienteSearch as
Select T01.ISOEnt_Codigo                    as VW90_CodEntidade,
       T01.ISOEnt_Nome                      as VW90_NomeEntidade,
	   'Nome'                               as VW90_Campo,
	   RTrim(T01.ISOEnt_Nome)               as VW90_Dado
  From ISOENTIDADE T01

Union All

Select T01.ISOEnt_Codigo                    as VW90_CodEntidade,
       T01.ISOEnt_Nome                      as VW90_NomeEntidade,
	   'CPF/CNPJ'                           as VW90_Campo,
       Case
            When T02.ISOEntPes_Codigo Is Not Null Then RTrim(CAST(T02.ISOEntPes_CPF AS char(11)))
			Else RTRIM(Cast(T03.ISOEntOrg_CNPJ as char(14)))
       End                                  as VW90_Dado
  From ISOENTIDADE T01
        Left Join ISOENTPESSOA T02
          On T02.ISOEntPes_Codigo = T01.ISOEnt_Codigo
        Left Join ISOENTORGANIZACAO T03
          On T03.ISOEntOrg_Codigo = T01.ISOEnt_Codigo
Union All

Select T01.ISOEnt_Codigo                    as VW90_CodEntidade,
       T01.ISOEnt_Nome                      as VW90_NomeEntidade,
       'Fone'                               as VW90_Campo,
	   T02.ISOEntTel_DDD + RTRIM(Cast(T02.ISOEntTel_Telefone as char(10))) as VW90_Dado
  From ISOENTIDADE T01
       Inner Join ISOENTTELEFONE T02
          On T02.ISOEnt_Codigo = T01.ISOEnt_Codigo

Union All

Select T01.ISOEnt_Codigo                     as VW90_CodEntidade,
       T01.ISOEnt_Nome                       as VW90_NomeEntidade,
       'email'                               as VW90_Campo,
	   T02.ISOEntEct_econtact                                              as VW90_Dado
  From ISOENTIDADE T01
       Inner Join ISOENTECONTACT T02
          On T02.ISOEnt_Codigo = T01.ISOEnt_Codigo;


-- ConexaoISO.VW91_ProdutoSearch source

CREATE VIEW VW91_ProdutoSearch as

Select T01.ISOPrd_Codigo                         as VW91_CodProduto,
       T01.ISOPrd_Descricao                      as VW91_DescProduto,
	   'Produto'                                 as VW91_Campo,
	   RTrim(T01.ISOPrd_Codigo)                  as VW91_Dado
  From ISOPRODUTO T01

Union All

Select T01.ISOPrd_Codigo                         as VW91_CodProduto,
       T01.ISOPrd_Descricao                      as VW91_DescProduto,
	   'Desc Produto'                            as VW91_Campo,
	   RTrim(T01.ISOPrd_Descricao)               as VW91_Dado
  From ISOPRODUTO T01

Union All

Select T01.ISOPrd_Codigo                         as VW91_CodProduto,
       T01.ISOPrd_Descricao                      as VW91_DescProduto,
	   'Desc Detalhada'                          as VW91_Campo,
	   RTrim(T01.ISOPrd_DescricaoDetalhada)      as VW91_Dado
  From ISOPRODUTO T01

Union All

Select T01.ISOPrd_Codigo                         as VW91_CodProduto,
       T01.ISOPrd_Descricao                      as VW91_DescProduto,
	   'Marca'                                   as VW91_Campo,
	   RTrim(T02.ISOMrc_Descricao)               as VW91_Dado
  From ISOPRODUTO T01
       Inner Join ISOMARCAS T02
          On T02.ISOEmp_Codigo = T01.ISOEmp_Codigo
         And T02.ISOMrc_Codigo = T01.ISOMrc_Codigo

Union All

Select T01.ISOPrd_Codigo                         as VW91_CodProduto,
       T01.ISOPrd_Descricao                      as VW91_DescProduto,
	   'Modelo'                                  as VW91_Campo,
	   RTrim(T03.ISOMrcMod_Descricao)            as VW91_Dado
  From ISOPRODUTO T01
       Inner Join ISOMARCAS T02
          On T02.ISOEmp_Codigo = T01.ISOEmp_Codigo
         And T02.ISOMrc_Codigo = T01.ISOMrc_Codigo
       Inner Join ISOMRCMODELOS T03
          On T03.ISOEmp_Codigo    = T01.ISOEmp_Codigo
         And T03.ISOMrc_Codigo    = T01.ISOMrc_Codigo
         And T03.ISOMrcMod_Codigo = T01.ISOMrcMod_Codigo

Union All

Select T01.ISOPrd_Codigo                         as VW91_CodProduto,
       T01.ISOPrd_Descricao                      as VW91_DescProduto,
	   'Fabricante'                              as VW91_Campo,
	   RTrim(T03.ISOEnt_Nome)                    as VW91_Dado
  From ISOPRODUTO T01
       Inner Join ISOMARCAS T02
          On T02.ISOEmp_Codigo = T01.ISOEmp_Codigo
         And T02.ISOMrc_Codigo = T01.ISOMrc_Codigo
       Inner Join ISOENTIDADE T03
          On T03.ISOEnt_Codigo = T02.ISOEntFab_Codigo

Union All

Select T01.ISOPrd_Codigo                         as VW91_CodProduto,
       T01.ISOPrd_Descricao                      as VW91_DescProduto,
	   'Classificação'                           as VW91_Campo,
	   RTrim(T02.ISOPrdCls_Descricao)            as VW91_Dado
  From ISOPRODUTO T01
       Inner Join ISOPRDCLASSIFICACAO T02
          On T02.ISOEmp_Codigo    = T01.ISOEmp_Codigo
         And T02.ISOPrdCls_Codigo = T01.ISOPrdCls_Codigo

Union All

Select T01.ISOPrd_Codigo                         as VW91_CodProduto,
       T01.ISOPrd_Descricao                      as VW91_DescProduto,
	   'Tipo'                                    as VW91_Campo,
	   RTrim(T02.ISOPrdTip_Descricao)            as VW91_Dado
  From ISOPRODUTO T01
       Inner Join ISOPrdTipo T02
          On T02.ISOEmp_Codigo    = T01.ISOEmp_Codigo
         And T02.ISOPrdTip_Codigo = T01.ISOPrdTip_Codigo;


-- ConexaoISO.VW92A_CliDadosPed source

CREATE VIEW VW92A_CliDadosPed As
-- Dias da última compra
Select T01.ISOEmp_Codigo               as VW92A_CodEmpresa,
       T01.ISOPvPed_CliCodigo          as VW92A_CodCliente,
       RTrim(T03.ISOEnt_Nome)          as VW92A_NomeCliente,
       Min(T01.ISOPvPed_DtaPedido)     as VW92A_DtaPriPedido,
       Max(T01.ISOPvPed_DtaPedido)     as VW92A_DtaUltPedido,
       Count(*)                        as VW92A_QtdePedidos,
       DateDiff(DAY, Max(T01.ISOPvPed_DtaPedido), GetDate())
                                       as VW92A_DiasUltPedido,
       (DateDiff(DAY, Min(T01.ISOPvPed_DtaPedido), Max(T01.ISOPvPed_DtaPedido)) / COUNT(*))
                                       as VW92A_DiasFreqCompra,
       Sum(T01.ISOPvPed_ValorTotalPedido) / COUNT(*)
                                       as VW92A_VlrTicketMedio
  From ISOPVPEDIDO T01
       Inner Join ISOPVPEDSITUACAO T02
          On T02.ISOEmp_Codigo      = T01.ISOEmp_Codigo
         And T02.ISOPvPedSit_Codigo = T01.ISOPvPedSit_Codigo
       Inner Join ISOENTIDADE T03
          On T03.ISOEnt_Codigo      = T01.ISOPvPed_CliCodigo
 Where T02.ISOPvPedSit_Situacao <> 9
 Group by T01.ISOEmp_Codigo, T01.ISOPvPed_CliCodigo, T03.ISOEnt_Nome;


-- ConexaoISO.VW92B_CliDadosAtend source

CREATE VIEW VW92B_CliDadosAtend As
-- Qtde de atendimentos
Select T01.ISOEmp_Codigo                    as VW92B_CodEmpresa,
       T01.ISOSAAte_EntCodigo               as VW92B_CodCliente,
       RTrim(T03.ISOEnt_Nome)               as VW92B_NomeCliente,
       COUNT(*)                             as VW92B_QtdeAtendimentos
  From ISOSAATENDIMENTO T01
       Inner Join ISOSASITUACAO T02
          On T02.ISOEmp_Codigo     = T01.ISOEmp_Codigo
         And T02.ISOSASit_Codigo   = T01.ISOSASit_Codigo
       Inner Join ISOENTIDADE T03
          On T03.ISOEnt_Codigo     = T01.ISOSAAte_EntCodigo
 Where T02.ISOSASit_Situacao = 9
 Group by T01.ISOEmp_Codigo, T01.ISOSAAte_EntCodigo, T03.ISOEnt_Nome;


-- ConexaoISO.VW92C_CliDadosAtendB source

CREATE VIEW VW92C_CliDadosAtendB as
-- Qtde de atendimentos abertos
Select T01.ISOEmp_Codigo                    as VW92C_CodEmpresa,
       T01.ISOSAAte_EntCodigo               as VW92C_CodCliente,
       RTrim(T03.ISOEnt_Nome)               as VW92C_NomeCliente,
       COUNT(*)                             as VW92C_QtdeAtendAbertos
  From ISOSAATENDIMENTO T01
       Inner Join ISOSASITUACAO T02
          On T02.ISOEmp_Codigo     = T01.ISOEmp_Codigo
         And T02.ISOSASit_Codigo   = T01.ISOSASit_Codigo
         And T02.ISOSASit_Situacao = 1
       Inner Join ISOENTIDADE T03
          On T03.ISOEnt_Codigo     = T01.ISOSAAte_EntCodigo
 Group by T01.ISOEmp_Codigo, T01.ISOSAAte_EntCodigo, T03.ISOEnt_Nome;


-- ConexaoISO.VW92D_CliDadosCmp source

CREATE VIEW VW92D_CliDadosCmp As
-- Qtde campanhas participante
Select T01.ISOEmp_Codigo                    as VW92D_CodEmpresa,
       T01.ISOMkAteCmpCnt_EntCodigo         as VW92D_CodCliente,
       RTRIM(T03.ISOEnt_Nome)               as VW92D_NomeCliente,
       COUNT(*)                             as VW92D_QtdeCampPart
  From ISOMKATECMPCONTATO T01
       Inner Join ISOMKATECAMPANHA T02
          On T02.ISOEmp_Codigo        = T01.ISOEmp_Codigo
         And T02.ISOMkAteCmp_Codigo   = T01.ISOMkAteCmp_Codigo
         And (T02.ISOMKAteCmp_DataFim > GETDATE() Or T02.ISOMKAteCmp_DataFim Is null Or T02.ISOMKAteCmp_DataFim = '1753-01-01')
       Inner Join ISOENTIDADE T03
          ON T03.ISOEnt_Codigo        = T01.ISOMkAteCmpCnt_EntCodigo
 Group By T01.ISOEmp_Codigo, T01.ISOMkAteCmpCnt_EntCodigo, T03.ISOEnt_Nome;


-- ConexaoISO.VW92E_CliDadosContato source

CREATE VIEW VW92E_CliDadosContato As
-- Data último contato
Select VW49_ISOEmp_Codigo                   as VW92E_CodEmpresa,
       VW49_CodCliResp                      as VW92E_CodCliente,
       VW49_Desc1                           as VW92E_NomeCliente,
       MAX(VW49_DataAlteracao)              as VW92E_DtaUltContato
  From VW49_Timeline T01
 Where VW49_Tipo <> 'CLIENTE'
   And VW49_Tipo <> 'TAREFAS'
 Group By T01.VW49_ISOEmp_Codigo, T01.VW49_CodCliResp, T01.VW49_Desc1;


-- ConexaoISO.VW92F_Duplicatas source

CREATE VIEW VW92F_Duplicatas as
Select T01.ISOEmp_Codigo                    as VW92F_CodEmpresa,
       T01.ISOEntCli_Codigo                 as VW92F_CodCliente,
	   T03.ISOEnt_Nome                      as VW92F_NomCliente,
	   T01.ISOEntCliNF_Numero               as VW92F_NFNumero,
	   T01.ISOEntCliNF_RefFiscal            as VW92F_RefFiscal,
	   T01.ISOEntCliNF_Serie                as VW92F_NumSerie,
	   T01.ISOEntCliNF_Status               as VW92F_DscStatus,
	   T02.ISOEntCliDup_Numero              as   VW92F_NumDuplicata,
	   T02.ISOEntCliDup_Sequencia           as VW92F_NumSequencia,
	   T02.ISOEntCliNFItem_Dup_DataVencim   as VW92F_DtaVencimento,
	   T02.ISOEntCliNFItem_Dup_Valor        as VW92F_DupValor,
       T04.ISOEntCli_LimiteCredito          as VW92F_VlrLimiteCredito,
	   T04.ISOEntCli_LimiteCreditoDisp      as VW92F_VlrLimiteCreditoDsp,
	   T06.ISOEnt_Nome                      as VW92F_NomRepresentante,
	   T05.ISOEntRsp_Codigo                 as VW92F_CodRepresentante,
--	   0 as VW92F_TotValor,
       (Select Sum(TA1.ISOEntCliNFItem_Dup_Valor)
	      From ISOENTCLINOTAFISCALITEM_DUP TA1
		 Where TA1.ISOEmp_Codigo                 = T02.ISOEmp_Codigo
		   And TA1.ISOEntCliNFItem_Dup_Numero    = T02.ISOEntCliNFItem_Dup_Numero
		   And TA1.ISOEntCliNFItem_Dup_RefFiscal = T02.ISOEntCliNFItem_Dup_RefFiscal
		   And TA1.ISOEntCliNFItem_Dup_Serie     = T02.ISOEntCliNFItem_Dup_Serie)
		                                    as VW92F_TotValor,
       T07.ISOEntCliDupSit_Codigo           as VW92F_CodSituacaoDup,
	   T08.ISOEntCliDupSit_Descricao        as VW92F_DscSituacaoDup,
	   T08.ISOEntCliDupSit_Situacao         as VW92F_SitSituacaoDup,
	   T02.ISOEntCliNFItem_Dup_DataPagame   as VW92F_DtaPagamento
  From ISOEntCliNotaFiscal T01
       Inner Join ISOENTCLINOTAFISCALITEM_DUP T02
	      On T02.ISOEmp_Codigo                 = T01.ISOEmp_Codigo
		 And T02.ISOEntCliNFItem_Dup_Numero    = T01.ISOEntCliNF_Numero
		 ANd T02.ISOEntCliNFItem_Dup_RefFiscal = T01.ISOEntCliNF_RefFiscal
		 And T02.ISOEntCliNFItem_Dup_Serie     = T01.ISOEntCliNF_Serie
       Inner Join ISOEntidade T03
	      On T03.ISOEnt_Codigo                 = T01.ISOEntCli_Codigo
	   Inner Join ISOEntCliente T04
	      On T04.ISOEmp_Codigo                 = T01.ISOEmp_Codigo
		 And T04.ISOEntCli_Codigo              = T01.ISOEntCli_Codigo
        Left Join ISOENTRSP_CLIENTES T05
	      On T05.ISOEmp_Codigo                 = T04.ISOEmp_Codigo
         And T05.ISOEntCli_Codigo              = T04.ISOEntCli_Codigo
        Left Join ISOEntidade T06
		  On T06.ISOEnt_Codigo                 = T05.ISOEntRsp_Codigo
       Inner Join ISOENTCLIDUPLICATAS T07
	      On T07.ISOEmp_Codigo                 = T02.ISOEmp_Codigo
         And T07.ISOEntCliDup_Numero           = T02.ISOEntCliDup_Numero
		 And T07.ISOEntCliDup_Sequencia        = T02.ISOEntCliDup_Sequencia
		 And T07.ISOEntCli_Codigo              = T01.ISOEntCli_Codigo
       Inner Join ISOENTCLIDUPSITUACAO T08
	      On T08.ISOEmp_Codigo                 = T07.ISOEmp_Codigo
		 And T08.ISOEntCliDupSit_Codigo        = T07.ISOEntCliDupSit_Codigo;


-- ConexaoISO.VW93_ClienteValidaDCObrigatorio source

CREATE VIEW VW93_ClienteValidaDCObrigatorio as

Select T03.VW93B_Empresa                         as VW93_Empresa,
	   T01.VW93A_CodCliente                      as VW93_CodCliente,
       T01.VW93A_CodFormulario                   as VW93_CodFormulario,
       T01.VW93A_DescFormulario                  as VW93_DescFormulario,
       T01.VW93A_CodDadoCompl                    as VW93_CodDadoCompl,
       T01.VW93A_DescDadoCompl                   as VW93_DescDadoCompl,
       Case
            When T03.VW93B_DescDadoCompl Is Null Then 'NOK'
			Else 'OK'
       End                                       as VW93_DCSituacao,
       T01.VW93A_DCCliObrig                      as VW93_DCCliObrig,
       Case
            When T03.VW93B_DescDadoCompl Is Null Then RTrim(T01.VW93A_DescDadoCompl) + ' nï¿½o respondido.'
			Else ''
       End                                       as VW93_Mensagem,
       Case
            When T03.VW93B_DescDadoCompl Is Null Then 1
			Else 0
       End                                       as VW93_Erro
  From VW93A_ClienteValidaDCObrig T01
         Left Join VW93B_ClienteValidaDCObrig T03
           On T03.VW93B_CodDadoCompl = T01.VW93A_CodDadoCompl
          And T03.VW93B_CodCliente    = T01.VW93A_CodCliente
		  AND T03.VW93B_Empresa      = T01.VW93A_Empresa
 Where T01.VW93A_DCCliObrig = 'S';


-- ConexaoISO.VW95A_CadUsuario source

CREATE VIEW VW95A_CadUsuario as
Select T01.ISOEmp_Codigo                         as VW95A_CodEmpresa,
       T01.ISOEntUsu_Codigo                      as VW95A_CodigoUsuario,
       T02.ISOEntPes_NomeCompleto                as VW95A_NomeUsuario,
       T02.ISOEntPes_CPF                         as VW95A_CPFUsuario
  From ISOENTUSUARIO T01
       Inner Join ISOENTPESSOA T02
          On T02.ISOEntPes_Codigo = T01.ISOEntUsu_Codigo;


-- ConexaoISO.VW95B_ClientesUsuario source

CREATE VIEW VW95B_ClientesUsuario as
Select T01.ISOEmp_Codigo                                as VW95B_CodEmpresa,
       T02.ISOEntRsp_Codigo                             as VW95B_CodUsuario,
       DatePart(Year, T02.ISOEntRsp_Cli_DataAlteracao)  as VW95B_AnoCliente,
       DatePart(Month, T02.ISOEntRsp_Cli_DataAlteracao) as VW95B_MesCliente,
       T01.ISOEntCli_Flag                               as VW95B_CliAtivo,
       COUNT(*)                                         as VW95B_QtdeClientes
  From VW95A_CadUsuario T00
        Left Join ISOENTCLIENTE T01
          On T01.ISOEmp_Codigo    = T00.VW95A_CodEmpresa
       Inner Join ISOENTRSP_CLIENTES T02
          ON T02.ISOEmp_Codigo    = T01.ISOEmp_Codigo
         And T02.ISOEntCli_Codigo = T01.ISOEntCli_Codigo
         And T02.ISOEntRsp_Codigo = T00.VW95A_CodigoUsuario
 Group BY T01.ISOEmp_Codigo, T02.ISOEntRsp_Codigo,
       DatePart(Year, T02.ISOEntRsp_Cli_DataAlteracao),
       DatePart(MONTH, T02.ISOEntRsp_Cli_DataAlteracao),
       T01.ISOEntCli_Flag;


-- ConexaoISO.VW95C1_TarefasUsuario source

CREATE VIEW VW95C1_TarefasUsuario as
--Select T01.VW95C2_CodEmpresa                     as VW95C1_CodEmpresa,
--       T01.VW95C2_CodRespTrf                     as VW95C1_CodRespTrf,
--       T01.VW95C2_AnoSolucaoTrf                  as VW95C1_AnoSolucaoTrf,
--       T01.VW95C2_MesSolucaoTrf                  as VW95C1_MesSolucaoTrf,
--       Sum(T01.VW95C2_Qtde)                      as VW95C1_Qtde,
--       0                                         as VW95C1_TempoMedio,
--       1                                         as VW95C1_Origem
--  From VW95C2_TarefasAbUsuario T01
-- Group by T01.VW95C2_CodEmpresa, T01.VW95C2_CodRespTrf, T01.VW95C2_AnoSolucaoTrf, T01.VW95C2_MesSolucaoTrf

--Union All

Select T01.ISOEmp_Codigo                         as VW95C1_CodEmpresa,
       T01.ISOWFTrf_RspExe_RspCodigo             as VW95C1_CodRespTrf,
       Case DatePart(Year,T01.ISOWFTrf_DataSolucao)
            When 1753 Then null
            Else DATEPART(Year, T01.ISOWFTrf_DataSolucao)
       End                                       as VW95C1_AnoSolucaoTrf,
       Case DATEPART(YEAR, T01.ISOWFTrf_DataSolucao)
            When 1753 Then Null
            Else
                 DatePart(Month,T01.ISOWFTrf_DataSolucao)
       End                                       as VW95C1_MesSolucaoTrf,
--       COUNT(*)                                  as VW95C1_Qtde,
--       Avg(DATEDIFF(hour, T01.ISOWFTrf_DataRecebimento, T01.ISOWFTrf_DataSolucao))
       1                                         as VW95C1_Qtde,
       DATEDIFF(hour, T01.ISOWFTrf_DataRecebimento, T01.ISOWFTrf_DataSolucao)
                                                 as VW95C1_TempoMedio,
       2                                         as VW95C1_Origem

  From ISOWFTAREFA T01
 Where T01.ISOWFTrf_DataSolucao Is Not Null
   And T01.ISOWFTrf_DataSolucao <> '1753-01-01'
   And T01.ISOWFTrf_RspExe_RspCodigo Is Not Null
   And T01.ISOWFTrf_Automatica = 0
-- Group by T01.ISOEmp_Codigo, T01.ISOWFTrf_RspExe_RspCodigo, Year(T01.ISOWFTrf_DataSolucao), Month(T01.ISOWFTrf_DataSolucao);


-- ConexaoISO.VW95C2_TarefasAbUsuario source

CREATE VIEW VW95C2_TarefasAbUsuario as
Select T01.ISOEmp_Codigo                         as VW95C2_CodEmpresa,
       Case
            When T01.ISOWFTrf_RspRes_RspCodigo Is Null Then T01.ISOWFTrf_RspCodigo
            Else T01.ISOWFTrf_RspRes_RspCodigo
       End                                       as VW95C2_CodRespTrf,
       Case DatePart(Year,T01.ISOWFTrf_DataSolucao)
            When 1753 Then null
            Else DATEPART(Year, T01.ISOWFTrf_DataSolucao)
       End                                       as VW95C2_AnoSolucaoTrf,
       Case DATEPART(YEAR, T01.ISOWFTrf_DataSolucao)
            When 1753 Then Null
            Else
                 DatePart(Month,T01.ISOWFTrf_DataSolucao)
       End                                       as VW95C2_MesSolucaoTrf,
--       COUNT(*)                                  as VW95C2_Qtde,
       1                                         as VW95C2_Qtde,
       0                                         as VW95C2_TempoMedio,
       1                                         as VW95C2_Origem
  From ISOWFTAREFA T01
 Where (T01.ISOWFTrf_DataSolucao Is Null Or T01.ISOWFTrf_DataSolucao = '1753-01-01')
   And T01.ISOWFTrf_SitInterna = 'Enc'
   And T01.ISOWFTrf_Automatica = 0
-- Group by T01.ISOEmp_Codigo, T01.ISOWFTrf_RspCodigo, T01.ISOWFTrf_RspRes_RspCodigo, Year(T01.ISOWFTrf_DataSolucao), Month(T01.ISOWFTrf_DataSolucao);


-- ConexaoISO.VW95D1_PedUsuario source

CREATE VIEW VW95D1_PedUsuario as
Select T01.VW95A_CodEmpresa as VW95D1_CodEmpresa,
	T01.VW95A_CodigoUsuario as
	VW95D1_CodUsuPedido,
	RTrim(T01.VW95A_NomeUsuario) as VW95D1_NomeUsuario,
	T01.VW95A_CPFUsuario as VW95D1_CPFUsuario,
	T02.ISOPvPed_Codigo as VW95D1_CodPedido,
	DATEPART(Year, T02.ISOPvPed_DtaAberPedido) as VW95D1_AnoPedido,
	DATEPART(MONTH, T02.ISOPvPed_DtaAberPedido) as VW95D1_MesPedido,
	Case T03.ISOPvPedSit_Situacao
	When 6 Then 'Faturado'
	When 7 Then 'Faturado'
	When 8 Then 'Cotação'
	When 9 Then 'Cancelado'
	End as
	VW95D1_DscSitPedido,
	1 as VW95D1_Qtde,
	T02.ISOPVPed_ValorTotalPedido as VW95D1_VlrTotal,
	T02.ISOPVPed_ValorTotalPedido as VW95D1_TicketMedio,
	T02.ISOPVPed_CliCodigo as VW95D1_Clientes
From VW95A_CadUsuario T01
	Left Join ISOPVPEDIDO T02
	On T02.ISOEmp_Codigo = T01.VW95A_CodEmpresa
	And T02.ISOPvPed_CodVendedorCD = T01.VW95A_CodigoUsuario
	Inner Join ISOPVPEDSITUACAO T03
	On T03.ISOEmp_Codigo = T02.ISOEmp_Codigo
	And T03.ISOPvPedSit_Codigo = T02.ISOPvPedSit_Codigo
	And T03.ISOPvPedSit_Situacao In (6, 7, 8, 9);


-- ConexaoISO.VW95D_PedUsuario source

CREATE VIEW VW95D_PedUsuario as
Select T01.VW95A_CodEmpresa                                       as VW95D_CodEmpresa,
       T01.VW95A_CodigoUsuario                                    as VW95D_CodUsuPedido,
       T01.VW95A_NomeUsuario                                      as VW95D_NomeUsuario,
       T01.VW95A_CPFUsuario                                       as VW95D_CPFUsuario,
       DATEPART(Year, T02.ISOPvPed_DtaAberPedido)                 as VW95D_AnoPedido,
       DATEPART(MONTH, T02.ISOPvPed_DtaAberPedido)                as VW95D_MesPedido,

       Cast(COUNT(T03.VW95D1_Qtde) as decimal(18,6))              as VW95D_QtdeCanc,
       Case
            When Cast(Sum(T03.VW95D1_VlrTotal) as decimal(18,6)) Is Null Then 0
            Else Cast(Sum(T03.VW95D1_VlrTotal) as decimal(18,6))
       End                                                        as VW95D_VlrTotalCanc,
--       Avg(T03.VW95D1_TicketMedio)                    as VW95D_TicketMedioCanc,
--       Count(Distinct T03.VW95D1_Clientes)            as VW95D_ClientesCanc,

       Cast(COUNT(T04.VW95D1_Qtde) as decimal(18,6))              as VW95D_QtdeCot,
       Case
            When Cast(Sum(T04.VW95D1_VlrTotal) as decimal(18,6)) Is Null Then 0
            Else Cast(Sum(T04.VW95D1_VlrTotal) as decimal(18,6))
       End                                                        as VW95D_VlrTotalCot,
--       Avg(T04.VW95D1_TicketMedio)                    as VW95D_TicketMedioCot,
--       Count(Distinct T04.VW95D1_Clientes)            as VW95D_ClientesCot,

       Cast(COUNT(T05.VW95D1_Qtde) as decimal(18,6))              as VW95D_QtdeFat,
       Case
           When Cast(Sum(T05.VW95D1_VlrTotal) as decimal(18,6)) is null Then 0
           Else Cast(Sum(T05.VW95D1_VlrTotal) as decimal(18,6))
       End                                                        as VW95D_VlrTotalFat,
       Case
            When Cast(Avg(T05.VW95D1_TicketMedio) as decimal(18,6)) Is Null then 0
            Else Cast(Avg(T05.VW95D1_TicketMedio) as decimal(18,6))
       End                                                        as VW95D_TicketMedioFat,
       Cast(Count(Distinct T05.VW95D1_Clientes) as decimal(18,6)) as VW95D_ClientesFat

  From VW95A_CadUsuario T01
       Inner Join ISOPVPEDIDO T02
          On T02.ISOEmp_Codigo          = T01.VW95A_CodEmpresa
         And T02.ISOPvPed_CodVendedorCD = T01.VW95A_CodigoUsuario
        Left Join VW95D1_PedUsuario T03 -- Pedido Cancelado
          On T03.VW95D1_CodEmpresa      = T02.ISOEmp_Codigo
         And T03.VW95D1_CodPedido       = T02.ISOPvPed_Codigo
         And T03.VW95D1_CodUsuPedido    = T02.ISOPvPed_CodVendedorCD
         And T03.VW95D1_DscSitPedido    = 'Cancelado'
        Left Join VW95D1_PedUsuario T04 -- Pedido Cotação
          On T04.VW95D1_CodEmpresa      = T02.ISOEmp_Codigo
         And T04.VW95D1_CodPedido       = T02.ISOPvPed_Codigo
         And T04.VW95D1_CodUsuPedido    = T02.ISOPvPed_CodVendedorCD
         And T04.VW95D1_DscSitPedido    = 'Cotação'
        Left Join VW95D1_PedUsuario T05 -- Pedido Faturado
          On T05.VW95D1_CodEmpresa      = T02.ISOEmp_Codigo
         And T05.VW95D1_CodPedido       = T02.ISOPvPed_Codigo
         And T05.VW95D1_CodUsuPedido    = T02.ISOPvPed_CodVendedorCD
         And T05.VW95D1_DscSitPedido    = 'Faturado'
 Group BY T01.VW95A_CodEmpresa,
          T01.VW95A_CodigoUsuario,
          T01.VW95A_NomeUsuario,
          T01.VW95A_CPFUsuario,
          DATEPART(Year, T02.ISOPvPed_DtaAberPedido),
          DATEPART(MONTH, T02.ISOPvPed_DtaAberPedido);


-- ConexaoISO.VW95F1_CmpUsuario source

CREATE VIEW VW95F1_CmpUsuario as
Select T01.ISOEmp_Codigo                                   as VW95F1_CodEmpresa,
       T01.ISOMkAteCmp_Codigo                              as VW95F1_CodCamp,
       T02.ISOMkAteCmpCnt_Sequencia                        as VW95F1_SeqCmpCnt,
       T03.ISOMkAteCmpCntDet_Sequencia                     as VW95F1_SeqCmpCntDet,
       T03.ISOMkAteCmpCntDet_CodigoAgente                  as VW95F1_CodUsuCmp,
       T04.VW95A_NomeUsuario                               as VW95F1_NomeUsuario,
       T04.VW95A_CPFUsuario                                as VW95F1_CPFUsuario,
       DatePart(Year,  T03.ISOMkAteCmpCntDet_DataAlteraca) as VW95F1_AnoContato,
       DATEPART(MONTH, T03.ISOMkAteCmpCntDet_DataAlteraca) as VW95F1_MesContato,
       'Concluído'                                         as VW95F1_SitContato,
       1                                                   as VW95F1_QtdeContato
  From ISOMKATECAMPANHA T01
       Inner Join ISOMKATECMPCONTATO T02
          On T02.ISOEmp_Codigo               = T01.ISOEmp_Codigo
         And T02.ISOMkAteCmp_Codigo          = T01.ISOMkAteCmp_Codigo
       Inner Join ISOMKATECMPCNTDETALHE T03
          On T03.ISOEmp_Codigo               = T02.ISOEmp_Codigo
         And T03.ISOMkAteCmp_Codigo          = T02.ISOMkAteCmp_Codigo
         And T03.ISOMkAteCmpCnt_Sequencia    = T02.ISOMkAteCmpCnt_Sequencia
         And T03.ISOMkAteCmpCntDet_Sequencia = (Select MAX(T03A.ISOMKAteCmpCntDet_Sequencia)
                                                  From ISOMKATECMPCNTDETALHE T03A
                                                 Where T03A.ISOEmp_Codigo            = T03.ISOEmp_Codigo
                                                   And T03A.ISOMkAteCmp_Codigo       = T03.ISOMkAteCmp_Codigo
                                                   And T03A.ISOMkAteCmpCnt_Sequencia = T03.ISOMkAteCmpCnt_Sequencia)
        Left Join VW95A_CadUsuario T04
          On T04.VW95A_CodEmpresa            = T03.ISOEmp_Codigo
         And T04.VW95A_CodigoUsuario         = T03.ISOMkAteCmpCntDet_CodigoAgente
 Where T02.ISOMkAteCmpCnt_Encerrado = 1
 --Group By T01.ISOEmp_Codigo,
 --         T03.ISOMkAteCmpCntDet_CodigoAgente,
 --         T04.VW95A_NomeUsuario,
 --         T04.VW95A_CPFUsuario,
 --         T02.ISOMkAteCmpCnt_Encerrado,
 --         DatePart(Year,  T03.ISOMkAteCmpCntDet_DataAlteraca),
 --         DATEPART(MONTH, T03.ISOMkAteCmpCntDet_DataAlteraca)

Union All

Select T01.ISOEmp_Codigo                                   as VW95F1_CodEmpresa,
       T01.ISOMkAteCmp_Codigo                              as VW95F1_CodCamp,
       T02.ISOMkAteCmpCnt_Sequencia                        as VW95F1_SeqCmpCnt,
       T03.ISOMkAteCmpCntDet_Sequencia                     as VW95F1_SeqCmpCntDet,
       T03.ISOMkAteCmpCntDet_CodigoAgente                  as VW95F1_CodUsuCmp,
       T04.VW95A_NomeUsuario                               as VW95F1_NomeUsuario,
       T04.VW95A_CPFUsuario                                as VW95F1_CPFUsuario,
       DatePart(Year,  T03.ISOMkAteCmpCntDet_DataAlteraca) as VW95F1_AnoContato,
       DATEPART(MONTH, T03.ISOMkAteCmpCntDet_DataAlteraca) as VW95F1_MesContato,
       'Aberto'                                            as VW95F1_SitContato,
       1                                                   as VW95F1_QtdeContato
  From ISOMKATECAMPANHA T01
       Inner Join ISOMKATECMPCONTATO T02
          On T02.ISOEmp_Codigo               = T01.ISOEmp_Codigo
         And T02.ISOMkAteCmp_Codigo          = T01.ISOMkAteCmp_Codigo
       Inner Join ISOMKATECMPCNTDETALHE T03
          On T03.ISOEmp_Codigo               = T02.ISOEmp_Codigo
         And T03.ISOMkAteCmp_Codigo          = T02.ISOMkAteCmp_Codigo
         And T03.ISOMkAteCmpCnt_Sequencia    = T02.ISOMkAteCmpCnt_Sequencia
         And T03.ISOMkAteCmpCntDet_Sequencia = (Select MAX(T03A.ISOMKAteCmpCntDet_Sequencia)
                                                  From ISOMKATECMPCNTDETALHE T03A
                                                 Where T03A.ISOEmp_Codigo            = T03.ISOEmp_Codigo
                                                   And T03A.ISOMkAteCmp_Codigo       = T03.ISOMkAteCmp_Codigo
                                                   And T03A.ISOMkAteCmpCnt_Sequencia = T03.ISOMkAteCmpCnt_Sequencia)
        Left Join VW95A_CadUsuario T04
          On T04.VW95A_CodEmpresa            = T03.ISOEmp_Codigo
         And T04.VW95A_CodigoUsuario         = T03.ISOMkAteCmpCntDet_CodigoAgente
 Where T02.ISOMkAteCmpCnt_Encerrado = 0;


-- ConexaoISO.VW95F_CmpUsuario source

CREATE VIEW VW95F_CmpUsuario as
Select T01.ISOEmp_Codigo                         as VW95F_CodEmpresa,
       T01.ISOMkAteCmpCntDet_CodigoAgente        as VW95F_CodUsuCmp,
       T03.VW95F1_CPFUsuario                     as VW95F_CPFUsuario,
       RTrim(T03.VW95F1_NomeUsuario)             as VW95F_NomeUsuario,
       T03.VW95F1_AnoContato                     as VW95F_AnoContato,
       T03.VW95F1_MesContato                     as VW95F_MesContato,

       COUNT(T03.VW95F1_QtdeContato)             as VW95F_QtdeConcluido,
       Count(Distinct T03.VW95F1_CodCamp)        as VW95F_QtdeCmpCon,
       COUNT(T04.VW95F1_QtdeContato)             as VW95F_QtdeAberto,
       Count(Distinct T04.VW95F1_CodCamp)        as VW95F_QtdeCmpAbe
  From ISOMKATECMPCNTDETALHE T01
       Inner Join ISOMKATECMPCONTATO T02
          On T02.ISOEmp_Codigo            = T01.ISOEmp_Codigo
         And T02.ISOMkAteCmp_Codigo       = T01.ISOMkAteCmp_Codigo
         And T02.ISOMkAteCmpCnt_Sequencia = T01.ISOMkAteCmpCnt_Sequencia
        Left Join VW95F1_CmpUsuario T03 -- Concluídos
          On T03.VW95F1_CodEmpresa        = T01.ISOEmp_Codigo
         And T03.VW95F1_CodCamp           = T01.ISOMkAteCmp_Codigo
         And T03.VW95F1_SeqCmpCnt         = T01.ISOMkAteCmpCnt_Sequencia
         And T03.VW95F1_SeqCmpCntDet      = T01.ISOMkAteCmpCntDet_Sequencia
         And T03.VW95F1_SitContato        = 'Concluído'
        Left Join VW95F1_CmpUsuario T04 -- Concluídos
          On T04.VW95F1_CodEmpresa        = T01.ISOEmp_Codigo
         And T04.VW95F1_CodCamp           = T01.ISOMkAteCmp_Codigo
         And T04.VW95F1_SeqCmpCnt         = T01.ISOMkAteCmpCnt_Sequencia
         And T04.VW95F1_SeqCmpCntDet      = T01.ISOMkAteCmpCntDet_Sequencia
         And T04.VW95F1_SitContato        = 'Aberto'
 Where T01.ISOMkAteCmpCntDet_Sequencia = (Select MAX(T01A.ISOMKAteCmpCntDet_Sequencia)
                                            From ISOMKATECMPCNTDETALHE T01A
                                           Where T01A.ISOEmp_Codigo            = T01.ISOEmp_Codigo
                                             And T01A.ISOMkAteCmp_Codigo       = T01.ISOMkAteCmp_Codigo
                                             And T01A.ISOMkAteCmpCnt_Sequencia = T01.ISOMkAteCmpCnt_Sequencia)
 Group by T01.ISOEmp_Codigo,
       T01.ISOMkAteCmpCntDet_CodigoAgente,
       T03.VW95F1_CPFUsuario,
       RTrim(T03.VW95F1_NomeUsuario),
       T03.VW95F1_AnoContato,
       T03.VW95F1_MesContato

/*
Select T01.ISOEmp_Codigo                                   as VW95F_CodEmpresa,
       T03.ISOMkAteCmpCntDet_CodigoAgente                  as VW95F_CodUsuCmp,
       T04.VW95A_NomeUsuario                               as VW95F_NomeUsuario,
       T04.VW95A_CPFUsuario                                as VW95F_CPFUsuario,
       DatePart(Year,  T03.ISOMkAteCmpCntDet_DataAlteraca) as VW95F_AnoContato,
       DATEPART(MONTH, T03.ISOMkAteCmpCntDet_DataAlteraca) as VW95F_MesContato,
       Case T02.ISOMkAteCmpCnt_Encerrado
             When 1 Then 'Concluído'
             Else 'Aberto'
       End                                                 as VW95F_SitContato,
       COUNT(Distinct T02.ISOMkAteCmpCnt_EntCodigo)        as VW95F_QtdeContato
  From ISOMKATECAMPANHA T01
       Inner Join ISOMKATECMPCONTATO T02
          On T02.ISOEmp_Codigo               = T01.ISOEmp_Codigo
         And T02.ISOMkAteCmp_Codigo          = T01.ISOMkAteCmp_Codigo
       Inner Join ISOMKATECMPCNTDETALHE T03
          On T03.ISOEmp_Codigo               = T02.ISOEmp_Codigo
         And T03.ISOMkAteCmp_Codigo          = T02.ISOMkAteCmp_Codigo
         And T03.ISOMkAteCmpCnt_Sequencia    = T02.ISOMkAteCmpCnt_Sequencia
         And T03.ISOMkAteCmpCntDet_Sequencia = (Select MAX(T03A.ISOMKAteCmpCntDet_Sequencia)
                                                  From ISOMKATECMPCNTDETALHE T03A
                                                 Where T03A.ISOEmp_Codigo            = T03.ISOEmp_Codigo
                                                   And T03A.ISOMkAteCmp_Codigo       = T03.ISOMkAteCmp_Codigo
                                                   And T03A.ISOMkAteCmpCnt_Sequencia = T03.ISOMkAteCmpCnt_Sequencia)
        Left Join VW95A_CadUsuario T04
          On T04.VW95A_CodEmpresa            = T03.ISOEmp_Codigo
         And T04.VW95A_CodigoUsuario         = T03.ISOMkAteCmpCntDet_CodigoAgente
 Group By T01.ISOEmp_Codigo,
          T03.ISOMkAteCmpCntDet_CodigoAgente,
          T04.VW95A_NomeUsuario,
          T04.VW95A_CPFUsuario,
          T02.ISOMkAteCmpCnt_Encerrado,
          DatePart(Year,  T03.ISOMkAteCmpCntDet_DataAlteraca),
          DATEPART(MONTH, T03.ISOMkAteCmpCntDet_DataAlteraca)
*/;


-- ConexaoISO.VW95GHIJ_AtendUsuario source

CREATE VIEW VW95GHIJ_AtendUsuario as
Select T01.VW95GHIJ_CodEmpresa                   as VW95GHIJ_CodEmpresa,
       T01.VW95GHIJ_CodUsuario                   as VW95GHIJ_CodUsuario,
       RTrim(T01.VW95GHIJ_NomeUsuario)           as VW95GHIJ_NomeUsuario,
       T01.VW95GHIJ_CPFUsuario                   as VW95GHIJ_CPFUsuario,
       T01.VW95GHIJ_Ano                          as VW95GHIJ_AnoAtend,
       T01.VW95GHIJ_Mes                          as VW95GHIJ_Mes,
       T02.VW95G_QtdeAtend                       as VW95GHIJ_QtdeAtendAberto,
       T03.VW95G_QtdeAtend                       as VW95GHIJ_QtdeAtendEncerrado,
       Case
            When T03.VW95G_TempoMedioAtend < 0 Then 0
            Else T03.VW95G_TempoMedioAtend
       end                                       as VW95GHIJ_TempoMedioAtend,
       T04.VW95H_QtdeChat                        as VW95GHIJ_QtdeChatAtend,
       T05.VW95I_QtdeEmlAtend                    as VW95GHIJ_QtdeEmlAtend,
       T06.VW95J_QtdeAtendCat                    as VW95GHIJ_QtdeCatAtend
  From (
        Select Distinct
               VW95G_CodEmpresa                as VW95GHIJ_CodEmpresa,
               VW95G_CodUsuAte                 as VW95GHIJ_CodUsuario,
               VW95G_NomeUsuario               as VW95GHIJ_NomeUsuario,
               VW95G_CPFUsuario                as VW95GHIJ_CPFUsuario,
               VW95G_AnoAtend                  as VW95GHIJ_Ano,
               VW95G_MesAtend                  as VW95GHIJ_Mes
          From VW95G_AtendUsuario

        Union

        Select Distinct
               VW95H_CodEmpresa,
               VW95H_CodUsuChat,
               VW95H_NomeUsuario,
               VW95H_CPFUsuario,
               VW95H_AnoChat,
               VW95H_MesChat
          From VW95H_ChatUsuario

        Union

        Select Distinct
               VW95I_CodEmpresa,
               VW95I_CodUsuEml,
               VW95I_NomeUsuario,
               VW95I_CPFUsuario,
               VW95I_AnoEmlAtend,
               VW95I_MesEmlAtend
          From VW95I_EmlEntUsuario

        Union

        Select Distinct
               VW95J_CodEmpresa,
               VW95J_CodUsuCat,
               VW95J_NomeUsuario,
               VW95J_CPFUsuario,
               VW95J_AnoAtendCat,
               VW95J_MesAtendCat
          From VW95J_CatalogoUsuario) T01
        Left join VW95G_AtendUsuario T02
          On T02.VW95G_CodEmpresa  = T01.VW95GHIJ_CodEmpresa
         And T02.VW95G_CodUsuAte   = T01.VW95GHIJ_CodUsuario
         And T02.VW95G_AnoAtend    = T01.VW95GHIJ_Ano
         And T02.VW95G_MesAtend    = T01.VW95GHIJ_Mes
         And T02.VW95G_SitIntAtend = 'Aberto'
        Left join VW95G_AtendUsuario T03
          On T03.VW95G_CodEmpresa  = T01.VW95GHIJ_CodEmpresa
         And T03.VW95G_CodUsuAte   = T01.VW95GHIJ_CodUsuario
         And T03.VW95G_AnoAtend    = T01.VW95GHIJ_Ano
         And T03.VW95G_MesAtend    = T01.VW95GHIJ_Mes
         And T03.VW95G_SitIntAtend = 'Concluído'
        Left Join VW95H_ChatUsuario T04
          On T04.VW95H_CodEmpresa  = T01.VW95GHIJ_CodEmpresa
         And T04.VW95H_CodUsuChat  = T01.VW95GHIJ_CodUsuario
         And T04.VW95H_AnoChat     = T01.VW95GHIJ_Ano
         And T04.VW95H_MesChat     = T01.VW95GHIJ_Mes
        Left Join VW95I_EmlEntUsuario T05
          On T05.VW95I_CodEmpresa  = T01.VW95GHIJ_CodEmpresa
         And T05.VW95I_CodUsuEml   = T01.VW95GHIJ_CodUsuario
         And T05.VW95I_AnoEmlAtend = T01.VW95GHIJ_Ano
         And T05.VW95I_MesEmlAtend = T01.VW95GHIJ_Mes
        Left Join VW95J_CatalogoUsuario T06
          On T06.VW95J_CodEmpresa  = T01.VW95GHIJ_CodEmpresa
         And T06.VW95J_CodUsuCat   = T01.VW95GHIJ_CodUsuario
         And T06.VW95J_AnoAtendCat = T01.VW95GHIJ_Ano
         And T06.VW95J_MesAtendCat = T01.VW95GHIJ_Mes;


-- ConexaoISO.VW95G_AtendUsuario source

CREATE VIEW VW95G_AtendUsuario as
Select T01.ISOEmp_Codigo                         as VW95G_CodEmpresa,
       T01.ISOSAAte_UsuCodigo                    as VW95G_CodUsuAte,
       T03.VW95A_NomeUsuario                     as VW95G_NomeUsuario,
       T03.VW95A_CPFUsuario                      as VW95G_CPFUsuario,
       Case
            When T01.ISOSAAte_DataFechamento IS Null OR T01.ISOSAAte_DataFechamento = '1753-01-01' Then DATEPART(Year, T01.ISOSAAte_DataAbertura)
            Else      DATEPART(Year, T01.ISOSAAte_DataFechamento)
       End                                       as VW95G_AnoAtend,
       Case
            When T01.ISOSAAte_DataFechamento IS Null OR T01.ISOSAAte_DataFechamento = '1753-01-01'  Then DATEPART(MONTH, T01.ISOSAAte_DataAbertura)
            Else DATEPART(MONTH, T01.ISOSAAte_DataFechamento)
       End                                       as VW95G_MesAtend,
       Case
            When T01.ISOSAAte_DataFechamento IS Null OR T01.ISOSAAte_DataFechamento = '1753-01-01' Then 'Aberto'
            Else 'Concluído'
       End                                       as VW95G_SitIntAtend,
       Avg(Datediff(Hour, T01.ISOSAAte_DataAbertura, T01.ISOSAAte_DataFechamento))
                                                 as VW95G_TempoMedioAtend,
       COUNT(*)                                  as VW95G_QtdeAtend
  From ISOSAATENDIMENTO T01
       Inner Join ISOSASITUACAO T02
          On T02.ISOEmp_Codigo       = T01.ISOEmp_Codigo
         And T02.ISOSASit_Codigo     = T01.ISOSASit_Codigo
         And T02.ISOSASit_Situacao in (1, 2)
       Inner Join VW95A_CadUsuario T03
          On T03.VW95A_CodEmpresa    = T01.ISOEmp_Codigo
         And T03.VW95A_CodigoUsuario = T01.ISOSAAte_UsuCodigo
 Group by T01.ISOEmp_Codigo,
          T01.ISOSAAte_UsuCodigo,
          T03.VW95A_NomeUsuario,
          T03.VW95A_CPFUsuario,
          Case
               When T01.ISOSAAte_DataFechamento IS Null OR T01.ISOSAAte_DataFechamento = '1753-01-01' Then DATEPART(Year, T01.ISOSAAte_DataAbertura)
               Else        DATEPART(Year, T01.ISOSAAte_DataFechamento)
          End,
          Case
               When T01.ISOSAAte_DataFechamento IS Null OR T01.ISOSAAte_DataFechamento = '1753-01-01' Then DATEPART(MONTH, T01.ISOSAAte_DataAbertura)
               Else        DATEPART(MONTH, T01.ISOSAAte_DataFechamento)
          End,
          Case
               When T01.ISOSAAte_DataFechamento IS Null OR T01.ISOSAAte_DataFechamento = '1753-01-01' Then 'Aberto'
               Else 'Concluído'
          End;


-- ConexaoISO.VW95H_ChatUsuario source

CREATE VIEW VW95H_ChatUsuario as
Select T01.ISOEmp_Codigo                         as VW95H_CodEmpresa,
       T01.ISOCht_AtendCodigo                    as VW95H_CodUsuChat,
       T02.VW95A_NomeUsuario                     as VW95H_NomeUsuario,
       T02.VW95A_CPFUsuario                      as VW95H_CPFUsuario,
       DATEPART(Year, T01.ISOCht_DataInicio)     as VW95H_AnoChat,
       DATEPART(Month, T01.ISOCht_DataInicio)    as VW95H_MesChat,
       COUNT(*)                                  as VW95H_QtdeChat
  From ISOCHAT T01
       Inner Join VW95A_CadUsuario T02
          ON T02.VW95A_CodEmpresa    = T01.ISOEmp_Codigo
         And T02.VW95A_CodigoUsuario = T01.ISOCht_AtendCodigo
 Group By T01.ISOEmp_Codigo,
          T01.ISOCht_AtendCodigo,
          T02.VW95A_NomeUsuario,
          T02.VW95A_CPFUsuario,
          DATEPART(Year, T01.ISOCht_DataInicio),
          DATEPART(Month, T01.ISOCht_DataInicio);


-- ConexaoISO.VW95I_EmlEntUsuario source

CREATE VIEW VW95I_EmlEntUsuario as
Select T01.ISOEmp_Codigo                          as VW95I_CodEmpresa,
       T02.ISOSAAte_UsuCodigo                     as VW95I_CodUsuEml,
       T03.VW95A_NomeUsuario                      as VW95I_NomeUsuario,
       T03.VW95A_CPFUsuario                       as VW95I_CPFUsuario,
       DATEPART(Year, T02.ISOSAAte_DataAbertura)  as VW95I_AnoEmlAtend,
       DATEPART(Month, T02.ISOSAAte_DataAbertura) as VW95I_MesEmlAtend,
       COUNT(T02.ISOSAAte_Codigo)                 as VW95I_QtdeEmlAtend
  From ISOEMEMAILENTRADA T01
       Inner Join ISOSAATENDIMENTO T02
          On T02.ISOEmp_Codigo       = T01.ISOEmp_Codigo
         And T02.ISOSAAte_Codigo     = T01.ISOEMemlEnt_Atendimento
       Inner Join VW95A_CadUsuario T03
          On T03.VW95A_CodEmpresa    = T01.ISOEmp_Codigo
         And T03.VW95A_CodigoUsuario = T02.ISOSAAte_UsuCodigo
 Group By T01.ISOEmp_Codigo,
          T02.ISOSAAte_UsuCodigo,
          T03.VW95A_NomeUsuario,
          T03.VW95A_CPFUsuario,
          DATEPART(Year, T02.ISOSAAte_DataAbertura),
          DATEPART(Month, T02.ISOSAAte_DataAbertura);


-- ConexaoISO.VW95J_CatalogoUsuario source

CREATE VIEW VW95J_CatalogoUsuario as
Select T01.ISOEmp_Codigo                         as VW95J_CodEmpresa,
       T01.ISOCat_Car_UsrAte                     as VW95J_CodUsuCat,
       T02.VW95A_NomeUsuario                     as VW95J_NomeUsuario,
       T02.VW95A_CPFUsuario                      as VW95J_CPFUsuario,
       DatePart(Year, T01.ISOCat_Car_DtaAte)     as VW95J_AnoAtendCat,
       DATEPART(month, T01.ISOCat_Car_DtaAte)    as VW95J_MesAtendCat,
       COUNT(*)                                  as VW95J_QtdeAtendCat
  From ISOCAT_CARRINHO T01
       Inner Join VW95A_CadUsuario T02
          On T02.VW95A_CodEmpresa    = T01.ISOEmp_Codigo
         And T02.VW95A_CodigoUsuario = T01.ISOCat_Car_UsrAte
 Group By T01.ISOEmp_Codigo,
          T01.ISOCat_Car_UsrAte,
          T02.VW95A_NomeUsuario,
          T02.VW95A_CPFUsuario,
          DatePart(Year, T01.ISOCat_Car_DtaAte),
          DATEPART(month, T01.ISOCat_Car_DtaAte);


-- ConexaoISO.VW95K_CheckInUsuario source

CREATE VIEW VW95K_CheckInUsuario as
Select T01.ISOEmp_Codigo                          as VW95K_CodEmpresa,
       T01.ISOEntUsu_Codigo                       as VW95K_CodUsuCheckIn,
       RTrim(T02.VW95A_NomeUsuario)               as VW95K_NomeUsuCheckIn,
       T02.VW95A_CPFUsuario                       as VW95K_CPFUsuCheckIn,
       DATEPART(Year, T01.ISOEntUsu_CheckinData)  as VW95K_AnoUsuCheckIn,
       DATEPART(Month, T01.ISOEntUsu_CheckinData) as VW95K_MesUsuCheckIn,
       COUNT(*)                                   as VW95K_QtdeVisCheckIn,
       COUNT(Distinct T01.ISOEntUsu_CliCodigo)    as VW95K_QtdeCliUnicoCheckIn,
       Case
            When COUNT(Distinct T01.ISOEntUsu_CliCodigo) <> 0 Then COUNT(*) / COUNT(Distinct T01.ISOEntUsu_CliCodigo)
            Else 0
       End                                        as VW95K_MediaVisCheckIn
  From ISOENTUSU_CHECKIN T01
       Inner Join VW95A_CadUsuario T02
          On T02.VW95A_CodEmpresa    = T01.ISOEmp_Codigo
         And T02.VW95A_CodigoUsuario = T01.ISOEntUsu_Codigo
 Group by T01.ISOEmp_Codigo,
          T01.ISOEntUsu_Codigo,
          RTrim(T02.VW95A_NomeUsuario),
          T02.VW95A_CPFUsuario,
          DATEPART(Year, T01.ISOEntUsu_CheckinData),
          DATEPART(MONTH, T01.ISOEntUsu_CheckinData);


-- ConexaoISO.VW95_ClientesUsuario source

CREATE VIEW VW95_ClientesUsuario as
Select T01.VW95A_CodEmpresa                      as VW95_CodEmpresa,
       T01.VW95A_CodigoUsuario                   as VW95_CodUsuario,
       RTrim(T01.VW95A_NomeUsuario)              as VW95_NomeUsuario,
       T01.VW95A_CPFUsuario                      as Vw95_CPFUsuario,
       T02.VW95B_AnoCliente                      as VW95_AnoCliente,
       T02.VW95B_MesCliente                      as VW95_MesCliente,
       Case
            When T02.VW95B_CliAtivo is Null Then 'A'
            Else T02.VW95B_CliAtivo
       End                                       as VW95_CliAtivo,
       Case
            When T02.VW95B_QtdeClientes Is Null Then 0
            Else T02.VW95B_QtdeClientes
       End                                       as VW95_QtdeClientesAtivo,
       Case
            When T03.VW95B_CliAtivo Is Null Then 'I'
            Else T03.VW95B_CliAtivo
       End                                       as VW95_CliInativo,
       Case
            When T03.VW95B_QtdeClientes Is Null Then 0
            Else T03.VW95B_QtdeClientes
       End                                       as VW95_QtdeClientesInativo

  From VW95A_CadUsuario T01
        Left Join VW95B_ClientesUsuario T02 -- Clientes Ativos
          On T02.VW95B_CodEmpresa   = T01.VW95A_CodEmpresa
         And T02.VW95B_CodUsuario   = T01.VW95A_CodigoUsuario
         And T02.VW95B_CliAtivo     = 'A'
        Left Join VW95B_ClientesUsuario T03 -- Clientes Ativos
          On T03.VW95B_CodEmpresa   = T01.VW95A_CodEmpresa
         And T03.VW95B_CodUsuario   = T01.VW95A_CodigoUsuario
         And T03.VW95B_CliAtivo     = 'I';


-- ConexaoISO.VW97_AnexosProduto source

CREATE VIEW VW97_AnexosProduto as

SELECT
		T1.ISOEmp_Codigo		AS 'VW97_Empresa',
		T1.ISOPrd_Codigo		AS 'VW97_Produto',
		'INF' + CAST(ISOInfAnx_Codigo AS char(9)) AS 'VW97_Seq',
		T3.ISOInfAnx_Descricao	AS 'VW97_DescricaoAnexo',
		T3.ISOInfAnx_Arquivo	AS 'VW97_NomeArquivo',
		T3.ISOInfAnx_Extensao	AS 'VW97_ExtensaoArquivo',
		T3.ISOInfAnx_Anexo		AS 'VW97_Anexo',
		Case
			When T3.ISOInfAnx_ArquivoBaixa is null or T3.ISOInfAnx_ArquivoBaixa = '' Then T3.ISOInfAnx_Arquivo
			Else T3.ISOInfAnx_ArquivoBaixa
		End AS 'VW97_NomeArquivoBaixa',
		Case
			When T3.ISOInfAnx_ExtensaoBaixa is null or ISOInfAnx_ExtensaoBaixa = '0' Then T3.ISOInfAnx_Extensao
			Else T3.ISOInfAnx_ExtensaoBaixa
		End AS 'VW97_ExtensaoArquivoBaixa',
		Case
			When T3.ISOInfAnx_AnexoBaixa is null Then T3.ISOInfAnx_Anexo
			Else T3.ISOInfAnx_AnexoBaixa
		End AS 'VW97_AnexoBaixa',
		Case
			When ISOInfAnx_Extensao in ('jpg', 'bmp', 'jpeg', 'gif', 'png') THen 'IMAGEM'
			Else 'ARQUIVO'
		End							AS 'VW97_TipoAnexo'
	FROM ISOInf_Produto T1
		INNER JOIN ISOInformacao T2
			ON T1.ISOEmp_Codigo = T2.ISOEmp_Codigo
			AND T1.ISOInf_Codigo = T2.ISOInf_Codigo
		INNER JOIN ISOInfVigencia T4
			ON T4.ISOEmp_Codigo = T1.ISOEmp_Codigo
			AND T4.ISOInf_Codigo = T1.ISOInf_Codigo
			AND T4.ISOInfVig_DataVigenciaInicial <= GETDATE()
			AND T4.ISOInfVig_DataVigenciaFinal >= GETDATE()
		INNER JOIN ISOINFANEXO T3
			ON T1.ISOEmp_Codigo = T3.ISOEmp_Codigo
				AND	T1.ISOInf_Codigo = T3.ISOInf_Codigo
				AND T2.ISOInfCla_Codigo = T3.ISOInfAnxCla_Codigo
	WHERE ISOInfAnx_Flag = 'A' and ISOInf_Flag = 'A' AND ISOInf_Prd_Flag = 'A'
UNION ALL

SELECT 	ISOEmp_Codigo				AS 'VW97_Empresa',
		ISOPrd_Codigo				AS 'VW97_Produto',
		'ANX' + CAST(ISOPrdAnx_Codigo AS char(9)) AS 'VW97_Seq',
		ISOPrdAnx_Descricao			AS 'VW97_DescricaoAnexo',
		ISOPrdAnx_NomeArquivo		AS 'VW97_NomeArquivo',
		ISOPrdAnx_Extensao			AS 'VW97_ExtensaoArquivo',
		ISOPrdAnx_Anexo				AS 'VW97_Anexo',
		ISOPrdAnx_NomeArquivo		AS 'VW97_NomeArquivoBaixa',
		ISOPrdAnx_Extensao			AS 'VW97_ExtensaoArquivoBaixa',
		ISOPrdAnx_Anexo				AS 'VW97_AnexoBaixa',
		Case
			When ISOPrdAnx_Extensao in ('jpg', 'bmp', 'jpeg', 'gif', 'png') THen 'IMAGEM'
			Else 'ARQUIVO'
		End							AS 'VW97_TipoAnexo'
		FROM ISOProdutoAnx
		WHERE ISOPrdAnx_Flag = 'A';


-- ConexaoISO.VW98D_PedUsuarioPieChart source

CREATE VIEW VW98D_PedUsuarioPieChart as
Select VW98D_CodEmpresa,
       VW98D_CodUsuPedido,
       VW98D_NomeUsuario,
       VW98D_CPFUsuario,
       VW98D_AnoPedido,
       VW98D_MesPedido,
       VW98D_label,
       VW98D_value
  From ( Select VW95D_CodEmpresa                 as VW98D_CodEmpresa,
                VW95D_CodUsuPedido               as VW98D_CodUsuPedido,
                VW95D_NomeUsuario                as VW98D_NomeUsuario,
                VW95D_CPFUsuario                 as VW98D_CPFUsuario,
                VW95D_AnoPedido                  as VW98D_AnoPedido,
                VW95D_MesPedido                  as VW98D_MesPedido,
                VW95D_TicketMedioFat             as TicketMedio,
                VW95D_QtdeCot                    as QtdeCotacao,
                VW95D_VlrTotalCot                as ValorCotacao,
                VW95D_QtdeCanc                   as QtdeCancelado,
                VW95D_VlrTotalCanc               as ValorCancelado,
                VW95D_QtdeFat                    as QtdeFaturado,
                VW95D_VlrTotalFat                as ValorFaturado,
                VW95D_ClientesFat                as QtdeClientesAtendidos
           From VW95D_PedUsuario) T01
  Unpivot
       (VW98D_value For VW98D_label in (TicketMedio, QtdeCotacao, ValorCotacao,
                              [QtdeCancelado], ValorCancelado, [QtdeFaturado], ValorFaturado
                              )) as U;


-- ConexaoISO.VW98F_CmpUsuarioPChart source

CREATE VIEW VW98F_CmpUsuarioPChart as
Select VW98F_CodEmpresa,
       VW98F_CodUsuCmp,
       VW98F_CPFUsuario,
       VW98F_NomeUsuario,
       VW98F_AnoContato,
       VW98F_MesContato,
       VW98F_label,
       VW98F_value
  From (Select VW95F_CodEmpresa                  as VW98F_CodEmpresa,
               VW95F_CodUsuCmp                   as VW98F_CodUsuCmp,
               VW95F_CPFUsuario                  as VW98F_CPFUsuario,
               VW95F_NomeUsuario                 as VW98F_NomeUsuario,
               VW95F_AnoContato                  as VW98F_AnoContato,
               VW95F_MesContato                  as VW98F_MesContato,
               VW95F_QtdeAberto                  as QtdeContatosAbertos,
               VW95F_QtdeConcluido               as QtdeContatosConcluidos,
               VW95F_QTdeCmpAbe                  as QtdeCampanhas
          From VW95F_CmpUsuario) T01
 UnPivot
   (VW98F_value For VW98F_label in (QtdeContatosAbertos, QtdeContatosConcluidos, QtdeCampanhas)) as U;


-- ConexaoISO.VW98GHIJ_AtendUsuarioPChart source

CREATE VIEW VW98GHIJ_AtendUsuarioPChart as

Select VW98GHIJ_CodEmpresa,
       VW98GHIJ_CodUsuario,
       VW98GHIJ_NomeUsuario,
       VW98GHIJ_CPFUsuario,
       VW98GHIJ_AnoAtend,
       VW98GHIJ_MesAtend,
       VW98GHIJ_label,
       VW98GHIJ_value
  From (Select VW95GHIJ_CodEmpresa           as VW98GHIJ_CodEmpresa,
               VW95GHIJ_CodUsuario           as VW98GHIJ_CodUsuario,
               VW95GHIJ_NomeUsuario          as VW98GHIJ_NomeUsuario,
               VW95GHIJ_CPFUsuario           as VW98GHIJ_CPFUsuario,
               VW95GHIJ_AnoAtend             as VW98GHIJ_AnoAtend,
               VW95GHIJ_Mes                  as VW98GHIJ_MesAtend,
               VW95GHIJ_QtdeAtendAberto      as QtdeAtendimentosAbertos,
               VW95GHIJ_QtdeAtendEncerrado   as QtdeAtendimentosEncerrados,
               VW95GHIJ_TempoMedioAtend      as TempoMedioAtendimentos,
               VW95GHIJ_QtdeChatAtend        as QtdeChatsAtendidos,
               VW95GHIJ_QtdeEmlAtend         as QtdeemailAtendidos,
               VW95GHIJ_QtdeCatAtend         as QtdeCatalogosAtendidos
          From VW95GHIJ_AtendUsuario) T01
  UnPivot
    (VW98GHIJ_value For VW98GHIJ_label in (QtdeAtendimentosAbertos, QtdeAtendimentosEncerrados,
                           TempoMedioAtendimentos, QtdeChatsAtendidos,
                           QtdeemailAtendidos, QtdeCatalogosAtendidos)) as U;


-- ConexaoISO.VW98K_CheckInUsuarioPChart source

CREATE VIEW VW98K_CheckInUsuarioPChart as
Select VW98K_CodEmpresa,
       VW98K_CodUsuCheckIn,
       VW98K_NomeUsuCheckIn,
       VW98K_CPFUsuCheckIn,
       VW98K_AnoUsuCheckIn,
       VW98K_MesUsuCheckIn,
       VW98K_label,
       VW98K_value
  From (Select VW95K_CodEmpresa                  as VW98K_CodEmpresa,
               VW95K_CodUsuCheckIn               as VW98K_CodUsuCheckIn,
               VW95K_NomeUsuCheckIn              as VW98K_NomeUsuCheckIn,
               VW95K_CPFUsuCheckIn               as VW98K_CPFUsuCheckIn,
               VW95K_AnoUsuCheckIn               as VW98K_AnoUsuCheckIn,
               VW95K_MesUsuCheckIn               as VW98K_MesUsuCheckIn,
               VW95K_QtdeVisCheckIn              as QtdeClientesVisitados,
               VW95K_QtdeCliUnicoCheckIn         as QtdeVisitasUnicas,
               VW95K_MediaVisCheckIn             as MediaVisitas
          From VW95K_CheckInUsuario) T01
  UnPivot
     (VW98K_value For VW98K_label in (QtdeClientesVisitados, QtdeVisitasUnicas, MediaVisitas)) as U;


-- ConexaoISO.VW98_ClientesUsuarioPieChart source

CREATE VIEW VW98_ClientesUsuarioPieChart as
Select VW98_CodEmpresa,
       VW98_CodUsuario,
       VW98_NomeUsuario,
       VW98_CPFUsuario,
       VW98_AnoCliente,
       VW98_MesCliente,
       VW98_label,
       VW98_value
From (Select VW95_CodEmpresa                     as VW98_CodEmpresa,
             VW95_CodUsuario                     as VW98_CodUsuario,
             VW95_NomeUsuario                    as VW98_NomeUsuario,
             VW95_CPFUsuario                     as VW98_CPFUsuario,
             VW95_AnoCliente                     as VW98_AnoCliente,
             VW95_MesCliente                     as VW98_MesCliente,
             VW95_QtdeClientesAtivo              as QtdeClientesAtivos,
             VW95_QtdeClientesInativo            as QtdeClientesInativos
        From VW95_ClientesUsuario) T01
 Unpivot
         (VW98_value For VW98_label in (QtdeClientesAtivos, QtdeClientesInativos)) as U;


-- ConexaoISO.VWINT_01_Cliente source

CREATE VIEW VWINT_01_Cliente as
SELECT	t1.ISOEmp_Codigo				AS VWINT_01_EmpCod,
		Case
			When ISOEntPes_CPF is Null THen t3.ISOEntOrg_Estrangeiro
			Else t2.ISOEntPes_Estrangeiro
		End AS VWINT_01_Estrangeiro,
		Case
			When ISOEntPes_Codigo is Null THen 'Organizaï¿½ï¿½o'
			Else 'Pessoa'
		End AS VWINT_01_Tipo,
		ISOEntPes_CPF				AS VWINT_01_CPF,
		ISOEntOrg_CNPJ				AS VWINT_01_CNPJ,
		Case
			When ISOEntPes_Codigo is Null THen t3.ISOEntOrg_Codigo
			Else t2.ISOEntPes_Codigo
		End AS VWINT_01_CodigoISO,
		ISOEntCli_Operacao			AS VWINT_01_Operacao,
		ISOEntCli_CodigoExt			AS VWINT_01_CODEXTERNO,
		ISOEntCli_DataAlteracao		AS VWINT_01_DATAALTERA
		FROM ISOENTCLIENTE T1 LEFT JOIN ISOENTPESSOA T2
		On T2.ISOEntPes_Codigo = T1.ISOEntCli_Codigo
		Left Join ISOEntOrganizacao T3
		On T3.ISOEntOrg_Codigo = T1.ISOEntCli_Codigo;


-- ConexaoISO.VW_ISOEntCliente source

CREATE VIEW VW_ISOEntCliente as
select
  t0.ISOEmp_Codigo as VW_ISOEmp_Codigo,
  t0.ISOEntCli_Codigo as VW_ISOEntCli_Codigo,
  t1.ISOEnt_Nome as VW_ISOEntCli_Nome,
  t0.ISOEntCli_Flag as VW_ISOEntCli_Flag,
  t3.ISOEntPes_CPF as VW_ISOEntPes_CPF,
  t4.ISOEntOrg_CNPJ as VW_ISOEntOrg_CNPJ,
  t5.ISOEmpEnt_Ori_Codigo as VW_ISOEmpEnt_Ori_Codigo,
  t6.ISOEntEct_econtact as VW_ISOEntEct_econtact
from ISOEntCliente t0
  left join ISOEntidade t1
         on t1.ISOEnt_Codigo = t0.ISOEntCli_Codigo
left join ISOEntPessoa t3
	on t1.ISOEnt_Codigo = t3.ISOEntPes_Codigo
left join ISOEntOrganizacao t4
	on t1.ISOEnt_Codigo = t4.ISOEntOrg_Codigo
left join ISOEMPENT_ORIGEM t5
	on t1.ISOEnt_Codigo = t5.ISOEmpEnt_EntCodigo
left join ISOENTECONTACT t6
	on t1.ISOEnt_Codigo = t6.ISOEnt_Codigo;
